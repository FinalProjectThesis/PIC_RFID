

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 19 01:58:56 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.40
    61                           ; Generated 17/11/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataBANK0
    97  001CFE                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _backlight_val
   101  001CFE  08                 	db	8
   102  0000                     _SSPSTAT	set	4039
   103  0000                     _SSPADD	set	4040
   104                           
   105                           	psect	nvBANK0
   106  0000BB                     __pnvBANK0:
   107                           	callstack 0
   108  0000BB                     _i2c_addr:
   109                           	callstack 0
   110  0000BB                     	ds	1
   111  0000                     _ACKEN	set	32300
   112  0000                     _ACKDT	set	32301
   113  0000                     _RCEN	set	32299
   114  0000                     _RSEN	set	32297
   115  0000                     _PEN	set	32298
   116  0000                     _SEN	set	32296
   117  0000                     _PORTDbits	set	3971
   118  0000                     _LATB7	set	31831
   119  0000                     _LATDbits	set	3980
   120  0000                     _TRISB7	set	31903
   121  0000                     _TRISDbits	set	3989
   122  0000                     _SSPCON2	set	4037
   123  0000                     _SSPCON1	set	4038
   124  0000                     _SSPBUF	set	4041
   125                           
   126                           	psect	smallconst
   127  000800                     __psmallconst:
   128                           	callstack 0
   129  000800  00                 	db	0
   130  000801                     STR_1:
   131  000801  57                 	db	87	;'W'
   132  000802  65                 	db	101	;'e'
   133  000803  6C                 	db	108	;'l'
   134  000804  63                 	db	99	;'c'
   135  000805  6F                 	db	111	;'o'
   136  000806  6D                 	db	109	;'m'
   137  000807  65                 	db	101	;'e'
   138  000808  00                 	db	0
   139  000809                     STR_2:
   140  000809  49                 	db	73	;'I'
   141  00080A  44                 	db	68	;'D'
   142  00080B  3A                 	db	58	;':'
   143  00080C  00                 	db	0
   144  00080D                     STR_3:
   145  00080D  25                 	db	37
   146  00080E  58                 	db	88	;'X'
   147  00080F  00                 	db	0
   148  000810  00                 	db	0	; dummy byte at the end
   149  0000                     
   150                           ; #config settings
   151                           
   152                           	psect	cinit
   153  001B8E                     __pcinit:
   154                           	callstack 0
   155  001B8E                     start_initialization:
   156                           	callstack 0
   157  001B8E                     __initialization:
   158                           	callstack 0
   159                           
   160                           ; Initialize objects allocated to BANK0 (1 bytes)
   161                           ; load TBLPTR registers with __pidataBANK0
   162  001B8E  0EFE               	movlw	low __pidataBANK0
   163  001B90  6EF6               	movwf	tblptrl,c
   164  001B92  0E1C               	movlw	high __pidataBANK0
   165  001B94  6EF7               	movwf	tblptrh,c
   166  001B96  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   167  001B98  6EF8               	movwf	tblptru,c
   168  001B9A  0009               	tblrd		*+	;fetch initializer
   169  001B9C  CFF5 F0BD          	movff	tablat,__pdataBANK0
   170                           
   171                           ; Clear objects allocated to BITBANK0 (1 bytes)
   172  001BA0  0100               	movlb	0
   173  001BA2  6BBC               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
   174                           
   175                           ; Clear objects allocated to BANK0 (75 bytes)
   176  001BA4  EE00  F060         	lfsr	0,__pbssBANK0
   177  001BA8  0E4B               	movlw	75
   178  001BAA                     clear_0:
   179  001BAA  6AEE               	clrf	postinc0,c
   180  001BAC  06E8               	decf	wreg,f,c
   181  001BAE  E1FD               	bnz	clear_0
   182  001BB0                     end_of_initialization:
   183                           	callstack 0
   184  001BB0                     __end_of__initialization:
   185                           	callstack 0
   186  001BB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   187  001BB2  6EF8               	movwf	tblptru,c
   188  001BB4  0100               	movlb	0
   189  001BB6  EF8A  F007         	goto	_main	;jump to C main() function
   190                           
   191                           	psect	bitbssBANK0
   192  0005E0                     __pbitbssBANK0:
   193                           	callstack 0
   194  0005E0                     _RS:
   195                           	callstack 0
   196  0005E0                     	ds	1
   197                           
   198                           	psect	bssBANK0
   199  000060                     __pbssBANK0:
   200                           	callstack 0
   201  000060                     _nout:
   202                           	callstack 0
   203  000060                     	ds	2
   204  000062                     _width:
   205                           	callstack 0
   206  000062                     	ds	2
   207  000064                     _prec:
   208                           	callstack 0
   209  000064                     	ds	2
   210  000066                     _flags:
   211                           	callstack 0
   212  000066                     	ds	2
   213  000068                     _led:
   214                           	callstack 0
   215  000068                     	ds	2
   216  00006A                     _dbuf:
   217                           	callstack 0
   218  00006A                     	ds	32
   219  00008A                     _UID:
   220                           	callstack 0
   221  00008A                     	ds	16
   222  00009A                     _data_buffer:
   223                           	callstack 0
   224  00009A                     	ds	16
   225  0000AA                     _TagType:
   226                           	callstack 0
   227  0000AA                     	ds	1
   228                           
   229                           	psect	dataBANK0
   230  0000BD                     __pdataBANK0:
   231                           	callstack 0
   232  0000BD                     _backlight_val:
   233                           	callstack 0
   234  0000BD                     	ds	1
   235                           
   236                           	psect	cstackBANK0
   237  0000AB                     __pcstackBANK0:
   238                           	callstack 0
   239  0000AB                     sprintf@ap:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x0
   243  0000AB                     	ds	2
   244  0000AD                     sprintf@f:
   245                           	callstack 0
   246                           
   247                           ; 11 bytes @ 0x2
   248  0000AD                     	ds	11
   249  0000B8                     ??_main:
   250                           
   251                           ; 1 bytes @ 0xD
   252  0000B8                     	ds	2
   253  0000BA                     main@i:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0xF
   257  0000BA                     	ds	1
   258                           
   259                           	psect	cstackCOMRAM
   260  000001                     __pcstackCOMRAM:
   261                           	callstack 0
   262  000001                     ??_I2CLCD_Start:
   263  000001                     ??_I2CLCD_Stop:
   264  000001                     ??_I2CLCD_Write:
   265  000001                     ??_MFRC522_Rd:
   266  000001                     ?_strlen:
   267                           	callstack 0
   268  000001                     ?_isupper:
   269                           	callstack 0
   270  000001                     ?_isalpha:
   271                           	callstack 0
   272  000001                     ?_islower:
   273                           	callstack 0
   274  000001                     ?___lldiv:
   275                           	callstack 0
   276  000001                     MFRC522_Wr@value:
   277                           	callstack 0
   278  000001                     isalpha@c:
   279                           	callstack 0
   280  000001                     isupper@c:
   281                           	callstack 0
   282  000001                     fputc@c:
   283                           	callstack 0
   284  000001                     strlen@s:
   285                           	callstack 0
   286  000001                     islower@c:
   287                           	callstack 0
   288  000001                     ___lldiv@dividend:
   289                           	callstack 0
   290                           
   291                           ; 4 bytes @ 0x0
   292  000001                     	ds	1
   293  000002                     ??_MFRC522_Wr:
   294  000002                     I2CLCD_Write@i2c_data:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x1
   298  000002                     	ds	1
   299  000003                     ??_isupper:
   300  000003                     ??_isalpha:
   301  000003                     ??_islower:
   302  000003                     Expander_Write@value:
   303                           	callstack 0
   304  000003                     MFRC522_Rd@address:
   305                           	callstack 0
   306  000003                     MFRC522_Wr@address:
   307                           	callstack 0
   308  000003                     fputc@fp:
   309                           	callstack 0
   310  000003                     strlen@a:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x2
   314  000003                     	ds	1
   315  000004                     LCD_Write_Nibble@n:
   316                           	callstack 0
   317  000004                     MFRC522_Wr@ucAddr:
   318                           	callstack 0
   319  000004                     MFRC522_Rd@ucAddr:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x3
   323  000004                     	ds	1
   324  000005                     ??_LCD_Cmd:
   325  000005                     ??_fputc:
   326  000005                     MFRC522_Wr@i:
   327                           	callstack 0
   328  000005                     LCD_Print@LCD_Str:
   329                           	callstack 0
   330  000005                     ___lldiv@divisor:
   331                           	callstack 0
   332                           
   333                           ; 4 bytes @ 0x4
   334  000005                     	ds	1
   335  000006                     LCD_Cmd@Command:
   336                           	callstack 0
   337  000006                     MFRC522_Rd@ucResult:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x5
   341  000006                     	ds	1
   342  000007                     ??_LCD_Begin:
   343  000007                     ??_LCD_Print:
   344  000007                     ?_toupper:
   345                           	callstack 0
   346  000007                     LCD_Goto@row:
   347                           	callstack 0
   348  000007                     toupper@c:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x6
   352  000007                     	ds	1
   353  000008                     ??_LCD_Goto:
   354  000008                     MFRC522_Rd@i:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x7
   358  000008                     	ds	1
   359  000009                     ??_toupper:
   360  000009                     LCD_Begin@_i2c_addr:
   361                           	callstack 0
   362  000009                     ___lldiv@quotient:
   363                           	callstack 0
   364                           
   365                           ; 4 bytes @ 0x8
   366  000009                     	ds	1
   367  00000A                     LCD_Goto@col:
   368                           	callstack 0
   369  00000A                     LCD_Print@i:
   370                           	callstack 0
   371  00000A                     MFRC522_Clear_Bit@mask:
   372                           	callstack 0
   373  00000A                     MFRC522_Set_Bit@mask:
   374                           	callstack 0
   375  00000A                     fputs@s:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x9
   379  00000A                     	ds	1
   380  00000B                     MFRC522_Clear_Bit@tmp:
   381                           	callstack 0
   382  00000B                     MFRC522_Set_Bit@tmp:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0xA
   386  00000B                     	ds	1
   387  00000C                     MFRC522_Clear_Bit@addr:
   388                           	callstack 0
   389  00000C                     MFRC522_Set_Bit@addr:
   390                           	callstack 0
   391  00000C                     fputs@fp:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0xB
   395  00000C                     	ds	1
   396  00000D                     ___lldiv@counter:
   397                           	callstack 0
   398  00000D                     MFRC522_ToCard@sendData:
   399                           	callstack 0
   400  00000D                     MFRC522_CRC@dataIn:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0xC
   404  00000D                     	ds	1
   405  00000E                     fputs@c:
   406                           	callstack 0
   407  00000E                     I2CLCD_Init@i2c_clk_freq:
   408                           	callstack 0
   409                           
   410                           ; 4 bytes @ 0xD
   411  00000E                     	ds	1
   412  00000F                     MFRC522_ToCard@sendLen:
   413                           	callstack 0
   414  00000F                     MFRC522_CRC@length:
   415                           	callstack 0
   416  00000F                     fputs@i:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0xE
   420  00000F                     	ds	1
   421  000010                     MFRC522_ToCard@backData:
   422                           	callstack 0
   423  000010                     MFRC522_CRC@dataOut:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0xF
   427  000010                     	ds	1
   428  000011                     ?_pad:
   429                           	callstack 0
   430  000011                     pad@fp:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x10
   434  000011                     	ds	1
   435  000012                     ??_I2CLCD_Init:
   436  000012                     MFRC522_CRC@n:
   437                           	callstack 0
   438  000012                     MFRC522_ToCard@backLen:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x11
   442  000012                     	ds	1
   443  000013                     MFRC522_CRC@i:
   444                           	callstack 0
   445  000013                     pad@buf:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x12
   449  000013                     	ds	1
   450  000014                     ??_MFRC522_ToCard:
   451                           
   452                           ; 1 bytes @ 0x13
   453  000014                     	ds	1
   454  000015                     pad@p:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x14
   458  000015                     	ds	2
   459  000017                     ??_pad:
   460                           
   461                           ; 1 bytes @ 0x16
   462  000017                     	ds	1
   463  000018                     MFRC522_ToCard@waitIRq:
   464                           	callstack 0
   465  000018                     pad@i:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x17
   469  000018                     	ds	1
   470  000019                     MFRC522_ToCard@_status:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x18
   474  000019                     	ds	1
   475  00001A                     MFRC522_ToCard@lastBits:
   476                           	callstack 0
   477  00001A                     pad@w:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x19
   481  00001A                     	ds	1
   482  00001B                     MFRC522_ToCard@irqEn:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x1A
   486  00001B                     	ds	1
   487  00001C                     ?_xtoa:
   488                           	callstack 0
   489  00001C                     MFRC522_ToCard@command:
   490                           	callstack 0
   491  00001C                     xtoa@fp:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x1B
   495  00001C                     	ds	1
   496  00001D                     MFRC522_ToCard@i:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x1C
   500  00001D                     	ds	1
   501  00001E                     xtoa@d:
   502                           	callstack 0
   503                           
   504                           ; 8 bytes @ 0x1D
   505  00001E                     	ds	1
   506  00001F                     MFRC522_ToCard@n:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x1E
   510  00001F                     	ds	1
   511  000020                     MFRC522_Request@TagType:
   512                           	callstack 0
   513  000020                     MFRC522_AntiColl@serNum:
   514                           	callstack 0
   515  000020                     MFRC522_Halt@buff:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x1F
   519  000020                     	ds	2
   520  000022                     MFRC522_Request@reqMode:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0x21
   524  000022                     	ds	1
   525  000023                     MFRC522_Request@_status:
   526                           	callstack 0
   527  000023                     MFRC522_AntiColl@serNumCheck:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x22
   531  000023                     	ds	1
   532  000024                     MFRC522_Request@backBits:
   533                           	callstack 0
   534  000024                     MFRC522_Halt@unLen:
   535                           	callstack 0
   536  000024                     MFRC522_AntiColl@unLen:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x23
   540  000024                     	ds	2
   541  000026                     MFRC522_AntiColl@_status:
   542                           	callstack 0
   543  000026                     xtoa@x:
   544                           	callstack 0
   545  000026                     MFRC522_IsCard@TagType:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x25
   549  000026                     	ds	1
   550  000027                     ??_xtoa:
   551  000027                     MFRC522_AntiColl@i:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0x26
   555  000027                     	ds	1
   556  000028                     MFRC522_ReadCardSerial@str:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x27
   560  000028                     	ds	2
   561  00002A                     MFRC522_ReadCardSerial@_status:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x29
   565  00002A                     	ds	5
   566  00002F                     xtoa@p:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x2E
   570  00002F                     	ds	2
   571  000031                     xtoa@w:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x30
   575  000031                     	ds	2
   576  000033                     xtoa@n:
   577                           	callstack 0
   578                           
   579                           ; 8 bytes @ 0x32
   580  000033                     	ds	8
   581  00003B                     xtoa@i:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x3A
   585  00003B                     	ds	2
   586  00003D                     xtoa@c:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x3C
   590  00003D                     	ds	2
   591  00003F                     ?_vfpfcnvrt:
   592                           	callstack 0
   593  00003F                     vfpfcnvrt@fp:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x3E
   597  00003F                     	ds	2
   598  000041                     vfpfcnvrt@fmt:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x40
   602  000041                     	ds	2
   603  000043                     vfpfcnvrt@ap:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x42
   607  000043                     	ds	2
   608  000045                     ??_vfpfcnvrt:
   609                           
   610                           ; 1 bytes @ 0x44
   611  000045                     	ds	4
   612  000049                     vfpfcnvrt@llu:
   613                           	callstack 0
   614                           
   615                           ; 8 bytes @ 0x48
   616  000049                     	ds	8
   617  000051                     vfpfcnvrt@c:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0x50
   621  000051                     	ds	1
   622  000052                     ?_vfprintf:
   623                           	callstack 0
   624  000052                     vfprintf@fp:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x51
   628  000052                     	ds	2
   629  000054                     vfprintf@fmt:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x53
   633  000054                     	ds	2
   634  000056                     vfprintf@ap:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x55
   638  000056                     	ds	2
   639  000058                     vfprintf@cfmt:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x57
   643  000058                     	ds	2
   644  00005A                     ?_sprintf:
   645                           	callstack 0
   646  00005A                     sprintf@s:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x59
   650  00005A                     	ds	2
   651  00005C                     sprintf@fmt:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x5B
   655  00005C                     	ds	4
   656  000060                     
   657                           ; 1 bytes @ 0x5F
   658 ;;
   659 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   660 ;;
   661 ;; *************** function _main *****************
   662 ;; Defined at:
   663 ;;		line 20 in file "main.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  i               1   15[BANK0 ] unsigned char 
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      void 
   670 ;; Registers used:
   671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   677 ;;      Params:         0       0       0       0       0       0       0       0       0
   678 ;;      Locals:         0       1       0       0       0       0       0       0       0
   679 ;;      Temps:          0       2       0       0       0       0       0       0       0
   680 ;;      Totals:         0       3       0       0       0       0       0       0       0
   681 ;;Total ram usage:        3 bytes
   682 ;; Hardware stack levels required when called: 8
   683 ;; This function calls:
   684 ;;		_I2CLCD_Init
   685 ;;		_LCD_Begin
   686 ;;		_LCD_Cmd
   687 ;;		_LCD_Goto
   688 ;;		_LCD_Print
   689 ;;		_MFRC522_Halt
   690 ;;		_MFRC522_Init
   691 ;;		_MFRC522_IsCard
   692 ;;		_MFRC522_ReadCardSerial
   693 ;;		_port_Init
   694 ;;		_sprintf
   695 ;; This function is called by:
   696 ;;		Startup code after reset
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text0
   701  000F14                     __ptext0:
   702                           	callstack 0
   703  000F14                     _main:
   704                           	callstack 23
   705  000F14                     
   706                           ;main.c: 21:     port_Init();
   707  000F14  EC7B  F00E         	call	_port_Init	;wreg free
   708  000F18                     
   709                           ;main.c: 22:     I2CLCD_Init(100000);
   710  000F18  0EA0               	movlw	160
   711  000F1A  6E0E               	movwf	I2CLCD_Init@i2c_clk_freq^0,c
   712  000F1C  0E86               	movlw	134
   713  000F1E  6E0F               	movwf	(I2CLCD_Init@i2c_clk_freq+1)^0,c
   714  000F20  0E01               	movlw	1
   715  000F22  6E10               	movwf	(I2CLCD_Init@i2c_clk_freq+2)^0,c
   716  000F24  0E00               	movlw	0
   717  000F26  6E11               	movwf	(I2CLCD_Init@i2c_clk_freq+3)^0,c
   718  000F28  EC5F  F00C         	call	_I2CLCD_Init	;wreg free
   719  000F2C                     
   720                           ;main.c: 23:     LCD_Begin(0x4E);
   721  000F2C  0E4E               	movlw	78
   722  000F2E  EC2F  F008         	call	_LCD_Begin
   723  000F32                     
   724                           ;main.c: 24:     MFRC522_Init();
   725  000F32  EC05  F00C         	call	_MFRC522_Init	;wreg free
   726  000F36                     
   727                           ;main.c: 25:     _delay((unsigned long)((500)*(27000000/4000.0)));
   728  000F36  0E12               	movlw	18
   729  000F38  0100               	movlb	0	; () banked
   730  000F3A  6FB9               	movwf	(??_main+1)& (0+255),b
   731  000F3C  0E20               	movlw	32
   732  000F3E  6FB8               	movwf	??_main& (0+255),b
   733  000F40  0E0F               	movlw	15
   734  000F42                     u1957:
   735  000F42  2EE8               	decfsz	wreg,f,c
   736  000F44  D7FE               	bra	u1957
   737  000F46  2FB8               	decfsz	??_main& (0+255),f,b
   738  000F48  D7FC               	bra	u1957
   739  000F4A  2FB9               	decfsz	(??_main+1)& (0+255),f,b
   740  000F4C  D7FA               	bra	u1957
   741  000F4E  D000               	nop2	
   742  000F50                     
   743                           ;main.c: 27:     LCD_Goto(1, 1);
   744  000F50  0E01               	movlw	1
   745  000F52  6E07               	movwf	LCD_Goto@row^0,c
   746  000F54  0E01               	movlw	1
   747  000F56  EC6B  F00B         	call	_LCD_Goto
   748  000F5A                     
   749                           ;main.c: 28:     LCD_Print("Welcome");
   750  000F5A  0E01               	movlw	low STR_1
   751  000F5C  6E05               	movwf	LCD_Print@LCD_Str^0,c
   752  000F5E  0E08               	movlw	high STR_1
   753  000F60  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
   754  000F62  ECCA  F009         	call	_LCD_Print	;wreg free
   755  000F66                     
   756                           ;main.c: 29:     LATB7 = 1;
   757  000F66  8E8A               	bsf	3978,7,c	;volatile
   758  000F68                     
   759                           ;main.c: 31:     _delay((unsigned long)((2000)*(27000000/4000.0)));
   760  000F68  0E45               	movlw	69
   761  000F6A  0100               	movlb	0	; () banked
   762  000F6C  6FB9               	movwf	(??_main+1)& (0+255),b
   763  000F6E  0E7D               	movlw	125
   764  000F70  6FB8               	movwf	??_main& (0+255),b
   765  000F72  0E47               	movlw	71
   766  000F74                     u1967:
   767  000F74  2EE8               	decfsz	wreg,f,c
   768  000F76  D7FE               	bra	u1967
   769  000F78  2FB8               	decfsz	??_main& (0+255),f,b
   770  000F7A  D7FC               	bra	u1967
   771  000F7C  2FB9               	decfsz	(??_main+1)& (0+255),f,b
   772  000F7E  D7FA               	bra	u1967
   773  000F80  D000               	nop2	
   774  000F82                     
   775                           ;main.c: 32:     LCD_Cmd(0x01);
   776  000F82  0E01               	movlw	1
   777  000F84  ECB4  F00C         	call	_LCD_Cmd
   778  000F88                     
   779                           ;main.c: 33:     LATB7 = 0;
   780  000F88  9E8A               	bcf	3978,7,c	;volatile
   781  000F8A                     l2497:
   782                           
   783                           ;main.c: 35:         LCD_Goto(1, 1);
   784  000F8A  0E01               	movlw	1
   785  000F8C  6E07               	movwf	LCD_Goto@row^0,c
   786  000F8E  0E01               	movlw	1
   787  000F90  EC6B  F00B         	call	_LCD_Goto
   788  000F94                     
   789                           ;main.c: 36:         LCD_Print("ID:");
   790  000F94  0E09               	movlw	low STR_2
   791  000F96  6E05               	movwf	LCD_Print@LCD_Str^0,c
   792  000F98  0E08               	movlw	high STR_2
   793  000F9A  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
   794  000F9C  ECCA  F009         	call	_LCD_Print	;wreg free
   795  000FA0                     l2501:
   796  000FA0  0EAA               	movlw	low _TagType
   797  000FA2  6E26               	movwf	MFRC522_IsCard@TagType^0,c
   798  000FA4  0E00               	movlw	high _TagType
   799  000FA6  6E27               	movwf	(MFRC522_IsCard@TagType+1)^0,c
   800  000FA8  EC08  F00E         	call	_MFRC522_IsCard	;wreg free
   801  000FAC  0900               	iorlw	0
   802  000FAE  B4D8               	btfsc	status,2,c
   803  000FB0  EFDC  F007         	goto	u1891
   804  000FB4  EFDE  F007         	goto	u1890
   805  000FB8                     u1891:
   806  000FB8  EFD0  F007         	goto	l2501
   807  000FBC                     u1890:
   808  000FBC                     l2503:
   809  000FBC  0E8A               	movlw	low _UID
   810  000FBE  6E28               	movwf	MFRC522_ReadCardSerial@str^0,c
   811  000FC0  0E00               	movlw	high _UID
   812  000FC2  6E29               	movwf	(MFRC522_ReadCardSerial@str+1)^0,c
   813  000FC4  EC74  F00D         	call	_MFRC522_ReadCardSerial	;wreg free
   814  000FC8  0900               	iorlw	0
   815  000FCA  B4D8               	btfsc	status,2,c
   816  000FCC  EFEA  F007         	goto	u1901
   817  000FD0  EFEC  F007         	goto	u1900
   818  000FD4                     u1901:
   819  000FD4  EFDE  F007         	goto	l2503
   820  000FD8                     u1900:
   821  000FD8                     
   822                           ;main.c: 40:         LCD_Goto(1, 2);
   823  000FD8  0E02               	movlw	2
   824  000FDA  6E07               	movwf	LCD_Goto@row^0,c
   825  000FDC  0E01               	movlw	1
   826  000FDE  EC6B  F00B         	call	_LCD_Goto
   827  000FE2                     
   828                           ;main.c: 42:         for(uint8_t i=0; i < 4; i++)
   829  000FE2  0E00               	movlw	0
   830  000FE4  0100               	movlb	0	; () banked
   831  000FE6  6FBA               	movwf	main@i& (0+255),b
   832  000FE8                     l2513:
   833                           
   834                           ; BSR set to: 0
   835                           ;main.c: 43:         {;main.c: 44:             sprintf(data_buffer, "%X", UID[i]);
   836  000FE8  0E9A               	movlw	low _data_buffer
   837  000FEA  6E5A               	movwf	sprintf@s^0,c
   838  000FEC  0E00               	movlw	high _data_buffer
   839  000FEE  6E5B               	movwf	(sprintf@s+1)^0,c
   840  000FF0  0E0D               	movlw	low STR_3
   841  000FF2  6E5C               	movwf	sprintf@fmt^0,c
   842  000FF4  0E08               	movlw	high STR_3
   843  000FF6  6E5D               	movwf	(sprintf@fmt+1)^0,c
   844  000FF8  0E8A               	movlw	low _UID
   845  000FFA  25BA               	addwf	main@i& (0+255),w,b
   846  000FFC  6ED9               	movwf	fsr2l,c
   847  000FFE  6ADA               	clrf	fsr2h,c
   848  001000  0E00               	movlw	high _UID
   849  001002  22DA               	addwfc	fsr2h,f,c
   850  001004  50DF               	movf	indf2,w,c
   851  001006  6FB8               	movwf	??_main& (0+255),b
   852  001008  51B8               	movf	??_main& (0+255),w,b
   853  00100A  6E5E               	movwf	(?_sprintf+4)^0,c
   854  00100C  6A5F               	clrf	(?_sprintf+5)^0,c
   855  00100E  EC8B  F00C         	call	_sprintf	;wreg free
   856  001012                     
   857                           ;main.c: 45:         }
   858  001012  0100               	movlb	0	; () banked
   859  001014  2BBA               	incf	main@i& (0+255),f,b
   860  001016                     
   861                           ; BSR set to: 0
   862  001016  0E03               	movlw	3
   863  001018  65BA               	cpfsgt	main@i& (0+255),b
   864  00101A  EF11  F008         	goto	u1911
   865  00101E  EF13  F008         	goto	u1910
   866  001022                     u1911:
   867  001022  EFF4  F007         	goto	l2513
   868  001026                     u1910:
   869  001026                     
   870                           ; BSR set to: 0
   871                           ;main.c: 46:         LCD_Print(data_buffer);
   872  001026  0E9A               	movlw	low _data_buffer
   873  001028  6E05               	movwf	LCD_Print@LCD_Str^0,c
   874  00102A  0E00               	movlw	high _data_buffer
   875  00102C  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
   876  00102E  ECCA  F009         	call	_LCD_Print	;wreg free
   877  001032                     
   878                           ;main.c: 57:         _delay((unsigned long)((1000)*(27000000/4000.0)));
   879  001032  0E23               	movlw	35
   880  001034  0100               	movlb	0	; () banked
   881  001036  6FB9               	movwf	(??_main+1)& (0+255),b
   882  001038  0E3F               	movlw	63
   883  00103A  6FB8               	movwf	??_main& (0+255),b
   884  00103C  0E22               	movlw	34
   885  00103E                     u1977:
   886  00103E  2EE8               	decfsz	wreg,f,c
   887  001040  D7FE               	bra	u1977
   888  001042  2FB8               	decfsz	??_main& (0+255),f,b
   889  001044  D7FC               	bra	u1977
   890  001046  2FB9               	decfsz	(??_main+1)& (0+255),f,b
   891  001048  D7FA               	bra	u1977
   892  00104A  F000               	nop	
   893  00104C                     
   894                           ;main.c: 58:         MFRC522_Halt();
   895  00104C  EC33  F00C         	call	_MFRC522_Halt	;wreg free
   896  001050                     
   897                           ;main.c: 59:         LCD_Cmd(0x01);
   898  001050  0E01               	movlw	1
   899  001052  ECB4  F00C         	call	_LCD_Cmd
   900  001056  EFC5  F007         	goto	l2497
   901  00105A  EF00  F000         	goto	start
   902  00105E                     __end_of_main:
   903                           	callstack 0
   904                           
   905 ;; *************** function _sprintf *****************
   906 ;; Defined at:
   907 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  s               2   89[COMRAM] PTR unsigned char 
   910 ;;		 -> data_buffer(16), 
   911 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
   912 ;;		 -> STR_3(3), 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  f              11    2[BANK0 ] struct _IO_FILE
   915 ;;  ap              2    0[BANK0 ] PTR void [1]
   916 ;;		 -> ?_sprintf(2), 
   917 ;;  ret             2    0        int 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  2   89[COMRAM] int 
   920 ;; Registers used:
   921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   927 ;;      Params:         6       0       0       0       0       0       0       0       0
   928 ;;      Locals:         0      13       0       0       0       0       0       0       0
   929 ;;      Temps:          0       0       0       0       0       0       0       0       0
   930 ;;      Totals:         6      13       0       0       0       0       0       0       0
   931 ;;Total ram usage:       19 bytes
   932 ;; Hardware stack levels used: 1
   933 ;; Hardware stack levels required when called: 7
   934 ;; This function calls:
   935 ;;		_vfprintf
   936 ;; This function is called by:
   937 ;;		_main
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text1
   942  001916                     __ptext1:
   943                           	callstack 0
   944  001916                     _sprintf:
   945                           	callstack 23
   946  001916  0E5E               	movlw	low (?_sprintf+4)
   947  001918  0100               	movlb	0	; () banked
   948  00191A  6FAB               	movwf	sprintf@ap& (0+255),b
   949  00191C  0E00               	movlw	high (?_sprintf+4)
   950  00191E  6FAC               	movwf	(sprintf@ap+1)& (0+255),b
   951  001920  C05A  F0AD         	movff	sprintf@s,sprintf@f
   952  001924  C05B  F0AE         	movff	sprintf@s+1,sprintf@f+1
   953  001928                     
   954                           ; BSR set to: 0
   955  001928  0E00               	movlw	0
   956  00192A  6FB1               	movwf	(sprintf@f+4)& (0+255),b
   957  00192C  0E00               	movlw	0
   958  00192E  6FB0               	movwf	(sprintf@f+3)& (0+255),b
   959  001930                     
   960                           ; BSR set to: 0
   961  001930  0E00               	movlw	0
   962  001932  6FB7               	movwf	(sprintf@f+10)& (0+255),b
   963  001934  0E00               	movlw	0
   964  001936  6FB6               	movwf	(sprintf@f+9)& (0+255),b
   965  001938                     
   966                           ; BSR set to: 0
   967  001938  0EAD               	movlw	low sprintf@f
   968  00193A  6E52               	movwf	vfprintf@fp^0,c
   969  00193C  0E00               	movlw	high sprintf@f
   970  00193E  6E53               	movwf	(vfprintf@fp+1)^0,c
   971  001940  C05C  F054         	movff	sprintf@fmt,vfprintf@fmt
   972  001944  C05D  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
   973  001948  0EAB               	movlw	low sprintf@ap
   974  00194A  6E56               	movwf	vfprintf@ap^0,c
   975  00194C  0E00               	movlw	high sprintf@ap
   976  00194E  6E57               	movwf	(vfprintf@ap+1)^0,c
   977  001950  ECD4  F00B         	call	_vfprintf	;wreg free
   978  001954  0100               	movlb	0	; () banked
   979  001956  51B0               	movf	(sprintf@f+3)& (0+255),w,b
   980  001958  245A               	addwf	sprintf@s^0,w,c
   981  00195A  6ED9               	movwf	fsr2l,c
   982  00195C  51B1               	movf	(sprintf@f+4)& (0+255),w,b
   983  00195E  205B               	addwfc	(sprintf@s+1)^0,w,c
   984  001960  6EDA               	movwf	fsr2h,c
   985  001962  0E00               	movlw	0
   986  001964  6EDF               	movwf	indf2,c
   987  001966                     
   988                           ; BSR set to: 0
   989  001966  0012               	return		;funcret
   990  001968                     __end_of_sprintf:
   991                           	callstack 0
   992                           
   993 ;; *************** function _vfprintf *****************
   994 ;; Defined at:
   995 ;;		line 1390 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
   998 ;;		 -> sprintf@f(11), 
   999 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  1000 ;;		 -> STR_3(3), 
  1001 ;;  ap              2   85[COMRAM] PTR PTR void 
  1002 ;;		 -> sprintf@ap(2), 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  1005 ;;		 -> STR_3(3), 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  2   81[COMRAM] int 
  1008 ;; Registers used:
  1009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1015 ;;      Params:         6       0       0       0       0       0       0       0       0
  1016 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1018 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1019 ;;Total ram usage:        8 bytes
  1020 ;; Hardware stack levels used: 1
  1021 ;; Hardware stack levels required when called: 6
  1022 ;; This function calls:
  1023 ;;		_vfpfcnvrt
  1024 ;; This function is called by:
  1025 ;;		_sprintf
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text2
  1030  0017A8                     __ptext2:
  1031                           	callstack 0
  1032  0017A8                     _vfprintf:
  1033                           	callstack 23
  1034  0017A8                     
  1035                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1036  0017A8  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  1037  0017AC  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1038  0017B0                     
  1039                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1040  0017B0  0E00               	movlw	0
  1041  0017B2  0100               	movlb	0	; () banked
  1042  0017B4  6F61               	movwf	(_nout+1)& (0+255),b
  1043  0017B6  0E00               	movlw	0
  1044  0017B8  6F60               	movwf	_nout& (0+255),b
  1045                           
  1046                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1047  0017BA  EFF2  F00B         	goto	l2359
  1048  0017BE                     l2357:
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1052  0017BE  C052  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1053  0017C2  C053  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1054  0017C6  0E58               	movlw	low vfprintf@cfmt
  1055  0017C8  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1056  0017CA  0E00               	movlw	high vfprintf@cfmt
  1057  0017CC  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1058  0017CE  C056  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1059  0017D2  C057  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1060  0017D6  ECA2  F006         	call	_vfpfcnvrt	;wreg free
  1061  0017DA  503F               	movf	?_vfpfcnvrt^0,w,c
  1062  0017DC  0100               	movlb	0	; () banked
  1063  0017DE  2760               	addwf	_nout& (0+255),f,b
  1064  0017E0  5040               	movf	(?_vfpfcnvrt+1)^0,w,c
  1065  0017E2  2361               	addwfc	(_nout+1)& (0+255),f,b
  1066  0017E4                     l2359:
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1070  0017E4  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  1071  0017E8  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1072  0017EC                     	if	0	;tblptru may be non-zero
  1073  0017EC                     	endif
  1074  0017EC                     	if	0	;tblptru may be non-zero
  1075  0017EC                     	endif
  1076  0017EC  0008               	tblrd		*
  1077  0017EE  50F5               	movf	tablat,w,c
  1078  0017F0  0900               	iorlw	0
  1079  0017F2  A4D8               	btfss	status,2,c
  1080  0017F4  EFFE  F00B         	goto	u1811
  1081  0017F8  EF00  F00C         	goto	u1810
  1082  0017FC                     u1811:
  1083  0017FC  EFDF  F00B         	goto	l2357
  1084  001800                     u1810:
  1085  001800                     
  1086                           ; BSR set to: 0
  1087                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1088  001800  C060  F052         	movff	_nout,?_vfprintf
  1089  001804  C061  F053         	movff	_nout+1,?_vfprintf+1
  1090  001808                     
  1091                           ; BSR set to: 0
  1092  001808  0012               	return		;funcret
  1093  00180A                     __end_of_vfprintf:
  1094                           	callstack 0
  1095                           
  1096 ;; *************** function _vfpfcnvrt *****************
  1097 ;; Defined at:
  1098 ;;		line 692 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1101 ;;		 -> sprintf@f(11), 
  1102 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1103 ;;		 -> vfprintf@cfmt(2), 
  1104 ;;  ap              2   66[COMRAM] PTR PTR void 
  1105 ;;		 -> sprintf@ap(2), 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  llu             8   72[COMRAM] unsigned long long 
  1108 ;;  ll              8    0        long long 
  1109 ;;  f               4    0        long long 
  1110 ;;  vp              3    0        PTR void 
  1111 ;;  ct              3    0        unsigned char [3]
  1112 ;;  cp              3    0        PTR unsigned char 
  1113 ;;  i               2    0        int 
  1114 ;;  done            2    0        int 
  1115 ;;  c               1   80[COMRAM] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  2   62[COMRAM] int 
  1118 ;; Registers used:
  1119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1125 ;;      Params:         6       0       0       0       0       0       0       0       0
  1126 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1127 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1128 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1129 ;;Total ram usage:       19 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 5
  1132 ;; This function calls:
  1133 ;;		_fputc
  1134 ;;		_xtoa
  1135 ;; This function is called by:
  1136 ;;		_vfprintf
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text3
  1141  000D44                     __ptext3:
  1142                           	callstack 0
  1143  000D44                     _vfpfcnvrt:
  1144                           	callstack 23
  1145  000D44                     
  1146                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;D:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;D:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1147  000D44  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1148  000D48  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1149  000D4C  CFDE FFF6          	movff	postinc2,tblptrl
  1150  000D50  CFDD FFF7          	movff	postdec2,tblptrh
  1151  000D54                     	if	0	;tblptru may be non-zero
  1152  000D54                     	endif
  1153  000D54                     	if	0	;tblptru may be non-zero
  1154  000D54                     	endif
  1155  000D54  0008               	tblrd		*
  1156  000D56  50F5               	movf	tablat,w,c
  1157  000D58  0A25               	xorlw	37
  1158  000D5A  A4D8               	btfss	status,2,c
  1159  000D5C  EFB2  F006         	goto	u1641
  1160  000D60  EFB4  F006         	goto	u1640
  1161  000D64                     u1641:
  1162  000D64  EF6E  F007         	goto	l2233
  1163  000D68                     u1640:
  1164  000D68                     
  1165                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1166  000D68  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1167  000D6C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1168  000D70  2ADE               	incf	postinc2,f,c
  1169  000D72  0E00               	movlw	0
  1170  000D74  22DD               	addwfc	postdec2,f,c
  1171  000D76                     
  1172                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1173  000D76  0E00               	movlw	0
  1174  000D78  0100               	movlb	0	; () banked
  1175  000D7A  6F63               	movwf	(_width+1)& (0+255),b
  1176  000D7C  0E00               	movlw	0
  1177  000D7E  6F62               	movwf	_width& (0+255),b
  1178  000D80  C062  F066         	movff	_width,_flags
  1179  000D84  C063  F067         	movff	_width+1,_flags+1
  1180  000D88                     
  1181                           ; BSR set to: 0
  1182                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1183  000D88  6964               	setf	_prec& (0+255),b
  1184  000D8A  6965               	setf	(_prec+1)& (0+255),b
  1185  000D8C                     
  1186                           ; BSR set to: 0
  1187                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1188  000D8C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1189  000D90  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1190  000D94  CFDE FFF6          	movff	postinc2,tblptrl
  1191  000D98  CFDD FFF7          	movff	postdec2,tblptrh
  1192  000D9C                     	if	0	;tblptru may be non-zero
  1193  000D9C                     	endif
  1194  000D9C                     	if	0	;tblptru may be non-zero
  1195  000D9C                     	endif
  1196  000D9C  0008               	tblrd		*
  1197  000D9E  50F5               	movf	tablat,w,c
  1198  000DA0  0A78               	xorlw	120
  1199  000DA2  B4D8               	btfsc	status,2,c
  1200  000DA4  EFD6  F006         	goto	u1651
  1201  000DA8  EFD8  F006         	goto	u1650
  1202  000DAC                     u1651:
  1203  000DAC  EFEA  F006         	goto	l2207
  1204  000DB0                     u1650:
  1205  000DB0                     
  1206                           ; BSR set to: 0
  1207  000DB0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1208  000DB4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1209  000DB8  CFDE FFF6          	movff	postinc2,tblptrl
  1210  000DBC  CFDD FFF7          	movff	postdec2,tblptrh
  1211  000DC0                     	if	0	;tblptru may be non-zero
  1212  000DC0                     	endif
  1213  000DC0                     	if	0	;tblptru may be non-zero
  1214  000DC0                     	endif
  1215  000DC0  0008               	tblrd		*
  1216  000DC2  50F5               	movf	tablat,w,c
  1217  000DC4  0A58               	xorlw	88
  1218  000DC6  A4D8               	btfss	status,2,c
  1219  000DC8  EFE8  F006         	goto	u1661
  1220  000DCC  EFEA  F006         	goto	u1660
  1221  000DD0                     u1661:
  1222  000DD0  EF38  F007         	goto	l2217
  1223  000DD4                     u1660:
  1224  000DD4                     l2207:
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  1228  000DD4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1229  000DD8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1230  000DDC  CFDE FFF6          	movff	postinc2,tblptrl
  1231  000DE0  CFDD FFF7          	movff	postdec2,tblptrh
  1232  000DE4                     	if	0	;tblptru may be non-zero
  1233  000DE4                     	endif
  1234  000DE4                     	if	0	;tblptru may be non-zero
  1235  000DE4                     	endif
  1236  000DE4  0008               	tblrd		*
  1237  000DE6  CFF5 F051          	movff	tablat,vfpfcnvrt@c
  1238  000DEA                     
  1239                           ; BSR set to: 0
  1240                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  1241  000DEA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1242  000DEE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1243  000DF2  2ADE               	incf	postinc2,f,c
  1244  000DF4  0E00               	movlw	0
  1245  000DF6  22DD               	addwfc	postdec2,f,c
  1246  000DF8                     
  1247                           ; BSR set to: 0
  1248                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1249  000DF8  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1250  000DFC  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1251  000E00  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1252  000E04  0E02               	movlw	2
  1253  000E06  26DE               	addwf	postinc2,f,c
  1254  000E08  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1255  000E0C  0E00               	movlw	0
  1256  000E0E  22DD               	addwfc	postdec2,f,c
  1257  000E10  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1258  000E14  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1259  000E18  CFDE F047          	movff	postinc2,??_vfpfcnvrt+2
  1260  000E1C  CFDD F048          	movff	postdec2,??_vfpfcnvrt+3
  1261  000E20  C047  F049         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1262  000E24  C048  F04A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1263  000E28  6A4B               	clrf	(vfpfcnvrt@llu+2)^0,c
  1264  000E2A  6A4C               	clrf	(vfpfcnvrt@llu+3)^0,c
  1265  000E2C  6A4D               	clrf	(vfpfcnvrt@llu+4)^0,c
  1266  000E2E  6A4E               	clrf	(vfpfcnvrt@llu+5)^0,c
  1267  000E30  6A4F               	clrf	(vfpfcnvrt@llu+6)^0,c
  1268  000E32  6A50               	clrf	(vfpfcnvrt@llu+7)^0,c
  1269  000E34                     
  1270                           ; BSR set to: 0
  1271                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  1272  000E34  C03F  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  1273  000E38  C040  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1274  000E3C  C049  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  1275  000E40  C04A  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1276  000E44  C04B  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1277  000E48  C04C  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1278  000E4C  C04D  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1279  000E50  C04E  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1280  000E54  C04F  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1281  000E58  C050  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1282  000E5C  C051  F026         	movff	vfpfcnvrt@c,xtoa@x
  1283  000E60  EC09  F004         	call	_xtoa	;wreg free
  1284  000E64  C01C  F03F         	movff	?_xtoa,?_vfpfcnvrt
  1285  000E68  C01D  F040         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1286  000E6C  EF89  F007         	goto	l1036
  1287  000E70                     l2217:
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1291  000E70  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1292  000E74  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1293  000E78  CFDE FFF6          	movff	postinc2,tblptrl
  1294  000E7C  CFDD FFF7          	movff	postdec2,tblptrh
  1295  000E80                     	if	0	;tblptru may be non-zero
  1296  000E80                     	endif
  1297  000E80                     	if	0	;tblptru may be non-zero
  1298  000E80                     	endif
  1299  000E80  0008               	tblrd		*
  1300  000E82  50F5               	movf	tablat,w,c
  1301  000E84  0A25               	xorlw	37
  1302  000E86  A4D8               	btfss	status,2,c
  1303  000E88  EF48  F007         	goto	u1671
  1304  000E8C  EF4A  F007         	goto	u1670
  1305  000E90                     u1671:
  1306  000E90  EF61  F007         	goto	l2227
  1307  000E94                     u1670:
  1308  000E94                     
  1309                           ; BSR set to: 0
  1310                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1311  000E94  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1312  000E98  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1313  000E9C  2ADE               	incf	postinc2,f,c
  1314  000E9E  0E00               	movlw	0
  1315  000EA0  22DD               	addwfc	postdec2,f,c
  1316  000EA2                     
  1317                           ; BSR set to: 0
  1318                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1319  000EA2  0E00               	movlw	0
  1320  000EA4  6E02               	movwf	(fputc@c+1)^0,c
  1321  000EA6  0E25               	movlw	37
  1322  000EA8  6E01               	movwf	fputc@c^0,c
  1323  000EAA  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1324  000EAE  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1325  000EB2  ECA6  F008         	call	_fputc	;wreg free
  1326  000EB6                     l2223:
  1327                           
  1328                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1329  000EB6  0E00               	movlw	0
  1330  000EB8  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
  1331  000EBA  0E01               	movlw	1
  1332  000EBC  6E3F               	movwf	?_vfpfcnvrt^0,c
  1333  000EBE  EF89  F007         	goto	l1036
  1334  000EC2                     l2227:
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1338  000EC2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1339  000EC6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1340  000ECA  2ADE               	incf	postinc2,f,c
  1341  000ECC  0E00               	movlw	0
  1342  000ECE  22DD               	addwfc	postdec2,f,c
  1343  000ED0                     
  1344                           ; BSR set to: 0
  1345                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1346  000ED0  0E00               	movlw	0
  1347  000ED2  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
  1348  000ED4  0E00               	movlw	0
  1349  000ED6  6E3F               	movwf	?_vfpfcnvrt^0,c
  1350  000ED8  EF89  F007         	goto	l1036
  1351  000EDC                     l2233:
  1352                           
  1353                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1354  000EDC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1355  000EE0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1356  000EE4  CFDE FFF6          	movff	postinc2,tblptrl
  1357  000EE8  CFDD FFF7          	movff	postdec2,tblptrh
  1358  000EEC                     	if	0	;tblptru may be non-zero
  1359  000EEC                     	endif
  1360  000EEC                     	if	0	;tblptru may be non-zero
  1361  000EEC                     	endif
  1362  000EEC  0008               	tblrd		*
  1363  000EEE  50F5               	movf	tablat,w,c
  1364  000EF0  6E01               	movwf	fputc@c^0,c
  1365  000EF2  6A02               	clrf	(fputc@c+1)^0,c
  1366  000EF4  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1367  000EF8  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1368  000EFC  ECA6  F008         	call	_fputc	;wreg free
  1369  000F00                     
  1370                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1371  000F00  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1372  000F04  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1373  000F08  2ADE               	incf	postinc2,f,c
  1374  000F0A  0E00               	movlw	0
  1375  000F0C  22DD               	addwfc	postdec2,f,c
  1376  000F0E  EF5B  F007         	goto	l2223
  1377  000F12                     l1036:
  1378  000F12  0012               	return		;funcret
  1379  000F14                     __end_of_vfpfcnvrt:
  1380                           	callstack 0
  1381                           
  1382 ;; *************** function _xtoa *****************
  1383 ;; Defined at:
  1384 ;;		line 645 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1387 ;;		 -> sprintf@f(11), 
  1388 ;;  d               8   29[COMRAM] unsigned long long 
  1389 ;;  x               1   37[COMRAM] unsigned char 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  n               8   50[COMRAM] unsigned long long 
  1392 ;;  c               2   60[COMRAM] int 
  1393 ;;  i               2   58[COMRAM] int 
  1394 ;;  w               2   48[COMRAM] int 
  1395 ;;  p               2   46[COMRAM] int 
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  2   27[COMRAM] int 
  1398 ;; Registers used:
  1399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1405 ;;      Params:        11       0       0       0       0       0       0       0       0
  1406 ;;      Locals:        16       0       0       0       0       0       0       0       0
  1407 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1408 ;;      Totals:        35       0       0       0       0       0       0       0       0
  1409 ;;Total ram usage:       35 bytes
  1410 ;; Hardware stack levels used: 1
  1411 ;; Hardware stack levels required when called: 4
  1412 ;; This function calls:
  1413 ;;		_isalpha
  1414 ;;		_isupper
  1415 ;;		_pad
  1416 ;;		_toupper
  1417 ;; This function is called by:
  1418 ;;		_vfpfcnvrt
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text4
  1423  000812                     __ptext4:
  1424                           	callstack 0
  1425  000812                     _xtoa:
  1426                           	callstack 23
  1427  000812                     
  1428                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;D:\Program Files\Microchip\xc8\v2.36\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;D:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  1429  000812  0100               	movlb	0	; () banked
  1430  000814  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1431  000816  EF0F  F004         	goto	u1381
  1432  00081A  EF11  F004         	goto	u1380
  1433  00081E                     u1381:
  1434  00081E  EF12  F004         	goto	l2037
  1435  000822                     u1380:
  1436  000822                     
  1437                           ; BSR set to: 0
  1438                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  1439  000822  9366               	bcf	_flags& (0+255),1,b
  1440  000824                     l2037:
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  1444  000824  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1445  000826  EF1F  F004         	goto	u1390
  1446  00082A  5165               	movf	(_prec+1)& (0+255),w,b
  1447  00082C  E106               	bnz	u1391
  1448  00082E  0564               	decf	_prec& (0+255),w,b
  1449  000830  B0D8               	btfsc	status,0,c
  1450  000832  EF1D  F004         	goto	u1391
  1451  000836  EF1F  F004         	goto	u1390
  1452  00083A                     u1391:
  1453  00083A  EF25  F004         	goto	l1008
  1454  00083E                     u1390:
  1455  00083E                     
  1456                           ; BSR set to: 0
  1457  00083E  0E00               	movlw	0
  1458  000840  6E30               	movwf	(xtoa@p+1)^0,c
  1459  000842  0E01               	movlw	1
  1460  000844  6E2F               	movwf	xtoa@p^0,c
  1461  000846  EF29  F004         	goto	l1010
  1462  00084A                     l1008:
  1463                           
  1464                           ; BSR set to: 0
  1465  00084A  C064  F02F         	movff	_prec,xtoa@p
  1466  00084E  C065  F030         	movff	_prec+1,xtoa@p+1
  1467  000852                     l1010:
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  1471  000852  C062  F031         	movff	_width,xtoa@w
  1472  000856  C063  F032         	movff	_width+1,xtoa@w+1
  1473                           
  1474                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  1475  00085A  A966               	btfss	_flags& (0+255),4,b
  1476  00085C  EF32  F004         	goto	u1401
  1477  000860  EF34  F004         	goto	u1400
  1478  000864                     u1401:
  1479  000864  EF38  F004         	goto	l2043
  1480  000868                     u1400:
  1481  000868                     
  1482                           ; BSR set to: 0
  1483                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  1484  000868  0EFE               	movlw	254
  1485  00086A  2631               	addwf	xtoa@w^0,f,c
  1486  00086C  0EFF               	movlw	255
  1487  00086E  2232               	addwfc	(xtoa@w+1)^0,f,c
  1488  000870                     l2043:
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 661:     n = d;
  1492  000870  C01E  F033         	movff	xtoa@d,xtoa@n
  1493  000874  C01F  F034         	movff	xtoa@d+1,xtoa@n+1
  1494  000878  C020  F035         	movff	xtoa@d+2,xtoa@n+2
  1495  00087C  C021  F036         	movff	xtoa@d+3,xtoa@n+3
  1496  000880  C022  F037         	movff	xtoa@d+4,xtoa@n+4
  1497  000884  C023  F038         	movff	xtoa@d+5,xtoa@n+5
  1498  000888  C024  F039         	movff	xtoa@d+6,xtoa@n+6
  1499  00088C  C025  F03A         	movff	xtoa@d+7,xtoa@n+7
  1500  000890                     
  1501                           ; BSR set to: 0
  1502                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  1503  000890  0E00               	movlw	0
  1504  000892  6E3C               	movwf	(xtoa@i+1)^0,c
  1505  000894  0E1F               	movlw	31
  1506  000896  6E3B               	movwf	xtoa@i^0,c
  1507  000898                     
  1508                           ; BSR set to: 0
  1509                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  1510  000898  0E00               	movlw	0
  1511  00089A  6F89               	movwf	(_dbuf+31)& (0+255),b
  1512                           
  1513                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1514  00089C  EFE9  F004         	goto	l2079
  1515  0008A0                     l2049:
  1516                           
  1517                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 665:         --i;
  1518  0008A0  063B               	decf	xtoa@i^0,f,c
  1519  0008A2  A0D8               	btfss	status,0,c
  1520  0008A4  063C               	decf	(xtoa@i+1)^0,f,c
  1521  0008A6                     
  1522                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  1523  0008A6  0E0F               	movlw	15
  1524  0008A8  1433               	andwf	xtoa@n^0,w,c
  1525  0008AA  6E3D               	movwf	xtoa@c^0,c
  1526  0008AC  6A3E               	clrf	(xtoa@c+1)^0,c
  1527  0008AE                     
  1528                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  1529  0008AE  BE3E               	btfsc	(xtoa@c+1)^0,7,c
  1530  0008B0  EF63  F004         	goto	u1411
  1531  0008B4  503E               	movf	(xtoa@c+1)^0,w,c
  1532  0008B6  E109               	bnz	u1410
  1533  0008B8  0E0A               	movlw	10
  1534  0008BA  5C3D               	subwf	xtoa@c^0,w,c
  1535  0008BC  A0D8               	btfss	status,0,c
  1536  0008BE  EF63  F004         	goto	u1411
  1537  0008C2  EF65  F004         	goto	u1410
  1538  0008C6                     u1411:
  1539  0008C6  EF6D  F004         	goto	l2057
  1540  0008CA                     u1410:
  1541  0008CA  0E57               	movlw	87
  1542  0008CC  243D               	addwf	xtoa@c^0,w,c
  1543  0008CE  6E3D               	movwf	xtoa@c^0,c
  1544  0008D0  0E00               	movlw	0
  1545  0008D2  203E               	addwfc	(xtoa@c+1)^0,w,c
  1546  0008D4  6E3E               	movwf	(xtoa@c+1)^0,c
  1547  0008D6  EF73  F004         	goto	l2061
  1548  0008DA                     l2057:
  1549  0008DA  0E30               	movlw	48
  1550  0008DC  243D               	addwf	xtoa@c^0,w,c
  1551  0008DE  6E3D               	movwf	xtoa@c^0,c
  1552  0008E0  0E00               	movlw	0
  1553  0008E2  203E               	addwfc	(xtoa@c+1)^0,w,c
  1554  0008E4  6E3E               	movwf	(xtoa@c+1)^0,c
  1555  0008E6                     l2061:
  1556  0008E6  0EBF               	movlw	191
  1557  0008E8  6E27               	movwf	??_xtoa^0,c
  1558  0008EA  0EFF               	movlw	255
  1559  0008EC  6E28               	movwf	(??_xtoa+1)^0,c
  1560  0008EE  5026               	movf	xtoa@x^0,w,c
  1561  0008F0  6E29               	movwf	(??_xtoa+2)^0,c
  1562  0008F2  6A2A               	clrf	(??_xtoa+3)^0,c
  1563  0008F4  5027               	movf	??_xtoa^0,w,c
  1564  0008F6  2629               	addwf	(??_xtoa+2)^0,f,c
  1565  0008F8  5028               	movf	(??_xtoa+1)^0,w,c
  1566  0008FA  222A               	addwfc	(??_xtoa+3)^0,f,c
  1567  0008FC  502A               	movf	(??_xtoa+3)^0,w,c
  1568  0008FE  E107               	bnz	u1421
  1569  000900  0E1A               	movlw	26
  1570  000902  5C29               	subwf	(??_xtoa+2)^0,w,c
  1571  000904  B0D8               	btfsc	status,0,c
  1572  000906  EF87  F004         	goto	u1421
  1573  00090A  EF89  F004         	goto	u1420
  1574  00090E                     u1421:
  1575  00090E  EFAC  F004         	goto	l2071
  1576  000912                     u1420:
  1577  000912  0E9F               	movlw	159
  1578  000914  6E27               	movwf	??_xtoa^0,c
  1579  000916  0EFF               	movlw	255
  1580  000918  6E28               	movwf	(??_xtoa+1)^0,c
  1581  00091A  0E20               	movlw	32
  1582  00091C  103D               	iorwf	xtoa@c^0,w,c
  1583  00091E  6E29               	movwf	(??_xtoa+2)^0,c
  1584  000920  0E00               	movlw	0
  1585  000922  103E               	iorwf	(xtoa@c+1)^0,w,c
  1586  000924  6E2A               	movwf	(??_xtoa+3)^0,c
  1587  000926  5027               	movf	??_xtoa^0,w,c
  1588  000928  2629               	addwf	(??_xtoa+2)^0,f,c
  1589  00092A  5028               	movf	(??_xtoa+1)^0,w,c
  1590  00092C  222A               	addwfc	(??_xtoa+3)^0,f,c
  1591  00092E  502A               	movf	(??_xtoa+3)^0,w,c
  1592  000930  E107               	bnz	u1431
  1593  000932  0E1A               	movlw	26
  1594  000934  5C29               	subwf	(??_xtoa+2)^0,w,c
  1595  000936  B0D8               	btfsc	status,0,c
  1596  000938  EFA0  F004         	goto	u1431
  1597  00093C  EFA2  F004         	goto	u1430
  1598  000940                     u1431:
  1599  000940  EFAC  F004         	goto	l2071
  1600  000944                     u1430:
  1601  000944                     
  1602                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  1603  000944  C03D  F007         	movff	xtoa@c,toupper@c
  1604  000948  C03E  F008         	movff	xtoa@c+1,toupper@c+1
  1605  00094C  ECDA  F00C         	call	_toupper	;wreg free
  1606  000950  C007  F03D         	movff	?_toupper,xtoa@c
  1607  000954  C008  F03E         	movff	?_toupper+1,xtoa@c+1
  1608  000958                     l2071:
  1609                           
  1610                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  1611  000958  0E6A               	movlw	low _dbuf
  1612  00095A  243B               	addwf	xtoa@i^0,w,c
  1613  00095C  6ED9               	movwf	fsr2l,c
  1614  00095E  0E00               	movlw	high _dbuf
  1615  000960  203C               	addwfc	(xtoa@i+1)^0,w,c
  1616  000962  6EDA               	movwf	fsr2h,c
  1617  000964  C03D  FFDF         	movff	xtoa@c,indf2
  1618  000968                     
  1619                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 672:         --p;
  1620  000968  062F               	decf	xtoa@p^0,f,c
  1621  00096A  A0D8               	btfss	status,0,c
  1622  00096C  0630               	decf	(xtoa@p+1)^0,f,c
  1623  00096E                     
  1624                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 673:         --w;
  1625  00096E  0631               	decf	xtoa@w^0,f,c
  1626  000970  A0D8               	btfss	status,0,c
  1627  000972  0632               	decf	(xtoa@w+1)^0,f,c
  1628  000974                     
  1629                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  1630  000974  C033  F027         	movff	xtoa@n,??_xtoa
  1631  000978  C034  F028         	movff	xtoa@n+1,??_xtoa+1
  1632  00097C  C035  F029         	movff	xtoa@n+2,??_xtoa+2
  1633  000980  C036  F02A         	movff	xtoa@n+3,??_xtoa+3
  1634  000984  C037  F02B         	movff	xtoa@n+4,??_xtoa+4
  1635  000988  C038  F02C         	movff	xtoa@n+5,??_xtoa+5
  1636  00098C  C039  F02D         	movff	xtoa@n+6,??_xtoa+6
  1637  000990  C03A  F02E         	movff	xtoa@n+7,??_xtoa+7
  1638  000994  0E05               	movlw	5
  1639  000996  EFD6  F004         	goto	u1440
  1640  00099A                     u1445:
  1641  00099A  90D8               	bcf	status,0,c
  1642  00099C  322E               	rrcf	(??_xtoa+7)^0,f,c
  1643  00099E  322D               	rrcf	(??_xtoa+6)^0,f,c
  1644  0009A0  322C               	rrcf	(??_xtoa+5)^0,f,c
  1645  0009A2  322B               	rrcf	(??_xtoa+4)^0,f,c
  1646  0009A4  322A               	rrcf	(??_xtoa+3)^0,f,c
  1647  0009A6  3229               	rrcf	(??_xtoa+2)^0,f,c
  1648  0009A8  3228               	rrcf	(??_xtoa+1)^0,f,c
  1649  0009AA  3227               	rrcf	??_xtoa^0,f,c
  1650  0009AC                     u1440:
  1651  0009AC  2EE8               	decfsz	wreg,f,c
  1652  0009AE  EFCD  F004         	goto	u1445
  1653  0009B2  C027  F033         	movff	??_xtoa,xtoa@n
  1654  0009B6  C028  F034         	movff	??_xtoa+1,xtoa@n+1
  1655  0009BA  C029  F035         	movff	??_xtoa+2,xtoa@n+2
  1656  0009BE  C02A  F036         	movff	??_xtoa+3,xtoa@n+3
  1657  0009C2  C02B  F037         	movff	??_xtoa+4,xtoa@n+4
  1658  0009C6  C02C  F038         	movff	??_xtoa+5,xtoa@n+5
  1659  0009CA  C02D  F039         	movff	??_xtoa+6,xtoa@n+6
  1660  0009CE  C02E  F03A         	movff	??_xtoa+7,xtoa@n+7
  1661  0009D2                     l2079:
  1662                           
  1663                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1664  0009D2  BE3C               	btfsc	(xtoa@i+1)^0,7,c
  1665  0009D4  EFF5  F004         	goto	u1451
  1666  0009D8  503C               	movf	(xtoa@i+1)^0,w,c
  1667  0009DA  E109               	bnz	u1450
  1668  0009DC  0E02               	movlw	2
  1669  0009DE  5C3B               	subwf	xtoa@i^0,w,c
  1670  0009E0  A0D8               	btfss	status,0,c
  1671  0009E2  EFF5  F004         	goto	u1451
  1672  0009E6  EFF7  F004         	goto	u1450
  1673  0009EA                     u1451:
  1674  0009EA  EF28  F005         	goto	l1027
  1675  0009EE                     u1450:
  1676  0009EE  5033               	movf	xtoa@n^0,w,c
  1677  0009F0  1034               	iorwf	(xtoa@n+1)^0,w,c
  1678  0009F2  1035               	iorwf	(xtoa@n+2)^0,w,c
  1679  0009F4  1036               	iorwf	(xtoa@n+3)^0,w,c
  1680  0009F6  1037               	iorwf	(xtoa@n+4)^0,w,c
  1681  0009F8  1038               	iorwf	(xtoa@n+5)^0,w,c
  1682  0009FA  1039               	iorwf	(xtoa@n+6)^0,w,c
  1683  0009FC  103A               	iorwf	(xtoa@n+7)^0,w,c
  1684  0009FE  A4D8               	btfss	status,2,c
  1685  000A00  EF04  F005         	goto	u1461
  1686  000A04  EF06  F005         	goto	u1460
  1687  000A08                     u1461:
  1688  000A08  EF50  F004         	goto	l2049
  1689  000A0C                     u1460:
  1690  000A0C  BE30               	btfsc	(xtoa@p+1)^0,7,c
  1691  000A0E  EF13  F005         	goto	u1470
  1692  000A12  5030               	movf	(xtoa@p+1)^0,w,c
  1693  000A14  E106               	bnz	u1471
  1694  000A16  042F               	decf	xtoa@p^0,w,c
  1695  000A18  B0D8               	btfsc	status,0,c
  1696  000A1A  EF11  F005         	goto	u1471
  1697  000A1E  EF13  F005         	goto	u1470
  1698  000A22                     u1471:
  1699  000A22  EF50  F004         	goto	l2049
  1700  000A26                     u1470:
  1701  000A26  BE32               	btfsc	(xtoa@w+1)^0,7,c
  1702  000A28  EF1E  F005         	goto	u1481
  1703  000A2C  5032               	movf	(xtoa@w+1)^0,w,c
  1704  000A2E  E108               	bnz	u1480
  1705  000A30  0431               	decf	xtoa@w^0,w,c
  1706  000A32  A0D8               	btfss	status,0,c
  1707  000A34  EF1E  F005         	goto	u1481
  1708  000A38  EF20  F005         	goto	u1480
  1709  000A3C                     u1481:
  1710  000A3C  EF28  F005         	goto	l1027
  1711  000A40                     u1480:
  1712  000A40  0100               	movlb	0	; () banked
  1713  000A42  B366               	btfsc	_flags& (0+255),1,b
  1714  000A44  EF26  F005         	goto	u1491
  1715  000A48  EF28  F005         	goto	u1490
  1716  000A4C                     u1491:
  1717  000A4C  EF50  F004         	goto	l2049
  1718  000A50                     u1490:
  1719  000A50                     l1027:
  1720                           
  1721                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  1722  000A50  0100               	movlb	0	; () banked
  1723  000A52  A966               	btfss	_flags& (0+255),4,b
  1724  000A54  EF2E  F005         	goto	u1501
  1725  000A58  EF30  F005         	goto	u1500
  1726  000A5C                     u1501:
  1727  000A5C  EF46  F005         	goto	l2095
  1728  000A60                     u1500:
  1729  000A60                     
  1730                           ; BSR set to: 0
  1731                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 679:         --i;
  1732  000A60  063B               	decf	xtoa@i^0,f,c
  1733  000A62  A0D8               	btfss	status,0,c
  1734  000A64  063C               	decf	(xtoa@i+1)^0,f,c
  1735  000A66                     
  1736                           ; BSR set to: 0
  1737                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  1738  000A66  0E6A               	movlw	low _dbuf
  1739  000A68  243B               	addwf	xtoa@i^0,w,c
  1740  000A6A  6ED9               	movwf	fsr2l,c
  1741  000A6C  0E00               	movlw	high _dbuf
  1742  000A6E  203C               	addwfc	(xtoa@i+1)^0,w,c
  1743  000A70  6EDA               	movwf	fsr2h,c
  1744  000A72  C026  FFDF         	movff	xtoa@x,indf2
  1745  000A76                     
  1746                           ; BSR set to: 0
  1747                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 681:         --i;
  1748  000A76  063B               	decf	xtoa@i^0,f,c
  1749  000A78  A0D8               	btfss	status,0,c
  1750  000A7A  063C               	decf	(xtoa@i+1)^0,f,c
  1751                           
  1752                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  1753  000A7C  0E6A               	movlw	low _dbuf
  1754  000A7E  243B               	addwf	xtoa@i^0,w,c
  1755  000A80  6ED9               	movwf	fsr2l,c
  1756  000A82  0E00               	movlw	high _dbuf
  1757  000A84  203C               	addwfc	(xtoa@i+1)^0,w,c
  1758  000A86  6EDA               	movwf	fsr2h,c
  1759  000A88  0E30               	movlw	48
  1760  000A8A  6EDF               	movwf	indf2,c
  1761  000A8C                     l2095:
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  1765  000A8C  C01C  F011         	movff	xtoa@fp,pad@fp
  1766  000A90  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  1767  000A94  0E6A               	movlw	low _dbuf
  1768  000A96  243B               	addwf	xtoa@i^0,w,c
  1769  000A98  6E13               	movwf	pad@buf^0,c
  1770  000A9A  0E00               	movlw	high _dbuf
  1771  000A9C  203C               	addwfc	(xtoa@i+1)^0,w,c
  1772  000A9E  6E14               	movwf	(pad@buf+1)^0,c
  1773  000AA0  C031  F015         	movff	xtoa@w,pad@p
  1774  000AA4  C032  F016         	movff	xtoa@w+1,pad@p+1
  1775  000AA8  EC0B  F009         	call	_pad	;wreg free
  1776  000AAC  C011  F01C         	movff	?_pad,?_xtoa
  1777  000AB0  C012  F01D         	movff	?_pad+1,?_xtoa+1
  1778  000AB4  0012               	return		;funcret
  1779  000AB6                     __end_of_xtoa:
  1780                           	callstack 0
  1781                           
  1782 ;; *************** function _toupper *****************
  1783 ;; Defined at:
  1784 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\toupper.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  c               2    6[COMRAM] int 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  2    6[COMRAM] int 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2, status,0
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1798 ;;      Params:         2       0       0       0       0       0       0       0       0
  1799 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1800 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1801 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1802 ;;Total ram usage:        6 bytes
  1803 ;; Hardware stack levels used: 1
  1804 ;; Hardware stack levels required when called: 1
  1805 ;; This function calls:
  1806 ;;		_islower
  1807 ;; This function is called by:
  1808 ;;		_xtoa
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text5
  1813  0019B4                     __ptext5:
  1814                           	callstack 0
  1815  0019B4                     _toupper:
  1816                           	callstack 25
  1817  0019B4  0E9F               	movlw	159
  1818  0019B6  6E09               	movwf	??_toupper^0,c
  1819  0019B8  0EFF               	movlw	255
  1820  0019BA  6E0A               	movwf	(??_toupper+1)^0,c
  1821  0019BC  C007  F00B         	movff	toupper@c,??_toupper+2
  1822  0019C0  C008  F00C         	movff	toupper@c+1,??_toupper+3
  1823  0019C4  5009               	movf	??_toupper^0,w,c
  1824  0019C6  260B               	addwf	(??_toupper+2)^0,f,c
  1825  0019C8  500A               	movf	(??_toupper+1)^0,w,c
  1826  0019CA  220C               	addwfc	(??_toupper+3)^0,f,c
  1827  0019CC  500C               	movf	(??_toupper+3)^0,w,c
  1828  0019CE  E107               	bnz	u1371
  1829  0019D0  0E1A               	movlw	26
  1830  0019D2  5C0B               	subwf	(??_toupper+2)^0,w,c
  1831  0019D4  B0D8               	btfsc	status,0,c
  1832  0019D6  EFEF  F00C         	goto	u1371
  1833  0019DA  EFF1  F00C         	goto	u1370
  1834  0019DE                     u1371:
  1835  0019DE  EFF7  F00C         	goto	l1089
  1836  0019E2                     u1370:
  1837  0019E2  0E5F               	movlw	95
  1838  0019E4  1407               	andwf	toupper@c^0,w,c
  1839  0019E6  6E07               	movwf	?_toupper^0,c
  1840  0019E8  6A08               	clrf	(?_toupper+1)^0,c
  1841  0019EA  EFFB  F00C         	goto	l1092
  1842  0019EE                     l1089:
  1843  0019EE  C007  F007         	movff	toupper@c,?_toupper
  1844  0019F2  C008  F008         	movff	toupper@c+1,?_toupper+1
  1845  0019F6                     l1092:
  1846  0019F6  0012               	return		;funcret
  1847  0019F8                     __end_of_toupper:
  1848                           	callstack 0
  1849                           
  1850 ;; *************** function _islower *****************
  1851 ;; Defined at:
  1852 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\islower.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  c               2    0[COMRAM] int 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  2    0[COMRAM] int 
  1859 ;; Registers used:
  1860 ;;		wreg, status,2, status,0
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1866 ;;      Params:         2       0       0       0       0       0       0       0       0
  1867 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1868 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1869 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1870 ;;Total ram usage:        6 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; This function calls:
  1873 ;;		Nothing
  1874 ;; This function is called by:
  1875 ;;		_toupper
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text6
  1880  001A78                     __ptext6:
  1881                           	callstack 0
  1882  001A78                     _islower:
  1883                           	callstack 25
  1884  001A78  0E9F               	movlw	159
  1885  001A7A  6E03               	movwf	??_islower^0,c
  1886  001A7C  0EFF               	movlw	255
  1887  001A7E  6E04               	movwf	(??_islower+1)^0,c
  1888  001A80  C001  F005         	movff	islower@c,??_islower+2
  1889  001A84  C002  F006         	movff	islower@c+1,??_islower+3
  1890  001A88  5003               	movf	??_islower^0,w,c
  1891  001A8A  2605               	addwf	(??_islower+2)^0,f,c
  1892  001A8C  5004               	movf	(??_islower+1)^0,w,c
  1893  001A8E  2206               	addwfc	(??_islower+3)^0,f,c
  1894  001A90  5006               	movf	(??_islower+3)^0,w,c
  1895  001A92  E10A               	bnz	u1100
  1896  001A94  0E1A               	movlw	26
  1897  001A96  5C05               	subwf	(??_islower+2)^0,w,c
  1898  001A98  A0D8               	btfss	status,0,c
  1899  001A9A  EF51  F00D         	goto	u1101
  1900  001A9E  EF54  F00D         	goto	u1100
  1901  001AA2                     u1101:
  1902  001AA2  0E01               	movlw	1
  1903  001AA4  EF55  F00D         	goto	u1110
  1904  001AA8                     u1100:
  1905  001AA8  0E00               	movlw	0
  1906  001AAA                     u1110:
  1907  001AAA  6E01               	movwf	?_islower^0,c
  1908  001AAC  6A02               	clrf	(?_islower+1)^0,c
  1909  001AAE  0012               	return		;funcret
  1910  001AB0                     __end_of_islower:
  1911                           	callstack 0
  1912                           
  1913 ;; *************** function _pad *****************
  1914 ;; Defined at:
  1915 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1918 ;;		 -> sprintf@f(11), 
  1919 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1920 ;;		 -> dbuf(32), 
  1921 ;;  p               2   20[COMRAM] int 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  w               2   25[COMRAM] int 
  1924 ;;  i               2   23[COMRAM] int 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  2   16[COMRAM] int 
  1927 ;; Registers used:
  1928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1934 ;;      Params:         6       0       0       0       0       0       0       0       0
  1935 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1936 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1937 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1938 ;;Total ram usage:       11 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 3
  1941 ;; This function calls:
  1942 ;;		_fputc
  1943 ;;		_fputs
  1944 ;;		_strlen
  1945 ;; This function is called by:
  1946 ;;		_xtoa
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text7
  1951  001216                     __ptext7:
  1952                           	callstack 0
  1953  001216                     _pad:
  1954                           	callstack 23
  1955  001216                     
  1956                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1957  001216  0100               	movlb	0	; () banked
  1958  001218  A166               	btfss	_flags& (0+255),0,b
  1959  00121A  EF11  F009         	goto	u1291
  1960  00121E  EF13  F009         	goto	u1290
  1961  001222                     u1291:
  1962  001222  EF1D  F009         	goto	l1983
  1963  001226                     u1290:
  1964  001226                     
  1965                           ; BSR set to: 0
  1966                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1967  001226  C013  F00A         	movff	pad@buf,fputs@s
  1968  00122A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1969  00122E  C011  F00C         	movff	pad@fp,fputs@fp
  1970  001232  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1971  001236  ECFC  F00C         	call	_fputs	;wreg free
  1972  00123A                     l1983:
  1973                           
  1974                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1975  00123A  BE16               	btfsc	(pad@p+1)^0,7,c
  1976  00123C  EF22  F009         	goto	u1301
  1977  001240  EF24  F009         	goto	u1300
  1978  001244                     u1301:
  1979  001244  EF2A  F009         	goto	l1987
  1980  001248                     u1300:
  1981  001248  C015  F01A         	movff	pad@p,pad@w
  1982  00124C  C016  F01B         	movff	pad@p+1,pad@w+1
  1983  001250  EF2E  F009         	goto	l998
  1984  001254                     l1987:
  1985  001254  0E00               	movlw	0
  1986  001256  6E1B               	movwf	(pad@w+1)^0,c
  1987  001258  0E00               	movlw	0
  1988  00125A  6E1A               	movwf	pad@w^0,c
  1989  00125C                     l998:
  1990                           
  1991                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1992  00125C  0E00               	movlw	0
  1993  00125E  6E19               	movwf	(pad@i+1)^0,c
  1994  001260  0E00               	movlw	0
  1995  001262  6E18               	movwf	pad@i^0,c
  1996                           
  1997                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1998  001264  EF40  F009         	goto	l1993
  1999  001268                     l1989:
  2000                           
  2001                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2002  001268  0E00               	movlw	0
  2003  00126A  6E02               	movwf	(fputc@c+1)^0,c
  2004  00126C  0E20               	movlw	32
  2005  00126E  6E01               	movwf	fputc@c^0,c
  2006  001270  C011  F003         	movff	pad@fp,fputc@fp
  2007  001274  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2008  001278  ECA6  F008         	call	_fputc	;wreg free
  2009  00127C                     
  2010                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2011  00127C  4A18               	infsnz	pad@i^0,f,c
  2012  00127E  2A19               	incf	(pad@i+1)^0,f,c
  2013  001280                     l1993:
  2014                           
  2015                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2016  001280  501A               	movf	pad@w^0,w,c
  2017  001282  5C18               	subwf	pad@i^0,w,c
  2018  001284  5019               	movf	(pad@i+1)^0,w,c
  2019  001286  0A80               	xorlw	128
  2020  001288  6E17               	movwf	??_pad^0,c
  2021  00128A  501B               	movf	(pad@w+1)^0,w,c
  2022  00128C  0A80               	xorlw	128
  2023  00128E  5817               	subwfb	??_pad^0,w,c
  2024  001290  A0D8               	btfss	status,0,c
  2025  001292  EF4D  F009         	goto	u1311
  2026  001296  EF4F  F009         	goto	u1310
  2027  00129A                     u1311:
  2028  00129A  EF34  F009         	goto	l1989
  2029  00129E                     u1310:
  2030  00129E                     
  2031                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2032  00129E  0100               	movlb	0	; () banked
  2033  0012A0  B166               	btfsc	_flags& (0+255),0,b
  2034  0012A2  EF55  F009         	goto	u1321
  2035  0012A6  EF57  F009         	goto	u1320
  2036  0012AA                     u1321:
  2037  0012AA  EF61  F009         	goto	l1997
  2038  0012AE                     u1320:
  2039  0012AE                     
  2040                           ; BSR set to: 0
  2041                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2042  0012AE  C013  F00A         	movff	pad@buf,fputs@s
  2043  0012B2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2044  0012B6  C011  F00C         	movff	pad@fp,fputs@fp
  2045  0012BA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2046  0012BE  ECFC  F00C         	call	_fputs	;wreg free
  2047  0012C2                     l1997:
  2048                           
  2049                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2050  0012C2  C013  F001         	movff	pad@buf,strlen@s
  2051  0012C6  C014  F002         	movff	pad@buf+1,strlen@s+1
  2052  0012CA  ECAC  F00D         	call	_strlen	;wreg free
  2053  0012CE  501A               	movf	pad@w^0,w,c
  2054  0012D0  2401               	addwf	?_strlen^0,w,c
  2055  0012D2  6E11               	movwf	?_pad^0,c
  2056  0012D4  501B               	movf	(pad@w+1)^0,w,c
  2057  0012D6  2002               	addwfc	(?_strlen+1)^0,w,c
  2058  0012D8  6E12               	movwf	(?_pad+1)^0,c
  2059  0012DA  0012               	return		;funcret
  2060  0012DC                     __end_of_pad:
  2061                           	callstack 0
  2062                           
  2063 ;; *************** function _strlen *****************
  2064 ;; Defined at:
  2065 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2068 ;;		 -> dbuf(32), 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2071 ;;		 -> dbuf(32), 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  2    0[COMRAM] unsigned int 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2081 ;;      Params:         2       0       0       0       0       0       0       0       0
  2082 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2084 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2085 ;;Total ram usage:        4 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_pad
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text8
  2095  001B58                     __ptext8:
  2096                           	callstack 0
  2097  001B58                     _strlen:
  2098                           	callstack 25
  2099  001B58  C001  F003         	movff	strlen@s,strlen@a
  2100  001B5C  C002  F004         	movff	strlen@s+1,strlen@a+1
  2101  001B60  EFB4  F00D         	goto	l1881
  2102  001B64                     l1879:
  2103  001B64  4A01               	infsnz	strlen@s^0,f,c
  2104  001B66  2A02               	incf	(strlen@s+1)^0,f,c
  2105  001B68                     l1881:
  2106  001B68  C001  FFD9         	movff	strlen@s,fsr2l
  2107  001B6C  C002  FFDA         	movff	strlen@s+1,fsr2h
  2108  001B70  50DF               	movf	indf2,w,c
  2109  001B72  A4D8               	btfss	status,2,c
  2110  001B74  EFBE  F00D         	goto	u1091
  2111  001B78  EFC0  F00D         	goto	u1090
  2112  001B7C                     u1091:
  2113  001B7C  EFB2  F00D         	goto	l1879
  2114  001B80                     u1090:
  2115  001B80  5003               	movf	strlen@a^0,w,c
  2116  001B82  5C01               	subwf	strlen@s^0,w,c
  2117  001B84  6E01               	movwf	?_strlen^0,c
  2118  001B86  5004               	movf	(strlen@a+1)^0,w,c
  2119  001B88  5802               	subwfb	(strlen@s+1)^0,w,c
  2120  001B8A  6E02               	movwf	(?_strlen+1)^0,c
  2121  001B8C  0012               	return		;funcret
  2122  001B8E                     __end_of_strlen:
  2123                           	callstack 0
  2124                           
  2125 ;; *************** function _fputs *****************
  2126 ;; Defined at:
  2127 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2130 ;;		 -> dbuf(32), 
  2131 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2132 ;;		 -> sprintf@f(11), 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  i               2   14[COMRAM] int 
  2135 ;;  c               1   13[COMRAM] unsigned char 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  2    9[COMRAM] int 
  2138 ;; Registers used:
  2139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2145 ;;      Params:         4       0       0       0       0       0       0       0       0
  2146 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2148 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2149 ;;Total ram usage:        7 bytes
  2150 ;; Hardware stack levels used: 1
  2151 ;; Hardware stack levels required when called: 2
  2152 ;; This function calls:
  2153 ;;		_fputc
  2154 ;; This function is called by:
  2155 ;;		_pad
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text9
  2160  0019F8                     __ptext9:
  2161                           	callstack 0
  2162  0019F8                     _fputs:
  2163                           	callstack 23
  2164  0019F8  0E00               	movlw	0
  2165  0019FA  6E10               	movwf	(fputs@i+1)^0,c
  2166  0019FC  0E00               	movlw	0
  2167  0019FE  6E0F               	movwf	fputs@i^0,c
  2168  001A00  EF0D  F00D         	goto	l1875
  2169  001A04                     l1871:
  2170  001A04  C00E  F001         	movff	fputs@c,fputc@c
  2171  001A08  6A02               	clrf	(fputc@c+1)^0,c
  2172  001A0A  C00C  F003         	movff	fputs@fp,fputc@fp
  2173  001A0E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2174  001A12  ECA6  F008         	call	_fputc	;wreg free
  2175  001A16  4A0F               	infsnz	fputs@i^0,f,c
  2176  001A18  2A10               	incf	(fputs@i+1)^0,f,c
  2177  001A1A                     l1875:
  2178  001A1A  500F               	movf	fputs@i^0,w,c
  2179  001A1C  240A               	addwf	fputs@s^0,w,c
  2180  001A1E  6ED9               	movwf	fsr2l,c
  2181  001A20  5010               	movf	(fputs@i+1)^0,w,c
  2182  001A22  200B               	addwfc	(fputs@s+1)^0,w,c
  2183  001A24  6EDA               	movwf	fsr2h,c
  2184  001A26  50DF               	movf	indf2,w,c
  2185  001A28  6E0E               	movwf	fputs@c^0,c
  2186  001A2A  500E               	movf	fputs@c^0,w,c
  2187  001A2C  A4D8               	btfss	status,2,c
  2188  001A2E  EF1B  F00D         	goto	u1081
  2189  001A32  EF1D  F00D         	goto	u1080
  2190  001A36                     u1081:
  2191  001A36  EF02  F00D         	goto	l1871
  2192  001A3A                     u1080:
  2193  001A3A  0012               	return		;funcret
  2194  001A3C                     __end_of_fputs:
  2195                           	callstack 0
  2196                           
  2197 ;; *************** function _fputc *****************
  2198 ;; Defined at:
  2199 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  c               2    0[COMRAM] int 
  2202 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2203 ;;		 -> sprintf@f(11), 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  2    0[COMRAM] int 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2215 ;;      Params:         4       0       0       0       0       0       0       0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2217 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2218 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2219 ;;Total ram usage:        9 bytes
  2220 ;; Hardware stack levels used: 1
  2221 ;; Hardware stack levels required when called: 1
  2222 ;; This function calls:
  2223 ;;		_putch
  2224 ;; This function is called by:
  2225 ;;		_pad
  2226 ;;		_vfpfcnvrt
  2227 ;;		_fputs
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text10
  2232  00114C                     __ptext10:
  2233                           	callstack 0
  2234  00114C                     _fputc:
  2235                           	callstack 23
  2236  00114C  5003               	movf	fputc@fp^0,w,c
  2237  00114E  1004               	iorwf	(fputc@fp+1)^0,w,c
  2238  001150  B4D8               	btfsc	status,2,c
  2239  001152  EFAD  F008         	goto	u1041
  2240  001156  EFAF  F008         	goto	u1040
  2241  00115A                     u1041:
  2242  00115A  EFB8  F008         	goto	l1859
  2243  00115E                     u1040:
  2244  00115E  5003               	movf	fputc@fp^0,w,c
  2245  001160  1004               	iorwf	(fputc@fp+1)^0,w,c
  2246  001162  A4D8               	btfss	status,2,c
  2247  001164  EFB6  F008         	goto	u1051
  2248  001168  EFB8  F008         	goto	u1050
  2249  00116C                     u1051:
  2250  00116C  EFBD  F008         	goto	l1861
  2251  001170                     u1050:
  2252  001170                     l1859:
  2253  001170  5001               	movf	fputc@c^0,w,c
  2254  001172  EC7E  F00E         	call	_putch
  2255  001176  EF0A  F009         	goto	l1067
  2256  00117A                     l1861:
  2257  00117A  EE20 F009          	lfsr	2,9
  2258  00117E  5003               	movf	fputc@fp^0,w,c
  2259  001180  26D9               	addwf	fsr2l,f,c
  2260  001182  5004               	movf	(fputc@fp+1)^0,w,c
  2261  001184  22DA               	addwfc	fsr2h,f,c
  2262  001186  50DE               	movf	postinc2,w,c
  2263  001188  10DE               	iorwf	postinc2,w,c
  2264  00118A  B4D8               	btfsc	status,2,c
  2265  00118C  EFCA  F008         	goto	u1061
  2266  001190  EFCC  F008         	goto	u1060
  2267  001194                     u1061:
  2268  001194  EFE7  F008         	goto	l1865
  2269  001198                     u1060:
  2270  001198  EE20 F009          	lfsr	2,9
  2271  00119C  5003               	movf	fputc@fp^0,w,c
  2272  00119E  26D9               	addwf	fsr2l,f,c
  2273  0011A0  5004               	movf	(fputc@fp+1)^0,w,c
  2274  0011A2  22DA               	addwfc	fsr2h,f,c
  2275  0011A4  EE10 F003          	lfsr	1,3
  2276  0011A8  5003               	movf	fputc@fp^0,w,c
  2277  0011AA  26E1               	addwf	fsr1l,f,c
  2278  0011AC  5004               	movf	(fputc@fp+1)^0,w,c
  2279  0011AE  22E2               	addwfc	fsr1h,f,c
  2280  0011B0  50DE               	movf	postinc2,w,c
  2281  0011B2  5CE6               	subwf	postinc1,w,c
  2282  0011B4  50E6               	movf	postinc1,w,c
  2283  0011B6  0A80               	xorlw	128
  2284  0011B8  6E09               	movwf	(??_fputc+4)^0,c
  2285  0011BA  50DE               	movf	postinc2,w,c
  2286  0011BC  0A80               	xorlw	128
  2287  0011BE  5809               	subwfb	(??_fputc+4)^0,w,c
  2288  0011C0  B0D8               	btfsc	status,0,c
  2289  0011C2  EFE5  F008         	goto	u1071
  2290  0011C6  EFE7  F008         	goto	u1070
  2291  0011CA                     u1071:
  2292  0011CA  EF0A  F009         	goto	l1067
  2293  0011CE                     u1070:
  2294  0011CE                     l1865:
  2295  0011CE  EE20 F003          	lfsr	2,3
  2296  0011D2  5003               	movf	fputc@fp^0,w,c
  2297  0011D4  26D9               	addwf	fsr2l,f,c
  2298  0011D6  5004               	movf	(fputc@fp+1)^0,w,c
  2299  0011D8  22DA               	addwfc	fsr2h,f,c
  2300  0011DA  CFDE F005          	movff	postinc2,??_fputc
  2301  0011DE  CFDD F006          	movff	postdec2,??_fputc+1
  2302  0011E2  C003  FFD9         	movff	fputc@fp,fsr2l
  2303  0011E6  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2304  0011EA  CFDE F007          	movff	postinc2,??_fputc+2
  2305  0011EE  CFDD F008          	movff	postdec2,??_fputc+3
  2306  0011F2  5005               	movf	??_fputc^0,w,c
  2307  0011F4  2407               	addwf	(??_fputc+2)^0,w,c
  2308  0011F6  6ED9               	movwf	fsr2l,c
  2309  0011F8  5006               	movf	(??_fputc+1)^0,w,c
  2310  0011FA  2008               	addwfc	(??_fputc+3)^0,w,c
  2311  0011FC  6EDA               	movwf	fsr2h,c
  2312  0011FE  C001  FFDF         	movff	fputc@c,indf2
  2313  001202  EE20 F003          	lfsr	2,3
  2314  001206  5003               	movf	fputc@fp^0,w,c
  2315  001208  26D9               	addwf	fsr2l,f,c
  2316  00120A  5004               	movf	(fputc@fp+1)^0,w,c
  2317  00120C  22DA               	addwfc	fsr2h,f,c
  2318  00120E  2ADE               	incf	postinc2,f,c
  2319  001210  0E00               	movlw	0
  2320  001212  22DD               	addwfc	postdec2,f,c
  2321  001214                     l1067:
  2322  001214  0012               	return		;funcret
  2323  001216                     __end_of_fputc:
  2324                           	callstack 0
  2325                           
  2326 ;; *************** function _putch *****************
  2327 ;; Defined at:
  2328 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  c               1    wreg     unsigned char 
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  c               1    0[COMRAM] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2342 ;;      Params:         0       0       0       0       0       0       0       0       0
  2343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2345 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2346 ;;Total ram usage:        0 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; This function calls:
  2349 ;;		Nothing
  2350 ;; This function is called by:
  2351 ;;		_fputc
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text11
  2356  001CFC                     __ptext11:
  2357                           	callstack 0
  2358  001CFC                     _putch:
  2359                           	callstack 23
  2360  001CFC  0012               	return		;funcret
  2361  001CFE                     __end_of_putch:
  2362                           	callstack 0
  2363                           
  2364 ;; *************** function _isupper *****************
  2365 ;; Defined at:
  2366 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  c               2    0[COMRAM] int 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  2    0[COMRAM] int 
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2380 ;;      Params:         2       0       0       0       0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2382 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2383 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2384 ;;Total ram usage:        6 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_xtoa
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text12
  2394  001AB0                     __ptext12:
  2395                           	callstack 0
  2396  001AB0                     _isupper:
  2397                           	callstack 26
  2398  001AB0  0EBF               	movlw	191
  2399  001AB2  6E03               	movwf	??_isupper^0,c
  2400  001AB4  0EFF               	movlw	255
  2401  001AB6  6E04               	movwf	(??_isupper+1)^0,c
  2402  001AB8  C001  F005         	movff	isupper@c,??_isupper+2
  2403  001ABC  C002  F006         	movff	isupper@c+1,??_isupper+3
  2404  001AC0  5003               	movf	??_isupper^0,w,c
  2405  001AC2  2605               	addwf	(??_isupper+2)^0,f,c
  2406  001AC4  5004               	movf	(??_isupper+1)^0,w,c
  2407  001AC6  2206               	addwfc	(??_isupper+3)^0,f,c
  2408  001AC8  5006               	movf	(??_isupper+3)^0,w,c
  2409  001ACA  E10A               	bnz	u1330
  2410  001ACC  0E1A               	movlw	26
  2411  001ACE  5C05               	subwf	(??_isupper+2)^0,w,c
  2412  001AD0  A0D8               	btfss	status,0,c
  2413  001AD2  EF6D  F00D         	goto	u1331
  2414  001AD6  EF70  F00D         	goto	u1330
  2415  001ADA                     u1331:
  2416  001ADA  0E01               	movlw	1
  2417  001ADC  EF71  F00D         	goto	u1340
  2418  001AE0                     u1330:
  2419  001AE0  0E00               	movlw	0
  2420  001AE2                     u1340:
  2421  001AE2  6E01               	movwf	?_isupper^0,c
  2422  001AE4  6A02               	clrf	(?_isupper+1)^0,c
  2423  001AE6  0012               	return		;funcret
  2424  001AE8                     __end_of_isupper:
  2425                           	callstack 0
  2426                           
  2427 ;; *************** function _isalpha *****************
  2428 ;; Defined at:
  2429 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isalpha.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  c               2    0[COMRAM] int 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;		None
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  2    0[COMRAM] int 
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2443 ;;      Params:         2       0       0       0       0       0       0       0       0
  2444 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2445 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2446 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2447 ;;Total ram usage:        6 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_xtoa
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text13
  2457  001A3C                     __ptext13:
  2458                           	callstack 0
  2459  001A3C                     _isalpha:
  2460                           	callstack 26
  2461  001A3C  0E9F               	movlw	159
  2462  001A3E  6E03               	movwf	??_isalpha^0,c
  2463  001A40  0EFF               	movlw	255
  2464  001A42  6E04               	movwf	(??_isalpha+1)^0,c
  2465  001A44  0E20               	movlw	32
  2466  001A46  1001               	iorwf	isalpha@c^0,w,c
  2467  001A48  6E05               	movwf	(??_isalpha+2)^0,c
  2468  001A4A  0E00               	movlw	0
  2469  001A4C  1002               	iorwf	(isalpha@c+1)^0,w,c
  2470  001A4E  6E06               	movwf	(??_isalpha+3)^0,c
  2471  001A50  5003               	movf	??_isalpha^0,w,c
  2472  001A52  2605               	addwf	(??_isalpha+2)^0,f,c
  2473  001A54  5004               	movf	(??_isalpha+1)^0,w,c
  2474  001A56  2206               	addwfc	(??_isalpha+3)^0,f,c
  2475  001A58  5006               	movf	(??_isalpha+3)^0,w,c
  2476  001A5A  E10A               	bnz	u1350
  2477  001A5C  0E1A               	movlw	26
  2478  001A5E  5C05               	subwf	(??_isalpha+2)^0,w,c
  2479  001A60  A0D8               	btfss	status,0,c
  2480  001A62  EF35  F00D         	goto	u1351
  2481  001A66  EF38  F00D         	goto	u1350
  2482  001A6A                     u1351:
  2483  001A6A  0E01               	movlw	1
  2484  001A6C  EF39  F00D         	goto	u1360
  2485  001A70                     u1350:
  2486  001A70  0E00               	movlw	0
  2487  001A72                     u1360:
  2488  001A72  6E01               	movwf	?_isalpha^0,c
  2489  001A74  6A02               	clrf	(?_isalpha+1)^0,c
  2490  001A76  0012               	return		;funcret
  2491  001A78                     __end_of_isalpha:
  2492                           	callstack 0
  2493                           
  2494 ;; *************** function _port_Init *****************
  2495 ;; Defined at:
  2496 ;;		line 64 in file "main.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		None
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2510 ;;      Params:         0       0       0       0       0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2513 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2514 ;;Total ram usage:        0 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_main
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text14
  2524  001CF6                     __ptext14:
  2525                           	callstack 0
  2526  001CF6                     _port_Init:
  2527                           	callstack 30
  2528  001CF6                     
  2529                           ;main.c: 66:     TRISB7 = 0;
  2530  001CF6  9E93               	bcf	3987,7,c	;volatile
  2531                           
  2532                           ;main.c: 67:     LATB7 = 0;
  2533  001CF8  9E8A               	bcf	3978,7,c	;volatile
  2534  001CFA  0012               	return		;funcret
  2535  001CFC                     __end_of_port_Init:
  2536                           	callstack 0
  2537                           
  2538 ;; *************** function _MFRC522_ReadCardSerial *****************
  2539 ;; Defined at:
  2540 ;;		line 315 in file "rc522.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  str             2   39[COMRAM] PTR unsigned char 
  2543 ;;		 -> UID(16), 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  _status         1   41[COMRAM] unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      unsigned char 
  2548 ;; Registers used:
  2549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2555 ;;      Params:         2       0       0       0       0       0       0       0       0
  2556 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2557 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2558 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2559 ;;Total ram usage:        3 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; Hardware stack levels required when called: 4
  2562 ;; This function calls:
  2563 ;;		_MFRC522_AntiColl
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text15
  2570  001AE8                     __ptext15:
  2571                           	callstack 0
  2572  001AE8                     _MFRC522_ReadCardSerial:
  2573                           	callstack 26
  2574  001AE8                     
  2575                           ;rc522.c: 315: char MFRC522_ReadCardSerial(char *str);rc522.c: 316: {;rc522.c: 317:     
      +                          char _status;;rc522.c: 318:     _status = MFRC522_AntiColl(str);
  2576  001AE8  C028  F020         	movff	MFRC522_ReadCardSerial@str,MFRC522_AntiColl@serNum
  2577  001AEC  C029  F021         	movff	MFRC522_ReadCardSerial@str+1,MFRC522_AntiColl@serNum+1
  2578  001AF0  EC25  F00A         	call	_MFRC522_AntiColl	;wreg free
  2579  001AF4  6E2A               	movwf	MFRC522_ReadCardSerial@_status^0,c
  2580  001AF6                     
  2581                           ;rc522.c: 319:     str[4] = 0;
  2582  001AF6  EE20 F004          	lfsr	2,4
  2583  001AFA  5028               	movf	MFRC522_ReadCardSerial@str^0,w,c
  2584  001AFC  26D9               	addwf	fsr2l,f,c
  2585  001AFE  5029               	movf	(MFRC522_ReadCardSerial@str+1)^0,w,c
  2586  001B00  22DA               	addwfc	fsr2h,f,c
  2587  001B02  0E00               	movlw	0
  2588  001B04  6EDF               	movwf	indf2,c
  2589  001B06                     
  2590                           ;rc522.c: 320:     if(_status == 0)
  2591  001B06  502A               	movf	MFRC522_ReadCardSerial@_status^0,w,c
  2592  001B08  A4D8               	btfss	status,2,c
  2593  001B0A  EF89  F00D         	goto	u1881
  2594  001B0E  EF8B  F00D         	goto	u1880
  2595  001B12                     u1881:
  2596  001B12  EF8E  F00D         	goto	l2449
  2597  001B16                     u1880:
  2598  001B16                     
  2599                           ;rc522.c: 321:         return 1;
  2600  001B16  0E01               	movlw	1
  2601  001B18  EF8F  F00D         	goto	l279
  2602  001B1C                     l2449:
  2603                           
  2604                           ;rc522.c: 323:         return 0;
  2605  001B1C  0E00               	movlw	0
  2606  001B1E                     l279:
  2607  001B1E  0012               	return		;funcret
  2608  001B20                     __end_of_MFRC522_ReadCardSerial:
  2609                           	callstack 0
  2610                           
  2611 ;; *************** function _MFRC522_AntiColl *****************
  2612 ;; Defined at:
  2613 ;;		line 282 in file "rc522.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  serNum          2   31[COMRAM] PTR unsigned char 
  2616 ;;		 -> UID(16), 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  unLen           2   35[COMRAM] unsigned int 
  2619 ;;  i               1   38[COMRAM] unsigned char 
  2620 ;;  _status         1   37[COMRAM] unsigned char 
  2621 ;;  serNumCheck     1   34[COMRAM] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      unsigned char 
  2624 ;; Registers used:
  2625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2631 ;;      Params:         2       0       0       0       0       0       0       0       0
  2632 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2633 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2634 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2635 ;;Total ram usage:        8 bytes
  2636 ;; Hardware stack levels used: 1
  2637 ;; Hardware stack levels required when called: 3
  2638 ;; This function calls:
  2639 ;;		_MFRC522_Clear_Bit
  2640 ;;		_MFRC522_ToCard
  2641 ;;		_MFRC522_Wr
  2642 ;; This function is called by:
  2643 ;;		_MFRC522_ReadCardSerial
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text16
  2648  00144A                     __ptext16:
  2649                           	callstack 0
  2650  00144A                     _MFRC522_AntiColl:
  2651                           	callstack 26
  2652  00144A                     
  2653                           ;rc522.c: 282: char MFRC522_AntiColl(char *serNum);rc522.c: 283: {;rc522.c: 284:     cha
      +                          r _status;;rc522.c: 285:     char i;;rc522.c: 286:     char serNumCheck = 0;
  2654  00144A  0E00               	movlw	0
  2655  00144C  6E23               	movwf	MFRC522_AntiColl@serNumCheck^0,c
  2656  00144E                     
  2657                           ;rc522.c: 287:     unsigned unLen;;rc522.c: 288:     MFRC522_Wr(0x0D, 0x00);
  2658  00144E  0E00               	movlw	0
  2659  001450  6E01               	movwf	MFRC522_Wr@value^0,c
  2660  001452  0E0D               	movlw	13
  2661  001454  EC21  F00B         	call	_MFRC522_Wr
  2662  001458                     
  2663                           ;rc522.c: 289:     serNum[0] = 0x93;
  2664  001458  C020  FFD9         	movff	MFRC522_AntiColl@serNum,fsr2l
  2665  00145C  C021  FFDA         	movff	MFRC522_AntiColl@serNum+1,fsr2h
  2666  001460  0E93               	movlw	147
  2667  001462  6EDF               	movwf	indf2,c
  2668  001464                     
  2669                           ;rc522.c: 290:     serNum[1] = 0x20;
  2670  001464  EE20 F001          	lfsr	2,1
  2671  001468  5020               	movf	MFRC522_AntiColl@serNum^0,w,c
  2672  00146A  26D9               	addwf	fsr2l,f,c
  2673  00146C  5021               	movf	(MFRC522_AntiColl@serNum+1)^0,w,c
  2674  00146E  22DA               	addwfc	fsr2h,f,c
  2675  001470  0E20               	movlw	32
  2676  001472  6EDF               	movwf	indf2,c
  2677  001474                     
  2678                           ;rc522.c: 291:     MFRC522_Clear_Bit(0x08, 0x08);
  2679  001474  0E08               	movlw	8
  2680  001476  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  2681  001478  0E08               	movlw	8
  2682  00147A  EC53  F00E         	call	_MFRC522_Clear_Bit
  2683  00147E                     
  2684                           ;rc522.c: 292:     _status = MFRC522_ToCard(0x0C, serNum, 2, serNum, &unLen);
  2685  00147E  C020  F00D         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@sendData
  2686  001482  C021  F00E         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@sendData+1
  2687  001486  0E02               	movlw	2
  2688  001488  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
  2689  00148A  C020  F010         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@backData
  2690  00148E  C021  F011         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@backData+1
  2691  001492  0E24               	movlw	low MFRC522_AntiColl@unLen
  2692  001494  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  2693  001496  0E00               	movlw	high MFRC522_AntiColl@unLen
  2694  001498  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  2695  00149A  0E0C               	movlw	12
  2696  00149C  EC5B  F005         	call	_MFRC522_ToCard
  2697  0014A0  6E26               	movwf	MFRC522_AntiColl@_status^0,c
  2698  0014A2                     
  2699                           ;rc522.c: 293:     if(_status == 0)
  2700  0014A2  5026               	movf	MFRC522_AntiColl@_status^0,w,c
  2701  0014A4  A4D8               	btfss	status,2,c
  2702  0014A6  EF57  F00A         	goto	u1751
  2703  0014AA  EF59  F00A         	goto	u1750
  2704  0014AE                     u1751:
  2705  0014AE  EF7D  F00A         	goto	l266
  2706  0014B2                     u1750:
  2707  0014B2                     
  2708                           ;rc522.c: 294:     {;rc522.c: 295:         for(i=0; i<4; i++)
  2709  0014B2  0E00               	movlw	0
  2710  0014B4  6E27               	movwf	MFRC522_AntiColl@i^0,c
  2711  0014B6                     l2319:
  2712                           
  2713                           ;rc522.c: 296:         {;rc522.c: 297:             serNumCheck ^= serNum[i];
  2714  0014B6  5027               	movf	MFRC522_AntiColl@i^0,w,c
  2715  0014B8  2420               	addwf	MFRC522_AntiColl@serNum^0,w,c
  2716  0014BA  6ED9               	movwf	fsr2l,c
  2717  0014BC  0E00               	movlw	0
  2718  0014BE  2021               	addwfc	(MFRC522_AntiColl@serNum+1)^0,w,c
  2719  0014C0  6EDA               	movwf	fsr2h,c
  2720  0014C2  50DF               	movf	indf2,w,c
  2721  0014C4  1A23               	xorwf	MFRC522_AntiColl@serNumCheck^0,f,c
  2722  0014C6                     
  2723                           ;rc522.c: 298:         }
  2724  0014C6  2A27               	incf	MFRC522_AntiColl@i^0,f,c
  2725  0014C8  0E03               	movlw	3
  2726  0014CA  6427               	cpfsgt	MFRC522_AntiColl@i^0,c
  2727  0014CC  EF6A  F00A         	goto	u1761
  2728  0014D0  EF6C  F00A         	goto	u1760
  2729  0014D4                     u1761:
  2730  0014D4  EF5B  F00A         	goto	l2319
  2731  0014D8                     u1760:
  2732  0014D8                     
  2733                           ;rc522.c: 299:         if(serNumCheck != serNum[4])
  2734  0014D8  EE20 F004          	lfsr	2,4
  2735  0014DC  5020               	movf	MFRC522_AntiColl@serNum^0,w,c
  2736  0014DE  26D9               	addwf	fsr2l,f,c
  2737  0014E0  5021               	movf	(MFRC522_AntiColl@serNum+1)^0,w,c
  2738  0014E2  22DA               	addwfc	fsr2h,f,c
  2739  0014E4  5023               	movf	MFRC522_AntiColl@serNumCheck^0,w,c
  2740  0014E6  18DE               	xorwf	postinc2,w,c
  2741  0014E8  B4D8               	btfsc	status,2,c
  2742  0014EA  EF79  F00A         	goto	u1771
  2743  0014EE  EF7B  F00A         	goto	u1770
  2744  0014F2                     u1771:
  2745  0014F2  EF7D  F00A         	goto	l266
  2746  0014F6                     u1770:
  2747  0014F6                     
  2748                           ;rc522.c: 300:         {;rc522.c: 301:             _status = 2;
  2749  0014F6  0E02               	movlw	2
  2750  0014F8  6E26               	movwf	MFRC522_AntiColl@_status^0,c
  2751  0014FA                     l266:
  2752                           
  2753                           ;rc522.c: 304:     return _status;
  2754  0014FA  5026               	movf	MFRC522_AntiColl@_status^0,w,c
  2755  0014FC  0012               	return		;funcret
  2756  0014FE                     __end_of_MFRC522_AntiColl:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function _MFRC522_IsCard *****************
  2760 ;; Defined at:
  2761 ;;		line 307 in file "rc522.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  TagType         2   37[COMRAM] PTR unsigned char 
  2764 ;;		 -> TagType(1), 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      unsigned char 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2776 ;;      Params:         2       0       0       0       0       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2779 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2780 ;;Total ram usage:        2 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 4
  2783 ;; This function calls:
  2784 ;;		_MFRC522_Request
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text17
  2791  001C10                     __ptext17:
  2792                           	callstack 0
  2793  001C10                     _MFRC522_IsCard:
  2794                           	callstack 26
  2795  001C10                     
  2796                           ;rc522.c: 307: char MFRC522_IsCard(char *TagType);rc522.c: 308: {;rc522.c: 309:     if(M
      +                          FRC522_Request(0x26, TagType) == 0)
  2797  001C10  C026  F020         	movff	MFRC522_IsCard@TagType,MFRC522_Request@TagType
  2798  001C14  C027  F021         	movff	MFRC522_IsCard@TagType+1,MFRC522_Request@TagType+1
  2799  001C18  0E26               	movlw	38
  2800  001C1A  ECA0  F00B         	call	_MFRC522_Request
  2801  001C1E  0900               	iorlw	0
  2802  001C20  A4D8               	btfss	status,2,c
  2803  001C22  EF15  F00E         	goto	u1871
  2804  001C26  EF17  F00E         	goto	u1870
  2805  001C2A                     u1871:
  2806  001C2A  EF1A  F00E         	goto	l2433
  2807  001C2E                     u1870:
  2808  001C2E                     
  2809                           ;rc522.c: 310:         return 1;
  2810  001C2E  0E01               	movlw	1
  2811  001C30  EF1B  F00E         	goto	l274
  2812  001C34                     l2433:
  2813                           
  2814                           ;rc522.c: 312:         return 0;
  2815  001C34  0E00               	movlw	0
  2816  001C36                     l274:
  2817  001C36  0012               	return		;funcret
  2818  001C38                     __end_of_MFRC522_IsCard:
  2819                           	callstack 0
  2820                           
  2821 ;; *************** function _MFRC522_Request *****************
  2822 ;; Defined at:
  2823 ;;		line 208 in file "rc522.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  reqMode         1    wreg     unsigned char 
  2826 ;;  TagType         2   31[COMRAM] PTR unsigned char 
  2827 ;;		 -> TagType(1), 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  reqMode         1   33[COMRAM] unsigned char 
  2830 ;;  backBits        2   35[COMRAM] unsigned int 
  2831 ;;  _status         1   34[COMRAM] unsigned char 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      unsigned char 
  2834 ;; Registers used:
  2835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2841 ;;      Params:         2       0       0       0       0       0       0       0       0
  2842 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2844 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2845 ;;Total ram usage:        6 bytes
  2846 ;; Hardware stack levels used: 1
  2847 ;; Hardware stack levels required when called: 3
  2848 ;; This function calls:
  2849 ;;		_MFRC522_ToCard
  2850 ;;		_MFRC522_Wr
  2851 ;; This function is called by:
  2852 ;;		_MFRC522_IsCard
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text18
  2857  001740                     __ptext18:
  2858                           	callstack 0
  2859  001740                     _MFRC522_Request:
  2860                           	callstack 26
  2861                           
  2862                           ;incstack = 0
  2863                           ;MFRC522_Request@reqMode stored from wreg
  2864  001740  6E22               	movwf	MFRC522_Request@reqMode^0,c
  2865  001742                     
  2866                           ;rc522.c: 208: char MFRC522_Request(char reqMode, char *TagType);rc522.c: 209: {;rc522.c
      +                          : 210:     char _status;;rc522.c: 211:     unsigned backBits;;rc522.c: 212:     MFRC522_
      +                          Wr(0x0D, 0x07);
  2867  001742  0E07               	movlw	7
  2868  001744  6E01               	movwf	MFRC522_Wr@value^0,c
  2869  001746  0E0D               	movlw	13
  2870  001748  EC21  F00B         	call	_MFRC522_Wr
  2871  00174C                     
  2872                           ;rc522.c: 213:     TagType[0] = reqMode;
  2873  00174C  C020  FFD9         	movff	MFRC522_Request@TagType,fsr2l
  2874  001750  C021  FFDA         	movff	MFRC522_Request@TagType+1,fsr2h
  2875  001754  C022  FFDF         	movff	MFRC522_Request@reqMode,indf2
  2876  001758                     
  2877                           ;rc522.c: 214:     _status = MFRC522_ToCard(0x0C, TagType, 1, TagType, &backBits);
  2878  001758  C020  F00D         	movff	MFRC522_Request@TagType,MFRC522_ToCard@sendData
  2879  00175C  C021  F00E         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@sendData+1
  2880  001760  0E01               	movlw	1
  2881  001762  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
  2882  001764  C020  F010         	movff	MFRC522_Request@TagType,MFRC522_ToCard@backData
  2883  001768  C021  F011         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@backData+1
  2884  00176C  0E24               	movlw	low MFRC522_Request@backBits
  2885  00176E  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  2886  001770  0E00               	movlw	high MFRC522_Request@backBits
  2887  001772  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  2888  001774  0E0C               	movlw	12
  2889  001776  EC5B  F005         	call	_MFRC522_ToCard
  2890  00177A  6E23               	movwf	MFRC522_Request@_status^0,c
  2891  00177C                     
  2892                           ;rc522.c: 215:     if((_status != 0) || (backBits != 0x10))
  2893  00177C  5023               	movf	MFRC522_Request@_status^0,w,c
  2894  00177E  A4D8               	btfss	status,2,c
  2895  001780  EFC4  F00B         	goto	u1701
  2896  001784  EFC6  F00B         	goto	u1700
  2897  001788                     u1701:
  2898  001788  EFD0  F00B         	goto	l2271
  2899  00178C                     u1700:
  2900  00178C  0E10               	movlw	16
  2901  00178E  1824               	xorwf	MFRC522_Request@backBits^0,w,c
  2902  001790  1025               	iorwf	(MFRC522_Request@backBits+1)^0,w,c
  2903  001792  B4D8               	btfsc	status,2,c
  2904  001794  EFCE  F00B         	goto	u1711
  2905  001798  EFD0  F00B         	goto	u1710
  2906  00179C                     u1711:
  2907  00179C  EFD2  F00B         	goto	l240
  2908  0017A0                     u1710:
  2909  0017A0                     l2271:
  2910                           
  2911                           ;rc522.c: 216:     {;rc522.c: 217:         _status = 2;
  2912  0017A0  0E02               	movlw	2
  2913  0017A2  6E23               	movwf	MFRC522_Request@_status^0,c
  2914  0017A4                     l240:
  2915                           
  2916                           ;rc522.c: 219:     return _status;
  2917  0017A4  5023               	movf	MFRC522_Request@_status^0,w,c
  2918  0017A6  0012               	return		;funcret
  2919  0017A8                     __end_of_MFRC522_Request:
  2920                           	callstack 0
  2921                           
  2922 ;; *************** function _MFRC522_Init *****************
  2923 ;; Defined at:
  2924 ;;		line 96 in file "rc522.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2938 ;;      Params:         0       0       0       0       0       0       0       0       0
  2939 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2941 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2942 ;;Total ram usage:        0 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 3
  2945 ;; This function calls:
  2946 ;;		_MFRC522_AntennaOff
  2947 ;;		_MFRC522_AntennaOn
  2948 ;;		_MFRC522_Reset
  2949 ;;		_MFRC522_Wr
  2950 ;; This function is called by:
  2951 ;;		_main
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text19
  2956  00180A                     __ptext19:
  2957                           	callstack 0
  2958  00180A                     _MFRC522_Init:
  2959                           	callstack 27
  2960  00180A                     
  2961                           ;rc522.c: 98:     TRISDbits.RD2 = 0;
  2962  00180A  9495               	bcf	149,2,c	;volatile
  2963                           
  2964                           ;rc522.c: 99:     TRISDbits.RD1 = 0;
  2965  00180C  9295               	bcf	149,1,c	;volatile
  2966                           
  2967                           ;rc522.c: 100:     TRISDbits.RD0 = 0;
  2968  00180E  9095               	bcf	149,0,c	;volatile
  2969                           
  2970                           ;rc522.c: 101:     TRISDbits.RD3 = 1;
  2971  001810  8695               	bsf	149,3,c	;volatile
  2972                           
  2973                           ;rc522.c: 102:     TRISDbits.RD4 = 0;
  2974  001812  9895               	bcf	149,4,c	;volatile
  2975                           
  2976                           ;rc522.c: 103:     LATDbits.LD1 = 0;
  2977  001814  928C               	bcf	140,1,c	;volatile
  2978                           
  2979                           ;rc522.c: 104:     LATDbits.LD2 = 0;
  2980  001816  948C               	bcf	140,2,c	;volatile
  2981                           
  2982                           ;rc522.c: 105:     LATDbits.LD0 = 1;
  2983  001818  808C               	bsf	140,0,c	;volatile
  2984                           
  2985                           ;rc522.c: 106:     LATDbits.LD4 = 1;
  2986  00181A  888C               	bsf	140,4,c	;volatile
  2987  00181C                     
  2988                           ;rc522.c: 107:     MFRC522_Reset();
  2989  00181C  ECF3  F00D         	call	_MFRC522_Reset	;wreg free
  2990                           
  2991                           ;rc522.c: 108:     MFRC522_Wr(0x2A, 0x8D);
  2992  001820  0E8D               	movlw	141
  2993  001822  6E01               	movwf	MFRC522_Wr@value^0,c
  2994  001824  0E2A               	movlw	42
  2995  001826  EC21  F00B         	call	_MFRC522_Wr
  2996                           
  2997                           ;rc522.c: 109:     MFRC522_Wr(0x2B, 0x3E);
  2998  00182A  0E3E               	movlw	62
  2999  00182C  6E01               	movwf	MFRC522_Wr@value^0,c
  3000  00182E  0E2B               	movlw	43
  3001  001830  EC21  F00B         	call	_MFRC522_Wr
  3002                           
  3003                           ;rc522.c: 110:     MFRC522_Wr(0x2D, 30);
  3004  001834  0E1E               	movlw	30
  3005  001836  6E01               	movwf	MFRC522_Wr@value^0,c
  3006  001838  0E2D               	movlw	45
  3007  00183A  EC21  F00B         	call	_MFRC522_Wr
  3008                           
  3009                           ;rc522.c: 111:     MFRC522_Wr(0x2C, 0);
  3010  00183E  0E00               	movlw	0
  3011  001840  6E01               	movwf	MFRC522_Wr@value^0,c
  3012  001842  0E2C               	movlw	44
  3013  001844  EC21  F00B         	call	_MFRC522_Wr
  3014                           
  3015                           ;rc522.c: 112:     MFRC522_Wr(0x15, 0x40);
  3016  001848  0E40               	movlw	64
  3017  00184A  6E01               	movwf	MFRC522_Wr@value^0,c
  3018  00184C  0E15               	movlw	21
  3019  00184E  EC21  F00B         	call	_MFRC522_Wr
  3020                           
  3021                           ;rc522.c: 113:     MFRC522_Wr(0x11, 0x3D);
  3022  001852  0E3D               	movlw	61
  3023  001854  6E01               	movwf	MFRC522_Wr@value^0,c
  3024  001856  0E11               	movlw	17
  3025  001858  EC21  F00B         	call	_MFRC522_Wr
  3026                           
  3027                           ;rc522.c: 114:     MFRC522_AntennaOff();
  3028  00185C  EC75  F00E         	call	_MFRC522_AntennaOff	;wreg free
  3029                           
  3030                           ;rc522.c: 115:     MFRC522_AntennaOn();
  3031  001860  EC6C  F00E         	call	_MFRC522_AntennaOn	;wreg free
  3032  001864  0012               	return		;funcret
  3033  001866                     __end_of_MFRC522_Init:
  3034                           	callstack 0
  3035                           
  3036 ;; *************** function _MFRC522_Reset *****************
  3037 ;; Defined at:
  3038 ;;		line 72 in file "rc522.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3052 ;;      Params:         0       0       0       0       0       0       0       0       0
  3053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3055 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3056 ;;Total ram usage:        0 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; Hardware stack levels required when called: 1
  3059 ;; This function calls:
  3060 ;;		_MFRC522_Wr
  3061 ;; This function is called by:
  3062 ;;		_MFRC522_Init
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text20
  3067  001BE6                     __ptext20:
  3068                           	callstack 0
  3069  001BE6                     _MFRC522_Reset:
  3070                           	callstack 28
  3071  001BE6                     
  3072                           ;rc522.c: 74:     LATDbits.LD4 = 1;
  3073  001BE6  888C               	bsf	140,4,c	;volatile
  3074                           
  3075                           ;rc522.c: 75:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  3076  001BE8  D000               	nop2		;2 cycle nop
  3077  001BEA  D000               	nop2		;2 cycle nop
  3078  001BEC  D000               	nop2		;2 cycle nop
  3079                           
  3080                           ;rc522.c: 76:     LATDbits.LD4 = 0;
  3081  001BEE  988C               	bcf	140,4,c	;volatile
  3082                           
  3083                           ;rc522.c: 77:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  3084  001BF0  D000               	nop2		;2 cycle nop
  3085  001BF2  D000               	nop2		;2 cycle nop
  3086  001BF4  D000               	nop2		;2 cycle nop
  3087                           
  3088                           ;rc522.c: 78:     LATDbits.LD4 = 1;
  3089  001BF6  888C               	bsf	140,4,c	;volatile
  3090                           
  3091                           ;rc522.c: 79:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  3092  001BF8  D000               	nop2		;2 cycle nop
  3093  001BFA  D000               	nop2		;2 cycle nop
  3094  001BFC  D000               	nop2		;2 cycle nop
  3095  001BFE                     
  3096                           ;rc522.c: 80:     MFRC522_Wr(0x01, 0x0F);
  3097  001BFE  0E0F               	movlw	15
  3098  001C00  6E01               	movwf	MFRC522_Wr@value^0,c
  3099  001C02  0E01               	movlw	1
  3100  001C04  EC21  F00B         	call	_MFRC522_Wr
  3101  001C08                     
  3102                           ;rc522.c: 81:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  3103  001C08  D000               	nop2		;2 cycle nop
  3104  001C0A  D000               	nop2		;2 cycle nop
  3105  001C0C  D000               	nop2		;2 cycle nop
  3106  001C0E  0012               	return		;funcret
  3107  001C10                     __end_of_MFRC522_Reset:
  3108                           	callstack 0
  3109                           
  3110 ;; *************** function _MFRC522_AntennaOn *****************
  3111 ;; Defined at:
  3112 ;;		line 84 in file "rc522.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  stt             1    0        unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3126 ;;      Params:         0       0       0       0       0       0       0       0       0
  3127 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3129 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3130 ;;Total ram usage:        0 bytes
  3131 ;; Hardware stack levels used: 1
  3132 ;; Hardware stack levels required when called: 2
  3133 ;; This function calls:
  3134 ;;		_MFRC522_Rd
  3135 ;;		_MFRC522_Set_Bit
  3136 ;; This function is called by:
  3137 ;;		_MFRC522_Init
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text21
  3142  001CD8                     __ptext21:
  3143                           	callstack 0
  3144  001CD8                     _MFRC522_AntennaOn:
  3145                           	callstack 27
  3146  001CD8  0E14               	movlw	20
  3147  001CDA  EC6E  F009         	call	_MFRC522_Rd
  3148                           
  3149                           ;rc522.c: 88:     MFRC522_Set_Bit(0x14, 0x03);
  3150  001CDE  0E03               	movlw	3
  3151  001CE0  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  3152  001CE2  0E14               	movlw	20
  3153  001CE4  EC60  F00E         	call	_MFRC522_Set_Bit
  3154  001CE8  0012               	return		;funcret
  3155  001CEA                     __end_of_MFRC522_AntennaOn:
  3156                           	callstack 0
  3157                           
  3158 ;; *************** function _MFRC522_AntennaOff *****************
  3159 ;; Defined at:
  3160 ;;		line 91 in file "rc522.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      void 
  3167 ;; Registers used:
  3168 ;;		wreg, status,2, status,0, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3174 ;;      Params:         0       0       0       0       0       0       0       0       0
  3175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3177 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3178 ;;Total ram usage:        0 bytes
  3179 ;; Hardware stack levels used: 1
  3180 ;; Hardware stack levels required when called: 2
  3181 ;; This function calls:
  3182 ;;		_MFRC522_Clear_Bit
  3183 ;; This function is called by:
  3184 ;;		_MFRC522_Init
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text22
  3189  001CEA                     __ptext22:
  3190                           	callstack 0
  3191  001CEA                     _MFRC522_AntennaOff:
  3192                           	callstack 27
  3193  001CEA                     
  3194                           ;rc522.c: 93:     MFRC522_Clear_Bit(0x14, 0x03);
  3195  001CEA  0E03               	movlw	3
  3196  001CEC  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  3197  001CEE  0E14               	movlw	20
  3198  001CF0  EC53  F00E         	call	_MFRC522_Clear_Bit
  3199  001CF4  0012               	return		;funcret
  3200  001CF6                     __end_of_MFRC522_AntennaOff:
  3201                           	callstack 0
  3202                           
  3203 ;; *************** function _MFRC522_Halt *****************
  3204 ;; Defined at:
  3205 ;;		line 270 in file "rc522.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;		None
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  buff            4   31[COMRAM] unsigned char [4]
  3210 ;;  unLen           2   35[COMRAM] unsigned int 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3220 ;;      Params:         0       0       0       0       0       0       0       0       0
  3221 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3223 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3224 ;;Total ram usage:        6 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; Hardware stack levels required when called: 3
  3227 ;; This function calls:
  3228 ;;		_MFRC522_CRC
  3229 ;;		_MFRC522_Clear_Bit
  3230 ;;		_MFRC522_ToCard
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text23
  3237  001866                     __ptext23:
  3238                           	callstack 0
  3239  001866                     _MFRC522_Halt:
  3240                           	callstack 27
  3241  001866                     
  3242                           ;rc522.c: 272:     unsigned unLen;;rc522.c: 273:     char buff[4];;rc522.c: 274:     buf
      +                          f[0] = 0x50;
  3243  001866  0E50               	movlw	80
  3244  001868  6E20               	movwf	MFRC522_Halt@buff^0,c
  3245                           
  3246                           ;rc522.c: 275:     buff[1] = 0;
  3247  00186A  0E00               	movlw	0
  3248  00186C  6E21               	movwf	(MFRC522_Halt@buff+1)^0,c
  3249  00186E                     
  3250                           ;rc522.c: 276:     MFRC522_CRC(buff, 2, &buff[2]);
  3251  00186E  0E20               	movlw	low MFRC522_Halt@buff
  3252  001870  6E0D               	movwf	MFRC522_CRC@dataIn^0,c
  3253  001872  0E00               	movlw	high MFRC522_Halt@buff
  3254  001874  6E0E               	movwf	(MFRC522_CRC@dataIn+1)^0,c
  3255  001876  0E02               	movlw	2
  3256  001878  6E0F               	movwf	MFRC522_CRC@length^0,c
  3257  00187A  0E22               	movlw	low (MFRC522_Halt@buff+2)
  3258  00187C  6E10               	movwf	MFRC522_CRC@dataOut^0,c
  3259  00187E  0E00               	movlw	high (MFRC522_Halt@buff+2)
  3260  001880  6E11               	movwf	(MFRC522_CRC@dataOut+1)^0,c
  3261  001882  ECD1  F00A         	call	_MFRC522_CRC	;wreg free
  3262  001886                     
  3263                           ;rc522.c: 277:     MFRC522_Clear_Bit(0x08, 0x80);
  3264  001886  0E80               	movlw	128
  3265  001888  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  3266  00188A  0E08               	movlw	8
  3267  00188C  EC53  F00E         	call	_MFRC522_Clear_Bit
  3268  001890                     
  3269                           ;rc522.c: 278:     MFRC522_ToCard(0x0C, buff, 4, buff, &unLen);
  3270  001890  0E20               	movlw	low MFRC522_Halt@buff
  3271  001892  6E0D               	movwf	MFRC522_ToCard@sendData^0,c
  3272  001894  0E00               	movlw	high MFRC522_Halt@buff
  3273  001896  6E0E               	movwf	(MFRC522_ToCard@sendData+1)^0,c
  3274  001898  0E04               	movlw	4
  3275  00189A  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
  3276  00189C  0E20               	movlw	low MFRC522_Halt@buff
  3277  00189E  6E10               	movwf	MFRC522_ToCard@backData^0,c
  3278  0018A0  0E00               	movlw	high MFRC522_Halt@buff
  3279  0018A2  6E11               	movwf	(MFRC522_ToCard@backData+1)^0,c
  3280  0018A4  0E24               	movlw	low MFRC522_Halt@unLen
  3281  0018A6  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  3282  0018A8  0E00               	movlw	high MFRC522_Halt@unLen
  3283  0018AA  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  3284  0018AC  0E0C               	movlw	12
  3285  0018AE  EC5B  F005         	call	_MFRC522_ToCard
  3286  0018B2                     
  3287                           ;rc522.c: 279:     MFRC522_Clear_Bit(0x08, 0x08);
  3288  0018B2  0E08               	movlw	8
  3289  0018B4  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  3290  0018B6  0E08               	movlw	8
  3291  0018B8  EC53  F00E         	call	_MFRC522_Clear_Bit
  3292  0018BC  0012               	return		;funcret
  3293  0018BE                     __end_of_MFRC522_Halt:
  3294                           	callstack 0
  3295                           
  3296 ;; *************** function _MFRC522_ToCard *****************
  3297 ;; Defined at:
  3298 ;;		line 118 in file "rc522.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  command         1    wreg     unsigned char 
  3301 ;;  sendData        2   12[COMRAM] PTR unsigned char 
  3302 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), UID(16), TagType(1), 
  3303 ;;  sendLen         1   14[COMRAM] unsigned char 
  3304 ;;  backData        2   15[COMRAM] PTR unsigned char 
  3305 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), UID(16), TagType(1), 
  3306 ;;  backLen         2   17[COMRAM] PTR unsigned int 
  3307 ;;		 -> MFRC522_AntiColl@unLen(2), MFRC522_Halt@unLen(2), MFRC522_SelectTag@recvBits(2), MFRC522_Request@backBits(2), 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  command         1   27[COMRAM] unsigned char 
  3310 ;;  i               2   28[COMRAM] unsigned int 
  3311 ;;  n               1   30[COMRAM] unsigned char 
  3312 ;;  irqEn           1   26[COMRAM] unsigned char 
  3313 ;;  lastBits        1   25[COMRAM] unsigned char 
  3314 ;;  _status         1   24[COMRAM] unsigned char 
  3315 ;;  waitIRq         1   23[COMRAM] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      unsigned char 
  3318 ;; Registers used:
  3319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3325 ;;      Params:         7       0       0       0       0       0       0       0       0
  3326 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3327 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3328 ;;      Totals:        19       0       0       0       0       0       0       0       0
  3329 ;;Total ram usage:       19 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; Hardware stack levels required when called: 2
  3332 ;; This function calls:
  3333 ;;		_MFRC522_Clear_Bit
  3334 ;;		_MFRC522_Rd
  3335 ;;		_MFRC522_Set_Bit
  3336 ;;		_MFRC522_Wr
  3337 ;; This function is called by:
  3338 ;;		_MFRC522_Request
  3339 ;;		_MFRC522_Halt
  3340 ;;		_MFRC522_AntiColl
  3341 ;;		_MFRC522_SelectTag
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           	psect	text24
  3346  000AB6                     __ptext24:
  3347                           	callstack 0
  3348  000AB6                     _MFRC522_ToCard:
  3349                           	callstack 26
  3350                           
  3351                           ;incstack = 0
  3352                           ;MFRC522_ToCard@command stored from wreg
  3353  000AB6  6E1C               	movwf	MFRC522_ToCard@command^0,c
  3354  000AB8                     
  3355                           ;rc522.c: 118: char MFRC522_ToCard(char command, char *sendData, char sendLen, char *bac
      +                          kData, unsigned *backLen);rc522.c: 119: {;rc522.c: 120:     char _status = 2;
  3356  000AB8  0E02               	movlw	2
  3357  000ABA  6E19               	movwf	MFRC522_ToCard@_status^0,c
  3358                           
  3359                           ;rc522.c: 121:     char irqEn = 0x00;
  3360  000ABC  0E00               	movlw	0
  3361  000ABE  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
  3362                           
  3363                           ;rc522.c: 122:     char waitIRq = 0x00;
  3364  000AC0  0E00               	movlw	0
  3365  000AC2  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
  3366                           
  3367                           ;rc522.c: 123:     char lastBits;;rc522.c: 124:     char n;;rc522.c: 125:     unsigned i
      +                          ;;rc522.c: 127:     switch(command)
  3368  000AC4  EF70  F005         	goto	l2121
  3369  000AC8                     l2115:
  3370                           
  3371                           ;rc522.c: 130:             irqEn = 0x12;
  3372  000AC8  0E12               	movlw	18
  3373  000ACA  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
  3374                           
  3375                           ;rc522.c: 131:             waitIRq = 0x10;
  3376  000ACC  0E10               	movlw	16
  3377  000ACE  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
  3378                           
  3379                           ;rc522.c: 132:             break;
  3380  000AD0  EF85  F005         	goto	l2123
  3381  000AD4                     l2117:
  3382                           
  3383                           ;rc522.c: 135:             irqEn = 0x77;
  3384  000AD4  0E77               	movlw	119
  3385  000AD6  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
  3386                           
  3387                           ;rc522.c: 136:             waitIRq = 0x30;
  3388  000AD8  0E30               	movlw	48
  3389  000ADA  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
  3390                           
  3391                           ;rc522.c: 137:             break;
  3392  000ADC  EF85  F005         	goto	l2123
  3393  000AE0                     l2121:
  3394  000AE0  501C               	movf	MFRC522_ToCard@command^0,w,c
  3395  000AE2  6E14               	movwf	??_MFRC522_ToCard^0,c
  3396  000AE4  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
  3397                           
  3398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3399                           ; Switch size 1, requested type "simple"
  3400                           ; Number of cases is 1, Range of values is 0 to 0
  3401                           ; switch strategies available:
  3402                           ; Name         Instructions Cycles
  3403                           ; simple_byte            4     3 (average)
  3404                           ;	Chosen strategy is simple_byte
  3405  000AE6  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  3406  000AE8  0A00               	xorlw	0	; case 0
  3407  000AEA  B4D8               	btfsc	status,2,c
  3408  000AEC  EF7A  F005         	goto	l2607
  3409  000AF0  EF85  F005         	goto	l2123
  3410  000AF4                     l2607:
  3411                           
  3412                           ; Switch size 1, requested type "simple"
  3413                           ; Number of cases is 2, Range of values is 12 to 14
  3414                           ; switch strategies available:
  3415                           ; Name         Instructions Cycles
  3416                           ; simple_byte            7     4 (average)
  3417                           ;	Chosen strategy is simple_byte
  3418  000AF4  5014               	movf	??_MFRC522_ToCard^0,w,c
  3419  000AF6  0A0C               	xorlw	12	; case 12
  3420  000AF8  B4D8               	btfsc	status,2,c
  3421  000AFA  EF6A  F005         	goto	l2117
  3422  000AFE  0A02               	xorlw	2	; case 14
  3423  000B00  B4D8               	btfsc	status,2,c
  3424  000B02  EF64  F005         	goto	l2115
  3425  000B06  EF85  F005         	goto	l2123
  3426  000B0A                     l2123:
  3427                           
  3428                           ;rc522.c: 142:     MFRC522_Wr(0x02, irqEn | 0x80);
  3429  000B0A  501B               	movf	MFRC522_ToCard@irqEn^0,w,c
  3430  000B0C  0980               	iorlw	128
  3431  000B0E  6E01               	movwf	MFRC522_Wr@value^0,c
  3432  000B10  0E02               	movlw	2
  3433  000B12  EC21  F00B         	call	_MFRC522_Wr
  3434                           
  3435                           ;rc522.c: 143:     MFRC522_Clear_Bit(0x04, 0x80);
  3436  000B16  0E80               	movlw	128
  3437  000B18  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  3438  000B1A  0E04               	movlw	4
  3439  000B1C  EC53  F00E         	call	_MFRC522_Clear_Bit
  3440                           
  3441                           ;rc522.c: 144:     MFRC522_Set_Bit(0x0A, 0x80);
  3442  000B20  0E80               	movlw	128
  3443  000B22  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  3444  000B24  0E0A               	movlw	10
  3445  000B26  EC60  F00E         	call	_MFRC522_Set_Bit
  3446                           
  3447                           ;rc522.c: 145:     MFRC522_Wr(0x01, 0x00);
  3448  000B2A  0E00               	movlw	0
  3449  000B2C  6E01               	movwf	MFRC522_Wr@value^0,c
  3450  000B2E  0E01               	movlw	1
  3451  000B30  EC21  F00B         	call	_MFRC522_Wr
  3452  000B34                     
  3453                           ;rc522.c: 147:     for(i=0; i<sendLen; i++)
  3454  000B34  0E00               	movlw	0
  3455  000B36  6E1E               	movwf	(MFRC522_ToCard@i+1)^0,c
  3456  000B38  0E00               	movlw	0
  3457  000B3A  6E1D               	movwf	MFRC522_ToCard@i^0,c
  3458  000B3C  EFAD  F005         	goto	l2131
  3459  000B40                     l2127:
  3460                           
  3461                           ;rc522.c: 148:     {;rc522.c: 149:         MFRC522_Wr(0x09, sendData[i]);
  3462  000B40  501D               	movf	MFRC522_ToCard@i^0,w,c
  3463  000B42  240D               	addwf	MFRC522_ToCard@sendData^0,w,c
  3464  000B44  6ED9               	movwf	fsr2l,c
  3465  000B46  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
  3466  000B48  200E               	addwfc	(MFRC522_ToCard@sendData+1)^0,w,c
  3467  000B4A  6EDA               	movwf	fsr2h,c
  3468  000B4C  50DF               	movf	indf2,w,c
  3469  000B4E  6E01               	movwf	MFRC522_Wr@value^0,c
  3470  000B50  0E09               	movlw	9
  3471  000B52  EC21  F00B         	call	_MFRC522_Wr
  3472  000B56                     
  3473                           ;rc522.c: 150:     }
  3474  000B56  4A1D               	infsnz	MFRC522_ToCard@i^0,f,c
  3475  000B58  2A1E               	incf	(MFRC522_ToCard@i+1)^0,f,c
  3476  000B5A                     l2131:
  3477  000B5A  500F               	movf	MFRC522_ToCard@sendLen^0,w,c
  3478  000B5C  6E14               	movwf	??_MFRC522_ToCard^0,c
  3479  000B5E  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
  3480  000B60  5014               	movf	??_MFRC522_ToCard^0,w,c
  3481  000B62  5C1D               	subwf	MFRC522_ToCard@i^0,w,c
  3482  000B64  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  3483  000B66  581E               	subwfb	(MFRC522_ToCard@i+1)^0,w,c
  3484  000B68  A0D8               	btfss	status,0,c
  3485  000B6A  EFB9  F005         	goto	u1511
  3486  000B6E  EFBB  F005         	goto	u1510
  3487  000B72                     u1511:
  3488  000B72  EFA0  F005         	goto	l2127
  3489  000B76                     u1510:
  3490  000B76                     
  3491                           ;rc522.c: 151:     MFRC522_Wr(0x01, command);
  3492  000B76  C01C  F001         	movff	MFRC522_ToCard@command,MFRC522_Wr@value
  3493  000B7A  0E01               	movlw	1
  3494  000B7C  EC21  F00B         	call	_MFRC522_Wr
  3495  000B80                     
  3496                           ;rc522.c: 152:     if(command == 0x0C)
  3497  000B80  0E0C               	movlw	12
  3498  000B82  181C               	xorwf	MFRC522_ToCard@command^0,w,c
  3499  000B84  A4D8               	btfss	status,2,c
  3500  000B86  EFC7  F005         	goto	u1521
  3501  000B8A  EFC9  F005         	goto	u1520
  3502  000B8E                     u1521:
  3503  000B8E  EFCE  F005         	goto	l2139
  3504  000B92                     u1520:
  3505  000B92                     
  3506                           ;rc522.c: 153:     {;rc522.c: 154:         MFRC522_Set_Bit(0x0D, 0x80);
  3507  000B92  0E80               	movlw	128
  3508  000B94  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  3509  000B96  0E0D               	movlw	13
  3510  000B98  EC60  F00E         	call	_MFRC522_Set_Bit
  3511  000B9C                     l2139:
  3512                           
  3513                           ;rc522.c: 156:     i = 0xFFFF;
  3514  000B9C  681D               	setf	MFRC522_ToCard@i^0,c
  3515  000B9E  681E               	setf	(MFRC522_ToCard@i+1)^0,c
  3516  000BA0                     l221:
  3517                           
  3518                           ;rc522.c: 158:     {;rc522.c: 159:         n = MFRC522_Rd(0x04);
  3519  000BA0  0E04               	movlw	4
  3520  000BA2  EC6E  F009         	call	_MFRC522_Rd
  3521  000BA6  6E1F               	movwf	MFRC522_ToCard@n^0,c
  3522  000BA8                     
  3523                           ;rc522.c: 160:         i--;
  3524  000BA8  061D               	decf	MFRC522_ToCard@i^0,f,c
  3525  000BAA  A0D8               	btfss	status,0,c
  3526  000BAC  061E               	decf	(MFRC522_ToCard@i+1)^0,f,c
  3527  000BAE                     
  3528                           ;rc522.c: 161:     }while(i && !(n & 0x01) && !(n & waitIRq));
  3529  000BAE  501D               	movf	MFRC522_ToCard@i^0,w,c
  3530  000BB0  101E               	iorwf	(MFRC522_ToCard@i+1)^0,w,c
  3531  000BB2  B4D8               	btfsc	status,2,c
  3532  000BB4  EFDE  F005         	goto	u1531
  3533  000BB8  EFE0  F005         	goto	u1530
  3534  000BBC                     u1531:
  3535  000BBC  EFF1  F005         	goto	l2149
  3536  000BC0                     u1530:
  3537  000BC0  B01F               	btfsc	MFRC522_ToCard@n^0,0,c
  3538  000BC2  EFE5  F005         	goto	u1541
  3539  000BC6  EFE7  F005         	goto	u1540
  3540  000BCA                     u1541:
  3541  000BCA  EFF1  F005         	goto	l2149
  3542  000BCE                     u1540:
  3543  000BCE  501F               	movf	MFRC522_ToCard@n^0,w,c
  3544  000BD0  1418               	andwf	MFRC522_ToCard@waitIRq^0,w,c
  3545  000BD2  0900               	iorlw	0
  3546  000BD4  B4D8               	btfsc	status,2,c
  3547  000BD6  EFEF  F005         	goto	u1551
  3548  000BDA  EFF1  F005         	goto	u1550
  3549  000BDE                     u1551:
  3550  000BDE  EFD0  F005         	goto	l221
  3551  000BE2                     u1550:
  3552  000BE2                     l2149:
  3553                           
  3554                           ;rc522.c: 163:     MFRC522_Clear_Bit(0x0D, 0x80);
  3555  000BE2  0E80               	movlw	128
  3556  000BE4  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  3557  000BE6  0E0D               	movlw	13
  3558  000BE8  EC53  F00E         	call	_MFRC522_Clear_Bit
  3559  000BEC                     
  3560                           ;rc522.c: 164:     if(i != 0)
  3561  000BEC  501D               	movf	MFRC522_ToCard@i^0,w,c
  3562  000BEE  101E               	iorwf	(MFRC522_ToCard@i+1)^0,w,c
  3563  000BF0  B4D8               	btfsc	status,2,c
  3564  000BF2  EFFD  F005         	goto	u1561
  3565  000BF6  EFFF  F005         	goto	u1560
  3566  000BFA                     u1561:
  3567  000BFA  EFA0  F006         	goto	l225
  3568  000BFE                     u1560:
  3569  000BFE                     
  3570                           ;rc522.c: 165:     {;rc522.c: 166:         if(!(MFRC522_Rd(0x06) & 0x1B))
  3571  000BFE  0E06               	movlw	6
  3572  000C00  EC6E  F009         	call	_MFRC522_Rd
  3573  000C04  6E14               	movwf	??_MFRC522_ToCard^0,c
  3574  000C06  0E1B               	movlw	27
  3575  000C08  1614               	andwf	??_MFRC522_ToCard^0,f,c
  3576  000C0A  A4D8               	btfss	status,2,c
  3577  000C0C  EF0A  F006         	goto	u1571
  3578  000C10  EF0C  F006         	goto	u1570
  3579  000C14                     u1571:
  3580  000C14  EF9E  F006         	goto	l2187
  3581  000C18                     u1570:
  3582  000C18                     
  3583                           ;rc522.c: 167:         {;rc522.c: 168:             _status = 0;
  3584  000C18  0E00               	movlw	0
  3585  000C1A  6E19               	movwf	MFRC522_ToCard@_status^0,c
  3586  000C1C                     
  3587                           ;rc522.c: 169:             if(n & irqEn & 0x01)
  3588  000C1C  501F               	movf	MFRC522_ToCard@n^0,w,c
  3589  000C1E  141B               	andwf	MFRC522_ToCard@irqEn^0,w,c
  3590  000C20  6E14               	movwf	??_MFRC522_ToCard^0,c
  3591  000C22  A014               	btfss	??_MFRC522_ToCard^0,0,c
  3592  000C24  EF16  F006         	goto	u1581
  3593  000C28  EF18  F006         	goto	u1580
  3594  000C2C                     u1581:
  3595  000C2C  EF1A  F006         	goto	l2161
  3596  000C30                     u1580:
  3597  000C30                     
  3598                           ;rc522.c: 170:             {;rc522.c: 171:                 _status = 1;
  3599  000C30  0E01               	movlw	1
  3600  000C32  6E19               	movwf	MFRC522_ToCard@_status^0,c
  3601  000C34                     l2161:
  3602                           
  3603                           ;rc522.c: 173:             if(command == 0x0C)
  3604  000C34  0E0C               	movlw	12
  3605  000C36  181C               	xorwf	MFRC522_ToCard@command^0,w,c
  3606  000C38  A4D8               	btfss	status,2,c
  3607  000C3A  EF21  F006         	goto	u1591
  3608  000C3E  EF23  F006         	goto	u1590
  3609  000C42                     u1591:
  3610  000C42  EFA0  F006         	goto	l225
  3611  000C46                     u1590:
  3612  000C46                     
  3613                           ;rc522.c: 174:             {;rc522.c: 175:                 n = MFRC522_Rd(0x0A);
  3614  000C46  0E0A               	movlw	10
  3615  000C48  EC6E  F009         	call	_MFRC522_Rd
  3616  000C4C  6E1F               	movwf	MFRC522_ToCard@n^0,c
  3617                           
  3618                           ;rc522.c: 176:                 lastBits = MFRC522_Rd(0x0C) & 0x07;
  3619  000C4E  0E0C               	movlw	12
  3620  000C50  EC6E  F009         	call	_MFRC522_Rd
  3621  000C54  0B07               	andlw	7
  3622  000C56  6E1A               	movwf	MFRC522_ToCard@lastBits^0,c
  3623  000C58                     
  3624                           ;rc522.c: 177:                 if(lastBits)
  3625  000C58  501A               	movf	MFRC522_ToCard@lastBits^0,w,c
  3626  000C5A  B4D8               	btfsc	status,2,c
  3627  000C5C  EF32  F006         	goto	u1601
  3628  000C60  EF34  F006         	goto	u1600
  3629  000C64                     u1601:
  3630  000C64  EF56  F006         	goto	l2169
  3631  000C68                     u1600:
  3632  000C68                     
  3633                           ;rc522.c: 178:                 {;rc522.c: 179:                     *backLen = (n-1) * 8 
      +                          + lastBits;
  3634  000C68  0EF8               	movlw	248
  3635  000C6A  6E14               	movwf	??_MFRC522_ToCard^0,c
  3636  000C6C  0EFF               	movlw	255
  3637  000C6E  6E15               	movwf	(??_MFRC522_ToCard+1)^0,c
  3638  000C70  501A               	movf	MFRC522_ToCard@lastBits^0,w,c
  3639  000C72  C01F  F016         	movff	MFRC522_ToCard@n,??_MFRC522_ToCard+2
  3640  000C76  6A17               	clrf	(??_MFRC522_ToCard+3)^0,c
  3641  000C78  90D8               	bcf	status,0,c
  3642  000C7A  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  3643  000C7C  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  3644  000C7E  90D8               	bcf	status,0,c
  3645  000C80  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  3646  000C82  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  3647  000C84  90D8               	bcf	status,0,c
  3648  000C86  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  3649  000C88  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  3650  000C8A  2616               	addwf	(??_MFRC522_ToCard+2)^0,f,c
  3651  000C8C  0E00               	movlw	0
  3652  000C8E  2217               	addwfc	(??_MFRC522_ToCard+3)^0,f,c
  3653  000C90  5014               	movf	??_MFRC522_ToCard^0,w,c
  3654  000C92  2616               	addwf	(??_MFRC522_ToCard+2)^0,f,c
  3655  000C94  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  3656  000C96  2217               	addwfc	(??_MFRC522_ToCard+3)^0,f,c
  3657  000C98  C012  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  3658  000C9C  C013  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  3659  000CA0  C016  FFDE         	movff	??_MFRC522_ToCard+2,postinc2
  3660  000CA4  C017  FFDD         	movff	??_MFRC522_ToCard+3,postdec2
  3661                           
  3662                           ;rc522.c: 180:                 }
  3663  000CA8  EF60  F006         	goto	l2171
  3664  000CAC                     l2169:
  3665                           
  3666                           ;rc522.c: 182:                 {;rc522.c: 183:                     *backLen = n * 8;
  3667  000CAC  501F               	movf	MFRC522_ToCard@n^0,w,c
  3668  000CAE  0D08               	mullw	8
  3669  000CB0  C012  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  3670  000CB4  C013  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  3671  000CB8  CFF3 FFDE          	movff	prodl,postinc2
  3672  000CBC  CFF4 FFDD          	movff	prodh,postdec2
  3673  000CC0                     l2171:
  3674                           
  3675                           ;rc522.c: 185:                 if(n == 0)
  3676  000CC0  501F               	movf	MFRC522_ToCard@n^0,w,c
  3677  000CC2  A4D8               	btfss	status,2,c
  3678  000CC4  EF66  F006         	goto	u1611
  3679  000CC8  EF68  F006         	goto	u1610
  3680  000CCC                     u1611:
  3681  000CCC  EF6A  F006         	goto	l2175
  3682  000CD0                     u1610:
  3683  000CD0                     
  3684                           ;rc522.c: 186:                 {;rc522.c: 187:                     n = 1;
  3685  000CD0  0E01               	movlw	1
  3686  000CD2  6E1F               	movwf	MFRC522_ToCard@n^0,c
  3687  000CD4                     l2175:
  3688                           
  3689                           ;rc522.c: 189:                 if(n > 16)
  3690  000CD4  0E10               	movlw	16
  3691  000CD6  641F               	cpfsgt	MFRC522_ToCard@n^0,c
  3692  000CD8  EF70  F006         	goto	u1621
  3693  000CDC  EF72  F006         	goto	u1620
  3694  000CE0                     u1621:
  3695  000CE0  EF74  F006         	goto	l232
  3696  000CE4                     u1620:
  3697  000CE4                     
  3698                           ;rc522.c: 190:                 {;rc522.c: 191:                     n = 16;
  3699  000CE4  0E10               	movlw	16
  3700  000CE6  6E1F               	movwf	MFRC522_ToCard@n^0,c
  3701  000CE8                     l232:
  3702                           
  3703                           ;rc522.c: 193:                 for(i=0; i<n; i++)
  3704  000CE8  0E00               	movlw	0
  3705  000CEA  6E1E               	movwf	(MFRC522_ToCard@i+1)^0,c
  3706  000CEC  0E00               	movlw	0
  3707  000CEE  6E1D               	movwf	MFRC522_ToCard@i^0,c
  3708  000CF0  EF86  F006         	goto	l2183
  3709  000CF4                     l2179:
  3710                           
  3711                           ;rc522.c: 194:                 {;rc522.c: 195:                     backData[i] = MFRC522
      +                          _Rd(0x09);
  3712  000CF4  501D               	movf	MFRC522_ToCard@i^0,w,c
  3713  000CF6  2410               	addwf	MFRC522_ToCard@backData^0,w,c
  3714  000CF8  6ED9               	movwf	fsr2l,c
  3715  000CFA  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
  3716  000CFC  2011               	addwfc	(MFRC522_ToCard@backData+1)^0,w,c
  3717  000CFE  6EDA               	movwf	fsr2h,c
  3718  000D00  0E09               	movlw	9
  3719  000D02  EC6E  F009         	call	_MFRC522_Rd
  3720  000D06  6EDF               	movwf	indf2,c
  3721  000D08                     
  3722                           ;rc522.c: 196:                 }
  3723  000D08  4A1D               	infsnz	MFRC522_ToCard@i^0,f,c
  3724  000D0A  2A1E               	incf	(MFRC522_ToCard@i+1)^0,f,c
  3725  000D0C                     l2183:
  3726  000D0C  501F               	movf	MFRC522_ToCard@n^0,w,c
  3727  000D0E  6E14               	movwf	??_MFRC522_ToCard^0,c
  3728  000D10  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
  3729  000D12  5014               	movf	??_MFRC522_ToCard^0,w,c
  3730  000D14  5C1D               	subwf	MFRC522_ToCard@i^0,w,c
  3731  000D16  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  3732  000D18  581E               	subwfb	(MFRC522_ToCard@i+1)^0,w,c
  3733  000D1A  A0D8               	btfss	status,0,c
  3734  000D1C  EF92  F006         	goto	u1631
  3735  000D20  EF94  F006         	goto	u1630
  3736  000D24                     u1631:
  3737  000D24  EF7A  F006         	goto	l2179
  3738  000D28                     u1630:
  3739  000D28                     
  3740                           ;rc522.c: 197:                 backData[i] = 0;
  3741  000D28  501D               	movf	MFRC522_ToCard@i^0,w,c
  3742  000D2A  2410               	addwf	MFRC522_ToCard@backData^0,w,c
  3743  000D2C  6ED9               	movwf	fsr2l,c
  3744  000D2E  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
  3745  000D30  2011               	addwfc	(MFRC522_ToCard@backData+1)^0,w,c
  3746  000D32  6EDA               	movwf	fsr2h,c
  3747  000D34  0E00               	movlw	0
  3748  000D36  6EDF               	movwf	indf2,c
  3749  000D38  EFA0  F006         	goto	l225
  3750  000D3C                     l2187:
  3751                           
  3752                           ;rc522.c: 201:         {;rc522.c: 202:             _status = 2;
  3753  000D3C  0E02               	movlw	2
  3754  000D3E  6E19               	movwf	MFRC522_ToCard@_status^0,c
  3755  000D40                     l225:
  3756                           
  3757                           ;rc522.c: 205:     return _status;
  3758  000D40  5019               	movf	MFRC522_ToCard@_status^0,w,c
  3759  000D42  0012               	return		;funcret
  3760  000D44                     __end_of_MFRC522_ToCard:
  3761                           	callstack 0
  3762                           
  3763 ;; *************** function _MFRC522_CRC *****************
  3764 ;; Defined at:
  3765 ;;		line 222 in file "rc522.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  dataIn          2   12[COMRAM] PTR unsigned char 
  3768 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  3769 ;;  length          1   14[COMRAM] unsigned char 
  3770 ;;  dataOut         2   15[COMRAM] PTR unsigned char 
  3771 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  i               1   18[COMRAM] unsigned char 
  3774 ;;  n               1   17[COMRAM] unsigned char 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      void 
  3777 ;; Registers used:
  3778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3784 ;;      Params:         5       0       0       0       0       0       0       0       0
  3785 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3786 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3787 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3788 ;;Total ram usage:        7 bytes
  3789 ;; Hardware stack levels used: 1
  3790 ;; Hardware stack levels required when called: 2
  3791 ;; This function calls:
  3792 ;;		_MFRC522_Clear_Bit
  3793 ;;		_MFRC522_Rd
  3794 ;;		_MFRC522_Set_Bit
  3795 ;;		_MFRC522_Wr
  3796 ;; This function is called by:
  3797 ;;		_MFRC522_Halt
  3798 ;;		_MFRC522_SelectTag
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text25
  3803  0015A2                     __ptext25:
  3804                           	callstack 0
  3805  0015A2                     _MFRC522_CRC:
  3806                           	callstack 27
  3807  0015A2                     
  3808                           ;rc522.c: 222: void MFRC522_CRC(char *dataIn, char length, char *dataOut);rc522.c: 223: 
      +                          {;rc522.c: 224:     char i, n;;rc522.c: 225:     MFRC522_Clear_Bit(0x05, 0x04);
  3809  0015A2  0E04               	movlw	4
  3810  0015A4  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  3811  0015A6  0E05               	movlw	5
  3812  0015A8  EC53  F00E         	call	_MFRC522_Clear_Bit
  3813                           
  3814                           ;rc522.c: 226:     MFRC522_Set_Bit(0x0A, 0x80);
  3815  0015AC  0E80               	movlw	128
  3816  0015AE  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  3817  0015B0  0E0A               	movlw	10
  3818  0015B2  EC60  F00E         	call	_MFRC522_Set_Bit
  3819  0015B6                     
  3820                           ;rc522.c: 227:     for(i=0; i<length; i++)
  3821  0015B6  0E00               	movlw	0
  3822  0015B8  6E13               	movwf	MFRC522_CRC@i^0,c
  3823  0015BA  EFEB  F00A         	goto	l2285
  3824  0015BE                     l2279:
  3825                           
  3826                           ;rc522.c: 228:     {;rc522.c: 229:         MFRC522_Wr(0x09, *dataIn++);
  3827  0015BE  C00D  FFD9         	movff	MFRC522_CRC@dataIn,fsr2l
  3828  0015C2  C00E  FFDA         	movff	MFRC522_CRC@dataIn+1,fsr2h
  3829  0015C6  50DF               	movf	indf2,w,c
  3830  0015C8  6E01               	movwf	MFRC522_Wr@value^0,c
  3831  0015CA  0E09               	movlw	9
  3832  0015CC  EC21  F00B         	call	_MFRC522_Wr
  3833  0015D0  4A0D               	infsnz	MFRC522_CRC@dataIn^0,f,c
  3834  0015D2  2A0E               	incf	(MFRC522_CRC@dataIn+1)^0,f,c
  3835  0015D4                     
  3836                           ;rc522.c: 230:     }
  3837  0015D4  2A13               	incf	MFRC522_CRC@i^0,f,c
  3838  0015D6                     l2285:
  3839  0015D6  500F               	movf	MFRC522_CRC@length^0,w,c
  3840  0015D8  5C13               	subwf	MFRC522_CRC@i^0,w,c
  3841  0015DA  A0D8               	btfss	status,0,c
  3842  0015DC  EFF2  F00A         	goto	u1721
  3843  0015E0  EFF4  F00A         	goto	u1720
  3844  0015E4                     u1721:
  3845  0015E4  EFDF  F00A         	goto	l2279
  3846  0015E8                     u1720:
  3847  0015E8                     
  3848                           ;rc522.c: 231:     MFRC522_Wr(0x01, 0x03);
  3849  0015E8  0E03               	movlw	3
  3850  0015EA  6E01               	movwf	MFRC522_Wr@value^0,c
  3851  0015EC  0E01               	movlw	1
  3852  0015EE  EC21  F00B         	call	_MFRC522_Wr
  3853  0015F2                     
  3854                           ;rc522.c: 232:     i = 0xFF;
  3855  0015F2  6813               	setf	MFRC522_CRC@i^0,c
  3856  0015F4                     l249:
  3857                           
  3858                           ;rc522.c: 234:     {;rc522.c: 235:         n = MFRC522_Rd( 0x05 );
  3859  0015F4  0E05               	movlw	5
  3860  0015F6  EC6E  F009         	call	_MFRC522_Rd
  3861  0015FA  6E12               	movwf	MFRC522_CRC@n^0,c
  3862  0015FC                     
  3863                           ;rc522.c: 236:         i--;
  3864  0015FC  0613               	decf	MFRC522_CRC@i^0,f,c
  3865  0015FE                     
  3866                           ;rc522.c: 237:     }
  3867  0015FE  5013               	movf	MFRC522_CRC@i^0,w,c
  3868  001600  B4D8               	btfsc	status,2,c
  3869  001602  EF05  F00B         	goto	u1731
  3870  001606  EF07  F00B         	goto	u1730
  3871  00160A                     u1731:
  3872  00160A  EF0E  F00B         	goto	l2297
  3873  00160E                     u1730:
  3874  00160E  A412               	btfss	MFRC522_CRC@n^0,2,c
  3875  001610  EF0C  F00B         	goto	u1741
  3876  001614  EF0E  F00B         	goto	u1740
  3877  001618                     u1741:
  3878  001618  EFFA  F00A         	goto	l249
  3879  00161C                     u1740:
  3880  00161C                     l2297:
  3881                           
  3882                           ;rc522.c: 239:     dataOut[0] = MFRC522_Rd(0x22);
  3883  00161C  0E22               	movlw	34
  3884  00161E  EC6E  F009         	call	_MFRC522_Rd
  3885  001622  C010  FFD9         	movff	MFRC522_CRC@dataOut,fsr2l
  3886  001626  C011  FFDA         	movff	MFRC522_CRC@dataOut+1,fsr2h
  3887  00162A  6EDF               	movwf	indf2,c
  3888                           
  3889                           ;rc522.c: 240:     dataOut[1] = MFRC522_Rd(0x21);
  3890  00162C  EE20 F001          	lfsr	2,1
  3891  001630  5010               	movf	MFRC522_CRC@dataOut^0,w,c
  3892  001632  26D9               	addwf	fsr2l,f,c
  3893  001634  5011               	movf	(MFRC522_CRC@dataOut+1)^0,w,c
  3894  001636  22DA               	addwfc	fsr2h,f,c
  3895  001638  0E21               	movlw	33
  3896  00163A  EC6E  F009         	call	_MFRC522_Rd
  3897  00163E  6EDF               	movwf	indf2,c
  3898  001640  0012               	return		;funcret
  3899  001642                     __end_of_MFRC522_CRC:
  3900                           	callstack 0
  3901                           
  3902 ;; *************** function _MFRC522_Set_Bit *****************
  3903 ;; Defined at:
  3904 ;;		line 65 in file "rc522.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  addr            1    wreg     unsigned char 
  3907 ;;  mask            1    9[COMRAM] unsigned char 
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;  addr            1   11[COMRAM] unsigned char 
  3910 ;;  tmp             1   10[COMRAM] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3920 ;;      Params:         1       0       0       0       0       0       0       0       0
  3921 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3922 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3923 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3924 ;;Total ram usage:        3 bytes
  3925 ;; Hardware stack levels used: 1
  3926 ;; Hardware stack levels required when called: 1
  3927 ;; This function calls:
  3928 ;;		_MFRC522_Rd
  3929 ;;		_MFRC522_Wr
  3930 ;; This function is called by:
  3931 ;;		_MFRC522_AntennaOn
  3932 ;;		_MFRC522_ToCard
  3933 ;;		_MFRC522_CRC
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text26
  3938  001CC0                     __ptext26:
  3939                           	callstack 0
  3940  001CC0                     _MFRC522_Set_Bit:
  3941                           	callstack 26
  3942                           
  3943                           ;incstack = 0
  3944                           ;MFRC522_Set_Bit@addr stored from wreg
  3945  001CC0  6E0C               	movwf	MFRC522_Set_Bit@addr^0,c
  3946  001CC2                     
  3947                           ;rc522.c: 68:     tmp = MFRC522_Rd(addr);
  3948  001CC2  500C               	movf	MFRC522_Set_Bit@addr^0,w,c
  3949  001CC4  EC6E  F009         	call	_MFRC522_Rd
  3950  001CC8  6E0B               	movwf	MFRC522_Set_Bit@tmp^0,c
  3951  001CCA                     
  3952                           ;rc522.c: 69:     MFRC522_Wr(addr, tmp | mask);
  3953  001CCA  500B               	movf	MFRC522_Set_Bit@tmp^0,w,c
  3954  001CCC  100A               	iorwf	MFRC522_Set_Bit@mask^0,w,c
  3955  001CCE  6E01               	movwf	MFRC522_Wr@value^0,c
  3956  001CD0  500C               	movf	MFRC522_Set_Bit@addr^0,w,c
  3957  001CD2  EC21  F00B         	call	_MFRC522_Wr
  3958  001CD6  0012               	return		;funcret
  3959  001CD8                     __end_of_MFRC522_Set_Bit:
  3960                           	callstack 0
  3961                           
  3962 ;; *************** function _MFRC522_Clear_Bit *****************
  3963 ;; Defined at:
  3964 ;;		line 58 in file "rc522.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;  addr            1    wreg     unsigned char 
  3967 ;;  mask            1    9[COMRAM] unsigned char 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;  addr            1   11[COMRAM] unsigned char 
  3970 ;;  tmp             1   10[COMRAM] unsigned char 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		wreg, status,2, status,0, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3980 ;;      Params:         1       0       0       0       0       0       0       0       0
  3981 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3982 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3983 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3984 ;;Total ram usage:        3 bytes
  3985 ;; Hardware stack levels used: 1
  3986 ;; Hardware stack levels required when called: 1
  3987 ;; This function calls:
  3988 ;;		_MFRC522_Rd
  3989 ;;		_MFRC522_Wr
  3990 ;; This function is called by:
  3991 ;;		_MFRC522_AntennaOff
  3992 ;;		_MFRC522_ToCard
  3993 ;;		_MFRC522_CRC
  3994 ;;		_MFRC522_Halt
  3995 ;;		_MFRC522_AntiColl
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text27
  4000  001CA6                     __ptext27:
  4001                           	callstack 0
  4002  001CA6                     _MFRC522_Clear_Bit:
  4003                           	callstack 26
  4004                           
  4005                           ;incstack = 0
  4006                           ;MFRC522_Clear_Bit@addr stored from wreg
  4007  001CA6  6E0C               	movwf	MFRC522_Clear_Bit@addr^0,c
  4008  001CA8                     
  4009                           ;rc522.c: 61:     tmp = MFRC522_Rd(addr) ;
  4010  001CA8  500C               	movf	MFRC522_Clear_Bit@addr^0,w,c
  4011  001CAA  EC6E  F009         	call	_MFRC522_Rd
  4012  001CAE  6E0B               	movwf	MFRC522_Clear_Bit@tmp^0,c
  4013  001CB0                     
  4014                           ;rc522.c: 62:     MFRC522_Wr(addr, tmp&~mask);
  4015  001CB0  500A               	movf	MFRC522_Clear_Bit@mask^0,w,c
  4016  001CB2  0AFF               	xorlw	255
  4017  001CB4  140B               	andwf	MFRC522_Clear_Bit@tmp^0,w,c
  4018  001CB6  6E01               	movwf	MFRC522_Wr@value^0,c
  4019  001CB8  500C               	movf	MFRC522_Clear_Bit@addr^0,w,c
  4020  001CBA  EC21  F00B         	call	_MFRC522_Wr
  4021  001CBE  0012               	return		;funcret
  4022  001CC0                     __end_of_MFRC522_Clear_Bit:
  4023                           	callstack 0
  4024                           
  4025 ;; *************** function _MFRC522_Wr *****************
  4026 ;; Defined at:
  4027 ;;		line 33 in file "rc522.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;  address         1    wreg     unsigned char 
  4030 ;;  value           1    0[COMRAM] unsigned char 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  address         1    2[COMRAM] unsigned char 
  4033 ;;  i               1    4[COMRAM] unsigned char 
  4034 ;;  ucAddr          1    3[COMRAM] unsigned char 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		wreg, status,2, status,0
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4044 ;;      Params:         1       0       0       0       0       0       0       0       0
  4045 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4046 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4047 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4048 ;;Total ram usage:        5 bytes
  4049 ;; Hardware stack levels used: 1
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_MFRC522_Clear_Bit
  4054 ;;		_MFRC522_Set_Bit
  4055 ;;		_MFRC522_Reset
  4056 ;;		_MFRC522_Init
  4057 ;;		_MFRC522_ToCard
  4058 ;;		_MFRC522_Request
  4059 ;;		_MFRC522_CRC
  4060 ;;		_MFRC522_AntiColl
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text28
  4065  001642                     __ptext28:
  4066                           	callstack 0
  4067  001642                     _MFRC522_Wr:
  4068                           	callstack 28
  4069                           
  4070                           ;incstack = 0
  4071                           ;MFRC522_Wr@address stored from wreg
  4072  001642  6E03               	movwf	MFRC522_Wr@address^0,c
  4073  001644                     
  4074                           ;rc522.c: 33: void MFRC522_Wr(unsigned char address, unsigned char value);rc522.c: 34: {
      +                          ;rc522.c: 35:     unsigned char i, ucAddr;;rc522.c: 36:     LATDbits.LD1 = 0;
  4075  001644  928C               	bcf	140,1,c	;volatile
  4076                           
  4077                           ;rc522.c: 37:     LATDbits.LD0 = 0;
  4078  001646  908C               	bcf	140,0,c	;volatile
  4079  001648                     
  4080                           ;rc522.c: 38:     ucAddr = ((address << 1) & 0x7E);
  4081  001648  5003               	movf	MFRC522_Wr@address^0,w,c
  4082  00164A  2403               	addwf	MFRC522_Wr@address^0,w,c
  4083  00164C  0B7E               	andlw	126
  4084  00164E  6E04               	movwf	MFRC522_Wr@ucAddr^0,c
  4085  001650                     
  4086                           ;rc522.c: 40:     for(i=8; i>0; i--)
  4087  001650  0E08               	movlw	8
  4088  001652  6E05               	movwf	MFRC522_Wr@i^0,c
  4089  001654                     l1955:
  4090                           
  4091                           ;rc522.c: 41:     {;rc522.c: 42:         LATDbits.LD2 = ((ucAddr&0x80) == 0x80);
  4092  001654  BE04               	btfsc	MFRC522_Wr@ucAddr^0,7,c
  4093  001656  EF2F  F00B         	goto	u1231
  4094  00165A  EF33  F00B         	goto	u1230
  4095  00165E                     u1231:
  4096  00165E  6A02               	clrf	??_MFRC522_Wr^0,c
  4097  001660  2A02               	incf	??_MFRC522_Wr^0,f,c
  4098  001662  EF34  F00B         	goto	u1248
  4099  001666                     u1230:
  4100  001666  6A02               	clrf	??_MFRC522_Wr^0,c
  4101  001668                     u1248:
  4102  001668  4602               	rlncf	??_MFRC522_Wr^0,f,c
  4103  00166A  4602               	rlncf	??_MFRC522_Wr^0,f,c
  4104  00166C  508C               	movf	140,w,c	;volatile
  4105  00166E  1802               	xorwf	??_MFRC522_Wr^0,w,c
  4106  001670  0BFB               	andlw	-5
  4107  001672  1802               	xorwf	??_MFRC522_Wr^0,w,c
  4108  001674  6E8C               	movwf	140,c	;volatile
  4109  001676                     
  4110                           ;rc522.c: 43:         LATDbits.LD1 = 1;
  4111  001676  828C               	bsf	140,1,c	;volatile
  4112                           
  4113                           ;rc522.c: 44:         ucAddr <<= 1;
  4114  001678  90D8               	bcf	status,0,c
  4115  00167A  3604               	rlcf	MFRC522_Wr@ucAddr^0,f,c
  4116  00167C                     
  4117                           ;rc522.c: 45:         LATDbits.LD1 = 0;
  4118  00167C  928C               	bcf	140,1,c	;volatile
  4119  00167E                     
  4120                           ;rc522.c: 46:     }
  4121  00167E  0605               	decf	MFRC522_Wr@i^0,f,c
  4122  001680  5005               	movf	MFRC522_Wr@i^0,w,c
  4123  001682  A4D8               	btfss	status,2,c
  4124  001684  EF46  F00B         	goto	u1251
  4125  001688  EF48  F00B         	goto	u1250
  4126  00168C                     u1251:
  4127  00168C  EF2A  F00B         	goto	l1955
  4128  001690                     u1250:
  4129  001690                     
  4130                           ;rc522.c: 47:     for(i=8; i>0; i--)
  4131  001690  0E08               	movlw	8
  4132  001692  6E05               	movwf	MFRC522_Wr@i^0,c
  4133  001694                     l1969:
  4134                           
  4135                           ;rc522.c: 48:     {;rc522.c: 49:         LATDbits.LD2 = ((value&0x80) == 0x80);
  4136  001694  BE01               	btfsc	MFRC522_Wr@value^0,7,c
  4137  001696  EF4F  F00B         	goto	u1261
  4138  00169A  EF53  F00B         	goto	u1260
  4139  00169E                     u1261:
  4140  00169E  6A02               	clrf	??_MFRC522_Wr^0,c
  4141  0016A0  2A02               	incf	??_MFRC522_Wr^0,f,c
  4142  0016A2  EF54  F00B         	goto	u1278
  4143  0016A6                     u1260:
  4144  0016A6  6A02               	clrf	??_MFRC522_Wr^0,c
  4145  0016A8                     u1278:
  4146  0016A8  4602               	rlncf	??_MFRC522_Wr^0,f,c
  4147  0016AA  4602               	rlncf	??_MFRC522_Wr^0,f,c
  4148  0016AC  508C               	movf	140,w,c	;volatile
  4149  0016AE  1802               	xorwf	??_MFRC522_Wr^0,w,c
  4150  0016B0  0BFB               	andlw	-5
  4151  0016B2  1802               	xorwf	??_MFRC522_Wr^0,w,c
  4152  0016B4  6E8C               	movwf	140,c	;volatile
  4153  0016B6                     
  4154                           ;rc522.c: 50:         LATDbits.LD1 = 1;
  4155  0016B6  828C               	bsf	140,1,c	;volatile
  4156                           
  4157                           ;rc522.c: 51:         value <<= 1;
  4158  0016B8  90D8               	bcf	status,0,c
  4159  0016BA  3601               	rlcf	MFRC522_Wr@value^0,f,c
  4160  0016BC                     
  4161                           ;rc522.c: 52:         LATDbits.LD1 = 0;
  4162  0016BC  928C               	bcf	140,1,c	;volatile
  4163  0016BE                     
  4164                           ;rc522.c: 53:     }
  4165  0016BE  0605               	decf	MFRC522_Wr@i^0,f,c
  4166  0016C0  5005               	movf	MFRC522_Wr@i^0,w,c
  4167  0016C2  A4D8               	btfss	status,2,c
  4168  0016C4  EF66  F00B         	goto	u1281
  4169  0016C8  EF68  F00B         	goto	u1280
  4170  0016CC                     u1281:
  4171  0016CC  EF4A  F00B         	goto	l1969
  4172  0016D0                     u1280:
  4173  0016D0                     
  4174                           ;rc522.c: 54:     LATDbits.LD0 = 1;
  4175  0016D0  808C               	bsf	140,0,c	;volatile
  4176                           
  4177                           ;rc522.c: 55:     LATDbits.LD1 = 1;
  4178  0016D2  828C               	bsf	140,1,c	;volatile
  4179  0016D4  0012               	return		;funcret
  4180  0016D6                     __end_of_MFRC522_Wr:
  4181                           	callstack 0
  4182                           
  4183 ;; *************** function _MFRC522_Rd *****************
  4184 ;; Defined at:
  4185 ;;		line 6 in file "rc522.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  address         1    wreg     unsigned char 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  address         1    2[COMRAM] unsigned char 
  4190 ;;  i               2    7[COMRAM] unsigned int 
  4191 ;;  ucResult        2    5[COMRAM] unsigned int 
  4192 ;;  ucAddr          2    3[COMRAM] unsigned int 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      unsigned char 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, status,0
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4202 ;;      Params:         0       0       0       0       0       0       0       0       0
  4203 ;;      Locals:         7       0       0       0       0       0       0       0       0
  4204 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4205 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4206 ;;Total ram usage:        9 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; This function calls:
  4209 ;;		Nothing
  4210 ;; This function is called by:
  4211 ;;		_MFRC522_Clear_Bit
  4212 ;;		_MFRC522_Set_Bit
  4213 ;;		_MFRC522_AntennaOn
  4214 ;;		_MFRC522_ToCard
  4215 ;;		_MFRC522_CRC
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text29
  4220  0012DC                     __ptext29:
  4221                           	callstack 0
  4222  0012DC                     _MFRC522_Rd:
  4223                           	callstack 26
  4224                           
  4225                           ;incstack = 0
  4226                           ;MFRC522_Rd@address stored from wreg
  4227  0012DC  6E03               	movwf	MFRC522_Rd@address^0,c
  4228  0012DE                     
  4229                           ;rc522.c: 6: unsigned char MFRC522_Rd(unsigned char address);rc522.c: 7: {;rc522.c: 8:  
      +                             unsigned int i, ucAddr;;rc522.c: 9:     unsigned int ucResult = 0;
  4230  0012DE  0E00               	movlw	0
  4231  0012E0  6E07               	movwf	(MFRC522_Rd@ucResult+1)^0,c
  4232  0012E2  0E00               	movlw	0
  4233  0012E4  6E06               	movwf	MFRC522_Rd@ucResult^0,c
  4234  0012E6                     
  4235                           ;rc522.c: 10:     LATDbits.LD1 = 0;
  4236  0012E6  928C               	bcf	140,1,c	;volatile
  4237  0012E8                     
  4238                           ;rc522.c: 11:     LATDbits.LD0 = 0;
  4239  0012E8  908C               	bcf	140,0,c	;volatile
  4240  0012EA                     
  4241                           ;rc522.c: 12:     ucAddr = ((address << 1) & 0x7E) | 0x80;
  4242  0012EA  5003               	movf	MFRC522_Rd@address^0,w,c
  4243  0012EC  2403               	addwf	MFRC522_Rd@address^0,w,c
  4244  0012EE  0B7E               	andlw	126
  4245  0012F0  6E01               	movwf	??_MFRC522_Rd^0,c
  4246  0012F2  6A02               	clrf	(??_MFRC522_Rd+1)^0,c
  4247  0012F4  0E80               	movlw	128
  4248  0012F6  1001               	iorwf	??_MFRC522_Rd^0,w,c
  4249  0012F8  6E04               	movwf	MFRC522_Rd@ucAddr^0,c
  4250  0012FA  5002               	movf	(??_MFRC522_Rd+1)^0,w,c
  4251  0012FC  6E05               	movwf	(MFRC522_Rd@ucAddr+1)^0,c
  4252  0012FE                     
  4253                           ;rc522.c: 14:     for(i=8; i>0; i--)
  4254  0012FE  0E00               	movlw	0
  4255  001300  6E09               	movwf	(MFRC522_Rd@i+1)^0,c
  4256  001302  0E08               	movlw	8
  4257  001304  6E08               	movwf	MFRC522_Rd@i^0,c
  4258  001306                     l1917:
  4259                           
  4260                           ;rc522.c: 15:     {;rc522.c: 16:         LATDbits.LD2 = ((ucAddr & 0x80) == 0x80);
  4261  001306  BE04               	btfsc	MFRC522_Rd@ucAddr^0,7,c
  4262  001308  EF88  F009         	goto	u1181
  4263  00130C  EF8C  F009         	goto	u1180
  4264  001310                     u1181:
  4265  001310  6A01               	clrf	??_MFRC522_Rd^0,c
  4266  001312  2A01               	incf	??_MFRC522_Rd^0,f,c
  4267  001314  EF8D  F009         	goto	u1198
  4268  001318                     u1180:
  4269  001318  6A01               	clrf	??_MFRC522_Rd^0,c
  4270  00131A                     u1198:
  4271  00131A  4601               	rlncf	??_MFRC522_Rd^0,f,c
  4272  00131C  4601               	rlncf	??_MFRC522_Rd^0,f,c
  4273  00131E  508C               	movf	140,w,c	;volatile
  4274  001320  1801               	xorwf	??_MFRC522_Rd^0,w,c
  4275  001322  0BFB               	andlw	-5
  4276  001324  1801               	xorwf	??_MFRC522_Rd^0,w,c
  4277  001326  6E8C               	movwf	140,c	;volatile
  4278  001328                     
  4279                           ;rc522.c: 17:         LATDbits.LD1 = 1;
  4280  001328  828C               	bsf	140,1,c	;volatile
  4281  00132A                     
  4282                           ;rc522.c: 18:         ucAddr <<= 1;
  4283  00132A  90D8               	bcf	status,0,c
  4284  00132C  3604               	rlcf	MFRC522_Rd@ucAddr^0,f,c
  4285  00132E  3605               	rlcf	(MFRC522_Rd@ucAddr+1)^0,f,c
  4286  001330                     
  4287                           ;rc522.c: 19:         LATDbits.LD1 = 0;
  4288  001330  928C               	bcf	140,1,c	;volatile
  4289  001332                     
  4290                           ;rc522.c: 20:     }
  4291  001332  0608               	decf	MFRC522_Rd@i^0,f,c
  4292  001334  A0D8               	btfss	status,0,c
  4293  001336  0609               	decf	(MFRC522_Rd@i+1)^0,f,c
  4294  001338  5008               	movf	MFRC522_Rd@i^0,w,c
  4295  00133A  1009               	iorwf	(MFRC522_Rd@i+1)^0,w,c
  4296  00133C  A4D8               	btfss	status,2,c
  4297  00133E  EFA3  F009         	goto	u1201
  4298  001342  EFA5  F009         	goto	u1200
  4299  001346                     u1201:
  4300  001346  EF83  F009         	goto	l1917
  4301  00134A                     u1200:
  4302  00134A                     
  4303                           ;rc522.c: 21:     for(i=8; i>0; i--)
  4304  00134A  0E00               	movlw	0
  4305  00134C  6E09               	movwf	(MFRC522_Rd@i+1)^0,c
  4306  00134E  0E08               	movlw	8
  4307  001350  6E08               	movwf	MFRC522_Rd@i^0,c
  4308  001352                     l182:
  4309                           
  4310                           ;rc522.c: 22:     {;rc522.c: 23:         LATDbits.LD1 = 1;
  4311  001352  828C               	bsf	140,1,c	;volatile
  4312  001354                     
  4313                           ;rc522.c: 24:         ucResult <<= 1;
  4314  001354  90D8               	bcf	status,0,c
  4315  001356  3606               	rlcf	MFRC522_Rd@ucResult^0,f,c
  4316  001358  3607               	rlcf	(MFRC522_Rd@ucResult+1)^0,f,c
  4317  00135A                     
  4318                           ;rc522.c: 25:         ucResult |= (short)PORTDbits.RD3;
  4319  00135A  B683               	btfsc	131,3,c	;volatile
  4320  00135C  EFB2  F009         	goto	u1211
  4321  001360  EFB6  F009         	goto	u1210
  4322  001364                     u1211:
  4323  001364  6A01               	clrf	??_MFRC522_Rd^0,c
  4324  001366  2A01               	incf	??_MFRC522_Rd^0,f,c
  4325  001368  EFB7  F009         	goto	u1218
  4326  00136C                     u1210:
  4327  00136C  6A01               	clrf	??_MFRC522_Rd^0,c
  4328  00136E                     u1218:
  4329  00136E  5001               	movf	??_MFRC522_Rd^0,w,c
  4330  001370  1206               	iorwf	MFRC522_Rd@ucResult^0,f,c
  4331  001372                     
  4332                           ;rc522.c: 26:         LATDbits.LD1 = 0;
  4333  001372  928C               	bcf	140,1,c	;volatile
  4334  001374                     
  4335                           ;rc522.c: 27:     }
  4336  001374  0608               	decf	MFRC522_Rd@i^0,f,c
  4337  001376  A0D8               	btfss	status,0,c
  4338  001378  0609               	decf	(MFRC522_Rd@i+1)^0,f,c
  4339  00137A  5008               	movf	MFRC522_Rd@i^0,w,c
  4340  00137C  1009               	iorwf	(MFRC522_Rd@i+1)^0,w,c
  4341  00137E  A4D8               	btfss	status,2,c
  4342  001380  EFC4  F009         	goto	u1221
  4343  001384  EFC6  F009         	goto	u1220
  4344  001388                     u1221:
  4345  001388  EFA9  F009         	goto	l182
  4346  00138C                     u1220:
  4347  00138C                     
  4348                           ;rc522.c: 28:     LATDbits.LD0 = 1;
  4349  00138C  808C               	bsf	140,0,c	;volatile
  4350                           
  4351                           ;rc522.c: 29:     LATDbits.LD1 = 1;
  4352  00138E  828C               	bsf	140,1,c	;volatile
  4353  001390                     
  4354                           ;rc522.c: 30:     return ucResult;
  4355  001390  5006               	movf	MFRC522_Rd@ucResult^0,w,c
  4356  001392  0012               	return		;funcret
  4357  001394                     __end_of_MFRC522_Rd:
  4358                           	callstack 0
  4359                           
  4360 ;; *************** function _LCD_Print *****************
  4361 ;; Defined at:
  4362 ;;		line 109 in file "I2C.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  LCD_Str         2    4[COMRAM] PTR unsigned char 
  4365 ;;		 -> data_buffer(16), STR_2(4), STR_1(8), 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  i               1    9[COMRAM] unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4377 ;;      Params:         2       0       0       0       0       0       0       0       0
  4378 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4379 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4380 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4381 ;;Total ram usage:        6 bytes
  4382 ;; Hardware stack levels used: 1
  4383 ;; Hardware stack levels required when called: 3
  4384 ;; This function calls:
  4385 ;;		_LCD_Write_Nibble
  4386 ;; This function is called by:
  4387 ;;		_main
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text30
  4392  001394                     __ptext30:
  4393                           	callstack 0
  4394  001394                     _LCD_Print:
  4395                           	callstack 27
  4396  001394                     
  4397                           ;I2C.c: 109: void LCD_Print(char* LCD_Str);I2C.c: 110: {;I2C.c: 111:   uint8_t i = 0;
  4398  001394  0E00               	movlw	0
  4399  001396  6E0A               	movwf	LCD_Print@i^0,c
  4400  001398                     
  4401                           ;I2C.c: 112:   RS = 1;
  4402  001398  0100               	movlb	0	; () banked
  4403  00139A  81BC               	bsf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  4404                           
  4405                           ;I2C.c: 113:   while(LCD_Str[i] != '\0')
  4406  00139C  EF06  F00A         	goto	l2423
  4407  0013A0                     l2419:
  4408                           
  4409                           ;I2C.c: 114:   {;I2C.c: 115:     LCD_Write_Nibble(LCD_Str[i] & 0xF0);
  4410  0013A0  500A               	movf	LCD_Print@i^0,w,c
  4411  0013A2  2405               	addwf	LCD_Print@LCD_Str^0,w,c
  4412  0013A4  6E07               	movwf	??_LCD_Print^0,c
  4413  0013A6  0E00               	movlw	0
  4414  0013A8  2006               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  4415  0013AA  6E08               	movwf	(??_LCD_Print+1)^0,c
  4416  0013AC  C007  FFF6         	movff	??_LCD_Print,tblptrl
  4417  0013B0  C008  FFF7         	movff	??_LCD_Print+1,tblptrh
  4418  0013B4  6AF8               	clrf	tblptru,c
  4419  0013B6  0E07               	movlw	(high __ramtop+-1)
  4420  0013B8  64F7               	cpfsgt	tblptrh,c
  4421  0013BA  D003               	bra	u1837
  4422  0013BC  0008               	tblrd		*
  4423  0013BE  50F5               	movf	tablat,w,c
  4424  0013C0  D005               	bra	u1830
  4425  0013C2                     u1837:
  4426  0013C2  CFF6 FFE1          	movff	tblptrl,fsr1l
  4427  0013C6  CFF7 FFE2          	movff	tblptrh,fsr1h
  4428  0013CA  50E7               	movf	indf1,w,c
  4429  0013CC                     u1830:
  4430  0013CC  0BF0               	andlw	240
  4431  0013CE  EC90  F00D         	call	_LCD_Write_Nibble
  4432                           
  4433                           ;I2C.c: 116:     LCD_Write_Nibble( (LCD_Str[i++] << 4) & 0xF0 );
  4434  0013D2  500A               	movf	LCD_Print@i^0,w,c
  4435  0013D4  2405               	addwf	LCD_Print@LCD_Str^0,w,c
  4436  0013D6  6E07               	movwf	??_LCD_Print^0,c
  4437  0013D8  0E00               	movlw	0
  4438  0013DA  2006               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  4439  0013DC  6E08               	movwf	(??_LCD_Print+1)^0,c
  4440  0013DE  C007  FFF6         	movff	??_LCD_Print,tblptrl
  4441  0013E2  C008  FFF7         	movff	??_LCD_Print+1,tblptrh
  4442  0013E6  6AF8               	clrf	tblptru,c
  4443  0013E8  0E07               	movlw	(high __ramtop+-1)
  4444  0013EA  64F7               	cpfsgt	tblptrh,c
  4445  0013EC  D003               	bra	u1847
  4446  0013EE  0008               	tblrd		*
  4447  0013F0  50F5               	movf	tablat,w,c
  4448  0013F2  D005               	bra	u1840
  4449  0013F4                     u1847:
  4450  0013F4  CFF6 FFE1          	movff	tblptrl,fsr1l
  4451  0013F8  CFF7 FFE2          	movff	tblptrh,fsr1h
  4452  0013FC  50E7               	movf	indf1,w,c
  4453  0013FE                     u1840:
  4454  0013FE  6E09               	movwf	(??_LCD_Print+2)^0,c
  4455  001400  3809               	swapf	(??_LCD_Print+2)^0,w,c
  4456  001402  0BF0               	andlw	240
  4457  001404  0BF0               	andlw	240
  4458  001406  EC90  F00D         	call	_LCD_Write_Nibble
  4459  00140A  2A0A               	incf	LCD_Print@i^0,f,c
  4460  00140C                     l2423:
  4461                           
  4462                           ;I2C.c: 113:   while(LCD_Str[i] != '\0')
  4463  00140C  500A               	movf	LCD_Print@i^0,w,c
  4464  00140E  2405               	addwf	LCD_Print@LCD_Str^0,w,c
  4465  001410  6E07               	movwf	??_LCD_Print^0,c
  4466  001412  0E00               	movlw	0
  4467  001414  2006               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  4468  001416  6E08               	movwf	(??_LCD_Print+1)^0,c
  4469  001418  C007  FFF6         	movff	??_LCD_Print,tblptrl
  4470  00141C  C008  FFF7         	movff	??_LCD_Print+1,tblptrh
  4471  001420  6AF8               	clrf	tblptru,c
  4472  001422  0E07               	movlw	(high __ramtop+-1)
  4473  001424  64F7               	cpfsgt	tblptrh,c
  4474  001426  D003               	bra	u1857
  4475  001428  0008               	tblrd		*
  4476  00142A  50F5               	movf	tablat,w,c
  4477  00142C  D005               	bra	u1850
  4478  00142E                     u1857:
  4479  00142E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4480  001432  CFF7 FFE2          	movff	tblptrh,fsr1h
  4481  001436  50E7               	movf	indf1,w,c
  4482  001438                     u1850:
  4483  001438  0900               	iorlw	0
  4484  00143A  A4D8               	btfss	status,2,c
  4485  00143C  EF22  F00A         	goto	u1861
  4486  001440  EF24  F00A         	goto	u1860
  4487  001444                     u1861:
  4488  001444  EFD0  F009         	goto	l2419
  4489  001448                     u1860:
  4490  001448  0012               	return		;funcret
  4491  00144A                     __end_of_LCD_Print:
  4492                           	callstack 0
  4493                           
  4494 ;; *************** function _LCD_Goto *****************
  4495 ;; Defined at:
  4496 ;;		line 83 in file "I2C.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  col             1    wreg     unsigned char 
  4499 ;;  row             1    6[COMRAM] unsigned char 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  col             1    9[COMRAM] unsigned char 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		wreg, status,2, status,0, cstack
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4511 ;;      Params:         1       0       0       0       0       0       0       0       0
  4512 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4513 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4514 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4515 ;;Total ram usage:        4 bytes
  4516 ;; Hardware stack levels used: 1
  4517 ;; Hardware stack levels required when called: 4
  4518 ;; This function calls:
  4519 ;;		_LCD_Cmd
  4520 ;; This function is called by:
  4521 ;;		_main
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           	psect	text31
  4526  0016D6                     __ptext31:
  4527                           	callstack 0
  4528  0016D6                     _LCD_Goto:
  4529                           	callstack 26
  4530                           
  4531                           ;incstack = 0
  4532                           ;LCD_Goto@col stored from wreg
  4533  0016D6  6E0A               	movwf	LCD_Goto@col^0,c
  4534  0016D8                     
  4535                           ;I2C.c: 83: void LCD_Goto(uint8_t col, uint8_t row);I2C.c: 84: {;I2C.c: 85:   switch(row
      +                          )
  4536  0016D8  EF86  F00B         	goto	l2409
  4537  0016DC                     l2401:
  4538                           
  4539                           ;I2C.c: 88:       LCD_Cmd(0xC0 + col - 1);
  4540  0016DC  500A               	movf	LCD_Goto@col^0,w,c
  4541  0016DE  0FBF               	addlw	191
  4542  0016E0  ECB4  F00C         	call	_LCD_Cmd
  4543                           
  4544                           ;I2C.c: 89:       break;
  4545  0016E4  EF9F  F00B         	goto	l151
  4546  0016E8                     l2403:
  4547                           
  4548                           ;I2C.c: 91:       LCD_Cmd(0x94 + col - 1);
  4549  0016E8  500A               	movf	LCD_Goto@col^0,w,c
  4550  0016EA  0F93               	addlw	147
  4551  0016EC  ECB4  F00C         	call	_LCD_Cmd
  4552                           
  4553                           ;I2C.c: 92:       break;
  4554  0016F0  EF9F  F00B         	goto	l151
  4555  0016F4                     l2405:
  4556                           
  4557                           ;I2C.c: 94:       LCD_Cmd(0xD4 + col - 1);
  4558  0016F4  500A               	movf	LCD_Goto@col^0,w,c
  4559  0016F6  0FD3               	addlw	211
  4560  0016F8  ECB4  F00C         	call	_LCD_Cmd
  4561                           
  4562                           ;I2C.c: 95:     break;
  4563  0016FC  EF9F  F00B         	goto	l151
  4564  001700                     l2407:
  4565                           
  4566                           ;I2C.c: 97:       LCD_Cmd(0x80 + col - 1);
  4567  001700  500A               	movf	LCD_Goto@col^0,w,c
  4568  001702  0F7F               	addlw	127
  4569  001704  ECB4  F00C         	call	_LCD_Cmd
  4570                           
  4571                           ;I2C.c: 98:   }
  4572  001708  EF9F  F00B         	goto	l151
  4573  00170C                     l2409:
  4574  00170C  5007               	movf	LCD_Goto@row^0,w,c
  4575  00170E  6E08               	movwf	??_LCD_Goto^0,c
  4576  001710  6A09               	clrf	(??_LCD_Goto+1)^0,c
  4577                           
  4578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4579                           ; Switch size 1, requested type "simple"
  4580                           ; Number of cases is 1, Range of values is 0 to 0
  4581                           ; switch strategies available:
  4582                           ; Name         Instructions Cycles
  4583                           ; simple_byte            4     3 (average)
  4584                           ;	Chosen strategy is simple_byte
  4585  001712  5009               	movf	(??_LCD_Goto+1)^0,w,c
  4586  001714  0A00               	xorlw	0	; case 0
  4587  001716  B4D8               	btfsc	status,2,c
  4588  001718  EF90  F00B         	goto	l2609
  4589  00171C  EF80  F00B         	goto	l2407
  4590  001720                     l2609:
  4591                           
  4592                           ; Switch size 1, requested type "simple"
  4593                           ; Number of cases is 3, Range of values is 2 to 4
  4594                           ; switch strategies available:
  4595                           ; Name         Instructions Cycles
  4596                           ; simple_byte           10     6 (average)
  4597                           ;	Chosen strategy is simple_byte
  4598  001720  5008               	movf	??_LCD_Goto^0,w,c
  4599  001722  0A02               	xorlw	2	; case 2
  4600  001724  B4D8               	btfsc	status,2,c
  4601  001726  EF6E  F00B         	goto	l2401
  4602  00172A  0A01               	xorlw	1	; case 3
  4603  00172C  B4D8               	btfsc	status,2,c
  4604  00172E  EF74  F00B         	goto	l2403
  4605  001732  0A07               	xorlw	7	; case 4
  4606  001734  B4D8               	btfsc	status,2,c
  4607  001736  EF7A  F00B         	goto	l2405
  4608  00173A  EF80  F00B         	goto	l2407
  4609  00173E                     l151:
  4610  00173E  0012               	return		;funcret
  4611  001740                     __end_of_LCD_Goto:
  4612                           	callstack 0
  4613                           
  4614 ;; *************** function _LCD_Begin *****************
  4615 ;; Defined at:
  4616 ;;		line 120 in file "I2C.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  _i2c_addr       1    wreg     unsigned char 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  _i2c_addr       1    8[COMRAM] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4630 ;;      Params:         0       0       0       0       0       0       0       0       0
  4631 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4632 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4633 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4634 ;;Total ram usage:        3 bytes
  4635 ;; Hardware stack levels used: 1
  4636 ;; Hardware stack levels required when called: 4
  4637 ;; This function calls:
  4638 ;;		_Expander_Write
  4639 ;;		_LCD_Cmd
  4640 ;; This function is called by:
  4641 ;;		_main
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text32
  4646  00105E                     __ptext32:
  4647                           	callstack 0
  4648  00105E                     _LCD_Begin:
  4649                           	callstack 26
  4650                           
  4651                           ;incstack = 0
  4652                           ;LCD_Begin@_i2c_addr stored from wreg
  4653  00105E  6E09               	movwf	LCD_Begin@_i2c_addr^0,c
  4654  001060                     
  4655                           ;I2C.c: 120: void LCD_Begin(uint8_t _i2c_addr);I2C.c: 121: {;I2C.c: 122:   i2c_addr = _i
      +                          2c_addr;
  4656  001060  C009  F0BB         	movff	LCD_Begin@_i2c_addr,_i2c_addr
  4657  001064                     
  4658                           ;I2C.c: 123:   Expander_Write(0);
  4659  001064  0E00               	movlw	0
  4660  001066  EC44  F00E         	call	_Expander_Write
  4661  00106A                     
  4662                           ;I2C.c: 125:   _delay((unsigned long)((40)*(27000000/4000.0)));
  4663  00106A  0E02               	movlw	2
  4664  00106C  6E08               	movwf	(??_LCD_Begin+1)^0,c
  4665  00106E  0E5F               	movlw	95
  4666  001070  6E07               	movwf	??_LCD_Begin^0,c
  4667  001072  0EA3               	movlw	163
  4668  001074                     u1987:
  4669  001074  2EE8               	decfsz	wreg,f,c
  4670  001076  D7FE               	bra	u1987
  4671  001078  2E07               	decfsz	??_LCD_Begin^0,f,c
  4672  00107A  D7FC               	bra	u1987
  4673  00107C  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  4674  00107E  D7FA               	bra	u1987
  4675  001080  F000               	nop	
  4676                           
  4677                           ;I2C.c: 126:   LCD_Cmd(3);
  4678  001082  0E03               	movlw	3
  4679  001084  ECB4  F00C         	call	_LCD_Cmd
  4680  001088                     
  4681                           ;I2C.c: 127:   _delay((unsigned long)((5)*(27000000/4000.0)));
  4682  001088  0E2C               	movlw	44
  4683  00108A  6E07               	movwf	??_LCD_Begin^0,c
  4684  00108C  0ED4               	movlw	212
  4685  00108E                     u1997:
  4686  00108E  2EE8               	decfsz	wreg,f,c
  4687  001090  D7FE               	bra	u1997
  4688  001092  2E07               	decfsz	??_LCD_Begin^0,f,c
  4689  001094  D7FC               	bra	u1997
  4690  001096                     
  4691                           ;I2C.c: 128:   LCD_Cmd(3);
  4692  001096  0E03               	movlw	3
  4693  001098  ECB4  F00C         	call	_LCD_Cmd
  4694                           
  4695                           ;I2C.c: 129:   _delay((unsigned long)((5)*(27000000/4000.0)));
  4696  00109C  0E2C               	movlw	44
  4697  00109E  6E07               	movwf	??_LCD_Begin^0,c
  4698  0010A0  0ED4               	movlw	212
  4699  0010A2                     u2007:
  4700  0010A2  2EE8               	decfsz	wreg,f,c
  4701  0010A4  D7FE               	bra	u2007
  4702  0010A6  2E07               	decfsz	??_LCD_Begin^0,f,c
  4703  0010A8  D7FC               	bra	u2007
  4704  0010AA                     
  4705                           ;I2C.c: 130:   LCD_Cmd(3);
  4706  0010AA  0E03               	movlw	3
  4707  0010AC  ECB4  F00C         	call	_LCD_Cmd
  4708  0010B0                     
  4709                           ;I2C.c: 131:   _delay((unsigned long)((5)*(27000000/4000.0)));
  4710  0010B0  0E2C               	movlw	44
  4711  0010B2  6E07               	movwf	??_LCD_Begin^0,c
  4712  0010B4  0ED4               	movlw	212
  4713  0010B6                     u2017:
  4714  0010B6  2EE8               	decfsz	wreg,f,c
  4715  0010B8  D7FE               	bra	u2017
  4716  0010BA  2E07               	decfsz	??_LCD_Begin^0,f,c
  4717  0010BC  D7FC               	bra	u2017
  4718                           
  4719                           ;I2C.c: 132:   LCD_Cmd(0x02);
  4720  0010BE  0E02               	movlw	2
  4721  0010C0  ECB4  F00C         	call	_LCD_Cmd
  4722  0010C4                     
  4723                           ;I2C.c: 133:   _delay((unsigned long)((5)*(27000000/4000.0)));
  4724  0010C4  0E2C               	movlw	44
  4725  0010C6  6E07               	movwf	??_LCD_Begin^0,c
  4726  0010C8  0ED4               	movlw	212
  4727  0010CA                     u2027:
  4728  0010CA  2EE8               	decfsz	wreg,f,c
  4729  0010CC  D7FE               	bra	u2027
  4730  0010CE  2E07               	decfsz	??_LCD_Begin^0,f,c
  4731  0010D0  D7FC               	bra	u2027
  4732  0010D2                     
  4733                           ;I2C.c: 134:   LCD_Cmd(0x20 | (2 << 2));
  4734  0010D2  0E28               	movlw	40
  4735  0010D4  ECB4  F00C         	call	_LCD_Cmd
  4736                           
  4737                           ;I2C.c: 135:   _delay((unsigned long)((50)*(27000000/4000.0)));
  4738  0010D8  0E02               	movlw	2
  4739  0010DA  6E08               	movwf	(??_LCD_Begin+1)^0,c
  4740  0010DC  0EB7               	movlw	183
  4741  0010DE  6E07               	movwf	??_LCD_Begin^0,c
  4742  0010E0  0E4C               	movlw	76
  4743  0010E2                     u2037:
  4744  0010E2  2EE8               	decfsz	wreg,f,c
  4745  0010E4  D7FE               	bra	u2037
  4746  0010E6  2E07               	decfsz	??_LCD_Begin^0,f,c
  4747  0010E8  D7FC               	bra	u2037
  4748  0010EA  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  4749  0010EC  D7FA               	bra	u2037
  4750  0010EE  D000               	nop2	
  4751  0010F0                     
  4752                           ;I2C.c: 136:   LCD_Cmd(0x0C);
  4753  0010F0  0E0C               	movlw	12
  4754  0010F2  ECB4  F00C         	call	_LCD_Cmd
  4755  0010F6                     
  4756                           ;I2C.c: 137:   _delay((unsigned long)((50)*(27000000/4000.0)));
  4757  0010F6  0E02               	movlw	2
  4758  0010F8  6E08               	movwf	(??_LCD_Begin+1)^0,c
  4759  0010FA  0EB7               	movlw	183
  4760  0010FC  6E07               	movwf	??_LCD_Begin^0,c
  4761  0010FE  0E4C               	movlw	76
  4762  001100                     u2047:
  4763  001100  2EE8               	decfsz	wreg,f,c
  4764  001102  D7FE               	bra	u2047
  4765  001104  2E07               	decfsz	??_LCD_Begin^0,f,c
  4766  001106  D7FC               	bra	u2047
  4767  001108  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  4768  00110A  D7FA               	bra	u2047
  4769  00110C  D000               	nop2	
  4770                           
  4771                           ;I2C.c: 138:   LCD_Cmd(0x01);
  4772  00110E  0E01               	movlw	1
  4773  001110  ECB4  F00C         	call	_LCD_Cmd
  4774  001114                     
  4775                           ;I2C.c: 139:   _delay((unsigned long)((50)*(27000000/4000.0)));
  4776  001114  0E02               	movlw	2
  4777  001116  6E08               	movwf	(??_LCD_Begin+1)^0,c
  4778  001118  0EB7               	movlw	183
  4779  00111A  6E07               	movwf	??_LCD_Begin^0,c
  4780  00111C  0E4C               	movlw	76
  4781  00111E                     u2057:
  4782  00111E  2EE8               	decfsz	wreg,f,c
  4783  001120  D7FE               	bra	u2057
  4784  001122  2E07               	decfsz	??_LCD_Begin^0,f,c
  4785  001124  D7FC               	bra	u2057
  4786  001126  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  4787  001128  D7FA               	bra	u2057
  4788  00112A  D000               	nop2	
  4789  00112C                     
  4790                           ;I2C.c: 140:   LCD_Cmd(0x04 | 0x02);
  4791  00112C  0E06               	movlw	6
  4792  00112E  ECB4  F00C         	call	_LCD_Cmd
  4793                           
  4794                           ;I2C.c: 141:   _delay((unsigned long)((50)*(27000000/4000.0)));
  4795  001132  0E02               	movlw	2
  4796  001134  6E08               	movwf	(??_LCD_Begin+1)^0,c
  4797  001136  0EB7               	movlw	183
  4798  001138  6E07               	movwf	??_LCD_Begin^0,c
  4799  00113A  0E4C               	movlw	76
  4800  00113C                     u2067:
  4801  00113C  2EE8               	decfsz	wreg,f,c
  4802  00113E  D7FE               	bra	u2067
  4803  001140  2E07               	decfsz	??_LCD_Begin^0,f,c
  4804  001142  D7FC               	bra	u2067
  4805  001144  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  4806  001146  D7FA               	bra	u2067
  4807  001148  D000               	nop2	
  4808  00114A  0012               	return		;funcret
  4809  00114C                     __end_of_LCD_Begin:
  4810                           	callstack 0
  4811                           
  4812 ;; *************** function _LCD_Cmd *****************
  4813 ;; Defined at:
  4814 ;;		line 74 in file "I2C.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  Command         1    wreg     unsigned char 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  Command         1    5[COMRAM] unsigned char 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      void 
  4821 ;; Registers used:
  4822 ;;		wreg, status,2, status,0, cstack
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4828 ;;      Params:         0       0       0       0       0       0       0       0       0
  4829 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4830 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4831 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4832 ;;Total ram usage:        2 bytes
  4833 ;; Hardware stack levels used: 1
  4834 ;; Hardware stack levels required when called: 3
  4835 ;; This function calls:
  4836 ;;		_LCD_Write_Nibble
  4837 ;; This function is called by:
  4838 ;;		_main
  4839 ;;		_LCD_Goto
  4840 ;;		_LCD_Begin
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text33
  4845  001968                     __ptext33:
  4846                           	callstack 0
  4847  001968                     _LCD_Cmd:
  4848                           	callstack 26
  4849                           
  4850                           ;incstack = 0
  4851                           ;LCD_Cmd@Command stored from wreg
  4852  001968  6E06               	movwf	LCD_Cmd@Command^0,c
  4853  00196A                     
  4854                           ;I2C.c: 74: void LCD_Cmd(uint8_t Command);I2C.c: 75: {;I2C.c: 76:   RS = 0;
  4855  00196A  0100               	movlb	0	; () banked
  4856  00196C  91BC               	bcf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  4857  00196E                     
  4858                           ; BSR set to: 0
  4859                           ;I2C.c: 77:   LCD_Write_Nibble(Command & 0xF0);
  4860  00196E  5006               	movf	LCD_Cmd@Command^0,w,c
  4861  001970  0BF0               	andlw	240
  4862  001972  EC90  F00D         	call	_LCD_Write_Nibble
  4863                           
  4864                           ;I2C.c: 78:   LCD_Write_Nibble((Command << 4) & 0xF0);
  4865  001976  3806               	swapf	LCD_Cmd@Command^0,w,c
  4866  001978  0BF0               	andlw	240
  4867  00197A  0BF0               	andlw	240
  4868  00197C  EC90  F00D         	call	_LCD_Write_Nibble
  4869  001980                     
  4870                           ;I2C.c: 79:   if((Command == 0x01) || (Command == 0x02))
  4871  001980  0406               	decf	LCD_Cmd@Command^0,w,c
  4872  001982  B4D8               	btfsc	status,2,c
  4873  001984  EFC6  F00C         	goto	u1681
  4874  001988  EFC8  F00C         	goto	u1680
  4875  00198C                     u1681:
  4876  00198C  EFD1  F00C         	goto	l2249
  4877  001990                     u1680:
  4878  001990  0E02               	movlw	2
  4879  001992  1806               	xorwf	LCD_Cmd@Command^0,w,c
  4880  001994  A4D8               	btfss	status,2,c
  4881  001996  EFCF  F00C         	goto	u1691
  4882  00199A  EFD1  F00C         	goto	u1690
  4883  00199E                     u1691:
  4884  00199E  EFD9  F00C         	goto	l142
  4885  0019A2                     u1690:
  4886  0019A2                     l2249:
  4887                           
  4888                           ;I2C.c: 80:     _delay((unsigned long)((2)*(27000000/4000.0)));
  4889  0019A2  0E12               	movlw	18
  4890  0019A4  6E05               	movwf	??_LCD_Cmd^0,c
  4891  0019A6  0E87               	movlw	135
  4892  0019A8                     u2077:
  4893  0019A8  2EE8               	decfsz	wreg,f,c
  4894  0019AA  D7FE               	bra	u2077
  4895  0019AC  2E05               	decfsz	??_LCD_Cmd^0,f,c
  4896  0019AE  D7FC               	bra	u2077
  4897  0019B0  F000               	nop	
  4898  0019B2                     l142:
  4899  0019B2  0012               	return		;funcret
  4900  0019B4                     __end_of_LCD_Cmd:
  4901                           	callstack 0
  4902                           
  4903 ;; *************** function _LCD_Write_Nibble *****************
  4904 ;; Defined at:
  4905 ;;		line 63 in file "I2C.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  n               1    wreg     unsigned char 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  n               1    3[COMRAM] unsigned char 
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		wreg, status,2, status,0, cstack
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4919 ;;      Params:         0       0       0       0       0       0       0       0       0
  4920 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4922 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4923 ;;Total ram usage:        1 bytes
  4924 ;; Hardware stack levels used: 1
  4925 ;; Hardware stack levels required when called: 2
  4926 ;; This function calls:
  4927 ;;		_Expander_Write
  4928 ;; This function is called by:
  4929 ;;		_LCD_Cmd
  4930 ;;		_LCD_Print
  4931 ;;		_LCD_PutC
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text34
  4936  001B20                     __ptext34:
  4937                           	callstack 0
  4938  001B20                     _LCD_Write_Nibble:
  4939                           	callstack 27
  4940                           
  4941                           ;incstack = 0
  4942                           ;LCD_Write_Nibble@n stored from wreg
  4943  001B20  6E04               	movwf	LCD_Write_Nibble@n^0,c
  4944  001B22                     
  4945                           ;I2C.c: 63: void LCD_Write_Nibble(uint8_t n);I2C.c: 64: {;I2C.c: 65:   n |= RS;
  4946  001B22  0E00               	movlw	0
  4947  001B24  0100               	movlb	0	; () banked
  4948  001B26  B1BC               	btfsc	(_RS/(0+8))& (0+255),_RS& (0+7),b
  4949  001B28  0E01               	movlw	1
  4950  001B2A  1204               	iorwf	LCD_Write_Nibble@n^0,f,c
  4951  001B2C                     
  4952                           ; BSR set to: 0
  4953                           ;I2C.c: 66:   Expander_Write(n & 0xFB);
  4954  001B2C  5004               	movf	LCD_Write_Nibble@n^0,w,c
  4955  001B2E  0BFB               	andlw	251
  4956  001B30  EC44  F00E         	call	_Expander_Write
  4957  001B34                     
  4958                           ;I2C.c: 67:   _delay((unsigned long)((1)*(27000000/4000000.0)));
  4959  001B34  D000               	nop2		;2 cycle nop
  4960  001B36  D000               	nop2		;2 cycle nop
  4961  001B38  D000               	nop2		;2 cycle nop
  4962  001B3A                     
  4963                           ;I2C.c: 68:   Expander_Write(n | 0x04);
  4964  001B3A  5004               	movf	LCD_Write_Nibble@n^0,w,c
  4965  001B3C  0904               	iorlw	4
  4966  001B3E  EC44  F00E         	call	_Expander_Write
  4967  001B42                     
  4968                           ;I2C.c: 69:   _delay((unsigned long)((1)*(27000000/4000000.0)));
  4969  001B42  D000               	nop2		;2 cycle nop
  4970  001B44  D000               	nop2		;2 cycle nop
  4971  001B46  D000               	nop2		;2 cycle nop
  4972  001B48                     
  4973                           ;I2C.c: 70:   Expander_Write(n & 0xFB);
  4974  001B48  5004               	movf	LCD_Write_Nibble@n^0,w,c
  4975  001B4A  0BFB               	andlw	251
  4976  001B4C  EC44  F00E         	call	_Expander_Write
  4977  001B50                     
  4978                           ;I2C.c: 71:   _delay((unsigned long)((100)*(27000000/4000000.0)));
  4979  001B50  0EE1               	movlw	225
  4980  001B52                     u2087:
  4981  001B52  2EE8               	decfsz	wreg,f,c
  4982  001B54  D7FE               	bra	u2087
  4983  001B56  0012               	return		;funcret
  4984  001B58                     __end_of_LCD_Write_Nibble:
  4985                           	callstack 0
  4986                           
  4987 ;; *************** function _Expander_Write *****************
  4988 ;; Defined at:
  4989 ;;		line 55 in file "I2C.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  value           1    wreg     unsigned char 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  value           1    2[COMRAM] unsigned char 
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  1    wreg      void 
  4996 ;; Registers used:
  4997 ;;		wreg, status,2, status,0, cstack
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5003 ;;      Params:         0       0       0       0       0       0       0       0       0
  5004 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5006 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5007 ;;Total ram usage:        1 bytes
  5008 ;; Hardware stack levels used: 1
  5009 ;; Hardware stack levels required when called: 1
  5010 ;; This function calls:
  5011 ;;		_I2CLCD_Start
  5012 ;;		_I2CLCD_Stop
  5013 ;;		_I2CLCD_Write
  5014 ;; This function is called by:
  5015 ;;		_LCD_Write_Nibble
  5016 ;;		_LCD_Begin
  5017 ;;		_Backlight
  5018 ;;		_noBacklight
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text35
  5023  001C88                     __ptext35:
  5024                           	callstack 0
  5025  001C88                     _Expander_Write:
  5026                           	callstack 27
  5027                           
  5028                           ;incstack = 0
  5029                           ;Expander_Write@value stored from wreg
  5030  001C88  6E03               	movwf	Expander_Write@value^0,c
  5031  001C8A                     
  5032                           ;I2C.c: 55: void Expander_Write(uint8_t value);I2C.c: 56: {;I2C.c: 57:   I2CLCD_Start();
  5033  001C8A  EC30  F00E         	call	_I2CLCD_Start	;wreg free
  5034                           
  5035                           ;I2C.c: 58:   I2CLCD_Write(i2c_addr);
  5036  001C8E  0100               	movlb	0	; () banked
  5037  001C90  51BB               	movf	_i2c_addr& (0+255),w,b
  5038  001C92  ECDD  F00D         	call	_I2CLCD_Write
  5039                           
  5040                           ;I2C.c: 59:   I2CLCD_Write(value | backlight_val);
  5041  001C96  5003               	movf	Expander_Write@value^0,w,c
  5042  001C98  0100               	movlb	0	; () banked
  5043  001C9A  11BD               	iorwf	_backlight_val& (0+255),w,b
  5044  001C9C  ECDD  F00D         	call	_I2CLCD_Write
  5045                           
  5046                           ;I2C.c: 60:   I2CLCD_Stop();
  5047  001CA0  EC1C  F00E         	call	_I2CLCD_Stop	;wreg free
  5048  001CA4  0012               	return		;funcret
  5049  001CA6                     __end_of_Expander_Write:
  5050                           	callstack 0
  5051                           
  5052 ;; *************** function _I2CLCD_Write *****************
  5053 ;; Defined at:
  5054 ;;		line 27 in file "I2C.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  i2c_data        1    wreg     unsigned char 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  i2c_data        1    1[COMRAM] unsigned char 
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      void 
  5061 ;; Registers used:
  5062 ;;		wreg, status,2, status,0
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5068 ;;      Params:         0       0       0       0       0       0       0       0       0
  5069 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5070 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5071 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5072 ;;Total ram usage:        2 bytes
  5073 ;; Hardware stack levels used: 1
  5074 ;; This function calls:
  5075 ;;		Nothing
  5076 ;; This function is called by:
  5077 ;;		_Expander_Write
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text36
  5082  001BBA                     __ptext36:
  5083                           	callstack 0
  5084  001BBA                     _I2CLCD_Write:
  5085                           	callstack 27
  5086                           
  5087                           ;incstack = 0
  5088                           ;I2CLCD_Write@i2c_data stored from wreg
  5089  001BBA  6E02               	movwf	I2CLCD_Write@i2c_data^0,c
  5090  001BBC                     l109:
  5091  001BBC  B4C7               	btfsc	199,2,c	;volatile
  5092  001BBE  EFE3  F00D         	goto	u1161
  5093  001BC2  EFE5  F00D         	goto	u1160
  5094  001BC6                     u1161:
  5095  001BC6  EFDE  F00D         	goto	l109
  5096  001BCA                     u1160:
  5097  001BCA  CFC5 F001          	movff	4037,??_I2CLCD_Write	;volatile
  5098  001BCE  0E1F               	movlw	31
  5099  001BD0  1601               	andwf	??_I2CLCD_Write^0,f,c
  5100  001BD2  A4D8               	btfss	status,2,c
  5101  001BD4  EFEE  F00D         	goto	u1171
  5102  001BD8  EFF0  F00D         	goto	u1170
  5103  001BDC                     u1171:
  5104  001BDC  EFDE  F00D         	goto	l109
  5105  001BE0                     u1170:
  5106  001BE0                     
  5107                           ;I2C.c: 30:   SSPBUF = i2c_data;
  5108  001BE0  C002  FFC9         	movff	I2CLCD_Write@i2c_data,4041	;volatile
  5109  001BE4  0012               	return		;funcret
  5110  001BE6                     __end_of_I2CLCD_Write:
  5111                           	callstack 0
  5112                           
  5113 ;; *************** function _I2CLCD_Stop *****************
  5114 ;; Defined at:
  5115 ;;		line 21 in file "I2C.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;		None
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;		None
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  1    wreg      void 
  5122 ;; Registers used:
  5123 ;;		wreg, status,2, status,0
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5129 ;;      Params:         0       0       0       0       0       0       0       0       0
  5130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5131 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5132 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5133 ;;Total ram usage:        1 bytes
  5134 ;; Hardware stack levels used: 1
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_Expander_Write
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           	psect	text37
  5143  001C38                     __ptext37:
  5144                           	callstack 0
  5145  001C38                     _I2CLCD_Stop:
  5146                           	callstack 27
  5147  001C38                     l103:
  5148  001C38  B4C7               	btfsc	199,2,c	;volatile
  5149  001C3A  EF21  F00E         	goto	u1141
  5150  001C3E  EF23  F00E         	goto	u1140
  5151  001C42                     u1141:
  5152  001C42  EF1C  F00E         	goto	l103
  5153  001C46                     u1140:
  5154  001C46  CFC5 F001          	movff	4037,??_I2CLCD_Stop	;volatile
  5155  001C4A  0E1F               	movlw	31
  5156  001C4C  1601               	andwf	??_I2CLCD_Stop^0,f,c
  5157  001C4E  A4D8               	btfss	status,2,c
  5158  001C50  EF2C  F00E         	goto	u1151
  5159  001C54  EF2E  F00E         	goto	u1150
  5160  001C58                     u1151:
  5161  001C58  EF1C  F00E         	goto	l103
  5162  001C5C                     u1150:
  5163  001C5C                     
  5164                           ;I2C.c: 24:   PEN = 1;
  5165  001C5C  84C5               	bsf	4037,2,c	;volatile
  5166  001C5E  0012               	return		;funcret
  5167  001C60                     __end_of_I2CLCD_Stop:
  5168                           	callstack 0
  5169                           
  5170 ;; *************** function _I2CLCD_Start *****************
  5171 ;; Defined at:
  5172 ;;		line 15 in file "I2C.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;		None
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;		None
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      void 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0
  5187 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5188 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5189 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5190 ;;Total ram usage:        1 bytes
  5191 ;; Hardware stack levels used: 1
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_Expander_Write
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text38
  5200  001C60                     __ptext38:
  5201                           	callstack 0
  5202  001C60                     _I2CLCD_Start:
  5203                           	callstack 27
  5204  001C60                     l97:
  5205  001C60  B4C7               	btfsc	199,2,c	;volatile
  5206  001C62  EF35  F00E         	goto	u1121
  5207  001C66  EF37  F00E         	goto	u1120
  5208  001C6A                     u1121:
  5209  001C6A  EF30  F00E         	goto	l97
  5210  001C6E                     u1120:
  5211  001C6E  CFC5 F001          	movff	4037,??_I2CLCD_Start	;volatile
  5212  001C72  0E1F               	movlw	31
  5213  001C74  1601               	andwf	??_I2CLCD_Start^0,f,c
  5214  001C76  A4D8               	btfss	status,2,c
  5215  001C78  EF40  F00E         	goto	u1131
  5216  001C7C  EF42  F00E         	goto	u1130
  5217  001C80                     u1131:
  5218  001C80  EF30  F00E         	goto	l97
  5219  001C84                     u1130:
  5220  001C84                     
  5221                           ;I2C.c: 18:   SEN = 1;
  5222  001C84  80C5               	bsf	4037,0,c	;volatile
  5223  001C86  0012               	return		;funcret
  5224  001C88                     __end_of_I2CLCD_Start:
  5225                           	callstack 0
  5226                           
  5227 ;; *************** function _I2CLCD_Init *****************
  5228 ;; Defined at:
  5229 ;;		line 7 in file "I2C.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  i2c_clk_freq    4   13[COMRAM] unsigned long 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;		None
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  1    wreg      void 
  5236 ;; Registers used:
  5237 ;;		wreg, status,2, status,0, cstack
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5243 ;;      Params:         4       0       0       0       0       0       0       0       0
  5244 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5245 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5246 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5247 ;;Total ram usage:        8 bytes
  5248 ;; Hardware stack levels used: 1
  5249 ;; Hardware stack levels required when called: 1
  5250 ;; This function calls:
  5251 ;;		___lldiv
  5252 ;; This function is called by:
  5253 ;;		_main
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text39
  5258  0018BE                     __ptext39:
  5259                           	callstack 0
  5260  0018BE                     _I2CLCD_Init:
  5261                           	callstack 29
  5262  0018BE                     
  5263                           ;I2C.c: 7: void I2CLCD_Init(uint32_t i2c_clk_freq);I2C.c: 8: {;I2C.c: 9:   SSPCON1 = 0x2
      +                          8;
  5264  0018BE  0E28               	movlw	40
  5265  0018C0  6EC6               	movwf	198,c	;volatile
  5266                           
  5267                           ;I2C.c: 10:   SSPCON2 = 0x00;
  5268  0018C2  0E00               	movlw	0
  5269  0018C4  6EC5               	movwf	197,c	;volatile
  5270  0018C6                     
  5271                           ;I2C.c: 11:   SSPADD = (27000000/(4 * i2c_clk_freq)) - 1;
  5272  0018C6  0EC0               	movlw	192
  5273  0018C8  6E01               	movwf	___lldiv@dividend^0,c
  5274  0018CA  0EFC               	movlw	252
  5275  0018CC  6E02               	movwf	(___lldiv@dividend+1)^0,c
  5276  0018CE  0E9B               	movlw	155
  5277  0018D0  6E03               	movwf	(___lldiv@dividend+2)^0,c
  5278  0018D2  0E01               	movlw	1
  5279  0018D4  6E04               	movwf	(___lldiv@dividend+3)^0,c
  5280  0018D6  C00E  F012         	movff	I2CLCD_Init@i2c_clk_freq,??_I2CLCD_Init
  5281  0018DA  C00F  F013         	movff	I2CLCD_Init@i2c_clk_freq+1,??_I2CLCD_Init+1
  5282  0018DE  C010  F014         	movff	I2CLCD_Init@i2c_clk_freq+2,??_I2CLCD_Init+2
  5283  0018E2  C011  F015         	movff	I2CLCD_Init@i2c_clk_freq+3,??_I2CLCD_Init+3
  5284  0018E6  0E02               	movlw	2
  5285  0018E8                     u1825:
  5286  0018E8  90D8               	bcf	status,0,c
  5287  0018EA  3612               	rlcf	??_I2CLCD_Init^0,f,c
  5288  0018EC  3613               	rlcf	(??_I2CLCD_Init+1)^0,f,c
  5289  0018EE  3614               	rlcf	(??_I2CLCD_Init+2)^0,f,c
  5290  0018F0  3615               	rlcf	(??_I2CLCD_Init+3)^0,f,c
  5291  0018F2  2EE8               	decfsz	wreg,f,c
  5292  0018F4  EF74  F00C         	goto	u1825
  5293  0018F8  C012  F005         	movff	??_I2CLCD_Init,___lldiv@divisor
  5294  0018FC  C013  F006         	movff	??_I2CLCD_Init+1,___lldiv@divisor+1
  5295  001900  C014  F007         	movff	??_I2CLCD_Init+2,___lldiv@divisor+2
  5296  001904  C015  F008         	movff	??_I2CLCD_Init+3,___lldiv@divisor+3
  5297  001908  EC7F  F00A         	call	___lldiv	;wreg free
  5298  00190C  0401               	decf	?___lldiv^0,w,c
  5299  00190E  6EC8               	movwf	200,c	;volatile
  5300  001910                     
  5301                           ;I2C.c: 12:   SSPSTAT = 0;
  5302  001910  0E00               	movlw	0
  5303  001912  6EC7               	movwf	199,c	;volatile
  5304  001914  0012               	return		;funcret
  5305  001916                     __end_of_I2CLCD_Init:
  5306                           	callstack 0
  5307                           
  5308 ;; *************** function ___lldiv *****************
  5309 ;; Defined at:
  5310 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;  dividend        4    0[COMRAM] unsigned long 
  5313 ;;  divisor         4    4[COMRAM] unsigned long 
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;  quotient        4    8[COMRAM] unsigned long 
  5316 ;;  counter         1   12[COMRAM] unsigned char 
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  4    0[COMRAM] unsigned long 
  5319 ;; Registers used:
  5320 ;;		wreg, status,2, status,0
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5326 ;;      Params:         8       0       0       0       0       0       0       0       0
  5327 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5328 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5329 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5330 ;;Total ram usage:       13 bytes
  5331 ;; Hardware stack levels used: 1
  5332 ;; This function calls:
  5333 ;;		Nothing
  5334 ;; This function is called by:
  5335 ;;		_I2CLCD_Init
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text40
  5340  0014FE                     __ptext40:
  5341                           	callstack 0
  5342  0014FE                     ___lldiv:
  5343                           	callstack 29
  5344  0014FE  0E00               	movlw	0
  5345  001500  6E09               	movwf	___lldiv@quotient^0,c
  5346  001502  0E00               	movlw	0
  5347  001504  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5348  001506  0E00               	movlw	0
  5349  001508  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5350  00150A  0E00               	movlw	0
  5351  00150C  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5352  00150E  5005               	movf	___lldiv@divisor^0,w,c
  5353  001510  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5354  001512  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5355  001514  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5356  001516  B4D8               	btfsc	status,2,c
  5357  001518  EF90  F00A         	goto	u1781
  5358  00151C  EF92  F00A         	goto	u1780
  5359  001520                     u1781:
  5360  001520  EFC8  F00A         	goto	l316
  5361  001524                     u1780:
  5362  001524  0E01               	movlw	1
  5363  001526  6E0D               	movwf	___lldiv@counter^0,c
  5364  001528  EF9C  F00A         	goto	l2339
  5365  00152C                     l2337:
  5366  00152C  90D8               	bcf	status,0,c
  5367  00152E  3605               	rlcf	___lldiv@divisor^0,f,c
  5368  001530  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5369  001532  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5370  001534  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5371  001536  2A0D               	incf	___lldiv@counter^0,f,c
  5372  001538                     l2339:
  5373  001538  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5374  00153A  EFA1  F00A         	goto	u1791
  5375  00153E  EFA3  F00A         	goto	u1790
  5376  001542                     u1791:
  5377  001542  EF96  F00A         	goto	l2337
  5378  001546                     u1790:
  5379  001546                     l2341:
  5380  001546  90D8               	bcf	status,0,c
  5381  001548  3609               	rlcf	___lldiv@quotient^0,f,c
  5382  00154A  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5383  00154C  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5384  00154E  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5385  001550  5005               	movf	___lldiv@divisor^0,w,c
  5386  001552  5C01               	subwf	___lldiv@dividend^0,w,c
  5387  001554  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5388  001556  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5389  001558  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5390  00155A  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5391  00155C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5392  00155E  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5393  001560  A0D8               	btfss	status,0,c
  5394  001562  EFB5  F00A         	goto	u1801
  5395  001566  EFB7  F00A         	goto	u1800
  5396  00156A                     u1801:
  5397  00156A  EFC0  F00A         	goto	l2349
  5398  00156E                     u1800:
  5399  00156E  5005               	movf	___lldiv@divisor^0,w,c
  5400  001570  5E01               	subwf	___lldiv@dividend^0,f,c
  5401  001572  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5402  001574  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5403  001576  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5404  001578  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5405  00157A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5406  00157C  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5407  00157E  8009               	bsf	___lldiv@quotient^0,0,c
  5408  001580                     l2349:
  5409  001580  90D8               	bcf	status,0,c
  5410  001582  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5411  001584  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5412  001586  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5413  001588  3205               	rrcf	___lldiv@divisor^0,f,c
  5414  00158A  2E0D               	decfsz	___lldiv@counter^0,f,c
  5415  00158C  EFA3  F00A         	goto	l2341
  5416  001590                     l316:
  5417  001590  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5418  001594  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5419  001598  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5420  00159C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5421  0015A0  0012               	return		;funcret
  5422  0015A2                     __end_of___lldiv:
  5423                           	callstack 0
  5424                           
  5425                           	psect	rparam
  5426  0000                     
  5427                           	psect	idloc
  5428                           
  5429                           ;Config register IDLOC0 @ 0x200000
  5430                           ;	unspecified, using default values
  5431  200000                     	org	2097152
  5432  200000  FF                 	db	255
  5433                           
  5434                           ;Config register IDLOC1 @ 0x200001
  5435                           ;	unspecified, using default values
  5436  200001                     	org	2097153
  5437  200001  FF                 	db	255
  5438                           
  5439                           ;Config register IDLOC2 @ 0x200002
  5440                           ;	unspecified, using default values
  5441  200002                     	org	2097154
  5442  200002  FF                 	db	255
  5443                           
  5444                           ;Config register IDLOC3 @ 0x200003
  5445                           ;	unspecified, using default values
  5446  200003                     	org	2097155
  5447  200003  FF                 	db	255
  5448                           
  5449                           ;Config register IDLOC4 @ 0x200004
  5450                           ;	unspecified, using default values
  5451  200004                     	org	2097156
  5452  200004  FF                 	db	255
  5453                           
  5454                           ;Config register IDLOC5 @ 0x200005
  5455                           ;	unspecified, using default values
  5456  200005                     	org	2097157
  5457  200005  FF                 	db	255
  5458                           
  5459                           ;Config register IDLOC6 @ 0x200006
  5460                           ;	unspecified, using default values
  5461  200006                     	org	2097158
  5462  200006  FF                 	db	255
  5463                           
  5464                           ;Config register IDLOC7 @ 0x200007
  5465                           ;	unspecified, using default values
  5466  200007                     	org	2097159
  5467  200007  FF                 	db	255
  5468                           
  5469                           	psect	config
  5470                           
  5471                           ;Config register CONFIG1L @ 0x300000
  5472                           ;	PLL Prescaler Selection bits
  5473                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  5474                           ;	System Clock Postscaler Selection bits
  5475                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  5476                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5477                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  5478  300000                     	org	3145728
  5479  300000  00                 	db	0
  5480                           
  5481                           ;Config register CONFIG1H @ 0x300001
  5482                           ;	Oscillator Selection bits
  5483                           ;	FOSC = HS, HS oscillator (HS)
  5484                           ;	Fail-Safe Clock Monitor Enable bit
  5485                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5486                           ;	Internal/External Oscillator Switchover bit
  5487                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5488  300001                     	org	3145729
  5489  300001  0C                 	db	12
  5490                           
  5491                           ;Config register CONFIG2L @ 0x300002
  5492                           ;	Power-up Timer Enable bit
  5493                           ;	PWRT = ON, PWRT enabled
  5494                           ;	Brown-out Reset Enable bits
  5495                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5496                           ;	Brown-out Reset Voltage bits
  5497                           ;	BORV = 3, Minimum setting 2.05V
  5498                           ;	USB Voltage Regulator Enable bit
  5499                           ;	VREGEN = OFF, USB voltage regulator disabled
  5500  300002                     	org	3145730
  5501  300002  1E                 	db	30
  5502                           
  5503                           ;Config register CONFIG2H @ 0x300003
  5504                           ;	Watchdog Timer Enable bit
  5505                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5506                           ;	Watchdog Timer Postscale Select bits
  5507                           ;	WDTPS = 32768, 1:32768
  5508  300003                     	org	3145731
  5509  300003  1E                 	db	30
  5510                           
  5511                           ; Padding undefined space
  5512  300004                     	org	3145732
  5513  300004  FF                 	db	255
  5514                           
  5515                           ;Config register CONFIG3H @ 0x300005
  5516                           ;	CCP2 MUX bit
  5517                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5518                           ;	PORTB A/D Enable bit
  5519                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5520                           ;	Low-Power Timer 1 Oscillator Enable bit
  5521                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5522                           ;	MCLR Pin Enable bit
  5523                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5524  300005                     	org	3145733
  5525  300005  81                 	db	129
  5526                           
  5527                           ;Config register CONFIG4L @ 0x300006
  5528                           ;	Stack Full/Underflow Reset Enable bit
  5529                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5530                           ;	Single-Supply ICSP Enable bit
  5531                           ;	LVP = OFF, Single-Supply ICSP disabled
  5532                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5533                           ;	ICPRT = OFF, ICPORT disabled
  5534                           ;	Extended Instruction Set Enable bit
  5535                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5536                           ;	Background Debugger Enable bit
  5537                           ;	DEBUG = 0x1, unprogrammed default
  5538  300006                     	org	3145734
  5539  300006  81                 	db	129
  5540                           
  5541                           ; Padding undefined space
  5542  300007                     	org	3145735
  5543  300007  FF                 	db	255
  5544                           
  5545                           ;Config register CONFIG5L @ 0x300008
  5546                           ;	Code Protection bit
  5547                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5548                           ;	Code Protection bit
  5549                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5550                           ;	Code Protection bit
  5551                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5552                           ;	Code Protection bit
  5553                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5554  300008                     	org	3145736
  5555  300008  0F                 	db	15
  5556                           
  5557                           ;Config register CONFIG5H @ 0x300009
  5558                           ;	Boot Block Code Protection bit
  5559                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5560                           ;	Data EEPROM Code Protection bit
  5561                           ;	CPD = OFF, Data EEPROM is not code-protected
  5562  300009                     	org	3145737
  5563  300009  C0                 	db	192
  5564                           
  5565                           ;Config register CONFIG6L @ 0x30000A
  5566                           ;	Write Protection bit
  5567                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5568                           ;	Write Protection bit
  5569                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5570                           ;	Write Protection bit
  5571                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5572                           ;	Write Protection bit
  5573                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5574  30000A                     	org	3145738
  5575  30000A  0F                 	db	15
  5576                           
  5577                           ;Config register CONFIG6H @ 0x30000B
  5578                           ;	Configuration Register Write Protection bit
  5579                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5580                           ;	Boot Block Write Protection bit
  5581                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5582                           ;	Data EEPROM Write Protection bit
  5583                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5584  30000B                     	org	3145739
  5585  30000B  E0                 	db	224
  5586                           
  5587                           ;Config register CONFIG7L @ 0x30000C
  5588                           ;	Table Read Protection bit
  5589                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5590                           ;	Table Read Protection bit
  5591                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5592                           ;	Table Read Protection bit
  5593                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5594                           ;	Table Read Protection bit
  5595                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5596  30000C                     	org	3145740
  5597  30000C  0F                 	db	15
  5598                           
  5599                           ;Config register CONFIG7H @ 0x30000D
  5600                           ;	Boot Block Table Read Protection bit
  5601                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5602  30000D                     	org	3145741
  5603  30000D  40                 	db	64
  5604                           tosu	equ	0xFFF
  5605                           tosh	equ	0xFFE
  5606                           tosl	equ	0xFFD
  5607                           stkptr	equ	0xFFC
  5608                           pclatu	equ	0xFFB
  5609                           pclath	equ	0xFFA
  5610                           pcl	equ	0xFF9
  5611                           tblptru	equ	0xFF8
  5612                           tblptrh	equ	0xFF7
  5613                           tblptrl	equ	0xFF6
  5614                           tablat	equ	0xFF5
  5615                           prodh	equ	0xFF4
  5616                           prodl	equ	0xFF3
  5617                           indf0	equ	0xFEF
  5618                           postinc0	equ	0xFEE
  5619                           postdec0	equ	0xFED
  5620                           preinc0	equ	0xFEC
  5621                           plusw0	equ	0xFEB
  5622                           fsr0h	equ	0xFEA
  5623                           fsr0l	equ	0xFE9
  5624                           wreg	equ	0xFE8
  5625                           indf1	equ	0xFE7
  5626                           postinc1	equ	0xFE6
  5627                           postdec1	equ	0xFE5
  5628                           preinc1	equ	0xFE4
  5629                           plusw1	equ	0xFE3
  5630                           fsr1h	equ	0xFE2
  5631                           fsr1l	equ	0xFE1
  5632                           bsr	equ	0xFE0
  5633                           indf2	equ	0xFDF
  5634                           postinc2	equ	0xFDE
  5635                           postdec2	equ	0xFDD
  5636                           preinc2	equ	0xFDC
  5637                           plusw2	equ	0xFDB
  5638                           fsr2h	equ	0xFDA
  5639                           fsr2l	equ	0xFD9
  5640                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        1
    BSS         75
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     16      94
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> data_buffer(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S824$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S824$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    MFRC522_ReadCardSerial@str	PTR unsigned char  size(2) Largest target is 16
		 -> UID(BANK0[16]), 

    MFRC522_IsCard@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType(BANK0[1]), 

    MFRC522_AntiColl@serNum	PTR unsigned char  size(2) Largest target is 16
		 -> UID(BANK0[16]), 

    MFRC522_CRC@dataOut	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_CRC@dataIn	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_Request@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType(BANK0[1]), 

    MFRC522_ToCard@backData	PTR unsigned char  size(2) Largest target is 16
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), UID(BANK0[16]), TagType(BANK0[1]), 

    MFRC522_ToCard@backLen	PTR unsigned int  size(2) Largest target is 2
		 -> MFRC522_AntiColl@unLen(COMRAM[2]), MFRC522_Halt@unLen(COMRAM[2]), MFRC522_SelectTag@recvBits(COMRAM[2]), MFRC522_Request@backBits(COMRAM[2]), 

    MFRC522_ToCard@sendData	PTR unsigned char  size(2) Largest target is 16
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), UID(BANK0[16]), TagType(BANK0[1]), 

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 16
		 -> data_buffer(BANK0[16]), STR_2(CODE[4]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _MFRC522_ReadCardSerial->_MFRC522_AntiColl
    _MFRC522_AntiColl->_MFRC522_ToCard
    _MFRC522_IsCard->_MFRC522_Request
    _MFRC522_Request->_MFRC522_ToCard
    _MFRC522_Reset->_MFRC522_Wr
    _MFRC522_AntennaOn->_MFRC522_Set_Bit
    _MFRC522_AntennaOff->_MFRC522_Clear_Bit
    _MFRC522_Halt->_MFRC522_ToCard
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_ToCard->_MFRC522_Set_Bit
    _MFRC522_CRC->_MFRC522_Clear_Bit
    _MFRC522_CRC->_MFRC522_Set_Bit
    _MFRC522_Set_Bit->_MFRC522_Rd
    _MFRC522_Clear_Bit->_MFRC522_Rd
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble
    _LCD_Write_Nibble->_Expander_Write
    _Expander_Write->_I2CLCD_Write
    _I2CLCD_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   53838
                                             13 BANK0      3     3      0
                        _I2CLCD_Init
                          _LCD_Begin
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                       _MFRC522_Halt
                       _MFRC522_Init
                     _MFRC522_IsCard
             _MFRC522_ReadCardSerial
                          _port_Init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    6335
                                             89 COMRAM     6     0      6
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5984
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5629
                                             62 COMRAM    19    13      6
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    24     11    4191
                                             27 COMRAM    35    24     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              6     4      2     388
                                              6 COMRAM     6     4      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MFRC522_ReadCardSerial                               3     1      2   11989
                                             39 COMRAM     3     1      2
                   _MFRC522_AntiColl
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntiColl                                     8     6      2   11846
                                             31 COMRAM     8     6      2
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_IsCard                                       2     0      2    9592
                                             37 COMRAM     2     0      2
                    _MFRC522_Request
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Request                                      6     4      2    9494
                                             31 COMRAM     6     4      2
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Init                                         0     0      0    7318
                 _MFRC522_AntennaOff
                  _MFRC522_AntennaOn
                      _MFRC522_Reset
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Reset                                        0     0      0    1453
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOn                                    1     1      0    2174
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOff                                   0     0      0    2238
                  _MFRC522_Clear_Bit
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Halt                                         6     6      0   16650
                                             31 COMRAM     6     6      0
                        _MFRC522_CRC
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
 ---------------------------------------------------------------------------------
 (3) _MFRC522_ToCard                                      19    12      7    7783
                                             12 COMRAM    19    12      7
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_CRC                                          7     2      5    6480
                                             12 COMRAM     7     2      5
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit                                      3     2      1    2010
                                              9 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit                                    3     2      1    2238
                                              9 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr                                           5     4      1    1453
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd                                           9     9      0     163
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            6     4      2     473
                                              4 COMRAM     6     4      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Goto                                             4     3      1     537
                                              6 COMRAM     4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     265
                                              6 COMRAM     3     3      0
                     _Expander_Write
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              2     2      0     199
                                              4 COMRAM     2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Nibble                                     1     1      0     111
                                              3 COMRAM     1     1      0
                     _Expander_Write
 ---------------------------------------------------------------------------------
 (3) _Expander_Write                                       1     1      0      44
                                              2 COMRAM     1     1      0
                       _I2CLCD_Start
                        _I2CLCD_Stop
                       _I2CLCD_Write
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Write                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Stop                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Start                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2CLCD_Init                                          8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2CLCD_Init
     ___lldiv
   _LCD_Begin
     _Expander_Write
       _I2CLCD_Start
       _I2CLCD_Stop
       _I2CLCD_Write
     _LCD_Cmd
       _LCD_Write_Nibble
         _Expander_Write
   _LCD_Cmd
   _LCD_Goto
     _LCD_Cmd
   _LCD_Print
     _LCD_Write_Nibble
   _MFRC522_Halt
     _MFRC522_CRC
       _MFRC522_Clear_Bit
         _MFRC522_Rd
         _MFRC522_Wr
       _MFRC522_Rd
       _MFRC522_Set_Bit
         _MFRC522_Rd
         _MFRC522_Wr
       _MFRC522_Wr
     _MFRC522_Clear_Bit
     _MFRC522_ToCard
       _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Set_Bit
       _MFRC522_Wr
   _MFRC522_Init
     _MFRC522_AntennaOff
       _MFRC522_Clear_Bit
     _MFRC522_AntennaOn
       _MFRC522_Rd
       _MFRC522_Set_Bit
     _MFRC522_Reset
       _MFRC522_Wr
     _MFRC522_Wr
   _MFRC522_IsCard
     _MFRC522_Request
       _MFRC522_ToCard
       _MFRC522_Wr
   _MFRC522_ReadCardSerial
     _MFRC522_AntiColl
       _MFRC522_Clear_Bit
       _MFRC522_ToCard
       _MFRC522_Wr
   _port_Init
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
           _toupper
             _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     10      5E       5       58.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhhh       36      0       0      20        0.0%
BITBIGSFRhhlh       2F      0       0      21        0.0%
BITBIGSFRll         23      0       0      26        0.0%
BITBIGSFRlh          6      0       0      25        0.0%
BITBIGSFRhlh         6      0       0      23        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BITBIGSFRhll         1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BD      27        0.0%
DATA                 0      0      BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 19 01:58:56 2022

                   MFRC522_Rd@i 0008                    MFRC522_CRC@i 0013                    MFRC522_CRC@n 0012  
                   MFRC522_Wr@i 0005                              l61 1CFA                              l94 1914  
                            l97 1C60                              l99 1C84                              _RS 05E0  
                           l100 1C86                             l103 1C38                             l111 1BE0  
                           l112 1BE4                             l200 1C0E                             l105 1C5C  
                           l106 1C5E                             l203 1CE8                             l109 1BBC  
                           l133 1CA4                             l221 0BA0                             l142 19B2  
                           l206 1CF4                             l151 173E                             l136 1B56  
                           l160 1448                             l232 0CE8                             l240 17A4  
                           l225 0D40                             l209 1864                             l323 15A0  
                           l163 114A                             l243 17A6                             l316 1590  
                           l253 1640                             l237 0D42                             l182 1352  
                           l190 16D0                             l270 14FC                             l183 138C  
                           l191 16D4                             l263 18BC                             l184 1392  
                           l249 15F4                             l194 1CBE                             l274 1C36  
                           l266 14FA                             l197 1CD6                             l279 1B1E  
                           l967 1966                             l998 125C                             _PEN 007E2A  
                           _SEN 007E28                             _UID 008A                             _led 0068  
                           _pad 1216                             wreg 000FE8                  ??_MFRC522_Halt 0020  
                ??_MFRC522_Init 000D                 __end_of_LCD_Cmd 19B4                            l1001 129E  
                          l1010 0852                            l1003 12DA                            l1008 084A  
                          l2001 1AB0                            l1042 1800                            l1027 0A50  
                          l1043 1808                            l1052 1AE6                            l1036 0F12  
                          l2101 1B2C                            l2021 1CA8                            l2005 1A3C  
                          l2013 19B4                            l1029 0AB4                            l1046 1A76  
                          l2111 1B50                            l2103 1B34                            l2023 1CA8  
                          l2031 1CCA                            l2015 19E2                            l2105 1B3A  
                          l2025 1CB0                            l2121 0AE0                            l2113 0AB8  
                          l2009 19B4                            l2041 0868                            l2033 0812  
                          l2201 0D88                            l2019 1C8A                            l2107 1B42  
                          l2027 1CC2                            l2131 0B5A                            l2123 0B0A  
                          l2115 0AC8                            l1067 1214                            l1075 1A3A  
                          l2051 08A6                            l2043 0870                            l2035 0822  
                          l2211 0DF8                            l2203 0D8C                            l1084 1B8C  
                          l1092 19F6                            l2109 1B48                            l2029 1CC2  
                          l2141 0BA8                            l2133 0B76                            l2125 0B34  
                          l2117 0AD4                            l2301 144E                            l2061 08E6  
                          l2053 08AE                            l2045 0890                            l2037 0824  
                          l2221 0EA2                            l2213 0E34                            l2205 0DB0  
                          l1078 1CFC                            l2151 0BEC                            l2143 0BAE  
                          l2135 0B80                            l2127 0B40                            l2311 14A2  
                          l2303 1458                            l2071 0958                            l2055 08CA  
                          l2047 0898                            l2039 083E                            l2223 0EB6  
                          l2207 0DD4                            l2241 196A                            l2401 16DC  
                          l2161 0C34                            l2153 0BFE                            l2145 0BC0  
                          l2137 0B92                            l2129 0B56                            l2321 14C6  
                          l2313 14B2                            l2305 1464                            l1089 19EE  
                          l2081 09EE                            l2073 0968                            l2057 08DA  
                          l2049 08A0                            l2209 0DEA                            l2217 0E70  
                          l2233 0EDC                            l1098 1AAE                            l2331 14FE  
                          l2243 196E                            l2403 16E8                            l2171 0CC0  
                          l2163 0C46                            l2155 0C18                            l2147 0BCE  
                          l2139 0B9C                            l2251 1BE6                            l2323 14C8  
                          l2307 1474                            l2091 0A66                            l2083 0A0C  
                          l2075 096E                            l2067 0912                            l2235 0F00  
                          l2219 0E94                            l2227 0EC2                            l2341 1546  
                          l2333 150E                            l2245 1980                            l2405 16F4  
                          l2421 140A                            l2181 0D08                            l2173 0CD0  
                          l2165 0C58                            l2157 0C1C                            l2149 0BE2  
                          l2253 1BFE                            l2261 1742                            l2325 14D8  
                          l2309 147E                            l2093 0A76                            l2085 0A26  
                          l2077 0974                            l2069 0944                            l2229 0ED0  
                          l2501 0FA0                            l2351 158A                            l2343 1550  
                          l2335 1524                            l2247 1990                            l2407 1700  
                          l2423 140C                            l2415 1394                            l2183 0D0C  
                          l2175 0CD4                            l2167 0C68                            l2159 0C30  
                          l2255 1C08                            l2271 17A0                            l2263 174C  
                          l2327 14F6                            l2319 14B6                            l2095 0A8C  
                          l2087 0A40                            l2079 09D2                            l2503 0FBC  
                          l2345 156E                            l2337 152C                            l2249 19A2  
                          l2409 170C                            l2417 1398                            l2281 15D0  
                          l2185 0D28                            l2177 0CE4                            l2169 0CAC  
                          l2257 1CD8                            l2265 1758                            l2433 1C34  
                          l2425 1C10                            l2441 1B06                            l2361 1CF6  
                          l2089 0A60                            l2353 17A8                            l2521 1032  
                          l2513 0FE8                            l2505 0FD8                            l2347 157E  
                          l2339 1538                            l2363 18BE                            l2099 1B22  
                          l2371 1064                            l2419 13A0                            l2291 15FC  
                          l2283 15D4                            l2275 15A2                            l2179 0CF4  
                          l2187 0D3C                            l2259 1CEA                            l2267 177C  
                          l2427 1C2E                            l2443 1B16                            l2195 0D44  
                          l2355 17B0                            l2523 104C                            l2515 1012  
                          l2507 0FE2                            l2349 1580                            l2365 18C6  
                          l1901 1BCA                            l2381 10B0                            l2373 106A  
                          l2293 15FE                            l2285 15D6                            l2277 15B6  
                          l2269 178C                            l2437 1AE8                            l2197 0D68  
                          l2357 17BE                            l2461 1954                            l2453 1916  
                          l2525 1050                            l2517 1016                            l2367 1910  
                          l2391 1114                            l2383 10C4                            l2375 1088  
                          l1911 12FE                            l1903 12DE                            l2295 160E  
                          l2287 15E8                            l2279 15BE                            l2607 0AF4  
                          l2471 1890                            l2439 1AF6                            l2199 0D76  
                          l2359 17E4                            l2455 1928                            l2519 1026  
                          l2393 112C                            l2385 10D2                            l2377 1096  
                          l2369 1060                            l2609 1720                            l1921 132A  
                          l1905 12E6                            l2297 161C                            l2289 15F2  
                          l2473 18B2                            l2465 1866                            l2449 1B1C  
                          l2457 1930                            l2481 0F32                            l2387 10F0  
                          l2379 10AA                            l1923 1330                            l1907 12E8  
                          l2467 186E                            l2395 180A                            l2299 144A  
                          l2459 1938                            l2491 0F68                            l2483 0F36  
                          l2475 0F14                            l2389 10F6                            l1941 1390  
                          l1933 1354                            l1925 1332                            l1917 1306  
                          l1909 12EA                            l2469 1886                            l2397 181C  
                          l1861 117A                            l2493 0F82                            l2485 0F50  
                          l2477 0F18                            l2399 16D8                            l1935 135A  
                          l1927 134A                            l1919 1328                            l1863 1198  
                          l1855 114C                            l1871 1A04                            l2495 0F88  
                          l2487 0F5A                            l2479 0F2C                            l1937 1372  
                          l1961 167E                            l1945 1644                            l1865 11CE  
                          l1857 115E                            l1873 1A16                            l1881 1B68  
                          l2497 0F8A                            l2489 0F66                            l1891 1C60  
                          l1939 1374                            l1971 16B6                            l1963 1680  
                          l1955 1654                            l1947 1648                            l1859 1170  
                          l1875 1A1A                            l1883 1B80                            l2499 0F94  
                          l1893 1C6E                            l1973 16BC                            l1965 1690  
                          l1957 1676                            l1949 1650                            l1869 19F8  
                          l1877 1B58                            l1981 1226                            ?_pad 0011  
                          l1895 1C38                            l1975 16BE                            l1959 167C  
                          l1879 1B64                            l1991 127C                            l1983 123A  
                          l1887 1A78                            l1897 1C46                            l1977 16C0  
                          l1969 1694                            l1993 1280                            l1985 1248  
                          l1899 1BBC                            l1995 12AE                            l1987 1254  
                          l1979 1216                            l1997 12C2                            l1989 1268  
             ?_LCD_Write_Nibble 0001                            STR_1 0801                            STR_2 0809  
                          STR_3 080D                            u1100 1AA8                            u1101 1AA2  
                          u1110 1AAA                            u1120 1C6E                            u1200 134A  
                          u1040 115E                            u1121 1C6A                            u1201 1346  
                          u1041 115A                            u1130 1C84                            u1210 136C  
                          u1050 1170                            u1131 1C80                            u1211 1364  
                          u1051 116C                            u1140 1C46                            u1220 138C  
                          u1060 1198                            u1300 1248                            u1141 1C42  
                          u1221 1388                            u1061 1194                            u1301 1244  
                          u1150 1C5C                            u1230 1666                            u1070 11CE  
                          u1310 129E                            u1151 1C58                            u2007 10A2  
                          u1231 165E                            u1071 11CA                            u1311 129A  
                          u1160 1BCA                            u1080 1A3A                            u1320 12AE  
                          u1400 0868                            u1161 1BC6                            u2017 10B6  
                          u1081 1A36                            u1321 12AA                            u1401 0864  
                          u1170 1BE0                            u1218 136E                            u1250 1690  
                          u1330 1AE0                            u1090 1B80                            u1410 08CA  
                          u1171 1BDC                            u2027 10CA                            u1251 168C  
                          u1331 1ADA                            u1091 1B7C                            u1411 08C6  
                          u1180 1318                            u1260 16A6                            u1340 1AE2  
                          u1500 0A60                            u1420 0912                            u2037 10E2  
                          u1181 1310                            u1261 169E                            u1501 0A5C  
                          u1421 090E                            u1510 0B76                            u1350 1A70  
                          u1430 0944                            u2047 1100                            u1511 0B72  
                          u1351 1A6A                            u1431 0940                            u1280 16D0  
                          u1248 1668                            u1600 0C68                            u1520 0B92  
                          u1360 1A72                            u1440 09AC                            u2057 111E  
                          u1281 16CC                            u1601 0C64                            u1521 0B8E  
                          u1610 0CD0                            u1530 0BC0                            u1290 1226  
                          u1370 19E2                            u1450 09EE                            u2067 113C  
                          u1611 0CCC                            u1531 0BBC                            u1291 1222  
                          u1371 19DE                            u1451 09EA                            u1620 0CE4  
                          u1540 0BCE                            u1700 178C                            u1460 0A0C  
                          u1380 0822                            u2077 19A8                            u1621 0CE0  
                          u1541 0BCA                            u1701 1788                            u1461 0A08  
                          u1445 099A                            u1381 081E                            u1198 131A  
                          u1278 16A8                            u1630 0D28                            u1550 0BE2  
                          u1710 17A0                            u1470 0A26                            u1390 083E  
                          u2087 1B52                            u1631 0D24                            u1551 0BDE  
                          u1711 179C                            u1471 0A22                            u1391 083A  
                          u1800 156E                            u1720 15E8                            u1560 0BFE  
                          u1480 0A40                            u1640 0D68                            u1801 156A  
                          u1721 15E4                            u1561 0BFA                            u1481 0A3C  
                          u1641 0D64                            u1730 160E                            u1570 0C18  
                          u1490 0A50                            u1650 0DB0                            u1810 1800  
                          u1731 160A                            u1571 0C14                            u1491 0A4C  
                          u1651 0DAC                            u1811 17FC                            u1740 161C  
                          u1580 0C30                            u1660 0DD4                            u1900 0FD8  
                          u1741 1618                            u1581 0C2C                            u1661 0DD0  
                          u1901 0FD4                            u1830 13CC                            u1590 0C46  
                          u1750 14B2                            u1670 0E94                            u1910 1026  
                          u1591 0C42                            u1751 14AE                            u1671 0E90  
                          u1911 1022                            u1680 1990                            u1840 13FE  
                          u1760 14D8                            u1825 18E8                            u1681 198C  
                          u1761 14D4                            u1690 19A2                            u1850 1438  
                          u1770 14F6                            u1691 199E                            u1771 14F2  
                          u1780 1524                            u1860 1448                            u1781 1520  
                          u1861 1444                            u1837 13C2                            u1790 1546  
                          u1870 1C2E                            u1791 1542                            u1847 13F4  
                          u1871 1C2A                            u1880 1B16                            u1857 142E  
                          u1881 1B12                            u1890 0FBC                            u1891 0FB8  
                          u1957 0F42                            u1967 0F74                            u1977 103E  
                          u1987 1074                            _RCEN 007E2B                            u1997 108E  
                          _RSEN 007E29              ??_LCD_Write_Nibble 0004                            _dbuf 006A  
                          _main 0F14                            _prec 0064           MFRC522_AntiColl@unLen 0024  
                          _nout 0060                            pad@i 0018                            pad@p 0015  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001A  
                          fsr2l 000FD9                            _xtoa 0812                            prodh 000FF4  
                          prodl 000FF3                            start 0000                _MFRC522_AntiColl 144A  
                   LCD_Goto@col 000A                     LCD_Goto@row 0007                    ___param_bank 000000  
               ??_MFRC522_Reset 0006                           ??_pad 0017                __end_of_LCD_Goto 1740  
                         ?_main 0001                           _ACKEN 007E2C                           _ACKDT 007E2D  
       ?_MFRC522_ReadCardSerial 0028                 __end_of___lldiv 15A2                           ?_xtoa 001C  
                         _LATB7 007C57                    vfpfcnvrt@fmt 0041                    vfpfcnvrt@llu 0049  
                         _flags 0066                           _fputc 114C                 __end_of_isalpha 1A78  
                         _fputs 19F8          MFRC522_AntiColl@serNum 0020                           pad@fp 0011  
                         _width 0062                           _putch 1CFC                           main@i 00BA  
               __end_of_islower 1AB0                 __end_of_isupper 1AE8                           tablat 000FF5  
             _MFRC522_Clear_Bit 1CA6                           status 000FD8                 __end_of_sprintf 1968  
                         xtoa@c 003D                           xtoa@d 001E                           xtoa@i 003B  
                         xtoa@n 0033                           xtoa@p 002F                           xtoa@w 0031  
                         xtoa@x 0026              ?_MFRC522_Clear_Bit 000A                 __end_of_toupper 19F8  
             _MFRC522_AntennaOn 1CD8                 __initialization 1B8E                    __end_of_main 105E  
            ?_MFRC522_AntennaOn 0001             ??_MFRC522_Clear_Bit 000B                    __end_of_xtoa 0AB6  
              ??_MFRC522_IsCard 0028       MFRC522_ReadCardSerial@str 0028  __end_of_MFRC522_ReadCardSerial 1B20  
              ??_MFRC522_ToCard 0014                          ??_main 00B8             ??_MFRC522_AntennaOn 000D  
             __end_of_LCD_Begin 114C                          ??_xtoa 0027                   __activetblptr 000002  
                     ??_LCD_Cmd 0005                 MFRC522_ToCard@i 001D                 MFRC522_ToCard@n 001F  
         MFRC522_ToCard@backLen 0012               __end_of_LCD_Print 144A              MFRC522_Rd@ucResult 0006  
               MFRC522_Wr@value 0001       __end_of_MFRC522_Clear_Bit 1CC0           MFRC522_ToCard@_status 0019  
         MFRC522_ToCard@command 001C                          ?_fputc 0001                          ?_fputs 000A  
                        ?_putch 0001           MFRC522_ToCard@sendLen 000F           MFRC522_ToCard@waitIRq 0018  
                        _SSPADD 000FC8                          _TRISB7 007C9F                          _SSPBUF 000FC9  
     __end_of_MFRC522_AntennaOn 1CEA                    vfprintf@cfmt 0058            __end_of_MFRC522_Halt 18BE  
          __end_of_MFRC522_Init 1866         MFRC522_AntiColl@_status 0026                       ??___lldiv 0009  
                        clear_0 1BAA                          isa$std 000001                          pad@buf 0013  
                        _strlen 1B58                          fputc@c 0001                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                       ??_isalpha 0003  
                     ??_islower 0003                    __mediumconst 0000                          tblptrh 000FF7  
                     ??_isupper 0003                          tblptrl 000FF6                          tblptru 000FF8  
                        putch@c 0001                __end_of_vfprintf 180A                       ??_sprintf 0060  
                        xtoa@fp 001C                       ??_toupper 0009                      __accesstop 0060  
       __end_of__initialization 1BB0                       ?_LCD_Goto 0007                   ___rparam_used 000001  
        MFRC522_Request@TagType 0020                    ??_MFRC522_Rd 0001                    ??_MFRC522_Wr 0002  
            _MFRC522_AntennaOff 1CEA         I2CLCD_Init@i2c_clk_freq 000E                   _backlight_val 00BD  
                __pcstackCOMRAM 0001                    __pidataBANK0 1CFE                   ??_I2CLCD_Init 0012  
                 ??_I2CLCD_Stop 0001             ?_MFRC522_AntennaOff 0001                   __end_of_fputc 1216  
                 __end_of_fputs 1A3C                  LCD_Cmd@Command 0006                   __end_of_putch 1CFE  
              MFRC522_Halt@buff 0020          MFRC522_Request@_status 0023                MFRC522_Rd@ucAddr 0004  
        MFRC522_Request@reqMode 0022        __end_of_MFRC522_AntiColl 14FE               ??_MFRC522_Set_Bit 000B  
            __end_of_MFRC522_Rd 1394              __end_of_MFRC522_Wr 16D6               ??_MFRC522_Request 0022  
                       ??_fputc 0005                         ??_fputs 000E            ??_MFRC522_AntennaOff 000D  
                       ??_putch 0001                      __pbssBANK0 0060                      ??_LCD_Goto 0008  
        MFRC522_ToCard@backData 0010               MFRC522_CRC@dataIn 000D              MFRC522_Set_Bit@tmp 000B  
             MFRC522_CRC@length 000F                MFRC522_Wr@ucAddr 0004          MFRC522_ToCard@lastBits 001A  
                       ?_strlen 0001             __end_of_I2CLCD_Init 1916                         _LCD_Cmd 1968  
           __end_of_I2CLCD_Stop 1C60          MFRC522_ToCard@sendData 000D                         _SSPCON1 000FC6  
                       _SSPCON2 000FC5                         _SSPSTAT 000FC7                         _TagType 00AA  
                       __Hparam 0000                         __Lparam 0000            MFRC522_Clear_Bit@tmp 000B  
           Expander_Write@value 0003            I2CLCD_Write@i2c_data 0002                         ___lldiv 14FE  
                     ?_vfprintf 0052                    __psmallconst 0800                         __pcinit 1B8E  
         __end_of_MFRC522_Reset 1C10                         __ramtop 0800                         __ptext0 0F14  
                       __ptext1 1916                         __ptext2 17A8                         __ptext3 0D44  
                       __ptext4 0812                         __ptext5 19B4                         __ptext6 1A78  
                       __ptext7 1216                         __ptext8 1B58                         __ptext9 19F8  
                _Expander_Write 1C88                         _isalpha 1A3C                         _islower 1A78  
                       _isupper 1AB0                       _LCD_Begin 105E                       _LCD_Print 1394  
                       _sprintf 1916                    _MFRC522_Halt 1866                    _MFRC522_Init 180A  
                       _toupper 19B4            end_of_initialization 1BB0                         fputc@fp 0003  
                 __Lmediumconst 0000                         fputs@fp 000C                 ___lldiv@divisor 0005  
 MFRC522_ReadCardSerial@_status 002A                 ___lldiv@counter 000D               __end_of_port_Init 1CFC  
             __end_of_vfpfcnvrt 0F14                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                     _I2CLCD_Init 18BE  
                    ??_vfprintf 0058                     _I2CLCD_Stop 1C38               LCD_Write_Nibble@n 0004  
                       strlen@a 0003                         strlen@s 0001          __end_of_Expander_Write 1CA6  
                 ?_I2CLCD_Start 0001                       _PORTDbits 000F83                   ?_I2CLCD_Write 0001  
                     _TRISDbits 000F95                      ?_LCD_Begin 0001                      ?_LCD_Print 0005  
                 ??_MFRC522_CRC 0012                _LCD_Write_Nibble 1B20                      LCD_Print@i 000A  
               _MFRC522_Set_Bit 1CC0         MFRC522_Request@backBits 0024             MFRC522_ToCard@irqEn 001B  
                   vfpfcnvrt@ap 0043                     vfpfcnvrt@fp 003F                 _MFRC522_Request 1740  
                ??_I2CLCD_Start 0001                  ??_I2CLCD_Write 0001                 ?_Expander_Write 0001  
                 __pbitbssBANK0 05E0                  __end_of_strlen 1B8E             start_initialization 1B8E  
             MFRC522_Halt@unLen 0024               ?_MFRC522_AntiColl 0020               MFRC522_Rd@address 0003  
             MFRC522_AntiColl@i 0027                     __end_of_pad 12DC              ??_MFRC522_AntiColl 0022  
      ??_MFRC522_ReadCardSerial 002A                     vfprintf@fmt 0054             __end_of_MFRC522_CRC 1642  
                   __pdataBANK0 00BD                        ??_strlen 0003                        ?_LCD_Cmd 0001  
                 __pcstackBANK0 00AB                     ??_LCD_Begin 0007                     _data_buffer 009A  
                   ??_LCD_Print 0007                       __pnvBANK0 00BB         __end_of_MFRC522_Set_Bit 1CD8  
            MFRC522_CRC@dataOut 0010         __end_of_MFRC522_Request 17A8             MFRC522_Set_Bit@addr 000C  
             MFRC522_Wr@address 0003             MFRC522_Set_Bit@mask 000A                        ?___lldiv 0001  
              LCD_Print@LCD_Str 0005                     __smallconst 0800                        ?_isalpha 0001  
                      ?_islower 0001                        ?_isupper 0001                        ?_sprintf 005A  
                      ?_toupper 0007            __end_of_I2CLCD_Start 1C88                        _LCD_Goto 16D6  
                   _MFRC522_CRC 15A2            __end_of_I2CLCD_Write 1BE6                        _LATDbits 000F8C  
                  ?_I2CLCD_Init 000E                    ?_I2CLCD_Stop 0001                       _port_Init 1CF6  
                     _vfpfcnvrt 0D44                  _MFRC522_IsCard 1C10                  _MFRC522_ToCard 0AB6  
                    vfpfcnvrt@c 0051        __end_of_LCD_Write_Nibble 1B58                        _i2c_addr 00BB  
              ?_MFRC522_Set_Bit 000A                        __Hrparam 0000           MFRC522_Clear_Bit@addr 000C  
              ?_MFRC522_Request 0020           MFRC522_Clear_Bit@mask 000A                      vfprintf@ap 0056  
                      __Lrparam 0000                      vfprintf@fp 0052                ??_Expander_Write 0003  
                    ?_port_Init 0001                      ?_vfpfcnvrt 003F          __end_of_MFRC522_IsCard 1C38  
                    sprintf@fmt 005C          __end_of_MFRC522_ToCard 0D44          _MFRC522_ReadCardSerial 1AE8  
                      __ptext10 114C                        __ptext11 1CFC                        __ptext20 1BE6  
                      __ptext12 1AB0                        __ptext21 1CD8                        __ptext13 1A3C  
                      __ptext30 1394                        __ptext22 1CEA                        __ptext14 1CF6  
                      __ptext31 16D6                        __ptext23 1866                        __ptext15 1AE8  
                      __ptext40 14FE                        __ptext32 105E                        __ptext24 0AB6  
                      __ptext16 144A                        __ptext33 1968                        __ptext25 15A2  
                      __ptext17 1C10                        __ptext34 1B20                        __ptext26 1CC0  
                      __ptext18 1740                        __ptext35 1C88                        __ptext27 1CA6  
                      __ptext19 180A                        __ptext36 1BBA                        __ptext28 1642  
                      __ptext37 1C38                        __ptext29 12DC                        __ptext38 1C60  
                      __ptext39 18BE     MFRC522_AntiColl@serNumCheck 0023                      _MFRC522_Rd 12DC  
                    _MFRC522_Wr 1642                        isa$xinst 000000                        _vfprintf 17A8  
                 _MFRC522_Reset 1BE6                 ?_MFRC522_IsCard 0026                 ?_MFRC522_ToCard 000D  
                      isalpha@c 0001              LCD_Begin@_i2c_addr 0009                       sprintf@ap 00AB  
                      islower@c 0001                ___lldiv@dividend 0001                        isupper@c 0001  
         MFRC522_IsCard@TagType 0026                     ??_port_Init 0001                     ??_vfpfcnvrt 0045  
                ?_MFRC522_Reset 0001                    _I2CLCD_Start 1C60                    _I2CLCD_Write 1BBA  
                      sprintf@f 00AD                        sprintf@s 005A                ___lldiv@quotient 0009  
                      toupper@c 0007      __end_of_MFRC522_AntennaOff 1CF6                   ?_MFRC522_Halt 0001  
                 ?_MFRC522_Init 0001                    ?_MFRC522_CRC 000D                     ?_MFRC522_Rd 0001  
                   ?_MFRC522_Wr 0001  
