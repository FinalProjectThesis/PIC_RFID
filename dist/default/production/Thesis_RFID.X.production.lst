

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar 23 19:40:23 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63  0000                     
    64                           ; Version 2.40
    65                           ; Generated 17/11/2021 GMT
    66                           ; 
    67                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4550 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	idataBANK0
   101  002476                     __pidataBANK0:
   102                           	callstack 0
   103                           
   104                           ;initializer for _backlight_val
   105  002476  08                 	db	8
   106  0000                     _SSPSTAT	set	4039
   107  0000                     _SSPADD	set	4040
   108                           
   109                           	psect	nvBANK0
   110  0000D9                     __pnvBANK0:
   111                           	callstack 0
   112  0000D9                     _i2c_addr:
   113                           	callstack 0
   114  0000D9                     	ds	1
   115  0000                     _ACKEN	set	32300
   116  0000                     _ACKDT	set	32301
   117  0000                     _RCEN	set	32299
   118  0000                     _RSEN	set	32297
   119  0000                     _PEN	set	32298
   120  0000                     _SEN	set	32296
   121  0000                     _PORTDbits	set	3971
   122  0000                     _LATAbits	set	3977
   123  0000                     _LATB7	set	31831
   124  0000                     _LATDbits	set	3980
   125  0000                     _TRISB7	set	31903
   126  0000                     _TRISDbits	set	3989
   127  0000                     _SSPCON2	set	4037
   128  0000                     _SSPCON1	set	4038
   129  0000                     _SSPBUF	set	4041
   130  0000                     _TRISAbits	set	3986
   131                           
   132                           	psect	smallconst
   133  000800                     __psmallconst:
   134                           	callstack 0
   135  000800  00                 	db	0
   136  000801                     STR_1:
   137  000801  57                 	db	87	;'W'
   138  000802  65                 	db	101	;'e'
   139  000803  6C                 	db	108	;'l'
   140  000804  63                 	db	99	;'c'
   141  000805  6F                 	db	111	;'o'
   142  000806  6D                 	db	109	;'m'
   143  000807  65                 	db	101	;'e'
   144  000808  00                 	db	0
   145  000809                     STR_4:
   146  000809  25                 	db	37
   147  00080A  58                 	db	88	;'X'
   148  00080B  00                 	db	0
   149  00080C                     STR_2:
   150  00080C  25                 	db	37
   151  00080D  64                 	db	100	;'d'
   152  00080E  00                 	db	0
   153  00080F  00                 	db	0	; dummy byte at the end
   154  0000                     
   155                           ; #config settings
   156                           
   157                           	psect	cinit
   158  002300                     __pcinit:
   159                           	callstack 0
   160  002300                     start_initialization:
   161                           	callstack 0
   162  002300                     __initialization:
   163                           	callstack 0
   164                           
   165                           ; Initialize objects allocated to BANK0 (1 bytes)
   166                           ; load TBLPTR registers with __pidataBANK0
   167  002300  0E76               	movlw	low __pidataBANK0
   168  002302  6EF6               	movwf	tblptrl,c
   169  002304  0E24               	movlw	high __pidataBANK0
   170  002306  6EF7               	movwf	tblptrh,c
   171  002308  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   172  00230A  6EF8               	movwf	tblptru,c
   173  00230C  0009               	tblrd		*+	;fetch initializer
   174  00230E  CFF5 F0DB          	movff	tablat,__pdataBANK0
   175                           
   176                           ; Clear objects allocated to BITBANK0 (1 bytes)
   177  002312  0100               	movlb	0
   178  002314  6BDA               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
   179                           
   180                           ; Clear objects allocated to BANK0 (92 bytes)
   181  002316  EE00  F060         	lfsr	0,__pbssBANK0
   182  00231A  0E5C               	movlw	92
   183  00231C                     clear_0:
   184  00231C  6AEE               	clrf	postinc0,c
   185  00231E  06E8               	decf	wreg,f,c
   186  002320  E1FD               	bnz	clear_0
   187  002322                     end_of_initialization:
   188                           	callstack 0
   189  002322                     __end_of__initialization:
   190                           	callstack 0
   191  002322  0E00               	movlw	low (__Lmediumconst shr (0+16))
   192  002324  6EF8               	movwf	tblptru,c
   193  002326  0100               	movlb	0
   194  002328  EF5E  F009         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	bitbssBANK0
   197  0006D0                     __pbitbssBANK0:
   198                           	callstack 0
   199  0006D0                     _RS:
   200                           	callstack 0
   201  0006D0                     	ds	1
   202                           
   203                           	psect	bssBANK0
   204  000060                     __pbssBANK0:
   205                           	callstack 0
   206  000060                     _nout:
   207                           	callstack 0
   208  000060                     	ds	2
   209  000062                     _width:
   210                           	callstack 0
   211  000062                     	ds	2
   212  000064                     _prec:
   213                           	callstack 0
   214  000064                     	ds	2
   215  000066                     _flags:
   216                           	callstack 0
   217  000066                     	ds	2
   218  000068                     _led:
   219                           	callstack 0
   220  000068                     	ds	2
   221  00006A                     _status:
   222                           	callstack 0
   223  00006A                     	ds	1
   224  00006B                     _dbuf:
   225                           	callstack 0
   226  00006B                     	ds	32
   227  00008B                     _temp:
   228                           	callstack 0
   229  00008B                     	ds	16
   230  00009B                     _UID:
   231                           	callstack 0
   232  00009B                     	ds	16
   233  0000AB                     _data_buffer:
   234                           	callstack 0
   235  0000AB                     	ds	16
   236  0000BB                     _TagType:
   237                           	callstack 0
   238  0000BB                     	ds	1
   239                           
   240                           	psect	dataBANK0
   241  0000DB                     __pdataBANK0:
   242                           	callstack 0
   243  0000DB                     _backlight_val:
   244                           	callstack 0
   245  0000DB                     	ds	1
   246                           
   247                           	psect	cstackBANK0
   248  0000BC                     __pcstackBANK0:
   249                           	callstack 0
   250  0000BC                     ?_vfprintf:
   251                           	callstack 0
   252  0000BC                     vfprintf@fp:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x0
   256  0000BC                     	ds	2
   257  0000BE                     vfprintf@fmt:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x2
   261  0000BE                     	ds	2
   262  0000C0                     vfprintf@ap:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x4
   266  0000C0                     	ds	2
   267  0000C2                     ?_sprintf:
   268                           	callstack 0
   269  0000C2                     sprintf@s:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x6
   273  0000C2                     	ds	2
   274  0000C4                     sprintf@fmt:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x8
   278  0000C4                     	ds	4
   279  0000C8                     sprintf@ap:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0xC
   283  0000C8                     	ds	2
   284  0000CA                     sprintf@f:
   285                           	callstack 0
   286                           
   287                           ; 11 bytes @ 0xE
   288  0000CA                     	ds	11
   289  0000D5                     _main$1375:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x19
   293  0000D5                     	ds	2
   294  0000D7                     main@i:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x1B
   298  0000D7                     	ds	2
   299                           
   300                           	psect	cstackCOMRAM
   301  000001                     __pcstackCOMRAM:
   302                           	callstack 0
   303  000001                     ??_I2CLCD_Start:
   304  000001                     ??_I2CLCD_Stop:
   305  000001                     ??_I2CLCD_Write:
   306  000001                     ??_MFRC522_Rd:
   307  000001                     ?_strlen:
   308                           	callstack 0
   309  000001                     ?_isupper:
   310                           	callstack 0
   311  000001                     ?_isalpha:
   312                           	callstack 0
   313  000001                     ?_islower:
   314                           	callstack 0
   315  000001                     ?___lldiv:
   316                           	callstack 0
   317  000001                     ?___aodiv:
   318                           	callstack 0
   319  000001                     ?___aomod:
   320                           	callstack 0
   321  000001                     MFRC522_Wr@value:
   322                           	callstack 0
   323  000001                     isalpha@c:
   324                           	callstack 0
   325  000001                     isupper@c:
   326                           	callstack 0
   327  000001                     fputc@c:
   328                           	callstack 0
   329  000001                     strlen@s:
   330                           	callstack 0
   331  000001                     islower@c:
   332                           	callstack 0
   333  000001                     ___lldiv@dividend:
   334                           	callstack 0
   335  000001                     ___aodiv@dividend:
   336                           	callstack 0
   337  000001                     ___aomod@dividend:
   338                           	callstack 0
   339                           
   340                           ; 8 bytes @ 0x0
   341  000001                     	ds	1
   342  000002                     ??_MFRC522_Wr:
   343  000002                     I2CLCD_Write@i2c_data:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x1
   347  000002                     	ds	1
   348  000003                     ??_isupper:
   349  000003                     ??_isalpha:
   350  000003                     ??_islower:
   351  000003                     Expander_Write@value:
   352                           	callstack 0
   353  000003                     MFRC522_Rd@address:
   354                           	callstack 0
   355  000003                     MFRC522_Wr@address:
   356                           	callstack 0
   357  000003                     fputc@fp:
   358                           	callstack 0
   359  000003                     strlen@a:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x2
   363  000003                     	ds	1
   364  000004                     LCD_Write_Nibble@n:
   365                           	callstack 0
   366  000004                     MFRC522_Wr@ucAddr:
   367                           	callstack 0
   368  000004                     MFRC522_Rd@ucAddr:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x3
   372  000004                     	ds	1
   373  000005                     ??_LCD_Cmd:
   374  000005                     ??_fputc:
   375  000005                     MFRC522_Wr@i:
   376                           	callstack 0
   377  000005                     LCD_Print@LCD_Str:
   378                           	callstack 0
   379  000005                     ___lldiv@divisor:
   380                           	callstack 0
   381                           
   382                           ; 4 bytes @ 0x4
   383  000005                     	ds	1
   384  000006                     LCD_Cmd@Command:
   385                           	callstack 0
   386  000006                     MFRC522_Rd@ucResult:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x5
   390  000006                     	ds	1
   391  000007                     ??_LCD_Begin:
   392  000007                     ??_LCD_Print:
   393  000007                     ?_toupper:
   394                           	callstack 0
   395  000007                     LCD_Goto@row:
   396                           	callstack 0
   397  000007                     toupper@c:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x6
   401  000007                     	ds	1
   402  000008                     ??_LCD_Goto:
   403  000008                     MFRC522_Rd@i:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x7
   407  000008                     	ds	1
   408  000009                     ??_toupper:
   409  000009                     LCD_Begin@_i2c_addr:
   410                           	callstack 0
   411  000009                     ___lldiv@quotient:
   412                           	callstack 0
   413  000009                     ___aodiv@divisor:
   414                           	callstack 0
   415  000009                     ___aomod@divisor:
   416                           	callstack 0
   417                           
   418                           ; 8 bytes @ 0x8
   419  000009                     	ds	1
   420  00000A                     LCD_Goto@col:
   421                           	callstack 0
   422  00000A                     LCD_Print@i:
   423                           	callstack 0
   424  00000A                     MFRC522_Clear_Bit@mask:
   425                           	callstack 0
   426  00000A                     MFRC522_Set_Bit@mask:
   427                           	callstack 0
   428  00000A                     fputs@s:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x9
   432  00000A                     	ds	1
   433  00000B                     MFRC522_Clear_Bit@tmp:
   434                           	callstack 0
   435  00000B                     MFRC522_Set_Bit@tmp:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0xA
   439  00000B                     	ds	1
   440  00000C                     MFRC522_Clear_Bit@addr:
   441                           	callstack 0
   442  00000C                     MFRC522_Set_Bit@addr:
   443                           	callstack 0
   444  00000C                     fputs@fp:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0xB
   448  00000C                     	ds	1
   449  00000D                     ___lldiv@counter:
   450                           	callstack 0
   451  00000D                     MFRC522_ToCard@sendData:
   452                           	callstack 0
   453  00000D                     MFRC522_CRC@dataIn:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0xC
   457  00000D                     	ds	1
   458  00000E                     fputs@c:
   459                           	callstack 0
   460  00000E                     I2CLCD_Init@i2c_clk_freq:
   461                           	callstack 0
   462                           
   463                           ; 4 bytes @ 0xD
   464  00000E                     	ds	1
   465  00000F                     MFRC522_ToCard@sendLen:
   466                           	callstack 0
   467  00000F                     MFRC522_CRC@length:
   468                           	callstack 0
   469  00000F                     fputs@i:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0xE
   473  00000F                     	ds	1
   474  000010                     MFRC522_ToCard@backData:
   475                           	callstack 0
   476  000010                     MFRC522_CRC@dataOut:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xF
   480  000010                     	ds	1
   481  000011                     ?_pad:
   482                           	callstack 0
   483  000011                     ___aodiv@counter:
   484                           	callstack 0
   485  000011                     ___aomod@counter:
   486                           	callstack 0
   487  000011                     pad@fp:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x10
   491  000011                     	ds	1
   492  000012                     ??_I2CLCD_Init:
   493  000012                     MFRC522_CRC@n:
   494                           	callstack 0
   495  000012                     ___aodiv@sign:
   496                           	callstack 0
   497  000012                     ___aomod@sign:
   498                           	callstack 0
   499  000012                     MFRC522_ToCard@backLen:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x11
   503  000012                     	ds	1
   504  000013                     ?_abs:
   505                           	callstack 0
   506  000013                     MFRC522_CRC@i:
   507                           	callstack 0
   508  000013                     pad@buf:
   509                           	callstack 0
   510  000013                     abs@a:
   511                           	callstack 0
   512  000013                     ___aodiv@quotient:
   513                           	callstack 0
   514                           
   515                           ; 8 bytes @ 0x12
   516  000013                     	ds	1
   517  000014                     ??_MFRC522_ToCard:
   518                           
   519                           ; 1 bytes @ 0x13
   520  000014                     	ds	1
   521  000015                     ??_abs:
   522  000015                     pad@p:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x14
   526  000015                     	ds	2
   527  000017                     ??_pad:
   528                           
   529                           ; 1 bytes @ 0x16
   530  000017                     	ds	1
   531  000018                     MFRC522_ToCard@waitIRq:
   532                           	callstack 0
   533  000018                     pad@i:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x17
   537  000018                     	ds	1
   538  000019                     MFRC522_ToCard@_status:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x18
   542  000019                     	ds	1
   543  00001A                     MFRC522_ToCard@lastBits:
   544                           	callstack 0
   545  00001A                     pad@w:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x19
   549  00001A                     	ds	1
   550  00001B                     MFRC522_ToCard@irqEn:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x1A
   554  00001B                     	ds	1
   555  00001C                     ?_dtoa:
   556                           	callstack 0
   557  00001C                     ?_xtoa:
   558                           	callstack 0
   559  00001C                     MFRC522_ToCard@command:
   560                           	callstack 0
   561  00001C                     dtoa@fp:
   562                           	callstack 0
   563  00001C                     xtoa@fp:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x1B
   567  00001C                     	ds	1
   568  00001D                     MFRC522_ToCard@i:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x1C
   572  00001D                     	ds	1
   573  00001E                     dtoa@d:
   574                           	callstack 0
   575  00001E                     xtoa@d:
   576                           	callstack 0
   577                           
   578                           ; 8 bytes @ 0x1D
   579  00001E                     	ds	1
   580  00001F                     MFRC522_ToCard@n:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x1E
   584  00001F                     	ds	1
   585  000020                     MFRC522_Request@TagType:
   586                           	callstack 0
   587  000020                     MFRC522_AntiColl@serNum:
   588                           	callstack 0
   589  000020                     MFRC522_Halt@buff:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x1F
   593  000020                     	ds	2
   594  000022                     MFRC522_Request@reqMode:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x21
   598  000022                     	ds	1
   599  000023                     MFRC522_Request@_status:
   600                           	callstack 0
   601  000023                     MFRC522_AntiColl@serNumCheck:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x22
   605  000023                     	ds	1
   606  000024                     MFRC522_Request@backBits:
   607                           	callstack 0
   608  000024                     MFRC522_Halt@unLen:
   609                           	callstack 0
   610  000024                     MFRC522_AntiColl@unLen:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x23
   614  000024                     	ds	2
   615  000026                     ??_dtoa:
   616  000026                     MFRC522_AntiColl@_status:
   617                           	callstack 0
   618  000026                     xtoa@x:
   619                           	callstack 0
   620  000026                     MFRC522_IsCard@TagType:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x25
   624  000026                     	ds	1
   625  000027                     ??_xtoa:
   626  000027                     MFRC522_AntiColl@i:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0x26
   630  000027                     	ds	1
   631  000028                     MFRC522_ReadCardSerial@str:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x27
   635  000028                     	ds	2
   636  00002A                     
   637                           ; 1 bytes @ 0x29
   638  00002A                     	ds	4
   639  00002E                     _dtoa$1015:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x2D
   643  00002E                     	ds	1
   644  00002F                     xtoa@p:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x2E
   648  00002F                     	ds	1
   649  000030                     dtoa@p:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x2F
   653  000030                     	ds	1
   654  000031                     xtoa@w:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x30
   658  000031                     	ds	1
   659  000032                     dtoa@w:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x31
   663  000032                     	ds	1
   664  000033                     xtoa@n:
   665                           	callstack 0
   666                           
   667                           ; 8 bytes @ 0x32
   668  000033                     	ds	1
   669  000034                     dtoa@s:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x33
   673  000034                     	ds	2
   674  000036                     dtoa@n:
   675                           	callstack 0
   676                           
   677                           ; 8 bytes @ 0x35
   678  000036                     	ds	5
   679  00003B                     xtoa@i:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x3A
   683  00003B                     	ds	2
   684  00003D                     xtoa@c:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x3C
   688  00003D                     	ds	1
   689  00003E                     dtoa@i:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x3D
   693  00003E                     	ds	2
   694  000040                     ?_vfpfcnvrt:
   695                           	callstack 0
   696  000040                     vfpfcnvrt@fp:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x3F
   700  000040                     	ds	2
   701  000042                     vfpfcnvrt@fmt:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x41
   705  000042                     	ds	2
   706  000044                     vfpfcnvrt@ap:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x43
   710  000044                     	ds	2
   711  000046                     ??_vfpfcnvrt:
   712                           
   713                           ; 1 bytes @ 0x45
   714  000046                     	ds	4
   715  00004A                     vfpfcnvrt@ll:
   716                           	callstack 0
   717                           
   718                           ; 8 bytes @ 0x49
   719  00004A                     	ds	8
   720  000052                     vfpfcnvrt@llu:
   721                           	callstack 0
   722                           
   723                           ; 8 bytes @ 0x51
   724  000052                     	ds	8
   725  00005A                     vfpfcnvrt@c:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x59
   729  00005A                     	ds	1
   730  00005B                     vfprintf@cfmt:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x5A
   734  00005B                     	ds	2
   735  00005D                     ??_main:
   736                           
   737                           ; 1 bytes @ 0x5C
   738  00005D                     	ds	2
   739                           
   740 ;;
   741 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   742 ;;
   743 ;; *************** function _main *****************
   744 ;; Defined at:
   745 ;;		line 23 in file "main.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;		None
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  i               2   27[BANK0 ] int 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   759 ;;      Params:         0       0       0       0       0       0       0       0       0
   760 ;;      Locals:         0       4       0       0       0       0       0       0       0
   761 ;;      Temps:          2       0       0       0       0       0       0       0       0
   762 ;;      Totals:         2       4       0       0       0       0       0       0       0
   763 ;;Total ram usage:        6 bytes
   764 ;; Hardware stack levels required when called: 8
   765 ;; This function calls:
   766 ;;		_I2CLCD_Init
   767 ;;		_LCD_Begin
   768 ;;		_LCD_Cmd
   769 ;;		_LCD_Goto
   770 ;;		_LCD_Print
   771 ;;		_MFRC522_AntiColl
   772 ;;		_MFRC522_Halt
   773 ;;		_MFRC522_Init
   774 ;;		_MFRC522_IsCard
   775 ;;		_MFRC522_ReadCardSerial
   776 ;;		_port_Init
   777 ;;		_sprintf
   778 ;;		_strlen
   779 ;; This function is called by:
   780 ;;		Startup code after reset
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           	psect	text0
   785  0012BC                     __ptext0:
   786                           	callstack 0
   787  0012BC                     _main:
   788                           	callstack 23
   789  0012BC                     
   790                           ;main.c: 24:     port_Init();
   791  0012BC  EC37  F012         	call	_port_Init	;wreg free
   792  0012C0                     
   793                           ;main.c: 25:     I2CLCD_Init(100000);
   794  0012C0  0EA0               	movlw	160
   795  0012C2  6E0E               	movwf	I2CLCD_Init@i2c_clk_freq^0,c
   796  0012C4  0E86               	movlw	134
   797  0012C6  6E0F               	movwf	(I2CLCD_Init@i2c_clk_freq+1)^0,c
   798  0012C8  0E01               	movlw	1
   799  0012CA  6E10               	movwf	(I2CLCD_Init@i2c_clk_freq+2)^0,c
   800  0012CC  0E00               	movlw	0
   801  0012CE  6E11               	movwf	(I2CLCD_Init@i2c_clk_freq+3)^0,c
   802  0012D0  EC14  F010         	call	_I2CLCD_Init	;wreg free
   803  0012D4                     
   804                           ;main.c: 26:     LCD_Begin(0x4E);
   805  0012D4  0E4E               	movlw	78
   806  0012D6  ECDE  F00B         	call	_LCD_Begin
   807  0012DA                     
   808                           ;main.c: 27:     MFRC522_Init();
   809  0012DA  ECB8  F00F         	call	_MFRC522_Init	;wreg free
   810  0012DE                     
   811                           ;main.c: 28:     _delay((unsigned long)((500)*(27000000/4000.0)));
   812  0012DE  0E12               	movlw	18
   813  0012E0  6E5E               	movwf	(??_main+1)^0,c
   814  0012E2  0E20               	movlw	32
   815  0012E4  6E5D               	movwf	??_main^0,c
   816  0012E6  0E10               	movlw	16
   817  0012E8                     u2687:
   818  0012E8  2EE8               	decfsz	wreg,f,c
   819  0012EA  D7FE               	bra	u2687
   820  0012EC  2E5D               	decfsz	??_main^0,f,c
   821  0012EE  D7FC               	bra	u2687
   822  0012F0  2E5E               	decfsz	(??_main+1)^0,f,c
   823  0012F2  D7FA               	bra	u2687
   824  0012F4                     
   825                           ;main.c: 30:     LCD_Goto(1, 1);
   826  0012F4  0E01               	movlw	1
   827  0012F6  6E07               	movwf	LCD_Goto@row^0,c
   828  0012F8  0E01               	movlw	1
   829  0012FA  EC1E  F00F         	call	_LCD_Goto
   830  0012FE                     
   831                           ;main.c: 31:     LCD_Print("Welcome");
   832  0012FE  0E01               	movlw	low STR_1
   833  001300  6E05               	movwf	LCD_Print@LCD_Str^0,c
   834  001302  0E08               	movlw	high STR_1
   835  001304  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
   836  001306  EC7B  F00D         	call	_LCD_Print	;wreg free
   837  00130A                     
   838                           ;main.c: 32:     LATB7 = 1;
   839  00130A  8E8A               	bsf	3978,7,c	;volatile
   840  00130C                     
   841                           ;main.c: 34:     _delay((unsigned long)((2000)*(27000000/4000.0)));
   842  00130C  0E45               	movlw	69
   843  00130E  6E5E               	movwf	(??_main+1)^0,c
   844  001310  0E7D               	movlw	125
   845  001312  6E5D               	movwf	??_main^0,c
   846  001314  0E48               	movlw	72
   847  001316                     u2697:
   848  001316  2EE8               	decfsz	wreg,f,c
   849  001318  D7FE               	bra	u2697
   850  00131A  2E5D               	decfsz	??_main^0,f,c
   851  00131C  D7FC               	bra	u2697
   852  00131E  2E5E               	decfsz	(??_main+1)^0,f,c
   853  001320  D7FA               	bra	u2697
   854  001322                     
   855                           ;main.c: 35:     LCD_Cmd(0x01);
   856  001322  0E01               	movlw	1
   857  001324  EC69  F010         	call	_LCD_Cmd
   858  001328                     
   859                           ;main.c: 36:     LATB7 = 0;
   860  001328  9E8A               	bcf	3978,7,c	;volatile
   861  00132A                     l3123:
   862                           
   863                           ;main.c: 39:         MFRC522_IsCard(&TagType);
   864  00132A  0EBB               	movlw	low _TagType
   865  00132C  6E26               	movwf	MFRC522_IsCard@TagType^0,c
   866  00132E  0E00               	movlw	high _TagType
   867  001330  6E27               	movwf	(MFRC522_IsCard@TagType+1)^0,c
   868  001332  EC29  F012         	call	_MFRC522_IsCard	;wreg free
   869  001336                     
   870                           ;main.c: 40:         MFRC522_ReadCardSerial(&UID);
   871  001336  0E9B               	movlw	low _UID
   872  001338  6E28               	movwf	MFRC522_ReadCardSerial@str^0,c
   873  00133A  0E00               	movlw	high _UID
   874  00133C  6E29               	movwf	(MFRC522_ReadCardSerial@str+1)^0,c
   875  00133E  ECE9  F011         	call	_MFRC522_ReadCardSerial	;wreg free
   876  001342                     
   877                           ;main.c: 41:         status = MFRC522_AntiColl(&UID);
   878  001342  0E9B               	movlw	low _UID
   879  001344  6E20               	movwf	MFRC522_AntiColl@serNum^0,c
   880  001346  0E00               	movlw	high _UID
   881  001348  6E21               	movwf	(MFRC522_AntiColl@serNum+1)^0,c
   882  00134A  ECD6  F00D         	call	_MFRC522_AntiColl	;wreg free
   883  00134E  0100               	movlb	0	; () banked
   884  001350  6F6A               	movwf	_status& (0+255),b
   885  001352                     
   886                           ; BSR set to: 0
   887                           ;main.c: 43:         if (strlen(UID) == 1){
   888  001352  0E9B               	movlw	low _UID
   889  001354  6E01               	movwf	strlen@s^0,c
   890  001356  0E00               	movlw	high _UID
   891  001358  6E02               	movwf	(strlen@s+1)^0,c
   892  00135A  EC65  F011         	call	_strlen	;wreg free
   893  00135E  0401               	decf	?_strlen^0,w,c
   894  001360  1002               	iorwf	(?_strlen+1)^0,w,c
   895  001362  A4D8               	btfss	status,2,c
   896  001364  EFB6  F009         	goto	u2651
   897  001368  EFB8  F009         	goto	u2650
   898  00136C                     u2651:
   899  00136C  EFE1  F009         	goto	l3137
   900  001370                     u2650:
   901  001370                     
   902                           ;main.c: 44:             LCD_Cmd(0x01);
   903  001370  0E01               	movlw	1
   904  001372  EC69  F010         	call	_LCD_Cmd
   905                           
   906                           ;main.c: 45:             LCD_Goto(1, 1);
   907  001376  0E01               	movlw	1
   908  001378  6E07               	movwf	LCD_Goto@row^0,c
   909  00137A  0E01               	movlw	1
   910  00137C  EC1E  F00F         	call	_LCD_Goto
   911  001380                     
   912                           ;main.c: 46:             sprintf(temp, "%d", strlen(UID));
   913  001380  0E9B               	movlw	low _UID
   914  001382  6E01               	movwf	strlen@s^0,c
   915  001384  0E00               	movlw	high _UID
   916  001386  6E02               	movwf	(strlen@s+1)^0,c
   917  001388  EC65  F011         	call	_strlen	;wreg free
   918  00138C  C001  F0D5         	movff	?_strlen,_main$1375
   919  001390  C002  F0D6         	movff	?_strlen+1,_main$1375+1
   920  001394                     
   921                           ;main.c: 46:             sprintf(temp, "%d", strlen(UID));
   922  001394  0E8B               	movlw	low _temp
   923  001396  0100               	movlb	0	; () banked
   924  001398  6FC2               	movwf	sprintf@s& (0+255),b
   925  00139A  0E00               	movlw	high _temp
   926  00139C  6FC3               	movwf	(sprintf@s+1)& (0+255),b
   927  00139E  0E0C               	movlw	low STR_2
   928  0013A0  6FC4               	movwf	sprintf@fmt& (0+255),b
   929  0013A2  0E08               	movlw	high STR_2
   930  0013A4  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
   931  0013A6  C0D5  F0C6         	movff	_main$1375,?_sprintf+4
   932  0013AA  C0D6  F0C7         	movff	_main$1375+1,?_sprintf+5
   933  0013AE  EC40  F010         	call	_sprintf	;wreg free
   934                           
   935                           ;main.c: 47:             LCD_Print(temp);
   936  0013B2  0E8B               	movlw	low _temp
   937  0013B4  6E05               	movwf	LCD_Print@LCD_Str^0,c
   938  0013B6  0E00               	movlw	high _temp
   939  0013B8  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
   940  0013BA  EC7B  F00D         	call	_LCD_Print	;wreg free
   941                           
   942                           ;main.c: 48:         }
   943  0013BE  EF08  F00A         	goto	l3143
   944  0013C2                     l3137:
   945                           
   946                           ;main.c: 50:             LCD_Cmd(0x01);
   947  0013C2  0E01               	movlw	1
   948  0013C4  EC69  F010         	call	_LCD_Cmd
   949                           
   950                           ;main.c: 51:             LCD_Goto(1, 1);
   951  0013C8  0E01               	movlw	1
   952  0013CA  6E07               	movwf	LCD_Goto@row^0,c
   953  0013CC  0E01               	movlw	1
   954  0013CE  EC1E  F00F         	call	_LCD_Goto
   955  0013D2                     
   956                           ;main.c: 52:             sprintf(temp, "%d", strlen(UID));
   957  0013D2  0E9B               	movlw	low _UID
   958  0013D4  6E01               	movwf	strlen@s^0,c
   959  0013D6  0E00               	movlw	high _UID
   960  0013D8  6E02               	movwf	(strlen@s+1)^0,c
   961  0013DA  EC65  F011         	call	_strlen	;wreg free
   962  0013DE  C001  F0D5         	movff	?_strlen,_main$1375
   963  0013E2  C002  F0D6         	movff	?_strlen+1,_main$1375+1
   964  0013E6                     
   965                           ;main.c: 52:             sprintf(temp, "%d", strlen(UID));
   966  0013E6  0E8B               	movlw	low _temp
   967  0013E8  0100               	movlb	0	; () banked
   968  0013EA  6FC2               	movwf	sprintf@s& (0+255),b
   969  0013EC  0E00               	movlw	high _temp
   970  0013EE  6FC3               	movwf	(sprintf@s+1)& (0+255),b
   971  0013F0  0E0C               	movlw	low STR_2
   972  0013F2  6FC4               	movwf	sprintf@fmt& (0+255),b
   973  0013F4  0E08               	movlw	high STR_2
   974  0013F6  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
   975  0013F8  C0D5  F0C6         	movff	_main$1375,?_sprintf+4
   976  0013FC  C0D6  F0C7         	movff	_main$1375+1,?_sprintf+5
   977  001400  EC40  F010         	call	_sprintf	;wreg free
   978                           
   979                           ;main.c: 53:             LCD_Print(temp);
   980  001404  0E8B               	movlw	low _temp
   981  001406  6E05               	movwf	LCD_Print@LCD_Str^0,c
   982  001408  0E00               	movlw	high _temp
   983  00140A  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
   984  00140C  EC7B  F00D         	call	_LCD_Print	;wreg free
   985  001410                     l3143:
   986                           
   987                           ;main.c: 56:         LCD_Goto(1, 2);
   988  001410  0E02               	movlw	2
   989  001412  6E07               	movwf	LCD_Goto@row^0,c
   990  001414  0E01               	movlw	1
   991  001416  EC1E  F00F         	call	_LCD_Goto
   992  00141A                     
   993                           ;main.c: 58:         if(status == 0) {
   994  00141A  0100               	movlb	0	; () banked
   995  00141C  516A               	movf	_status& (0+255),w,b
   996  00141E  A4D8               	btfss	status,2,c
   997  001420  EF14  F00A         	goto	u2661
   998  001424  EF16  F00A         	goto	u2660
   999  001428                     u2661:
  1000  001428  EF55  F00A         	goto	l3163
  1001  00142C                     u2660:
  1002  00142C                     
  1003                           ; BSR set to: 0
  1004                           ;main.c: 59:             for(int i = 0; i < 5; i++)
  1005  00142C  0E00               	movlw	0
  1006  00142E  6FD8               	movwf	(main@i+1)& (0+255),b
  1007  001430  0E00               	movlw	0
  1008  001432  6FD7               	movwf	main@i& (0+255),b
  1009  001434                     l3153:
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;main.c: 60:             {;main.c: 61:                 sprintf(data_buffer, "%X", UID[i]
      +                          );
  1013  001434  0EAB               	movlw	low _data_buffer
  1014  001436  6FC2               	movwf	sprintf@s& (0+255),b
  1015  001438  0E00               	movlw	high _data_buffer
  1016  00143A  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  1017  00143C  0E09               	movlw	low STR_4
  1018  00143E  6FC4               	movwf	sprintf@fmt& (0+255),b
  1019  001440  0E08               	movlw	high STR_4
  1020  001442  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
  1021  001444  0E9B               	movlw	low _UID
  1022  001446  25D7               	addwf	main@i& (0+255),w,b
  1023  001448  6ED9               	movwf	fsr2l,c
  1024  00144A  0E00               	movlw	high _UID
  1025  00144C  21D8               	addwfc	(main@i+1)& (0+255),w,b
  1026  00144E  6EDA               	movwf	fsr2h,c
  1027  001450  50DF               	movf	indf2,w,c
  1028  001452  6E5D               	movwf	??_main^0,c
  1029  001454  505D               	movf	??_main^0,w,c
  1030  001456  6FC6               	movwf	(?_sprintf+4)& (0+255),b
  1031  001458  6BC7               	clrf	(?_sprintf+5)& (0+255),b
  1032  00145A  EC40  F010         	call	_sprintf	;wreg free
  1033  00145E                     
  1034                           ;main.c: 62:                 LCD_Print(data_buffer);
  1035  00145E  0EAB               	movlw	low _data_buffer
  1036  001460  6E05               	movwf	LCD_Print@LCD_Str^0,c
  1037  001462  0E00               	movlw	high _data_buffer
  1038  001464  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1039  001466  EC7B  F00D         	call	_LCD_Print	;wreg free
  1040  00146A                     
  1041                           ;main.c: 63:             }
  1042  00146A  0100               	movlb	0	; () banked
  1043  00146C  4BD7               	infsnz	main@i& (0+255),f,b
  1044  00146E  2BD8               	incf	(main@i+1)& (0+255),f,b
  1045  001470                     
  1046                           ; BSR set to: 0
  1047  001470  BFD8               	btfsc	(main@i+1)& (0+255),7,b
  1048  001472  EF44  F00A         	goto	u2671
  1049  001476  51D8               	movf	(main@i+1)& (0+255),w,b
  1050  001478  E109               	bnz	u2670
  1051  00147A  0E05               	movlw	5
  1052  00147C  5DD7               	subwf	main@i& (0+255),w,b
  1053  00147E  A0D8               	btfss	status,0,c
  1054  001480  EF44  F00A         	goto	u2671
  1055  001484  EF46  F00A         	goto	u2670
  1056  001488                     u2671:
  1057  001488  EF1A  F00A         	goto	l3153
  1058  00148C                     u2670:
  1059  00148C                     
  1060                           ; BSR set to: 0
  1061                           ;main.c: 64:             LATB7 = 1;
  1062  00148C  8E8A               	bsf	3978,7,c	;volatile
  1063  00148E                     
  1064                           ; BSR set to: 0
  1065                           ;main.c: 65:             _delay((unsigned long)((1000)*(27000000/4000.0)));
  1066  00148E  0E23               	movlw	35
  1067  001490  6E5E               	movwf	(??_main+1)^0,c
  1068  001492  0E3F               	movlw	63
  1069  001494  6E5D               	movwf	??_main^0,c
  1070  001496  0E22               	movlw	34
  1071  001498                     u2707:
  1072  001498  2EE8               	decfsz	wreg,f,c
  1073  00149A  D7FE               	bra	u2707
  1074  00149C  2E5D               	decfsz	??_main^0,f,c
  1075  00149E  D7FC               	bra	u2707
  1076  0014A0  2E5E               	decfsz	(??_main+1)^0,f,c
  1077  0014A2  D7FA               	bra	u2707
  1078  0014A4  D000               	nop2	
  1079                           
  1080                           ;main.c: 66:         } else {
  1081  0014A6  EF95  F009         	goto	l3123
  1082  0014AA                     l3163:
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;main.c: 67:             _delay((unsigned long)((50)*(27000000/4000.0)));
  1086  0014AA  0E02               	movlw	2
  1087  0014AC  6E5E               	movwf	(??_main+1)^0,c
  1088  0014AE  0EB7               	movlw	183
  1089  0014B0  6E5D               	movwf	??_main^0,c
  1090  0014B2  0E4C               	movlw	76
  1091  0014B4                     u2717:
  1092  0014B4  2EE8               	decfsz	wreg,f,c
  1093  0014B6  D7FE               	bra	u2717
  1094  0014B8  2E5D               	decfsz	??_main^0,f,c
  1095  0014BA  D7FC               	bra	u2717
  1096  0014BC  2E5E               	decfsz	(??_main+1)^0,f,c
  1097  0014BE  D7FA               	bra	u2717
  1098  0014C0  D000               	nop2	
  1099  0014C2                     
  1100                           ;main.c: 68:             LATB7 = 0;
  1101  0014C2  9E8A               	bcf	3978,7,c	;volatile
  1102  0014C4                     
  1103                           ;main.c: 69:             MFRC522_Halt();
  1104  0014C4  ECE8  F00F         	call	_MFRC522_Halt	;wreg free
  1105  0014C8  EF95  F009         	goto	l3123
  1106  0014CC  EF00  F000         	goto	start
  1107  0014D0                     __end_of_main:
  1108                           	callstack 0
  1109                           
  1110 ;; *************** function _sprintf *****************
  1111 ;; Defined at:
  1112 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  s               2    6[BANK0 ] PTR unsigned char 
  1115 ;;		 -> data_buffer(16), temp(16), 
  1116 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  1117 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  f              11   14[BANK0 ] struct _IO_FILE
  1120 ;;  ap              2   12[BANK0 ] PTR void [1]
  1121 ;;		 -> ?_sprintf(2), 
  1122 ;;  ret             2    0        int 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  2    6[BANK0 ] int 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1132 ;;      Params:         0       6       0       0       0       0       0       0       0
  1133 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1135 ;;      Totals:         0      19       0       0       0       0       0       0       0
  1136 ;;Total ram usage:       19 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 7
  1139 ;; This function calls:
  1140 ;;		_vfprintf
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text1
  1147  002080                     __ptext1:
  1148                           	callstack 0
  1149  002080                     _sprintf:
  1150                           	callstack 23
  1151  002080  0EC6               	movlw	low (?_sprintf+4)
  1152  002082  0100               	movlb	0	; () banked
  1153  002084  6FC8               	movwf	sprintf@ap& (0+255),b
  1154  002086  0E00               	movlw	high (?_sprintf+4)
  1155  002088  6FC9               	movwf	(sprintf@ap+1)& (0+255),b
  1156  00208A  C0C2  F0CA         	movff	sprintf@s,sprintf@f
  1157  00208E  C0C3  F0CB         	movff	sprintf@s+1,sprintf@f+1
  1158  002092                     
  1159                           ; BSR set to: 0
  1160  002092  0E00               	movlw	0
  1161  002094  6FCE               	movwf	(sprintf@f+4)& (0+255),b
  1162  002096  0E00               	movlw	0
  1163  002098  6FCD               	movwf	(sprintf@f+3)& (0+255),b
  1164  00209A                     
  1165                           ; BSR set to: 0
  1166  00209A  0E00               	movlw	0
  1167  00209C  6FD4               	movwf	(sprintf@f+10)& (0+255),b
  1168  00209E  0E00               	movlw	0
  1169  0020A0  6FD3               	movwf	(sprintf@f+9)& (0+255),b
  1170  0020A2                     
  1171                           ; BSR set to: 0
  1172  0020A2  0ECA               	movlw	low sprintf@f
  1173  0020A4  6FBC               	movwf	vfprintf@fp& (0+255),b
  1174  0020A6  0E00               	movlw	high sprintf@f
  1175  0020A8  6FBD               	movwf	(vfprintf@fp+1)& (0+255),b
  1176  0020AA  C0C4  F0BE         	movff	sprintf@fmt,vfprintf@fmt
  1177  0020AE  C0C5  F0BF         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1178  0020B2  0EC8               	movlw	low sprintf@ap
  1179  0020B4  6FC0               	movwf	vfprintf@ap& (0+255),b
  1180  0020B6  0E00               	movlw	high sprintf@ap
  1181  0020B8  6FC1               	movwf	(vfprintf@ap+1)& (0+255),b
  1182  0020BA  EC87  F00F         	call	_vfprintf	;wreg free
  1183  0020BE  0100               	movlb	0	; () banked
  1184  0020C0  51CD               	movf	(sprintf@f+3)& (0+255),w,b
  1185  0020C2  25C2               	addwf	sprintf@s& (0+255),w,b
  1186  0020C4  6ED9               	movwf	fsr2l,c
  1187  0020C6  51CE               	movf	(sprintf@f+4)& (0+255),w,b
  1188  0020C8  21C3               	addwfc	(sprintf@s+1)& (0+255),w,b
  1189  0020CA  6EDA               	movwf	fsr2h,c
  1190  0020CC  0E00               	movlw	0
  1191  0020CE  6EDF               	movwf	indf2,c
  1192  0020D0                     
  1193                           ; BSR set to: 0
  1194  0020D0  0012               	return		;funcret
  1195  0020D2                     __end_of_sprintf:
  1196                           	callstack 0
  1197                           
  1198 ;; *************** function _vfprintf *****************
  1199 ;; Defined at:
  1200 ;;		line 1390 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1203 ;;		 -> sprintf@f(11), 
  1204 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1205 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  1206 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1207 ;;		 -> sprintf@ap(2), 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  cfmt            2   90[COMRAM] PTR unsigned char 
  1210 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  2    0[BANK0 ] int 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1220 ;;      Params:         0       6       0       0       0       0       0       0       0
  1221 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1223 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1224 ;;Total ram usage:        8 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; Hardware stack levels required when called: 6
  1227 ;; This function calls:
  1228 ;;		_vfpfcnvrt
  1229 ;; This function is called by:
  1230 ;;		_sprintf
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text2
  1235  001F0E                     __ptext2:
  1236                           	callstack 0
  1237  001F0E                     _vfprintf:
  1238                           	callstack 23
  1239  001F0E                     
  1240                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1241  001F0E  C0BE  F05B         	movff	vfprintf@fmt,vfprintf@cfmt
  1242  001F12  C0BF  F05C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1243  001F16                     
  1244                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1245  001F16  0E00               	movlw	0
  1246  001F18  0100               	movlb	0	; () banked
  1247  001F1A  6F61               	movwf	(_nout+1)& (0+255),b
  1248  001F1C  0E00               	movlw	0
  1249  001F1E  6F60               	movwf	_nout& (0+255),b
  1250                           
  1251                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1252  001F20  EFA5  F00F         	goto	l2759
  1253  001F24                     l2757:
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1257  001F24  C0BC  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1258  001F28  C0BD  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1259  001F2C  0E5B               	movlw	low vfprintf@cfmt
  1260  001F2E  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1261  001F30  0E00               	movlw	high vfprintf@cfmt
  1262  001F32  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1263  001F34  C0C0  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1264  001F38  C0C1  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1265  001F3C  ECCB  F006         	call	_vfpfcnvrt	;wreg free
  1266  001F40  5040               	movf	?_vfpfcnvrt^0,w,c
  1267  001F42  0100               	movlb	0	; () banked
  1268  001F44  2760               	addwf	_nout& (0+255),f,b
  1269  001F46  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1270  001F48  2361               	addwfc	(_nout+1)& (0+255),f,b
  1271  001F4A                     l2759:
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1275  001F4A  C05B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1276  001F4E  C05C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1277  001F52                     	if	0	;tblptru may be non-zero
  1278  001F52                     	endif
  1279  001F52                     	if	0	;tblptru may be non-zero
  1280  001F52                     	endif
  1281  001F52  0008               	tblrd		*
  1282  001F54  50F5               	movf	tablat,w,c
  1283  001F56  0900               	iorlw	0
  1284  001F58  A4D8               	btfss	status,2,c
  1285  001F5A  EFB1  F00F         	goto	u2411
  1286  001F5E  EFB3  F00F         	goto	u2410
  1287  001F62                     u2411:
  1288  001F62  EF92  F00F         	goto	l2757
  1289  001F66                     u2410:
  1290  001F66                     
  1291                           ; BSR set to: 0
  1292                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1293  001F66  C060  F0BC         	movff	_nout,?_vfprintf
  1294  001F6A  C061  F0BD         	movff	_nout+1,?_vfprintf+1
  1295  001F6E                     
  1296                           ; BSR set to: 0
  1297  001F6E  0012               	return		;funcret
  1298  001F70                     __end_of_vfprintf:
  1299                           	callstack 0
  1300                           
  1301 ;; *************** function _vfpfcnvrt *****************
  1302 ;; Defined at:
  1303 ;;		line 692 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1306 ;;		 -> sprintf@f(11), 
  1307 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1308 ;;		 -> vfprintf@cfmt(2), 
  1309 ;;  ap              2   67[COMRAM] PTR PTR void 
  1310 ;;		 -> sprintf@ap(2), 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  llu             8   81[COMRAM] unsigned long long 
  1313 ;;  ll              8   73[COMRAM] long long 
  1314 ;;  f               4    0        long long 
  1315 ;;  vp              3    0        PTR void 
  1316 ;;  ct              3    0        unsigned char [3]
  1317 ;;  cp              3    0        PTR unsigned char 
  1318 ;;  i               2    0        int 
  1319 ;;  done            2    0        int 
  1320 ;;  c               1   89[COMRAM] unsigned char 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  2   63[COMRAM] int 
  1323 ;; Registers used:
  1324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1330 ;;      Params:         6       0       0       0       0       0       0       0       0
  1331 ;;      Locals:        17       0       0       0       0       0       0       0       0
  1332 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1333 ;;      Totals:        27       0       0       0       0       0       0       0       0
  1334 ;;Total ram usage:       27 bytes
  1335 ;; Hardware stack levels used: 1
  1336 ;; Hardware stack levels required when called: 5
  1337 ;; This function calls:
  1338 ;;		_dtoa
  1339 ;;		_fputc
  1340 ;;		_xtoa
  1341 ;; This function is called by:
  1342 ;;		_vfprintf
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text3
  1347  000D96                     __ptext3:
  1348                           	callstack 0
  1349  000D96                     _vfpfcnvrt:
  1350                           	callstack 23
  1351  000D96                     
  1352                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;D:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;D:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1353  000D96  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1354  000D9A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1355  000D9E  CFDE FFF6          	movff	postinc2,tblptrl
  1356  000DA2  CFDD FFF7          	movff	postdec2,tblptrh
  1357  000DA6                     	if	0	;tblptru may be non-zero
  1358  000DA6                     	endif
  1359  000DA6                     	if	0	;tblptru may be non-zero
  1360  000DA6                     	endif
  1361  000DA6  0008               	tblrd		*
  1362  000DA8  50F5               	movf	tablat,w,c
  1363  000DAA  0A25               	xorlw	37
  1364  000DAC  A4D8               	btfss	status,2,c
  1365  000DAE  EFDB  F006         	goto	u2221
  1366  000DB2  EFDD  F006         	goto	u2220
  1367  000DB6                     u2221:
  1368  000DB6  EFFB  F007         	goto	l2633
  1369  000DBA                     u2220:
  1370  000DBA                     
  1371                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1372  000DBA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1373  000DBE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1374  000DC2  2ADE               	incf	postinc2,f,c
  1375  000DC4  0E00               	movlw	0
  1376  000DC6  22DD               	addwfc	postdec2,f,c
  1377  000DC8                     
  1378                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1379  000DC8  0E00               	movlw	0
  1380  000DCA  0100               	movlb	0	; () banked
  1381  000DCC  6F63               	movwf	(_width+1)& (0+255),b
  1382  000DCE  0E00               	movlw	0
  1383  000DD0  6F62               	movwf	_width& (0+255),b
  1384  000DD2  C062  F066         	movff	_width,_flags
  1385  000DD6  C063  F067         	movff	_width+1,_flags+1
  1386  000DDA                     
  1387                           ; BSR set to: 0
  1388                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1389  000DDA  6964               	setf	_prec& (0+255),b
  1390  000DDC  6965               	setf	(_prec+1)& (0+255),b
  1391  000DDE                     
  1392                           ; BSR set to: 0
  1393                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1394  000DDE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1395  000DE2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1396  000DE6  CFDE FFF6          	movff	postinc2,tblptrl
  1397  000DEA  CFDD FFF7          	movff	postdec2,tblptrh
  1398  000DEE                     	if	0	;tblptru may be non-zero
  1399  000DEE                     	endif
  1400  000DEE                     	if	0	;tblptru may be non-zero
  1401  000DEE                     	endif
  1402  000DEE  0008               	tblrd		*
  1403  000DF0  50F5               	movf	tablat,w,c
  1404  000DF2  0A64               	xorlw	100
  1405  000DF4  B4D8               	btfsc	status,2,c
  1406  000DF6  EFFF  F006         	goto	u2231
  1407  000DFA  EF01  F007         	goto	u2230
  1408  000DFE                     u2231:
  1409  000DFE  EF13  F007         	goto	l2597
  1410  000E02                     u2230:
  1411  000E02                     
  1412                           ; BSR set to: 0
  1413  000E02  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1414  000E06  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1415  000E0A  CFDE FFF6          	movff	postinc2,tblptrl
  1416  000E0E  CFDD FFF7          	movff	postdec2,tblptrh
  1417  000E12                     	if	0	;tblptru may be non-zero
  1418  000E12                     	endif
  1419  000E12                     	if	0	;tblptru may be non-zero
  1420  000E12                     	endif
  1421  000E12  0008               	tblrd		*
  1422  000E14  50F5               	movf	tablat,w,c
  1423  000E16  0A69               	xorlw	105
  1424  000E18  A4D8               	btfss	status,2,c
  1425  000E1A  EF11  F007         	goto	u2241
  1426  000E1E  EF13  F007         	goto	u2240
  1427  000E22                     u2241:
  1428  000E22  EF53  F007         	goto	l2603
  1429  000E26                     u2240:
  1430  000E26                     l2597:
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1434  000E26  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1435  000E2A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1436  000E2E  2ADE               	incf	postinc2,f,c
  1437  000E30  0E00               	movlw	0
  1438  000E32  22DD               	addwfc	postdec2,f,c
  1439                           
  1440                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1441  000E34  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1442  000E38  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1443  000E3C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1444  000E40  0E02               	movlw	2
  1445  000E42  26DE               	addwf	postinc2,f,c
  1446  000E44  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1447  000E48  0E00               	movlw	0
  1448  000E4A  22DD               	addwfc	postdec2,f,c
  1449  000E4C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1450  000E50  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1451  000E54  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  1452  000E58  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  1453  000E5C  0E00               	movlw	0
  1454  000E5E  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1455  000E60  0EFF               	movlw	-1
  1456  000E62  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  1457  000E64  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  1458  000E66  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  1459  000E68  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  1460  000E6A  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  1461  000E6C  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  1462  000E6E                     
  1463                           ; BSR set to: 0
  1464                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1465  000E6E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1466  000E72  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1467  000E76  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1468  000E7A  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1469  000E7E  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1470  000E82  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1471  000E86  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1472  000E8A  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1473  000E8E  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1474  000E92  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1475  000E96  EC08  F004         	call	_dtoa	;wreg free
  1476  000E9A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1477  000E9E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1478  000EA2  EF16  F008         	goto	l1074
  1479  000EA6                     l2603:
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1483  000EA6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1484  000EAA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1485  000EAE  CFDE FFF6          	movff	postinc2,tblptrl
  1486  000EB2  CFDD FFF7          	movff	postdec2,tblptrh
  1487  000EB6                     	if	0	;tblptru may be non-zero
  1488  000EB6                     	endif
  1489  000EB6                     	if	0	;tblptru may be non-zero
  1490  000EB6                     	endif
  1491  000EB6  0008               	tblrd		*
  1492  000EB8  50F5               	movf	tablat,w,c
  1493  000EBA  0A78               	xorlw	120
  1494  000EBC  B4D8               	btfsc	status,2,c
  1495  000EBE  EF63  F007         	goto	u2251
  1496  000EC2  EF65  F007         	goto	u2250
  1497  000EC6                     u2251:
  1498  000EC6  EF77  F007         	goto	l2607
  1499  000ECA                     u2250:
  1500  000ECA                     
  1501                           ; BSR set to: 0
  1502  000ECA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1503  000ECE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1504  000ED2  CFDE FFF6          	movff	postinc2,tblptrl
  1505  000ED6  CFDD FFF7          	movff	postdec2,tblptrh
  1506  000EDA                     	if	0	;tblptru may be non-zero
  1507  000EDA                     	endif
  1508  000EDA                     	if	0	;tblptru may be non-zero
  1509  000EDA                     	endif
  1510  000EDA  0008               	tblrd		*
  1511  000EDC  50F5               	movf	tablat,w,c
  1512  000EDE  0A58               	xorlw	88
  1513  000EE0  A4D8               	btfss	status,2,c
  1514  000EE2  EF75  F007         	goto	u2261
  1515  000EE6  EF77  F007         	goto	u2260
  1516  000EEA                     u2261:
  1517  000EEA  EFC5  F007         	goto	l2617
  1518  000EEE                     u2260:
  1519  000EEE                     l2607:
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  1523  000EEE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1524  000EF2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1525  000EF6  CFDE FFF6          	movff	postinc2,tblptrl
  1526  000EFA  CFDD FFF7          	movff	postdec2,tblptrh
  1527  000EFE                     	if	0	;tblptru may be non-zero
  1528  000EFE                     	endif
  1529  000EFE                     	if	0	;tblptru may be non-zero
  1530  000EFE                     	endif
  1531  000EFE  0008               	tblrd		*
  1532  000F00  CFF5 F05A          	movff	tablat,vfpfcnvrt@c
  1533  000F04                     
  1534                           ; BSR set to: 0
  1535                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  1536  000F04  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1537  000F08  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1538  000F0C  2ADE               	incf	postinc2,f,c
  1539  000F0E  0E00               	movlw	0
  1540  000F10  22DD               	addwfc	postdec2,f,c
  1541  000F12                     
  1542                           ; BSR set to: 0
  1543                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1544  000F12  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1545  000F16  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1546  000F1A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1547  000F1E  0E02               	movlw	2
  1548  000F20  26DE               	addwf	postinc2,f,c
  1549  000F22  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1550  000F26  0E00               	movlw	0
  1551  000F28  22DD               	addwfc	postdec2,f,c
  1552  000F2A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1553  000F2E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1554  000F32  CFDE F048          	movff	postinc2,??_vfpfcnvrt+2
  1555  000F36  CFDD F049          	movff	postdec2,??_vfpfcnvrt+3
  1556  000F3A  C048  F052         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1557  000F3E  C049  F053         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1558  000F42  6A54               	clrf	(vfpfcnvrt@llu+2)^0,c
  1559  000F44  6A55               	clrf	(vfpfcnvrt@llu+3)^0,c
  1560  000F46  6A56               	clrf	(vfpfcnvrt@llu+4)^0,c
  1561  000F48  6A57               	clrf	(vfpfcnvrt@llu+5)^0,c
  1562  000F4A  6A58               	clrf	(vfpfcnvrt@llu+6)^0,c
  1563  000F4C  6A59               	clrf	(vfpfcnvrt@llu+7)^0,c
  1564  000F4E                     
  1565                           ; BSR set to: 0
  1566                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  1567  000F4E  C040  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  1568  000F52  C041  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1569  000F56  C052  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  1570  000F5A  C053  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1571  000F5E  C054  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1572  000F62  C055  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1573  000F66  C056  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1574  000F6A  C057  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1575  000F6E  C058  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1576  000F72  C059  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1577  000F76  C05A  F026         	movff	vfpfcnvrt@c,xtoa@x
  1578  000F7A  EC79  F005         	call	_xtoa	;wreg free
  1579  000F7E  C01C  F040         	movff	?_xtoa,?_vfpfcnvrt
  1580  000F82  C01D  F041         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1581  000F86  EF16  F008         	goto	l1074
  1582  000F8A                     l2617:
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1586  000F8A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1587  000F8E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1588  000F92  CFDE FFF6          	movff	postinc2,tblptrl
  1589  000F96  CFDD FFF7          	movff	postdec2,tblptrh
  1590  000F9A                     	if	0	;tblptru may be non-zero
  1591  000F9A                     	endif
  1592  000F9A                     	if	0	;tblptru may be non-zero
  1593  000F9A                     	endif
  1594  000F9A  0008               	tblrd		*
  1595  000F9C  50F5               	movf	tablat,w,c
  1596  000F9E  0A25               	xorlw	37
  1597  000FA0  A4D8               	btfss	status,2,c
  1598  000FA2  EFD5  F007         	goto	u2271
  1599  000FA6  EFD7  F007         	goto	u2270
  1600  000FAA                     u2271:
  1601  000FAA  EFEE  F007         	goto	l2627
  1602  000FAE                     u2270:
  1603  000FAE                     
  1604                           ; BSR set to: 0
  1605                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1606  000FAE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1607  000FB2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1608  000FB6  2ADE               	incf	postinc2,f,c
  1609  000FB8  0E00               	movlw	0
  1610  000FBA  22DD               	addwfc	postdec2,f,c
  1611  000FBC                     
  1612                           ; BSR set to: 0
  1613                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1614  000FBC  0E00               	movlw	0
  1615  000FBE  6E02               	movwf	(fputc@c+1)^0,c
  1616  000FC0  0E25               	movlw	37
  1617  000FC2  6E01               	movwf	fputc@c^0,c
  1618  000FC4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1619  000FC8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1620  000FCC  EC55  F00C         	call	_fputc	;wreg free
  1621  000FD0                     l2623:
  1622                           
  1623                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1624  000FD0  0E00               	movlw	0
  1625  000FD2  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1626  000FD4  0E01               	movlw	1
  1627  000FD6  6E40               	movwf	?_vfpfcnvrt^0,c
  1628  000FD8  EF16  F008         	goto	l1074
  1629  000FDC                     l2627:
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1633  000FDC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1634  000FE0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1635  000FE4  2ADE               	incf	postinc2,f,c
  1636  000FE6  0E00               	movlw	0
  1637  000FE8  22DD               	addwfc	postdec2,f,c
  1638  000FEA                     
  1639                           ; BSR set to: 0
  1640                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1641  000FEA  0E00               	movlw	0
  1642  000FEC  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1643  000FEE  0E00               	movlw	0
  1644  000FF0  6E40               	movwf	?_vfpfcnvrt^0,c
  1645  000FF2  EF16  F008         	goto	l1074
  1646  000FF6                     l2633:
  1647                           
  1648                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1649  000FF6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1650  000FFA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1651  000FFE  CFDE FFF6          	movff	postinc2,tblptrl
  1652  001002  CFDD FFF7          	movff	postdec2,tblptrh
  1653  001006                     	if	0	;tblptru may be non-zero
  1654  001006                     	endif
  1655  001006                     	if	0	;tblptru may be non-zero
  1656  001006                     	endif
  1657  001006  0008               	tblrd		*
  1658  001008  50F5               	movf	tablat,w,c
  1659  00100A  6E01               	movwf	fputc@c^0,c
  1660  00100C  6A02               	clrf	(fputc@c+1)^0,c
  1661  00100E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1662  001012  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1663  001016  EC55  F00C         	call	_fputc	;wreg free
  1664  00101A                     
  1665                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1666  00101A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1667  00101E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1668  001022  2ADE               	incf	postinc2,f,c
  1669  001024  0E00               	movlw	0
  1670  001026  22DD               	addwfc	postdec2,f,c
  1671  001028  EFE8  F007         	goto	l2623
  1672  00102C                     l1074:
  1673  00102C  0012               	return		;funcret
  1674  00102E                     __end_of_vfpfcnvrt:
  1675                           	callstack 0
  1676                           
  1677 ;; *************** function _xtoa *****************
  1678 ;; Defined at:
  1679 ;;		line 645 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1682 ;;		 -> sprintf@f(11), 
  1683 ;;  d               8   29[COMRAM] unsigned long long 
  1684 ;;  x               1   37[COMRAM] unsigned char 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  n               8   50[COMRAM] unsigned long long 
  1687 ;;  c               2   60[COMRAM] int 
  1688 ;;  i               2   58[COMRAM] int 
  1689 ;;  w               2   48[COMRAM] int 
  1690 ;;  p               2   46[COMRAM] int 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  2   27[COMRAM] int 
  1693 ;; Registers used:
  1694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1700 ;;      Params:        11       0       0       0       0       0       0       0       0
  1701 ;;      Locals:        16       0       0       0       0       0       0       0       0
  1702 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1703 ;;      Totals:        35       0       0       0       0       0       0       0       0
  1704 ;;Total ram usage:       35 bytes
  1705 ;; Hardware stack levels used: 1
  1706 ;; Hardware stack levels required when called: 4
  1707 ;; This function calls:
  1708 ;;		_isalpha
  1709 ;;		_isupper
  1710 ;;		_pad
  1711 ;;		_toupper
  1712 ;; This function is called by:
  1713 ;;		_vfpfcnvrt
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text4
  1718  000AF2                     __ptext4:
  1719                           	callstack 0
  1720  000AF2                     _xtoa:
  1721                           	callstack 23
  1722  000AF2                     
  1723                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;D:\Program Files\Microchip\xc8\v2.36\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;D:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  1724  000AF2  0100               	movlb	0	; () banked
  1725  000AF4  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1726  000AF6  EF7F  F005         	goto	u1961
  1727  000AFA  EF81  F005         	goto	u1960
  1728  000AFE                     u1961:
  1729  000AFE  EF82  F005         	goto	l2427
  1730  000B02                     u1960:
  1731  000B02                     
  1732                           ; BSR set to: 0
  1733                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  1734  000B02  9366               	bcf	_flags& (0+255),1,b
  1735  000B04                     l2427:
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  1739  000B04  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1740  000B06  EF8F  F005         	goto	u1970
  1741  000B0A  5165               	movf	(_prec+1)& (0+255),w,b
  1742  000B0C  E106               	bnz	u1971
  1743  000B0E  0564               	decf	_prec& (0+255),w,b
  1744  000B10  B0D8               	btfsc	status,0,c
  1745  000B12  EF8D  F005         	goto	u1971
  1746  000B16  EF8F  F005         	goto	u1970
  1747  000B1A                     u1971:
  1748  000B1A  EF95  F005         	goto	l1046
  1749  000B1E                     u1970:
  1750  000B1E                     
  1751                           ; BSR set to: 0
  1752  000B1E  0E00               	movlw	0
  1753  000B20  6E30               	movwf	(xtoa@p+1)^0,c
  1754  000B22  0E01               	movlw	1
  1755  000B24  6E2F               	movwf	xtoa@p^0,c
  1756  000B26  EF99  F005         	goto	l1048
  1757  000B2A                     l1046:
  1758                           
  1759                           ; BSR set to: 0
  1760  000B2A  C064  F02F         	movff	_prec,xtoa@p
  1761  000B2E  C065  F030         	movff	_prec+1,xtoa@p+1
  1762  000B32                     l1048:
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  1766  000B32  C062  F031         	movff	_width,xtoa@w
  1767  000B36  C063  F032         	movff	_width+1,xtoa@w+1
  1768                           
  1769                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  1770  000B3A  A966               	btfss	_flags& (0+255),4,b
  1771  000B3C  EFA2  F005         	goto	u1981
  1772  000B40  EFA4  F005         	goto	u1980
  1773  000B44                     u1981:
  1774  000B44  EFA8  F005         	goto	l2433
  1775  000B48                     u1980:
  1776  000B48                     
  1777                           ; BSR set to: 0
  1778                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  1779  000B48  0EFE               	movlw	254
  1780  000B4A  2631               	addwf	xtoa@w^0,f,c
  1781  000B4C  0EFF               	movlw	255
  1782  000B4E  2232               	addwfc	(xtoa@w+1)^0,f,c
  1783  000B50                     l2433:
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 661:     n = d;
  1787  000B50  C01E  F033         	movff	xtoa@d,xtoa@n
  1788  000B54  C01F  F034         	movff	xtoa@d+1,xtoa@n+1
  1789  000B58  C020  F035         	movff	xtoa@d+2,xtoa@n+2
  1790  000B5C  C021  F036         	movff	xtoa@d+3,xtoa@n+3
  1791  000B60  C022  F037         	movff	xtoa@d+4,xtoa@n+4
  1792  000B64  C023  F038         	movff	xtoa@d+5,xtoa@n+5
  1793  000B68  C024  F039         	movff	xtoa@d+6,xtoa@n+6
  1794  000B6C  C025  F03A         	movff	xtoa@d+7,xtoa@n+7
  1795  000B70                     
  1796                           ; BSR set to: 0
  1797                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  1798  000B70  0E00               	movlw	0
  1799  000B72  6E3C               	movwf	(xtoa@i+1)^0,c
  1800  000B74  0E1F               	movlw	31
  1801  000B76  6E3B               	movwf	xtoa@i^0,c
  1802  000B78                     
  1803                           ; BSR set to: 0
  1804                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  1805  000B78  0E00               	movlw	0
  1806  000B7A  6F8A               	movwf	(_dbuf+31)& (0+255),b
  1807                           
  1808                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1809  000B7C  EF59  F006         	goto	l2469
  1810  000B80                     l2439:
  1811                           
  1812                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 665:         --i;
  1813  000B80  063B               	decf	xtoa@i^0,f,c
  1814  000B82  A0D8               	btfss	status,0,c
  1815  000B84  063C               	decf	(xtoa@i+1)^0,f,c
  1816  000B86                     
  1817                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  1818  000B86  0E0F               	movlw	15
  1819  000B88  1433               	andwf	xtoa@n^0,w,c
  1820  000B8A  6E3D               	movwf	xtoa@c^0,c
  1821  000B8C  6A3E               	clrf	(xtoa@c+1)^0,c
  1822  000B8E                     
  1823                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  1824  000B8E  BE3E               	btfsc	(xtoa@c+1)^0,7,c
  1825  000B90  EFD3  F005         	goto	u1991
  1826  000B94  503E               	movf	(xtoa@c+1)^0,w,c
  1827  000B96  E109               	bnz	u1990
  1828  000B98  0E0A               	movlw	10
  1829  000B9A  5C3D               	subwf	xtoa@c^0,w,c
  1830  000B9C  A0D8               	btfss	status,0,c
  1831  000B9E  EFD3  F005         	goto	u1991
  1832  000BA2  EFD5  F005         	goto	u1990
  1833  000BA6                     u1991:
  1834  000BA6  EFDD  F005         	goto	l2447
  1835  000BAA                     u1990:
  1836  000BAA  0E57               	movlw	87
  1837  000BAC  243D               	addwf	xtoa@c^0,w,c
  1838  000BAE  6E3D               	movwf	xtoa@c^0,c
  1839  000BB0  0E00               	movlw	0
  1840  000BB2  203E               	addwfc	(xtoa@c+1)^0,w,c
  1841  000BB4  6E3E               	movwf	(xtoa@c+1)^0,c
  1842  000BB6  EFE3  F005         	goto	l2451
  1843  000BBA                     l2447:
  1844  000BBA  0E30               	movlw	48
  1845  000BBC  243D               	addwf	xtoa@c^0,w,c
  1846  000BBE  6E3D               	movwf	xtoa@c^0,c
  1847  000BC0  0E00               	movlw	0
  1848  000BC2  203E               	addwfc	(xtoa@c+1)^0,w,c
  1849  000BC4  6E3E               	movwf	(xtoa@c+1)^0,c
  1850  000BC6                     l2451:
  1851  000BC6  0EBF               	movlw	191
  1852  000BC8  6E27               	movwf	??_xtoa^0,c
  1853  000BCA  0EFF               	movlw	255
  1854  000BCC  6E28               	movwf	(??_xtoa+1)^0,c
  1855  000BCE  5026               	movf	xtoa@x^0,w,c
  1856  000BD0  6E29               	movwf	(??_xtoa+2)^0,c
  1857  000BD2  6A2A               	clrf	(??_xtoa+3)^0,c
  1858  000BD4  5027               	movf	??_xtoa^0,w,c
  1859  000BD6  2629               	addwf	(??_xtoa+2)^0,f,c
  1860  000BD8  5028               	movf	(??_xtoa+1)^0,w,c
  1861  000BDA  222A               	addwfc	(??_xtoa+3)^0,f,c
  1862  000BDC  502A               	movf	(??_xtoa+3)^0,w,c
  1863  000BDE  E107               	bnz	u2001
  1864  000BE0  0E1A               	movlw	26
  1865  000BE2  5C29               	subwf	(??_xtoa+2)^0,w,c
  1866  000BE4  B0D8               	btfsc	status,0,c
  1867  000BE6  EFF7  F005         	goto	u2001
  1868  000BEA  EFF9  F005         	goto	u2000
  1869  000BEE                     u2001:
  1870  000BEE  EF1C  F006         	goto	l2461
  1871  000BF2                     u2000:
  1872  000BF2  0E9F               	movlw	159
  1873  000BF4  6E27               	movwf	??_xtoa^0,c
  1874  000BF6  0EFF               	movlw	255
  1875  000BF8  6E28               	movwf	(??_xtoa+1)^0,c
  1876  000BFA  0E20               	movlw	32
  1877  000BFC  103D               	iorwf	xtoa@c^0,w,c
  1878  000BFE  6E29               	movwf	(??_xtoa+2)^0,c
  1879  000C00  0E00               	movlw	0
  1880  000C02  103E               	iorwf	(xtoa@c+1)^0,w,c
  1881  000C04  6E2A               	movwf	(??_xtoa+3)^0,c
  1882  000C06  5027               	movf	??_xtoa^0,w,c
  1883  000C08  2629               	addwf	(??_xtoa+2)^0,f,c
  1884  000C0A  5028               	movf	(??_xtoa+1)^0,w,c
  1885  000C0C  222A               	addwfc	(??_xtoa+3)^0,f,c
  1886  000C0E  502A               	movf	(??_xtoa+3)^0,w,c
  1887  000C10  E107               	bnz	u2011
  1888  000C12  0E1A               	movlw	26
  1889  000C14  5C29               	subwf	(??_xtoa+2)^0,w,c
  1890  000C16  B0D8               	btfsc	status,0,c
  1891  000C18  EF10  F006         	goto	u2011
  1892  000C1C  EF12  F006         	goto	u2010
  1893  000C20                     u2011:
  1894  000C20  EF1C  F006         	goto	l2461
  1895  000C24                     u2010:
  1896  000C24                     
  1897                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  1898  000C24  C03D  F007         	movff	xtoa@c,toupper@c
  1899  000C28  C03E  F008         	movff	xtoa@c+1,toupper@c+1
  1900  000C2C  EC8F  F010         	call	_toupper	;wreg free
  1901  000C30  C007  F03D         	movff	?_toupper,xtoa@c
  1902  000C34  C008  F03E         	movff	?_toupper+1,xtoa@c+1
  1903  000C38                     l2461:
  1904                           
  1905                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  1906  000C38  0E6B               	movlw	low _dbuf
  1907  000C3A  243B               	addwf	xtoa@i^0,w,c
  1908  000C3C  6ED9               	movwf	fsr2l,c
  1909  000C3E  0E00               	movlw	high _dbuf
  1910  000C40  203C               	addwfc	(xtoa@i+1)^0,w,c
  1911  000C42  6EDA               	movwf	fsr2h,c
  1912  000C44  C03D  FFDF         	movff	xtoa@c,indf2
  1913  000C48                     
  1914                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 672:         --p;
  1915  000C48  062F               	decf	xtoa@p^0,f,c
  1916  000C4A  A0D8               	btfss	status,0,c
  1917  000C4C  0630               	decf	(xtoa@p+1)^0,f,c
  1918  000C4E                     
  1919                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 673:         --w;
  1920  000C4E  0631               	decf	xtoa@w^0,f,c
  1921  000C50  A0D8               	btfss	status,0,c
  1922  000C52  0632               	decf	(xtoa@w+1)^0,f,c
  1923  000C54                     
  1924                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  1925  000C54  C033  F027         	movff	xtoa@n,??_xtoa
  1926  000C58  C034  F028         	movff	xtoa@n+1,??_xtoa+1
  1927  000C5C  C035  F029         	movff	xtoa@n+2,??_xtoa+2
  1928  000C60  C036  F02A         	movff	xtoa@n+3,??_xtoa+3
  1929  000C64  C037  F02B         	movff	xtoa@n+4,??_xtoa+4
  1930  000C68  C038  F02C         	movff	xtoa@n+5,??_xtoa+5
  1931  000C6C  C039  F02D         	movff	xtoa@n+6,??_xtoa+6
  1932  000C70  C03A  F02E         	movff	xtoa@n+7,??_xtoa+7
  1933  000C74  0E05               	movlw	5
  1934  000C76  EF46  F006         	goto	u2020
  1935  000C7A                     u2025:
  1936  000C7A  90D8               	bcf	status,0,c
  1937  000C7C  322E               	rrcf	(??_xtoa+7)^0,f,c
  1938  000C7E  322D               	rrcf	(??_xtoa+6)^0,f,c
  1939  000C80  322C               	rrcf	(??_xtoa+5)^0,f,c
  1940  000C82  322B               	rrcf	(??_xtoa+4)^0,f,c
  1941  000C84  322A               	rrcf	(??_xtoa+3)^0,f,c
  1942  000C86  3229               	rrcf	(??_xtoa+2)^0,f,c
  1943  000C88  3228               	rrcf	(??_xtoa+1)^0,f,c
  1944  000C8A  3227               	rrcf	??_xtoa^0,f,c
  1945  000C8C                     u2020:
  1946  000C8C  2EE8               	decfsz	wreg,f,c
  1947  000C8E  EF3D  F006         	goto	u2025
  1948  000C92  C027  F033         	movff	??_xtoa,xtoa@n
  1949  000C96  C028  F034         	movff	??_xtoa+1,xtoa@n+1
  1950  000C9A  C029  F035         	movff	??_xtoa+2,xtoa@n+2
  1951  000C9E  C02A  F036         	movff	??_xtoa+3,xtoa@n+3
  1952  000CA2  C02B  F037         	movff	??_xtoa+4,xtoa@n+4
  1953  000CA6  C02C  F038         	movff	??_xtoa+5,xtoa@n+5
  1954  000CAA  C02D  F039         	movff	??_xtoa+6,xtoa@n+6
  1955  000CAE  C02E  F03A         	movff	??_xtoa+7,xtoa@n+7
  1956  000CB2                     l2469:
  1957                           
  1958                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1959  000CB2  BE3C               	btfsc	(xtoa@i+1)^0,7,c
  1960  000CB4  EF65  F006         	goto	u2031
  1961  000CB8  503C               	movf	(xtoa@i+1)^0,w,c
  1962  000CBA  E109               	bnz	u2030
  1963  000CBC  0E02               	movlw	2
  1964  000CBE  5C3B               	subwf	xtoa@i^0,w,c
  1965  000CC0  A0D8               	btfss	status,0,c
  1966  000CC2  EF65  F006         	goto	u2031
  1967  000CC6  EF67  F006         	goto	u2030
  1968  000CCA                     u2031:
  1969  000CCA  EF98  F006         	goto	l1065
  1970  000CCE                     u2030:
  1971  000CCE  5033               	movf	xtoa@n^0,w,c
  1972  000CD0  1034               	iorwf	(xtoa@n+1)^0,w,c
  1973  000CD2  1035               	iorwf	(xtoa@n+2)^0,w,c
  1974  000CD4  1036               	iorwf	(xtoa@n+3)^0,w,c
  1975  000CD6  1037               	iorwf	(xtoa@n+4)^0,w,c
  1976  000CD8  1038               	iorwf	(xtoa@n+5)^0,w,c
  1977  000CDA  1039               	iorwf	(xtoa@n+6)^0,w,c
  1978  000CDC  103A               	iorwf	(xtoa@n+7)^0,w,c
  1979  000CDE  A4D8               	btfss	status,2,c
  1980  000CE0  EF74  F006         	goto	u2041
  1981  000CE4  EF76  F006         	goto	u2040
  1982  000CE8                     u2041:
  1983  000CE8  EFC0  F005         	goto	l2439
  1984  000CEC                     u2040:
  1985  000CEC  BE30               	btfsc	(xtoa@p+1)^0,7,c
  1986  000CEE  EF83  F006         	goto	u2050
  1987  000CF2  5030               	movf	(xtoa@p+1)^0,w,c
  1988  000CF4  E106               	bnz	u2051
  1989  000CF6  042F               	decf	xtoa@p^0,w,c
  1990  000CF8  B0D8               	btfsc	status,0,c
  1991  000CFA  EF81  F006         	goto	u2051
  1992  000CFE  EF83  F006         	goto	u2050
  1993  000D02                     u2051:
  1994  000D02  EFC0  F005         	goto	l2439
  1995  000D06                     u2050:
  1996  000D06  BE32               	btfsc	(xtoa@w+1)^0,7,c
  1997  000D08  EF8E  F006         	goto	u2061
  1998  000D0C  5032               	movf	(xtoa@w+1)^0,w,c
  1999  000D0E  E108               	bnz	u2060
  2000  000D10  0431               	decf	xtoa@w^0,w,c
  2001  000D12  A0D8               	btfss	status,0,c
  2002  000D14  EF8E  F006         	goto	u2061
  2003  000D18  EF90  F006         	goto	u2060
  2004  000D1C                     u2061:
  2005  000D1C  EF98  F006         	goto	l1065
  2006  000D20                     u2060:
  2007  000D20  0100               	movlb	0	; () banked
  2008  000D22  B366               	btfsc	_flags& (0+255),1,b
  2009  000D24  EF96  F006         	goto	u2071
  2010  000D28  EF98  F006         	goto	u2070
  2011  000D2C                     u2071:
  2012  000D2C  EFC0  F005         	goto	l2439
  2013  000D30                     u2070:
  2014  000D30                     l1065:
  2015                           
  2016                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  2017  000D30  0100               	movlb	0	; () banked
  2018  000D32  A966               	btfss	_flags& (0+255),4,b
  2019  000D34  EF9E  F006         	goto	u2081
  2020  000D38  EFA0  F006         	goto	u2080
  2021  000D3C                     u2081:
  2022  000D3C  EFB6  F006         	goto	l2485
  2023  000D40                     u2080:
  2024  000D40                     
  2025                           ; BSR set to: 0
  2026                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 679:         --i;
  2027  000D40  063B               	decf	xtoa@i^0,f,c
  2028  000D42  A0D8               	btfss	status,0,c
  2029  000D44  063C               	decf	(xtoa@i+1)^0,f,c
  2030  000D46                     
  2031                           ; BSR set to: 0
  2032                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  2033  000D46  0E6B               	movlw	low _dbuf
  2034  000D48  243B               	addwf	xtoa@i^0,w,c
  2035  000D4A  6ED9               	movwf	fsr2l,c
  2036  000D4C  0E00               	movlw	high _dbuf
  2037  000D4E  203C               	addwfc	(xtoa@i+1)^0,w,c
  2038  000D50  6EDA               	movwf	fsr2h,c
  2039  000D52  C026  FFDF         	movff	xtoa@x,indf2
  2040  000D56                     
  2041                           ; BSR set to: 0
  2042                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 681:         --i;
  2043  000D56  063B               	decf	xtoa@i^0,f,c
  2044  000D58  A0D8               	btfss	status,0,c
  2045  000D5A  063C               	decf	(xtoa@i+1)^0,f,c
  2046                           
  2047                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  2048  000D5C  0E6B               	movlw	low _dbuf
  2049  000D5E  243B               	addwf	xtoa@i^0,w,c
  2050  000D60  6ED9               	movwf	fsr2l,c
  2051  000D62  0E00               	movlw	high _dbuf
  2052  000D64  203C               	addwfc	(xtoa@i+1)^0,w,c
  2053  000D66  6EDA               	movwf	fsr2h,c
  2054  000D68  0E30               	movlw	48
  2055  000D6A  6EDF               	movwf	indf2,c
  2056  000D6C                     l2485:
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  2060  000D6C  C01C  F011         	movff	xtoa@fp,pad@fp
  2061  000D70  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  2062  000D74  0E6B               	movlw	low _dbuf
  2063  000D76  243B               	addwf	xtoa@i^0,w,c
  2064  000D78  6E13               	movwf	pad@buf^0,c
  2065  000D7A  0E00               	movlw	high _dbuf
  2066  000D7C  203C               	addwfc	(xtoa@i+1)^0,w,c
  2067  000D7E  6E14               	movwf	(pad@buf+1)^0,c
  2068  000D80  C031  F015         	movff	xtoa@w,pad@p
  2069  000D84  C032  F016         	movff	xtoa@w+1,pad@p+1
  2070  000D88  ECBA  F00C         	call	_pad	;wreg free
  2071  000D8C  C011  F01C         	movff	?_pad,?_xtoa
  2072  000D90  C012  F01D         	movff	?_pad+1,?_xtoa+1
  2073  000D94  0012               	return		;funcret
  2074  000D96                     __end_of_xtoa:
  2075                           	callstack 0
  2076                           
  2077 ;; *************** function _toupper *****************
  2078 ;; Defined at:
  2079 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\toupper.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  c               2    6[COMRAM] int 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  2    6[COMRAM] int 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2093 ;;      Params:         2       0       0       0       0       0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2095 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2096 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2097 ;;Total ram usage:        6 bytes
  2098 ;; Hardware stack levels used: 1
  2099 ;; Hardware stack levels required when called: 1
  2100 ;; This function calls:
  2101 ;;		_islower
  2102 ;; This function is called by:
  2103 ;;		_xtoa
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text5
  2108  00211E                     __ptext5:
  2109                           	callstack 0
  2110  00211E                     _toupper:
  2111                           	callstack 25
  2112  00211E  0E9F               	movlw	159
  2113  002120  6E09               	movwf	??_toupper^0,c
  2114  002122  0EFF               	movlw	255
  2115  002124  6E0A               	movwf	(??_toupper+1)^0,c
  2116  002126  C007  F00B         	movff	toupper@c,??_toupper+2
  2117  00212A  C008  F00C         	movff	toupper@c+1,??_toupper+3
  2118  00212E  5009               	movf	??_toupper^0,w,c
  2119  002130  260B               	addwf	(??_toupper+2)^0,f,c
  2120  002132  500A               	movf	(??_toupper+1)^0,w,c
  2121  002134  220C               	addwfc	(??_toupper+3)^0,f,c
  2122  002136  500C               	movf	(??_toupper+3)^0,w,c
  2123  002138  E107               	bnz	u1801
  2124  00213A  0E1A               	movlw	26
  2125  00213C  5C0B               	subwf	(??_toupper+2)^0,w,c
  2126  00213E  B0D8               	btfsc	status,0,c
  2127  002140  EFA4  F010         	goto	u1801
  2128  002144  EFA6  F010         	goto	u1800
  2129  002148                     u1801:
  2130  002148  EFAC  F010         	goto	l1137
  2131  00214C                     u1800:
  2132  00214C  0E5F               	movlw	95
  2133  00214E  1407               	andwf	toupper@c^0,w,c
  2134  002150  6E07               	movwf	?_toupper^0,c
  2135  002152  6A08               	clrf	(?_toupper+1)^0,c
  2136  002154  EFB0  F010         	goto	l1140
  2137  002158                     l1137:
  2138  002158  C007  F007         	movff	toupper@c,?_toupper
  2139  00215C  C008  F008         	movff	toupper@c+1,?_toupper+1
  2140  002160                     l1140:
  2141  002160  0012               	return		;funcret
  2142  002162                     __end_of_toupper:
  2143                           	callstack 0
  2144                           
  2145 ;; *************** function _islower *****************
  2146 ;; Defined at:
  2147 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\islower.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  c               2    0[COMRAM] int 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;		None
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  2    0[COMRAM] int 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2161 ;;      Params:         2       0       0       0       0       0       0       0       0
  2162 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2163 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2164 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2165 ;;Total ram usage:        6 bytes
  2166 ;; Hardware stack levels used: 1
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_toupper
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text6
  2175  002222                     __ptext6:
  2176                           	callstack 0
  2177  002222                     _islower:
  2178                           	callstack 25
  2179  002222  0E9F               	movlw	159
  2180  002224  6E03               	movwf	??_islower^0,c
  2181  002226  0EFF               	movlw	255
  2182  002228  6E04               	movwf	(??_islower+1)^0,c
  2183  00222A  C001  F005         	movff	islower@c,??_islower+2
  2184  00222E  C002  F006         	movff	islower@c+1,??_islower+3
  2185  002232  5003               	movf	??_islower^0,w,c
  2186  002234  2605               	addwf	(??_islower+2)^0,f,c
  2187  002236  5004               	movf	(??_islower+1)^0,w,c
  2188  002238  2206               	addwfc	(??_islower+3)^0,f,c
  2189  00223A  5006               	movf	(??_islower+3)^0,w,c
  2190  00223C  E10A               	bnz	u1390
  2191  00223E  0E1A               	movlw	26
  2192  002240  5C05               	subwf	(??_islower+2)^0,w,c
  2193  002242  A0D8               	btfss	status,0,c
  2194  002244  EF26  F011         	goto	u1391
  2195  002248  EF29  F011         	goto	u1390
  2196  00224C                     u1391:
  2197  00224C  0E01               	movlw	1
  2198  00224E  EF2A  F011         	goto	u1400
  2199  002252                     u1390:
  2200  002252  0E00               	movlw	0
  2201  002254                     u1400:
  2202  002254  6E01               	movwf	?_islower^0,c
  2203  002256  6A02               	clrf	(?_islower+1)^0,c
  2204  002258  0012               	return		;funcret
  2205  00225A                     __end_of_islower:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _isupper *****************
  2209 ;; Defined at:
  2210 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  c               2    0[COMRAM] int 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;		None
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  2    0[COMRAM] int 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2224 ;;      Params:         2       0       0       0       0       0       0       0       0
  2225 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2226 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2227 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2228 ;;Total ram usage:        6 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_xtoa
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           	psect	text7
  2238  00225A                     __ptext7:
  2239                           	callstack 0
  2240  00225A                     _isupper:
  2241                           	callstack 26
  2242  00225A  0EBF               	movlw	191
  2243  00225C  6E03               	movwf	??_isupper^0,c
  2244  00225E  0EFF               	movlw	255
  2245  002260  6E04               	movwf	(??_isupper+1)^0,c
  2246  002262  C001  F005         	movff	isupper@c,??_isupper+2
  2247  002266  C002  F006         	movff	isupper@c+1,??_isupper+3
  2248  00226A  5003               	movf	??_isupper^0,w,c
  2249  00226C  2605               	addwf	(??_isupper+2)^0,f,c
  2250  00226E  5004               	movf	(??_isupper+1)^0,w,c
  2251  002270  2206               	addwfc	(??_isupper+3)^0,f,c
  2252  002272  5006               	movf	(??_isupper+3)^0,w,c
  2253  002274  E10A               	bnz	u1760
  2254  002276  0E1A               	movlw	26
  2255  002278  5C05               	subwf	(??_isupper+2)^0,w,c
  2256  00227A  A0D8               	btfss	status,0,c
  2257  00227C  EF42  F011         	goto	u1761
  2258  002280  EF45  F011         	goto	u1760
  2259  002284                     u1761:
  2260  002284  0E01               	movlw	1
  2261  002286  EF46  F011         	goto	u1770
  2262  00228A                     u1760:
  2263  00228A  0E00               	movlw	0
  2264  00228C                     u1770:
  2265  00228C  6E01               	movwf	?_isupper^0,c
  2266  00228E  6A02               	clrf	(?_isupper+1)^0,c
  2267  002290  0012               	return		;funcret
  2268  002292                     __end_of_isupper:
  2269                           	callstack 0
  2270                           
  2271 ;; *************** function _isalpha *****************
  2272 ;; Defined at:
  2273 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isalpha.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  c               2    0[COMRAM] int 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;		None
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  2    0[COMRAM] int 
  2280 ;; Registers used:
  2281 ;;		wreg, status,2, status,0
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2287 ;;      Params:         2       0       0       0       0       0       0       0       0
  2288 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2289 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2290 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2291 ;;Total ram usage:        6 bytes
  2292 ;; Hardware stack levels used: 1
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_xtoa
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text8
  2301  0021E6                     __ptext8:
  2302                           	callstack 0
  2303  0021E6                     _isalpha:
  2304                           	callstack 26
  2305  0021E6  0E9F               	movlw	159
  2306  0021E8  6E03               	movwf	??_isalpha^0,c
  2307  0021EA  0EFF               	movlw	255
  2308  0021EC  6E04               	movwf	(??_isalpha+1)^0,c
  2309  0021EE  0E20               	movlw	32
  2310  0021F0  1001               	iorwf	isalpha@c^0,w,c
  2311  0021F2  6E05               	movwf	(??_isalpha+2)^0,c
  2312  0021F4  0E00               	movlw	0
  2313  0021F6  1002               	iorwf	(isalpha@c+1)^0,w,c
  2314  0021F8  6E06               	movwf	(??_isalpha+3)^0,c
  2315  0021FA  5003               	movf	??_isalpha^0,w,c
  2316  0021FC  2605               	addwf	(??_isalpha+2)^0,f,c
  2317  0021FE  5004               	movf	(??_isalpha+1)^0,w,c
  2318  002200  2206               	addwfc	(??_isalpha+3)^0,f,c
  2319  002202  5006               	movf	(??_isalpha+3)^0,w,c
  2320  002204  E10A               	bnz	u1780
  2321  002206  0E1A               	movlw	26
  2322  002208  5C05               	subwf	(??_isalpha+2)^0,w,c
  2323  00220A  A0D8               	btfss	status,0,c
  2324  00220C  EF0A  F011         	goto	u1781
  2325  002210  EF0D  F011         	goto	u1780
  2326  002214                     u1781:
  2327  002214  0E01               	movlw	1
  2328  002216  EF0E  F011         	goto	u1790
  2329  00221A                     u1780:
  2330  00221A  0E00               	movlw	0
  2331  00221C                     u1790:
  2332  00221C  6E01               	movwf	?_isalpha^0,c
  2333  00221E  6A02               	clrf	(?_isalpha+1)^0,c
  2334  002220  0012               	return		;funcret
  2335  002222                     __end_of_isalpha:
  2336                           	callstack 0
  2337                           
  2338 ;; *************** function _dtoa *****************
  2339 ;; Defined at:
  2340 ;;		line 287 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2343 ;;		 -> sprintf@f(11), 
  2344 ;;  d               8   29[COMRAM] long long 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  n               8   53[COMRAM] long long 
  2347 ;;  i               2   61[COMRAM] int 
  2348 ;;  s               2   51[COMRAM] int 
  2349 ;;  w               2   49[COMRAM] int 
  2350 ;;  p               2   47[COMRAM] int 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  2   27[COMRAM] int 
  2353 ;; Registers used:
  2354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2360 ;;      Params:        10       0       0       0       0       0       0       0       0
  2361 ;;      Locals:        18       0       0       0       0       0       0       0       0
  2362 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2363 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2364 ;;Total ram usage:       36 bytes
  2365 ;; Hardware stack levels used: 1
  2366 ;; Hardware stack levels required when called: 4
  2367 ;; This function calls:
  2368 ;;		___aodiv
  2369 ;;		___aomod
  2370 ;;		_abs
  2371 ;;		_pad
  2372 ;; This function is called by:
  2373 ;;		_vfpfcnvrt
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text9
  2378  000810                     __ptext9:
  2379                           	callstack 0
  2380  000810                     _dtoa:
  2381                           	callstack 23
  2382  000810                     
  2383                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2384  000810  C01E  F036         	movff	dtoa@d,dtoa@n
  2385  000814  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  2386  000818  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  2387  00081C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  2388  000820  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  2389  000824  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  2390  000828  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  2391  00082C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  2392  000830                     
  2393                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2394  000830  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  2395  000832  EF1D  F004         	goto	u1811
  2396  000836  EF20  F004         	goto	u1810
  2397  00083A                     u1811:
  2398  00083A  0E01               	movlw	1
  2399  00083C  EF21  F004         	goto	u1820
  2400  000840                     u1810:
  2401  000840  0E00               	movlw	0
  2402  000842                     u1820:
  2403  000842  6E34               	movwf	dtoa@s^0,c
  2404  000844  6A35               	clrf	(dtoa@s+1)^0,c
  2405                           
  2406                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2407  000846  5034               	movf	dtoa@s^0,w,c
  2408  000848  1035               	iorwf	(dtoa@s+1)^0,w,c
  2409  00084A  B4D8               	btfsc	status,2,c
  2410  00084C  EF2A  F004         	goto	u1831
  2411  000850  EF2C  F004         	goto	u1830
  2412  000854                     u1831:
  2413  000854  EF3C  F004         	goto	l2367
  2414  000858                     u1830:
  2415  000858                     
  2416                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2417  000858  1E3D               	comf	(dtoa@n+7)^0,f,c
  2418  00085A  1E3C               	comf	(dtoa@n+6)^0,f,c
  2419  00085C  1E3B               	comf	(dtoa@n+5)^0,f,c
  2420  00085E  1E3A               	comf	(dtoa@n+4)^0,f,c
  2421  000860  1E39               	comf	(dtoa@n+3)^0,f,c
  2422  000862  1E38               	comf	(dtoa@n+2)^0,f,c
  2423  000864  1E37               	comf	(dtoa@n+1)^0,f,c
  2424  000866  6C36               	negf	dtoa@n^0,c
  2425  000868  0E00               	movlw	0
  2426  00086A  2237               	addwfc	(dtoa@n+1)^0,f,c
  2427  00086C  2238               	addwfc	(dtoa@n+2)^0,f,c
  2428  00086E  2239               	addwfc	(dtoa@n+3)^0,f,c
  2429  000870  223A               	addwfc	(dtoa@n+4)^0,f,c
  2430  000872  223B               	addwfc	(dtoa@n+5)^0,f,c
  2431  000874  223C               	addwfc	(dtoa@n+6)^0,f,c
  2432  000876  223D               	addwfc	(dtoa@n+7)^0,f,c
  2433  000878                     l2367:
  2434                           
  2435                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2436  000878  0100               	movlb	0	; () banked
  2437  00087A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2438  00087C  EF42  F004         	goto	u1841
  2439  000880  EF44  F004         	goto	u1840
  2440  000884                     u1841:
  2441  000884  EF45  F004         	goto	l2371
  2442  000888                     u1840:
  2443  000888                     
  2444                           ; BSR set to: 0
  2445                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2446  000888  9366               	bcf	_flags& (0+255),1,b
  2447  00088A                     l2371:
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2451  00088A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2452  00088C  EF52  F004         	goto	u1850
  2453  000890  5165               	movf	(_prec+1)& (0+255),w,b
  2454  000892  E106               	bnz	u1851
  2455  000894  0564               	decf	_prec& (0+255),w,b
  2456  000896  B0D8               	btfsc	status,0,c
  2457  000898  EF50  F004         	goto	u1851
  2458  00089C  EF52  F004         	goto	u1850
  2459  0008A0                     u1851:
  2460  0008A0  EF58  F004         	goto	l1021
  2461  0008A4                     u1850:
  2462  0008A4                     
  2463                           ; BSR set to: 0
  2464  0008A4  0E00               	movlw	0
  2465  0008A6  6E31               	movwf	(dtoa@p+1)^0,c
  2466  0008A8  0E01               	movlw	1
  2467  0008AA  6E30               	movwf	dtoa@p^0,c
  2468  0008AC  EF5C  F004         	goto	l1023
  2469  0008B0                     l1021:
  2470                           
  2471                           ; BSR set to: 0
  2472  0008B0  C064  F030         	movff	_prec,dtoa@p
  2473  0008B4  C065  F031         	movff	_prec+1,dtoa@p+1
  2474  0008B8                     l1023:
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2478  0008B8  C062  F032         	movff	_width,dtoa@w
  2479  0008BC  C063  F033         	movff	_width+1,dtoa@w+1
  2480  0008C0                     
  2481                           ; BSR set to: 0
  2482                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2483  0008C0  5034               	movf	dtoa@s^0,w,c
  2484  0008C2  1035               	iorwf	(dtoa@s+1)^0,w,c
  2485  0008C4  A4D8               	btfss	status,2,c
  2486  0008C6  EF67  F004         	goto	u1861
  2487  0008CA  EF69  F004         	goto	u1860
  2488  0008CE                     u1861:
  2489  0008CE  EF70  F004         	goto	l2379
  2490  0008D2                     u1860:
  2491  0008D2                     
  2492                           ; BSR set to: 0
  2493  0008D2  A566               	btfss	_flags& (0+255),2,b
  2494  0008D4  EF6E  F004         	goto	u1871
  2495  0008D8  EF70  F004         	goto	u1870
  2496  0008DC                     u1871:
  2497  0008DC  EF73  F004         	goto	l2381
  2498  0008E0                     u1870:
  2499  0008E0                     l2379:
  2500                           
  2501                           ; BSR set to: 0
  2502                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  2503  0008E0  0632               	decf	dtoa@w^0,f,c
  2504  0008E2  A0D8               	btfss	status,0,c
  2505  0008E4  0633               	decf	(dtoa@w+1)^0,f,c
  2506  0008E6                     l2381:
  2507                           
  2508                           ; BSR set to: 0
  2509                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2510  0008E6  0E00               	movlw	0
  2511  0008E8  6E3F               	movwf	(dtoa@i+1)^0,c
  2512  0008EA  0E1F               	movlw	31
  2513  0008EC  6E3E               	movwf	dtoa@i^0,c
  2514  0008EE                     
  2515                           ; BSR set to: 0
  2516                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2517  0008EE  0E00               	movlw	0
  2518  0008F0  6F8A               	movwf	(_dbuf+31)& (0+255),b
  2519                           
  2520                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2521  0008F2  EFF7  F004         	goto	l2395
  2522  0008F6                     l2385:
  2523                           
  2524                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  2525  0008F6  063E               	decf	dtoa@i^0,f,c
  2526  0008F8  A0D8               	btfss	status,0,c
  2527  0008FA  063F               	decf	(dtoa@i+1)^0,f,c
  2528  0008FC                     
  2529                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2530  0008FC  0E6B               	movlw	low _dbuf
  2531  0008FE  243E               	addwf	dtoa@i^0,w,c
  2532  000900  6ED9               	movwf	fsr2l,c
  2533  000902  0E00               	movlw	high _dbuf
  2534  000904  203F               	addwfc	(dtoa@i+1)^0,w,c
  2535  000906  6EDA               	movwf	fsr2h,c
  2536  000908  C036  F001         	movff	dtoa@n,___aomod@dividend
  2537  00090C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2538  000910  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2539  000914  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2540  000918  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2541  00091C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2542  000920  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2543  000924  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2544  000928  0E0A               	movlw	10
  2545  00092A  6E09               	movwf	___aomod@divisor^0,c
  2546  00092C  0E00               	movlw	0
  2547  00092E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2548  000930  0E00               	movlw	0
  2549  000932  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2550  000934  0E00               	movlw	0
  2551  000936  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2552  000938  0E00               	movlw	0
  2553  00093A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2554  00093C  0E00               	movlw	0
  2555  00093E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2556  000940  0E00               	movlw	0
  2557  000942  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2558  000944  0E00               	movlw	0
  2559  000946  6E10               	movwf	(___aomod@divisor+7)^0,c
  2560  000948  EC2C  F00B         	call	___aomod	;wreg free
  2561  00094C  C001  F026         	movff	?___aomod,??_dtoa
  2562  000950  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2563  000954  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2564  000958  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2565  00095C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2566  000960  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2567  000964  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2568  000968  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2569  00096C  C026  F013         	movff	??_dtoa,abs@a
  2570  000970  C028  F014         	movff	??_dtoa+2,abs@a+1
  2571  000974  ECD3  F010         	call	_abs	;wreg free
  2572  000978  5013               	movf	?_abs^0,w,c
  2573  00097A  0F30               	addlw	48
  2574  00097C  6EDF               	movwf	indf2,c
  2575  00097E                     
  2576                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  2577  00097E  0630               	decf	dtoa@p^0,f,c
  2578  000980  A0D8               	btfss	status,0,c
  2579  000982  0631               	decf	(dtoa@p+1)^0,f,c
  2580  000984                     
  2581                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  2582  000984  0632               	decf	dtoa@w^0,f,c
  2583  000986  A0D8               	btfss	status,0,c
  2584  000988  0633               	decf	(dtoa@w+1)^0,f,c
  2585  00098A                     
  2586                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2587  00098A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  2588  00098E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2589  000992  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2590  000996  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2591  00099A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2592  00099E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2593  0009A2  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2594  0009A6  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2595  0009AA  0E0A               	movlw	10
  2596  0009AC  6E09               	movwf	___aodiv@divisor^0,c
  2597  0009AE  0E00               	movlw	0
  2598  0009B0  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2599  0009B2  0E00               	movlw	0
  2600  0009B4  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2601  0009B6  0E00               	movlw	0
  2602  0009B8  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2603  0009BA  0E00               	movlw	0
  2604  0009BC  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2605  0009BE  0E00               	movlw	0
  2606  0009C0  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2607  0009C2  0E00               	movlw	0
  2608  0009C4  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2609  0009C6  0E00               	movlw	0
  2610  0009C8  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2611  0009CA  EC68  F00A         	call	___aodiv	;wreg free
  2612  0009CE  C001  F036         	movff	?___aodiv,dtoa@n
  2613  0009D2  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2614  0009D6  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2615  0009DA  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2616  0009DE  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2617  0009E2  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2618  0009E6  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2619  0009EA  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2620  0009EE                     l2395:
  2621                           
  2622                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2623  0009EE  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2624  0009F0  EF02  F005         	goto	u1881
  2625  0009F4  503F               	movf	(dtoa@i+1)^0,w,c
  2626  0009F6  E108               	bnz	u1880
  2627  0009F8  043E               	decf	dtoa@i^0,w,c
  2628  0009FA  A0D8               	btfss	status,0,c
  2629  0009FC  EF02  F005         	goto	u1881
  2630  000A00  EF04  F005         	goto	u1880
  2631  000A04                     u1881:
  2632  000A04  EF35  F005         	goto	l2405
  2633  000A08                     u1880:
  2634  000A08  5036               	movf	dtoa@n^0,w,c
  2635  000A0A  1037               	iorwf	(dtoa@n+1)^0,w,c
  2636  000A0C  1038               	iorwf	(dtoa@n+2)^0,w,c
  2637  000A0E  1039               	iorwf	(dtoa@n+3)^0,w,c
  2638  000A10  103A               	iorwf	(dtoa@n+4)^0,w,c
  2639  000A12  103B               	iorwf	(dtoa@n+5)^0,w,c
  2640  000A14  103C               	iorwf	(dtoa@n+6)^0,w,c
  2641  000A16  103D               	iorwf	(dtoa@n+7)^0,w,c
  2642  000A18  A4D8               	btfss	status,2,c
  2643  000A1A  EF11  F005         	goto	u1891
  2644  000A1E  EF13  F005         	goto	u1890
  2645  000A22                     u1891:
  2646  000A22  EF7B  F004         	goto	l2385
  2647  000A26                     u1890:
  2648  000A26  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2649  000A28  EF20  F005         	goto	u1900
  2650  000A2C  5031               	movf	(dtoa@p+1)^0,w,c
  2651  000A2E  E106               	bnz	u1901
  2652  000A30  0430               	decf	dtoa@p^0,w,c
  2653  000A32  B0D8               	btfsc	status,0,c
  2654  000A34  EF1E  F005         	goto	u1901
  2655  000A38  EF20  F005         	goto	u1900
  2656  000A3C                     u1901:
  2657  000A3C  EF7B  F004         	goto	l2385
  2658  000A40                     u1900:
  2659  000A40  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2660  000A42  EF2B  F005         	goto	u1911
  2661  000A46  5033               	movf	(dtoa@w+1)^0,w,c
  2662  000A48  E108               	bnz	u1910
  2663  000A4A  0432               	decf	dtoa@w^0,w,c
  2664  000A4C  A0D8               	btfss	status,0,c
  2665  000A4E  EF2B  F005         	goto	u1911
  2666  000A52  EF2D  F005         	goto	u1910
  2667  000A56                     u1911:
  2668  000A56  EF35  F005         	goto	l2405
  2669  000A5A                     u1910:
  2670  000A5A  0100               	movlb	0	; () banked
  2671  000A5C  B366               	btfsc	_flags& (0+255),1,b
  2672  000A5E  EF33  F005         	goto	u1921
  2673  000A62  EF35  F005         	goto	u1920
  2674  000A66                     u1921:
  2675  000A66  EF7B  F004         	goto	l2385
  2676  000A6A                     u1920:
  2677  000A6A                     l2405:
  2678                           
  2679                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2680  000A6A  5034               	movf	dtoa@s^0,w,c
  2681  000A6C  1035               	iorwf	(dtoa@s+1)^0,w,c
  2682  000A6E  A4D8               	btfss	status,2,c
  2683  000A70  EF3C  F005         	goto	u1931
  2684  000A74  EF3E  F005         	goto	u1930
  2685  000A78                     u1931:
  2686  000A78  EF46  F005         	goto	l2409
  2687  000A7C                     u1930:
  2688  000A7C  0100               	movlb	0	; () banked
  2689  000A7E  A566               	btfss	_flags& (0+255),2,b
  2690  000A80  EF44  F005         	goto	u1941
  2691  000A84  EF46  F005         	goto	u1940
  2692  000A88                     u1941:
  2693  000A88  EF64  F005         	goto	l2419
  2694  000A8C                     u1940:
  2695  000A8C                     l2409:
  2696                           
  2697                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  2698  000A8C  063E               	decf	dtoa@i^0,f,c
  2699  000A8E  A0D8               	btfss	status,0,c
  2700  000A90  063F               	decf	(dtoa@i+1)^0,f,c
  2701  000A92                     
  2702                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2703  000A92  5034               	movf	dtoa@s^0,w,c
  2704  000A94  1035               	iorwf	(dtoa@s+1)^0,w,c
  2705  000A96  A4D8               	btfss	status,2,c
  2706  000A98  EF50  F005         	goto	u1951
  2707  000A9C  EF52  F005         	goto	u1950
  2708  000AA0                     u1951:
  2709  000AA0  EF58  F005         	goto	l2415
  2710  000AA4                     u1950:
  2711  000AA4  0E00               	movlw	0
  2712  000AA6  6E2F               	movwf	(_dtoa$1015+1)^0,c
  2713  000AA8  0E2B               	movlw	43
  2714  000AAA  6E2E               	movwf	_dtoa$1015^0,c
  2715  000AAC  EF5C  F005         	goto	l2417
  2716  000AB0                     l2415:
  2717  000AB0  0E00               	movlw	0
  2718  000AB2  6E2F               	movwf	(_dtoa$1015+1)^0,c
  2719  000AB4  0E2D               	movlw	45
  2720  000AB6  6E2E               	movwf	_dtoa$1015^0,c
  2721  000AB8                     l2417:
  2722  000AB8  0E6B               	movlw	low _dbuf
  2723  000ABA  243E               	addwf	dtoa@i^0,w,c
  2724  000ABC  6ED9               	movwf	fsr2l,c
  2725  000ABE  0E00               	movlw	high _dbuf
  2726  000AC0  203F               	addwfc	(dtoa@i+1)^0,w,c
  2727  000AC2  6EDA               	movwf	fsr2h,c
  2728  000AC4  C02E  FFDF         	movff	_dtoa$1015,indf2
  2729  000AC8                     l2419:
  2730                           
  2731                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2732  000AC8  C01C  F011         	movff	dtoa@fp,pad@fp
  2733  000ACC  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2734  000AD0  0E6B               	movlw	low _dbuf
  2735  000AD2  243E               	addwf	dtoa@i^0,w,c
  2736  000AD4  6E13               	movwf	pad@buf^0,c
  2737  000AD6  0E00               	movlw	high _dbuf
  2738  000AD8  203F               	addwfc	(dtoa@i+1)^0,w,c
  2739  000ADA  6E14               	movwf	(pad@buf+1)^0,c
  2740  000ADC  C032  F015         	movff	dtoa@w,pad@p
  2741  000AE0  C033  F016         	movff	dtoa@w+1,pad@p+1
  2742  000AE4  ECBA  F00C         	call	_pad	;wreg free
  2743  000AE8  C011  F01C         	movff	?_pad,?_dtoa
  2744  000AEC  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2745  000AF0  0012               	return		;funcret
  2746  000AF2                     __end_of_dtoa:
  2747                           	callstack 0
  2748                           
  2749 ;; *************** function _pad *****************
  2750 ;; Defined at:
  2751 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2754 ;;		 -> sprintf@f(11), 
  2755 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2756 ;;		 -> dbuf(32), 
  2757 ;;  p               2   20[COMRAM] int 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  w               2   25[COMRAM] int 
  2760 ;;  i               2   23[COMRAM] int 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  2   16[COMRAM] int 
  2763 ;; Registers used:
  2764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2770 ;;      Params:         6       0       0       0       0       0       0       0       0
  2771 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2772 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2773 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2774 ;;Total ram usage:       11 bytes
  2775 ;; Hardware stack levels used: 1
  2776 ;; Hardware stack levels required when called: 3
  2777 ;; This function calls:
  2778 ;;		_fputc
  2779 ;;		_fputs
  2780 ;;		_strlen
  2781 ;; This function is called by:
  2782 ;;		_dtoa
  2783 ;;		_xtoa
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text10
  2788  001974                     __ptext10:
  2789                           	callstack 0
  2790  001974                     _pad:
  2791                           	callstack 23
  2792  001974                     
  2793                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2794  001974  0100               	movlb	0	; () banked
  2795  001976  A166               	btfss	_flags& (0+255),0,b
  2796  001978  EFC0  F00C         	goto	u1711
  2797  00197C  EFC2  F00C         	goto	u1710
  2798  001980                     u1711:
  2799  001980  EFCC  F00C         	goto	l2307
  2800  001984                     u1710:
  2801  001984                     
  2802                           ; BSR set to: 0
  2803                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2804  001984  C013  F00A         	movff	pad@buf,fputs@s
  2805  001988  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2806  00198C  C011  F00C         	movff	pad@fp,fputs@fp
  2807  001990  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2808  001994  ECB1  F010         	call	_fputs	;wreg free
  2809  001998                     l2307:
  2810                           
  2811                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2812  001998  BE16               	btfsc	(pad@p+1)^0,7,c
  2813  00199A  EFD1  F00C         	goto	u1721
  2814  00199E  EFD3  F00C         	goto	u1720
  2815  0019A2                     u1721:
  2816  0019A2  EFD9  F00C         	goto	l2311
  2817  0019A6                     u1720:
  2818  0019A6  C015  F01A         	movff	pad@p,pad@w
  2819  0019AA  C016  F01B         	movff	pad@p+1,pad@w+1
  2820  0019AE  EFDD  F00C         	goto	l1010
  2821  0019B2                     l2311:
  2822  0019B2  0E00               	movlw	0
  2823  0019B4  6E1B               	movwf	(pad@w+1)^0,c
  2824  0019B6  0E00               	movlw	0
  2825  0019B8  6E1A               	movwf	pad@w^0,c
  2826  0019BA                     l1010:
  2827                           
  2828                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2829  0019BA  0E00               	movlw	0
  2830  0019BC  6E19               	movwf	(pad@i+1)^0,c
  2831  0019BE  0E00               	movlw	0
  2832  0019C0  6E18               	movwf	pad@i^0,c
  2833                           
  2834                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2835  0019C2  EFEF  F00C         	goto	l2317
  2836  0019C6                     l2313:
  2837                           
  2838                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2839  0019C6  0E00               	movlw	0
  2840  0019C8  6E02               	movwf	(fputc@c+1)^0,c
  2841  0019CA  0E20               	movlw	32
  2842  0019CC  6E01               	movwf	fputc@c^0,c
  2843  0019CE  C011  F003         	movff	pad@fp,fputc@fp
  2844  0019D2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2845  0019D6  EC55  F00C         	call	_fputc	;wreg free
  2846  0019DA                     
  2847                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2848  0019DA  4A18               	infsnz	pad@i^0,f,c
  2849  0019DC  2A19               	incf	(pad@i+1)^0,f,c
  2850  0019DE                     l2317:
  2851                           
  2852                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2853  0019DE  501A               	movf	pad@w^0,w,c
  2854  0019E0  5C18               	subwf	pad@i^0,w,c
  2855  0019E2  5019               	movf	(pad@i+1)^0,w,c
  2856  0019E4  0A80               	xorlw	128
  2857  0019E6  6E17               	movwf	??_pad^0,c
  2858  0019E8  501B               	movf	(pad@w+1)^0,w,c
  2859  0019EA  0A80               	xorlw	128
  2860  0019EC  5817               	subwfb	??_pad^0,w,c
  2861  0019EE  A0D8               	btfss	status,0,c
  2862  0019F0  EFFC  F00C         	goto	u1731
  2863  0019F4  EFFE  F00C         	goto	u1730
  2864  0019F8                     u1731:
  2865  0019F8  EFE3  F00C         	goto	l2313
  2866  0019FC                     u1730:
  2867  0019FC                     
  2868                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2869  0019FC  0100               	movlb	0	; () banked
  2870  0019FE  B166               	btfsc	_flags& (0+255),0,b
  2871  001A00  EF04  F00D         	goto	u1741
  2872  001A04  EF06  F00D         	goto	u1740
  2873  001A08                     u1741:
  2874  001A08  EF10  F00D         	goto	l2321
  2875  001A0C                     u1740:
  2876  001A0C                     
  2877                           ; BSR set to: 0
  2878                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2879  001A0C  C013  F00A         	movff	pad@buf,fputs@s
  2880  001A10  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2881  001A14  C011  F00C         	movff	pad@fp,fputs@fp
  2882  001A18  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2883  001A1C  ECB1  F010         	call	_fputs	;wreg free
  2884  001A20                     l2321:
  2885                           
  2886                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2887  001A20  C013  F001         	movff	pad@buf,strlen@s
  2888  001A24  C014  F002         	movff	pad@buf+1,strlen@s+1
  2889  001A28  EC65  F011         	call	_strlen	;wreg free
  2890  001A2C  501A               	movf	pad@w^0,w,c
  2891  001A2E  2401               	addwf	?_strlen^0,w,c
  2892  001A30  6E11               	movwf	?_pad^0,c
  2893  001A32  501B               	movf	(pad@w+1)^0,w,c
  2894  001A34  2002               	addwfc	(?_strlen+1)^0,w,c
  2895  001A36  6E12               	movwf	(?_pad+1)^0,c
  2896  001A38  0012               	return		;funcret
  2897  001A3A                     __end_of_pad:
  2898                           	callstack 0
  2899                           
  2900 ;; *************** function _strlen *****************
  2901 ;; Defined at:
  2902 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2905 ;;		 -> dbuf(32), UID(16), 
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2908 ;;		 -> dbuf(32), UID(16), 
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  2    0[COMRAM] unsigned int 
  2911 ;; Registers used:
  2912 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2918 ;;      Params:         2       0       0       0       0       0       0       0       0
  2919 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2920 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2921 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2922 ;;Total ram usage:        4 bytes
  2923 ;; Hardware stack levels used: 1
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_main
  2928 ;;		_pad
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text11
  2933  0022CA                     __ptext11:
  2934                           	callstack 0
  2935  0022CA                     _strlen:
  2936                           	callstack 30
  2937  0022CA  C001  F003         	movff	strlen@s,strlen@a
  2938  0022CE  C002  F004         	movff	strlen@s+1,strlen@a+1
  2939  0022D2  EF6D  F011         	goto	l2115
  2940  0022D6                     l2113:
  2941  0022D6  4A01               	infsnz	strlen@s^0,f,c
  2942  0022D8  2A02               	incf	(strlen@s+1)^0,f,c
  2943  0022DA                     l2115:
  2944  0022DA  C001  FFD9         	movff	strlen@s,fsr2l
  2945  0022DE  C002  FFDA         	movff	strlen@s+1,fsr2h
  2946  0022E2  50DF               	movf	indf2,w,c
  2947  0022E4  A4D8               	btfss	status,2,c
  2948  0022E6  EF77  F011         	goto	u1371
  2949  0022EA  EF79  F011         	goto	u1370
  2950  0022EE                     u1371:
  2951  0022EE  EF6B  F011         	goto	l2113
  2952  0022F2                     u1370:
  2953  0022F2  5003               	movf	strlen@a^0,w,c
  2954  0022F4  5C01               	subwf	strlen@s^0,w,c
  2955  0022F6  6E01               	movwf	?_strlen^0,c
  2956  0022F8  5004               	movf	(strlen@a+1)^0,w,c
  2957  0022FA  5802               	subwfb	(strlen@s+1)^0,w,c
  2958  0022FC  6E02               	movwf	(?_strlen+1)^0,c
  2959  0022FE  0012               	return		;funcret
  2960  002300                     __end_of_strlen:
  2961                           	callstack 0
  2962                           
  2963 ;; *************** function _fputs *****************
  2964 ;; Defined at:
  2965 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2968 ;;		 -> dbuf(32), 
  2969 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2970 ;;		 -> sprintf@f(11), 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  i               2   14[COMRAM] int 
  2973 ;;  c               1   13[COMRAM] unsigned char 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  2    9[COMRAM] int 
  2976 ;; Registers used:
  2977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2983 ;;      Params:         4       0       0       0       0       0       0       0       0
  2984 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2986 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2987 ;;Total ram usage:        7 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; Hardware stack levels required when called: 2
  2990 ;; This function calls:
  2991 ;;		_fputc
  2992 ;; This function is called by:
  2993 ;;		_pad
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text12
  2998  002162                     __ptext12:
  2999                           	callstack 0
  3000  002162                     _fputs:
  3001                           	callstack 23
  3002  002162  0E00               	movlw	0
  3003  002164  6E10               	movwf	(fputs@i+1)^0,c
  3004  002166  0E00               	movlw	0
  3005  002168  6E0F               	movwf	fputs@i^0,c
  3006  00216A  EFC2  F010         	goto	l2127
  3007  00216E                     l2123:
  3008  00216E  C00E  F001         	movff	fputs@c,fputc@c
  3009  002172  6A02               	clrf	(fputc@c+1)^0,c
  3010  002174  C00C  F003         	movff	fputs@fp,fputc@fp
  3011  002178  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3012  00217C  EC55  F00C         	call	_fputc	;wreg free
  3013  002180  4A0F               	infsnz	fputs@i^0,f,c
  3014  002182  2A10               	incf	(fputs@i+1)^0,f,c
  3015  002184                     l2127:
  3016  002184  500F               	movf	fputs@i^0,w,c
  3017  002186  240A               	addwf	fputs@s^0,w,c
  3018  002188  6ED9               	movwf	fsr2l,c
  3019  00218A  5010               	movf	(fputs@i+1)^0,w,c
  3020  00218C  200B               	addwfc	(fputs@s+1)^0,w,c
  3021  00218E  6EDA               	movwf	fsr2h,c
  3022  002190  50DF               	movf	indf2,w,c
  3023  002192  6E0E               	movwf	fputs@c^0,c
  3024  002194  500E               	movf	fputs@c^0,w,c
  3025  002196  A4D8               	btfss	status,2,c
  3026  002198  EFD0  F010         	goto	u1381
  3027  00219C  EFD2  F010         	goto	u1380
  3028  0021A0                     u1381:
  3029  0021A0  EFB7  F010         	goto	l2123
  3030  0021A4                     u1380:
  3031  0021A4  0012               	return		;funcret
  3032  0021A6                     __end_of_fputs:
  3033                           	callstack 0
  3034                           
  3035 ;; *************** function _fputc *****************
  3036 ;; Defined at:
  3037 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  c               2    0[COMRAM] int 
  3040 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3041 ;;		 -> sprintf@f(11), 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  2    0[COMRAM] int 
  3046 ;; Registers used:
  3047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3053 ;;      Params:         4       0       0       0       0       0       0       0       0
  3054 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3055 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3056 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3057 ;;Total ram usage:        9 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; Hardware stack levels required when called: 1
  3060 ;; This function calls:
  3061 ;;		_putch
  3062 ;; This function is called by:
  3063 ;;		_pad
  3064 ;;		_vfpfcnvrt
  3065 ;;		_fputs
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text13
  3070  0018AA                     __ptext13:
  3071                           	callstack 0
  3072  0018AA                     _fputc:
  3073                           	callstack 23
  3074  0018AA  5003               	movf	fputc@fp^0,w,c
  3075  0018AC  1004               	iorwf	(fputc@fp+1)^0,w,c
  3076  0018AE  B4D8               	btfsc	status,2,c
  3077  0018B0  EF5C  F00C         	goto	u1331
  3078  0018B4  EF5E  F00C         	goto	u1330
  3079  0018B8                     u1331:
  3080  0018B8  EF67  F00C         	goto	l2101
  3081  0018BC                     u1330:
  3082  0018BC  5003               	movf	fputc@fp^0,w,c
  3083  0018BE  1004               	iorwf	(fputc@fp+1)^0,w,c
  3084  0018C0  A4D8               	btfss	status,2,c
  3085  0018C2  EF65  F00C         	goto	u1341
  3086  0018C6  EF67  F00C         	goto	u1340
  3087  0018CA                     u1341:
  3088  0018CA  EF6C  F00C         	goto	l2103
  3089  0018CE                     u1340:
  3090  0018CE                     l2101:
  3091  0018CE  5001               	movf	fputc@c^0,w,c
  3092  0018D0  EC3A  F012         	call	_putch
  3093  0018D4  EFB9  F00C         	goto	l1115
  3094  0018D8                     l2103:
  3095  0018D8  EE20 F009          	lfsr	2,9
  3096  0018DC  5003               	movf	fputc@fp^0,w,c
  3097  0018DE  26D9               	addwf	fsr2l,f,c
  3098  0018E0  5004               	movf	(fputc@fp+1)^0,w,c
  3099  0018E2  22DA               	addwfc	fsr2h,f,c
  3100  0018E4  50DE               	movf	postinc2,w,c
  3101  0018E6  10DE               	iorwf	postinc2,w,c
  3102  0018E8  B4D8               	btfsc	status,2,c
  3103  0018EA  EF79  F00C         	goto	u1351
  3104  0018EE  EF7B  F00C         	goto	u1350
  3105  0018F2                     u1351:
  3106  0018F2  EF96  F00C         	goto	l2107
  3107  0018F6                     u1350:
  3108  0018F6  EE20 F009          	lfsr	2,9
  3109  0018FA  5003               	movf	fputc@fp^0,w,c
  3110  0018FC  26D9               	addwf	fsr2l,f,c
  3111  0018FE  5004               	movf	(fputc@fp+1)^0,w,c
  3112  001900  22DA               	addwfc	fsr2h,f,c
  3113  001902  EE10 F003          	lfsr	1,3
  3114  001906  5003               	movf	fputc@fp^0,w,c
  3115  001908  26E1               	addwf	fsr1l,f,c
  3116  00190A  5004               	movf	(fputc@fp+1)^0,w,c
  3117  00190C  22E2               	addwfc	fsr1h,f,c
  3118  00190E  50DE               	movf	postinc2,w,c
  3119  001910  5CE6               	subwf	postinc1,w,c
  3120  001912  50E6               	movf	postinc1,w,c
  3121  001914  0A80               	xorlw	128
  3122  001916  6E09               	movwf	(??_fputc+4)^0,c
  3123  001918  50DE               	movf	postinc2,w,c
  3124  00191A  0A80               	xorlw	128
  3125  00191C  5809               	subwfb	(??_fputc+4)^0,w,c
  3126  00191E  B0D8               	btfsc	status,0,c
  3127  001920  EF94  F00C         	goto	u1361
  3128  001924  EF96  F00C         	goto	u1360
  3129  001928                     u1361:
  3130  001928  EFB9  F00C         	goto	l1115
  3131  00192C                     u1360:
  3132  00192C                     l2107:
  3133  00192C  EE20 F003          	lfsr	2,3
  3134  001930  5003               	movf	fputc@fp^0,w,c
  3135  001932  26D9               	addwf	fsr2l,f,c
  3136  001934  5004               	movf	(fputc@fp+1)^0,w,c
  3137  001936  22DA               	addwfc	fsr2h,f,c
  3138  001938  CFDE F005          	movff	postinc2,??_fputc
  3139  00193C  CFDD F006          	movff	postdec2,??_fputc+1
  3140  001940  C003  FFD9         	movff	fputc@fp,fsr2l
  3141  001944  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3142  001948  CFDE F007          	movff	postinc2,??_fputc+2
  3143  00194C  CFDD F008          	movff	postdec2,??_fputc+3
  3144  001950  5005               	movf	??_fputc^0,w,c
  3145  001952  2407               	addwf	(??_fputc+2)^0,w,c
  3146  001954  6ED9               	movwf	fsr2l,c
  3147  001956  5006               	movf	(??_fputc+1)^0,w,c
  3148  001958  2008               	addwfc	(??_fputc+3)^0,w,c
  3149  00195A  6EDA               	movwf	fsr2h,c
  3150  00195C  C001  FFDF         	movff	fputc@c,indf2
  3151  001960  EE20 F003          	lfsr	2,3
  3152  001964  5003               	movf	fputc@fp^0,w,c
  3153  001966  26D9               	addwf	fsr2l,f,c
  3154  001968  5004               	movf	(fputc@fp+1)^0,w,c
  3155  00196A  22DA               	addwfc	fsr2h,f,c
  3156  00196C  2ADE               	incf	postinc2,f,c
  3157  00196E  0E00               	movlw	0
  3158  001970  22DD               	addwfc	postdec2,f,c
  3159  001972                     l1115:
  3160  001972  0012               	return		;funcret
  3161  001974                     __end_of_fputc:
  3162                           	callstack 0
  3163                           
  3164 ;; *************** function _putch *****************
  3165 ;; Defined at:
  3166 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  c               1    wreg     unsigned char 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  c               1    0[COMRAM] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3180 ;;      Params:         0       0       0       0       0       0       0       0       0
  3181 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3183 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3184 ;;Total ram usage:        0 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_fputc
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text14
  3194  002474                     __ptext14:
  3195                           	callstack 0
  3196  002474                     _putch:
  3197                           	callstack 23
  3198  002474  0012               	return		;funcret
  3199  002476                     __end_of_putch:
  3200                           	callstack 0
  3201                           
  3202 ;; *************** function _abs *****************
  3203 ;; Defined at:
  3204 ;;		line 1 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  a               2   18[COMRAM] int 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  2   18[COMRAM] int 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3218 ;;      Params:         2       0       0       0       0       0       0       0       0
  3219 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3220 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3221 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3222 ;;Total ram usage:        4 bytes
  3223 ;; Hardware stack levels used: 1
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_dtoa
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text15
  3232  0021A6                     __ptext15:
  3233                           	callstack 0
  3234  0021A6                     _abs:
  3235                           	callstack 26
  3236  0021A6  BE14               	btfsc	(abs@a+1)^0,7,c
  3237  0021A8  EFE0  F010         	goto	u1750
  3238  0021AC  5014               	movf	(abs@a+1)^0,w,c
  3239  0021AE  E106               	bnz	u1751
  3240  0021B0  0413               	decf	abs@a^0,w,c
  3241  0021B2  B0D8               	btfsc	status,0,c
  3242  0021B4  EFDE  F010         	goto	u1751
  3243  0021B8  EFE0  F010         	goto	u1750
  3244  0021BC                     u1751:
  3245  0021BC  EFEE  F010         	goto	l1088
  3246  0021C0                     u1750:
  3247  0021C0  C013  F015         	movff	abs@a,??_abs
  3248  0021C4  C014  F016         	movff	abs@a+1,??_abs+1
  3249  0021C8  1E15               	comf	??_abs^0,f,c
  3250  0021CA  1E16               	comf	(??_abs+1)^0,f,c
  3251  0021CC  4A15               	infsnz	??_abs^0,f,c
  3252  0021CE  2A16               	incf	(??_abs+1)^0,f,c
  3253  0021D0  C015  F013         	movff	??_abs,?_abs
  3254  0021D4  C016  F014         	movff	??_abs+1,?_abs+1
  3255  0021D8  EFF2  F010         	goto	l1091
  3256  0021DC                     l1088:
  3257  0021DC  C013  F013         	movff	abs@a,?_abs
  3258  0021E0  C014  F014         	movff	abs@a+1,?_abs+1
  3259  0021E4                     l1091:
  3260  0021E4  0012               	return		;funcret
  3261  0021E6                     __end_of_abs:
  3262                           	callstack 0
  3263                           
  3264 ;; *************** function ___aomod *****************
  3265 ;; Defined at:
  3266 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  dividend        8    0[COMRAM] long long 
  3269 ;;  divisor         8    8[COMRAM] long long 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  sign            1   17[COMRAM] unsigned char 
  3272 ;;  counter         1   16[COMRAM] unsigned char 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  8    0[COMRAM] long long 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3282 ;;      Params:        16       0       0       0       0       0       0       0       0
  3283 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3285 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3286 ;;Total ram usage:       18 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_dtoa
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text16
  3296  001658                     __ptext16:
  3297                           	callstack 0
  3298  001658                     ___aomod:
  3299                           	callstack 26
  3300  001658  0E00               	movlw	0
  3301  00165A  6E12               	movwf	___aomod@sign^0,c
  3302  00165C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3303  00165E  EF35  F00B         	goto	u1650
  3304  001662  EF33  F00B         	goto	u1651
  3305  001666                     u1651:
  3306  001666  EF47  F00B         	goto	l2275
  3307  00166A                     u1650:
  3308  00166A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3309  00166C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3310  00166E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3311  001670  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3312  001672  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3313  001674  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3314  001676  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3315  001678  6C01               	negf	___aomod@dividend^0,c
  3316  00167A  0E00               	movlw	0
  3317  00167C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3318  00167E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3319  001680  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3320  001682  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3321  001684  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3322  001686  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3323  001688  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3324  00168A  0E01               	movlw	1
  3325  00168C  6E12               	movwf	___aomod@sign^0,c
  3326  00168E                     l2275:
  3327  00168E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3328  001690  EF4E  F00B         	goto	u1660
  3329  001694  EF4C  F00B         	goto	u1661
  3330  001698                     u1661:
  3331  001698  EF5E  F00B         	goto	l2279
  3332  00169C                     u1660:
  3333  00169C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3334  00169E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3335  0016A0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3336  0016A2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3337  0016A4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3338  0016A6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3339  0016A8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3340  0016AA  6C09               	negf	___aomod@divisor^0,c
  3341  0016AC  0E00               	movlw	0
  3342  0016AE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3343  0016B0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3344  0016B2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3345  0016B4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3346  0016B6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3347  0016B8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3348  0016BA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3349  0016BC                     l2279:
  3350  0016BC  5009               	movf	___aomod@divisor^0,w,c
  3351  0016BE  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3352  0016C0  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3353  0016C2  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3354  0016C4  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3355  0016C6  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3356  0016C8  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3357  0016CA  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3358  0016CC  B4D8               	btfsc	status,2,c
  3359  0016CE  EF6B  F00B         	goto	u1671
  3360  0016D2  EF6D  F00B         	goto	u1670
  3361  0016D6                     u1671:
  3362  0016D6  EFB5  F00B         	goto	l2295
  3363  0016DA                     u1670:
  3364  0016DA  0E01               	movlw	1
  3365  0016DC  6E11               	movwf	___aomod@counter^0,c
  3366  0016DE  EF7B  F00B         	goto	l2285
  3367  0016E2                     l2283:
  3368  0016E2  90D8               	bcf	status,0,c
  3369  0016E4  3609               	rlcf	___aomod@divisor^0,f,c
  3370  0016E6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3371  0016E8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3372  0016EA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3373  0016EC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3374  0016EE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3375  0016F0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3376  0016F2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3377  0016F4  2A11               	incf	___aomod@counter^0,f,c
  3378  0016F6                     l2285:
  3379  0016F6  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3380  0016F8  EF80  F00B         	goto	u1681
  3381  0016FC  EF82  F00B         	goto	u1680
  3382  001700                     u1681:
  3383  001700  EF71  F00B         	goto	l2283
  3384  001704                     u1680:
  3385  001704                     l2287:
  3386  001704  5009               	movf	___aomod@divisor^0,w,c
  3387  001706  5C01               	subwf	___aomod@dividend^0,w,c
  3388  001708  500A               	movf	(___aomod@divisor+1)^0,w,c
  3389  00170A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3390  00170C  500B               	movf	(___aomod@divisor+2)^0,w,c
  3391  00170E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3392  001710  500C               	movf	(___aomod@divisor+3)^0,w,c
  3393  001712  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3394  001714  500D               	movf	(___aomod@divisor+4)^0,w,c
  3395  001716  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3396  001718  500E               	movf	(___aomod@divisor+5)^0,w,c
  3397  00171A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3398  00171C  500F               	movf	(___aomod@divisor+6)^0,w,c
  3399  00171E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3400  001720  5010               	movf	(___aomod@divisor+7)^0,w,c
  3401  001722  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3402  001724  A0D8               	btfss	status,0,c
  3403  001726  EF97  F00B         	goto	u1691
  3404  00172A  EF99  F00B         	goto	u1690
  3405  00172E                     u1691:
  3406  00172E  EFA9  F00B         	goto	l2291
  3407  001732                     u1690:
  3408  001732  5009               	movf	___aomod@divisor^0,w,c
  3409  001734  5E01               	subwf	___aomod@dividend^0,f,c
  3410  001736  500A               	movf	(___aomod@divisor+1)^0,w,c
  3411  001738  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3412  00173A  500B               	movf	(___aomod@divisor+2)^0,w,c
  3413  00173C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3414  00173E  500C               	movf	(___aomod@divisor+3)^0,w,c
  3415  001740  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3416  001742  500D               	movf	(___aomod@divisor+4)^0,w,c
  3417  001744  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3418  001746  500E               	movf	(___aomod@divisor+5)^0,w,c
  3419  001748  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3420  00174A  500F               	movf	(___aomod@divisor+6)^0,w,c
  3421  00174C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3422  00174E  5010               	movf	(___aomod@divisor+7)^0,w,c
  3423  001750  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3424  001752                     l2291:
  3425  001752  90D8               	bcf	status,0,c
  3426  001754  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3427  001756  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3428  001758  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3429  00175A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3430  00175C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3431  00175E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3432  001760  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3433  001762  3209               	rrcf	___aomod@divisor^0,f,c
  3434  001764  2E11               	decfsz	___aomod@counter^0,f,c
  3435  001766  EF82  F00B         	goto	l2287
  3436  00176A                     l2295:
  3437  00176A  5012               	movf	___aomod@sign^0,w,c
  3438  00176C  B4D8               	btfsc	status,2,c
  3439  00176E  EFBB  F00B         	goto	u1701
  3440  001772  EFBD  F00B         	goto	u1700
  3441  001776                     u1701:
  3442  001776  EFCD  F00B         	goto	l2299
  3443  00177A                     u1700:
  3444  00177A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3445  00177C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3446  00177E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3447  001780  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3448  001782  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3449  001784  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3450  001786  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3451  001788  6C01               	negf	___aomod@dividend^0,c
  3452  00178A  0E00               	movlw	0
  3453  00178C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3454  00178E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3455  001790  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3456  001792  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3457  001794  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3458  001796  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3459  001798  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3460  00179A                     l2299:
  3461  00179A  C001  F001         	movff	___aomod@dividend,?___aomod
  3462  00179E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3463  0017A2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3464  0017A6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3465  0017AA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3466  0017AE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3467  0017B2  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3468  0017B6  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3469  0017BA  0012               	return		;funcret
  3470  0017BC                     __end_of___aomod:
  3471                           	callstack 0
  3472                           
  3473 ;; *************** function ___aodiv *****************
  3474 ;; Defined at:
  3475 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  dividend        8    0[COMRAM] long long 
  3478 ;;  divisor         8    8[COMRAM] long long 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  quotient        8   18[COMRAM] long long 
  3481 ;;  sign            1   17[COMRAM] unsigned char 
  3482 ;;  counter         1   16[COMRAM] unsigned char 
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  8    0[COMRAM] long long 
  3485 ;; Registers used:
  3486 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3492 ;;      Params:        16       0       0       0       0       0       0       0       0
  3493 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3495 ;;      Totals:        26       0       0       0       0       0       0       0       0
  3496 ;;Total ram usage:       26 bytes
  3497 ;; Hardware stack levels used: 1
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_dtoa
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text17
  3506  0014D0                     __ptext17:
  3507                           	callstack 0
  3508  0014D0                     ___aodiv:
  3509                           	callstack 26
  3510  0014D0  0E00               	movlw	0
  3511  0014D2  6E12               	movwf	___aodiv@sign^0,c
  3512  0014D4  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3513  0014D6  EF71  F00A         	goto	u1580
  3514  0014DA  EF6F  F00A         	goto	u1581
  3515  0014DE                     u1581:
  3516  0014DE  EF83  F00A         	goto	l2231
  3517  0014E2                     u1580:
  3518  0014E2  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3519  0014E4  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3520  0014E6  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3521  0014E8  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3522  0014EA  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3523  0014EC  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3524  0014EE  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3525  0014F0  6C09               	negf	___aodiv@divisor^0,c
  3526  0014F2  0E00               	movlw	0
  3527  0014F4  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3528  0014F6  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3529  0014F8  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3530  0014FA  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3531  0014FC  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3532  0014FE  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3533  001500  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3534  001502  0E01               	movlw	1
  3535  001504  6E12               	movwf	___aodiv@sign^0,c
  3536  001506                     l2231:
  3537  001506  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3538  001508  EF8A  F00A         	goto	u1590
  3539  00150C  EF88  F00A         	goto	u1591
  3540  001510                     u1591:
  3541  001510  EF9C  F00A         	goto	l2237
  3542  001514                     u1590:
  3543  001514  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3544  001516  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3545  001518  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3546  00151A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3547  00151C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3548  00151E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3549  001520  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3550  001522  6C01               	negf	___aodiv@dividend^0,c
  3551  001524  0E00               	movlw	0
  3552  001526  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3553  001528  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3554  00152A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3555  00152C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3556  00152E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3557  001530  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3558  001532  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3559  001534  0E01               	movlw	1
  3560  001536  1A12               	xorwf	___aodiv@sign^0,f,c
  3561  001538                     l2237:
  3562  001538  EE20  F013         	lfsr	2,___aodiv@quotient
  3563  00153C  0E07               	movlw	7
  3564  00153E                     u1601:
  3565  00153E  6ADE               	clrf	postinc2,c
  3566  001540  06E8               	decf	wreg,f,c
  3567  001542  E2FD               	bc	u1601
  3568  001544  5009               	movf	___aodiv@divisor^0,w,c
  3569  001546  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3570  001548  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3571  00154A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3572  00154C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3573  00154E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3574  001550  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3575  001552  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3576  001554  B4D8               	btfsc	status,2,c
  3577  001556  EFAF  F00A         	goto	u1611
  3578  00155A  EFB1  F00A         	goto	u1610
  3579  00155E                     u1611:
  3580  00155E  EF03  F00B         	goto	l2259
  3581  001562                     u1610:
  3582  001562  0E01               	movlw	1
  3583  001564  6E11               	movwf	___aodiv@counter^0,c
  3584  001566  EFBF  F00A         	goto	l2245
  3585  00156A                     l2243:
  3586  00156A  90D8               	bcf	status,0,c
  3587  00156C  3609               	rlcf	___aodiv@divisor^0,f,c
  3588  00156E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3589  001570  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3590  001572  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3591  001574  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3592  001576  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3593  001578  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3594  00157A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3595  00157C  2A11               	incf	___aodiv@counter^0,f,c
  3596  00157E                     l2245:
  3597  00157E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3598  001580  EFC4  F00A         	goto	u1621
  3599  001584  EFC6  F00A         	goto	u1620
  3600  001588                     u1621:
  3601  001588  EFB5  F00A         	goto	l2243
  3602  00158C                     u1620:
  3603  00158C                     l2247:
  3604  00158C  90D8               	bcf	status,0,c
  3605  00158E  3613               	rlcf	___aodiv@quotient^0,f,c
  3606  001590  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3607  001592  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3608  001594  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3609  001596  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3610  001598  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3611  00159A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3612  00159C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3613  00159E  5009               	movf	___aodiv@divisor^0,w,c
  3614  0015A0  5C01               	subwf	___aodiv@dividend^0,w,c
  3615  0015A2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3616  0015A4  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3617  0015A6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3618  0015A8  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3619  0015AA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3620  0015AC  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3621  0015AE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3622  0015B0  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3623  0015B2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3624  0015B4  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3625  0015B6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3626  0015B8  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3627  0015BA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3628  0015BC  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3629  0015BE  A0D8               	btfss	status,0,c
  3630  0015C0  EFE4  F00A         	goto	u1631
  3631  0015C4  EFE6  F00A         	goto	u1630
  3632  0015C8                     u1631:
  3633  0015C8  EFF7  F00A         	goto	l2255
  3634  0015CC                     u1630:
  3635  0015CC  5009               	movf	___aodiv@divisor^0,w,c
  3636  0015CE  5E01               	subwf	___aodiv@dividend^0,f,c
  3637  0015D0  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3638  0015D2  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3639  0015D4  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3640  0015D6  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3641  0015D8  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3642  0015DA  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3643  0015DC  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3644  0015DE  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3645  0015E0  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3646  0015E2  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3647  0015E4  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3648  0015E6  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3649  0015E8  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3650  0015EA  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3651  0015EC  8013               	bsf	___aodiv@quotient^0,0,c
  3652  0015EE                     l2255:
  3653  0015EE  90D8               	bcf	status,0,c
  3654  0015F0  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3655  0015F2  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3656  0015F4  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3657  0015F6  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3658  0015F8  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3659  0015FA  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3660  0015FC  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3661  0015FE  3209               	rrcf	___aodiv@divisor^0,f,c
  3662  001600  2E11               	decfsz	___aodiv@counter^0,f,c
  3663  001602  EFC6  F00A         	goto	l2247
  3664  001606                     l2259:
  3665  001606  5012               	movf	___aodiv@sign^0,w,c
  3666  001608  B4D8               	btfsc	status,2,c
  3667  00160A  EF09  F00B         	goto	u1641
  3668  00160E  EF0B  F00B         	goto	u1640
  3669  001612                     u1641:
  3670  001612  EF1B  F00B         	goto	l2263
  3671  001616                     u1640:
  3672  001616  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3673  001618  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3674  00161A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3675  00161C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3676  00161E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3677  001620  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3678  001622  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3679  001624  6C13               	negf	___aodiv@quotient^0,c
  3680  001626  0E00               	movlw	0
  3681  001628  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3682  00162A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3683  00162C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3684  00162E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3685  001630  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3686  001632  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3687  001634  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3688  001636                     l2263:
  3689  001636  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3690  00163A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3691  00163E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3692  001642  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3693  001646  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3694  00164A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3695  00164E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3696  001652  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3697  001656  0012               	return		;funcret
  3698  001658                     __end_of___aodiv:
  3699                           	callstack 0
  3700                           
  3701 ;; *************** function _port_Init *****************
  3702 ;; Defined at:
  3703 ;;		line 75 in file "main.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		None
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3717 ;;      Params:         0       0       0       0       0       0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3720 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3721 ;;Total ram usage:        0 bytes
  3722 ;; Hardware stack levels used: 1
  3723 ;; This function calls:
  3724 ;;		Nothing
  3725 ;; This function is called by:
  3726 ;;		_main
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text18
  3731  00246E                     __ptext18:
  3732                           	callstack 0
  3733  00246E                     _port_Init:
  3734                           	callstack 30
  3735  00246E                     
  3736                           ;main.c: 77:     TRISB7 = 0;
  3737  00246E  9E93               	bcf	3987,7,c	;volatile
  3738                           
  3739                           ;main.c: 78:     LATB7 = 0;
  3740  002470  9E8A               	bcf	3978,7,c	;volatile
  3741  002472  0012               	return		;funcret
  3742  002474                     __end_of_port_Init:
  3743                           	callstack 0
  3744                           
  3745 ;; *************** function _MFRC522_ReadCardSerial *****************
  3746 ;; Defined at:
  3747 ;;		line 321 in file "rc522.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  str             2   39[COMRAM] PTR unsigned char 
  3750 ;;		 -> UID(16), 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  _status         1    0        unsigned char 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      unsigned char 
  3755 ;; Registers used:
  3756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3762 ;;      Params:         2       0       0       0       0       0       0       0       0
  3763 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3764 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3765 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3766 ;;Total ram usage:        2 bytes
  3767 ;; Hardware stack levels used: 1
  3768 ;; Hardware stack levels required when called: 4
  3769 ;; This function calls:
  3770 ;;		_MFRC522_AntiColl
  3771 ;; This function is called by:
  3772 ;;		_main
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text19
  3777  0023D2                     __ptext19:
  3778                           	callstack 0
  3779  0023D2                     _MFRC522_ReadCardSerial:
  3780                           	callstack 26
  3781  0023D2  C028  F020         	movff	MFRC522_ReadCardSerial@str,MFRC522_AntiColl@serNum
  3782  0023D6  C029  F021         	movff	MFRC522_ReadCardSerial@str+1,MFRC522_AntiColl@serNum+1
  3783  0023DA  ECD6  F00D         	call	_MFRC522_AntiColl	;wreg free
  3784  0023DE                     
  3785                           ;rc522.c: 325:     str[5] = 0;
  3786  0023DE  EE20 F005          	lfsr	2,5
  3787  0023E2  5028               	movf	MFRC522_ReadCardSerial@str^0,w,c
  3788  0023E4  26D9               	addwf	fsr2l,f,c
  3789  0023E6  5029               	movf	(MFRC522_ReadCardSerial@str+1)^0,w,c
  3790  0023E8  22DA               	addwfc	fsr2h,f,c
  3791  0023EA  0E00               	movlw	0
  3792  0023EC  6EDF               	movwf	indf2,c
  3793  0023EE  0012               	return		;funcret
  3794  0023F0                     __end_of_MFRC522_ReadCardSerial:
  3795                           	callstack 0
  3796                           
  3797 ;; *************** function _MFRC522_AntiColl *****************
  3798 ;; Defined at:
  3799 ;;		line 288 in file "rc522.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  serNum          2   31[COMRAM] PTR unsigned char 
  3802 ;;		 -> UID(16), 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  unLen           2   35[COMRAM] unsigned int 
  3805 ;;  i               1   38[COMRAM] unsigned char 
  3806 ;;  _status         1   37[COMRAM] unsigned char 
  3807 ;;  serNumCheck     1   34[COMRAM] unsigned char 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      unsigned char 
  3810 ;; Registers used:
  3811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3817 ;;      Params:         2       0       0       0       0       0       0       0       0
  3818 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3819 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3820 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3821 ;;Total ram usage:        8 bytes
  3822 ;; Hardware stack levels used: 1
  3823 ;; Hardware stack levels required when called: 3
  3824 ;; This function calls:
  3825 ;;		_MFRC522_Clear_Bit
  3826 ;;		_MFRC522_ToCard
  3827 ;;		_MFRC522_Wr
  3828 ;; This function is called by:
  3829 ;;		_main
  3830 ;;		_MFRC522_ReadCardSerial
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           	psect	text20
  3835  001BAC                     __ptext20:
  3836                           	callstack 0
  3837  001BAC                     _MFRC522_AntiColl:
  3838                           	callstack 26
  3839  001BAC                     
  3840                           ;rc522.c: 288: char MFRC522_AntiColl(char *serNum);rc522.c: 289: {;rc522.c: 290:     cha
      +                          r _status;;rc522.c: 291:     char i;;rc522.c: 292:     char serNumCheck = 0;
  3841  001BAC  0E00               	movlw	0
  3842  001BAE  6E23               	movwf	MFRC522_AntiColl@serNumCheck^0,c
  3843  001BB0                     
  3844                           ;rc522.c: 293:     unsigned unLen;;rc522.c: 294:     MFRC522_Wr(0x0D, 0x00);
  3845  001BB0  0E00               	movlw	0
  3846  001BB2  6E01               	movwf	MFRC522_Wr@value^0,c
  3847  001BB4  0E0D               	movlw	13
  3848  001BB6  ECD2  F00E         	call	_MFRC522_Wr
  3849  001BBA                     
  3850                           ;rc522.c: 295:     serNum[0] = 0x93;
  3851  001BBA  C020  FFD9         	movff	MFRC522_AntiColl@serNum,fsr2l
  3852  001BBE  C021  FFDA         	movff	MFRC522_AntiColl@serNum+1,fsr2h
  3853  001BC2  0E93               	movlw	147
  3854  001BC4  6EDF               	movwf	indf2,c
  3855  001BC6                     
  3856                           ;rc522.c: 296:     serNum[1] = 0x20;
  3857  001BC6  EE20 F001          	lfsr	2,1
  3858  001BCA  5020               	movf	MFRC522_AntiColl@serNum^0,w,c
  3859  001BCC  26D9               	addwf	fsr2l,f,c
  3860  001BCE  5021               	movf	(MFRC522_AntiColl@serNum+1)^0,w,c
  3861  001BD0  22DA               	addwfc	fsr2h,f,c
  3862  001BD2  0E20               	movlw	32
  3863  001BD4  6EDF               	movwf	indf2,c
  3864  001BD6                     
  3865                           ;rc522.c: 297:     MFRC522_Clear_Bit(0x08, 0x08);
  3866  001BD6  0E08               	movlw	8
  3867  001BD8  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  3868  001BDA  0E08               	movlw	8
  3869  001BDC  EC07  F012         	call	_MFRC522_Clear_Bit
  3870  001BE0                     
  3871                           ;rc522.c: 298:     _status = MFRC522_ToCard(0x0C, serNum, 2, serNum, &unLen);
  3872  001BE0  C020  F00D         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@sendData
  3873  001BE4  C021  F00E         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@sendData+1
  3874  001BE8  0E02               	movlw	2
  3875  001BEA  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
  3876  001BEC  C020  F010         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@backData
  3877  001BF0  C021  F011         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@backData+1
  3878  001BF4  0E24               	movlw	low MFRC522_AntiColl@unLen
  3879  001BF6  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  3880  001BF8  0E00               	movlw	high MFRC522_AntiColl@unLen
  3881  001BFA  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  3882  001BFC  0E0C               	movlw	12
  3883  001BFE  EC17  F008         	call	_MFRC522_ToCard
  3884  001C02  6E26               	movwf	MFRC522_AntiColl@_status^0,c
  3885  001C04                     
  3886                           ;rc522.c: 299:     if(_status == 0)
  3887  001C04  5026               	movf	MFRC522_AntiColl@_status^0,w,c
  3888  001C06  A4D8               	btfss	status,2,c
  3889  001C08  EF08  F00E         	goto	u2301
  3890  001C0C  EF0A  F00E         	goto	u2300
  3891  001C10                     u2301:
  3892  001C10  EF2E  F00E         	goto	l276
  3893  001C14                     u2300:
  3894  001C14                     
  3895                           ;rc522.c: 300:     {;rc522.c: 301:         for(i=0; i<5; i++)
  3896  001C14  0E00               	movlw	0
  3897  001C16  6E27               	movwf	MFRC522_AntiColl@i^0,c
  3898  001C18                     l2671:
  3899                           
  3900                           ;rc522.c: 302:         {;rc522.c: 303:             serNumCheck ^= serNum[i];
  3901  001C18  5027               	movf	MFRC522_AntiColl@i^0,w,c
  3902  001C1A  2420               	addwf	MFRC522_AntiColl@serNum^0,w,c
  3903  001C1C  6ED9               	movwf	fsr2l,c
  3904  001C1E  0E00               	movlw	0
  3905  001C20  2021               	addwfc	(MFRC522_AntiColl@serNum+1)^0,w,c
  3906  001C22  6EDA               	movwf	fsr2h,c
  3907  001C24  50DF               	movf	indf2,w,c
  3908  001C26  1A23               	xorwf	MFRC522_AntiColl@serNumCheck^0,f,c
  3909  001C28                     
  3910                           ;rc522.c: 304:         }
  3911  001C28  2A27               	incf	MFRC522_AntiColl@i^0,f,c
  3912  001C2A  0E04               	movlw	4
  3913  001C2C  6427               	cpfsgt	MFRC522_AntiColl@i^0,c
  3914  001C2E  EF1B  F00E         	goto	u2311
  3915  001C32  EF1D  F00E         	goto	u2310
  3916  001C36                     u2311:
  3917  001C36  EF0C  F00E         	goto	l2671
  3918  001C3A                     u2310:
  3919  001C3A                     
  3920                           ;rc522.c: 305:         if(serNumCheck != serNum[5])
  3921  001C3A  EE20 F005          	lfsr	2,5
  3922  001C3E  5020               	movf	MFRC522_AntiColl@serNum^0,w,c
  3923  001C40  26D9               	addwf	fsr2l,f,c
  3924  001C42  5021               	movf	(MFRC522_AntiColl@serNum+1)^0,w,c
  3925  001C44  22DA               	addwfc	fsr2h,f,c
  3926  001C46  5023               	movf	MFRC522_AntiColl@serNumCheck^0,w,c
  3927  001C48  18DE               	xorwf	postinc2,w,c
  3928  001C4A  B4D8               	btfsc	status,2,c
  3929  001C4C  EF2A  F00E         	goto	u2321
  3930  001C50  EF2C  F00E         	goto	u2320
  3931  001C54                     u2321:
  3932  001C54  EF2E  F00E         	goto	l276
  3933  001C58                     u2320:
  3934  001C58                     
  3935                           ;rc522.c: 306:         {;rc522.c: 307:             _status = 2;
  3936  001C58  0E02               	movlw	2
  3937  001C5A  6E26               	movwf	MFRC522_AntiColl@_status^0,c
  3938  001C5C                     l276:
  3939                           
  3940                           ;rc522.c: 310:     return _status;
  3941  001C5C  5026               	movf	MFRC522_AntiColl@_status^0,w,c
  3942  001C5E  0012               	return		;funcret
  3943  001C60                     __end_of_MFRC522_AntiColl:
  3944                           	callstack 0
  3945                           
  3946 ;; *************** function _MFRC522_IsCard *****************
  3947 ;; Defined at:
  3948 ;;		line 313 in file "rc522.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  TagType         2   37[COMRAM] PTR unsigned char 
  3951 ;;		 -> TagType(1), 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;		None
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      unsigned char 
  3956 ;; Registers used:
  3957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3963 ;;      Params:         2       0       0       0       0       0       0       0       0
  3964 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3966 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3967 ;;Total ram usage:        2 bytes
  3968 ;; Hardware stack levels used: 1
  3969 ;; Hardware stack levels required when called: 4
  3970 ;; This function calls:
  3971 ;;		_MFRC522_Request
  3972 ;; This function is called by:
  3973 ;;		_main
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text21
  3978  002452                     __ptext21:
  3979                           	callstack 0
  3980  002452                     _MFRC522_IsCard:
  3981                           	callstack 26
  3982  002452                     
  3983                           ;rc522.c: 313: char MFRC522_IsCard(char *TagType);rc522.c: 314: {;rc522.c: 315:     if(M
      +                          FRC522_Request(0x26, TagType) == 0)
  3984  002452  C026  F020         	movff	MFRC522_IsCard@TagType,MFRC522_Request@TagType
  3985  002456  C027  F021         	movff	MFRC522_IsCard@TagType+1,MFRC522_Request@TagType+1
  3986  00245A  0E26               	movlw	38
  3987  00245C  EC53  F00F         	call	_MFRC522_Request
  3988  002460  0012               	return		;funcret
  3989  002462                     __end_of_MFRC522_IsCard:
  3990                           	callstack 0
  3991                           
  3992 ;; *************** function _MFRC522_Request *****************
  3993 ;; Defined at:
  3994 ;;		line 214 in file "rc522.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  reqMode         1    wreg     unsigned char 
  3997 ;;  TagType         2   31[COMRAM] PTR unsigned char 
  3998 ;;		 -> TagType(1), 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  reqMode         1   33[COMRAM] unsigned char 
  4001 ;;  backBits        2   35[COMRAM] unsigned int 
  4002 ;;  _status         1   34[COMRAM] unsigned char 
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  1    wreg      unsigned char 
  4005 ;; Registers used:
  4006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4012 ;;      Params:         2       0       0       0       0       0       0       0       0
  4013 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4015 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4016 ;;Total ram usage:        6 bytes
  4017 ;; Hardware stack levels used: 1
  4018 ;; Hardware stack levels required when called: 3
  4019 ;; This function calls:
  4020 ;;		_MFRC522_ToCard
  4021 ;;		_MFRC522_Wr
  4022 ;; This function is called by:
  4023 ;;		_MFRC522_IsCard
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text22
  4028  001EA6                     __ptext22:
  4029                           	callstack 0
  4030  001EA6                     _MFRC522_Request:
  4031                           	callstack 26
  4032                           
  4033                           ;incstack = 0
  4034                           ;MFRC522_Request@reqMode stored from wreg
  4035  001EA6  6E22               	movwf	MFRC522_Request@reqMode^0,c
  4036  001EA8                     
  4037                           ;rc522.c: 214: char MFRC522_Request(char reqMode, char *TagType);rc522.c: 215: {;rc522.c
      +                          : 216:     char _status;;rc522.c: 217:     unsigned backBits;;rc522.c: 218:     MFRC522_
      +                          Wr(0x0D, 0x07);
  4038  001EA8  0E07               	movlw	7
  4039  001EAA  6E01               	movwf	MFRC522_Wr@value^0,c
  4040  001EAC  0E0D               	movlw	13
  4041  001EAE  ECD2  F00E         	call	_MFRC522_Wr
  4042  001EB2                     
  4043                           ;rc522.c: 219:     TagType[0] = reqMode;
  4044  001EB2  C020  FFD9         	movff	MFRC522_Request@TagType,fsr2l
  4045  001EB6  C021  FFDA         	movff	MFRC522_Request@TagType+1,fsr2h
  4046  001EBA  C022  FFDF         	movff	MFRC522_Request@reqMode,indf2
  4047  001EBE                     
  4048                           ;rc522.c: 220:     _status = MFRC522_ToCard(0x0C, TagType, 1, TagType, &backBits);
  4049  001EBE  C020  F00D         	movff	MFRC522_Request@TagType,MFRC522_ToCard@sendData
  4050  001EC2  C021  F00E         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@sendData+1
  4051  001EC6  0E01               	movlw	1
  4052  001EC8  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
  4053  001ECA  C020  F010         	movff	MFRC522_Request@TagType,MFRC522_ToCard@backData
  4054  001ECE  C021  F011         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@backData+1
  4055  001ED2  0E24               	movlw	low MFRC522_Request@backBits
  4056  001ED4  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  4057  001ED6  0E00               	movlw	high MFRC522_Request@backBits
  4058  001ED8  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  4059  001EDA  0E0C               	movlw	12
  4060  001EDC  EC17  F008         	call	_MFRC522_ToCard
  4061  001EE0  6E23               	movwf	MFRC522_Request@_status^0,c
  4062  001EE2                     
  4063                           ;rc522.c: 221:     if((_status != 0) || (backBits != 0x10))
  4064  001EE2  5023               	movf	MFRC522_Request@_status^0,w,c
  4065  001EE4  A4D8               	btfss	status,2,c
  4066  001EE6  EF77  F00F         	goto	u2331
  4067  001EEA  EF79  F00F         	goto	u2330
  4068  001EEE                     u2331:
  4069  001EEE  EF83  F00F         	goto	l2703
  4070  001EF2                     u2330:
  4071  001EF2  0E10               	movlw	16
  4072  001EF4  1824               	xorwf	MFRC522_Request@backBits^0,w,c
  4073  001EF6  1025               	iorwf	(MFRC522_Request@backBits+1)^0,w,c
  4074  001EF8  B4D8               	btfsc	status,2,c
  4075  001EFA  EF81  F00F         	goto	u2341
  4076  001EFE  EF83  F00F         	goto	u2340
  4077  001F02                     u2341:
  4078  001F02  EF85  F00F         	goto	l250
  4079  001F06                     u2340:
  4080  001F06                     l2703:
  4081                           
  4082                           ;rc522.c: 222:     {;rc522.c: 223:         _status = 2;
  4083  001F06  0E02               	movlw	2
  4084  001F08  6E23               	movwf	MFRC522_Request@_status^0,c
  4085  001F0A                     l250:
  4086                           
  4087                           ;rc522.c: 225:     return _status;
  4088  001F0A  5023               	movf	MFRC522_Request@_status^0,w,c
  4089  001F0C  0012               	return		;funcret
  4090  001F0E                     __end_of_MFRC522_Request:
  4091                           	callstack 0
  4092                           
  4093 ;; *************** function _MFRC522_Init *****************
  4094 ;; Defined at:
  4095 ;;		line 100 in file "rc522.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;		None
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg, status,2, status,0, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4109 ;;      Params:         0       0       0       0       0       0       0       0       0
  4110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4112 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4113 ;;Total ram usage:        0 bytes
  4114 ;; Hardware stack levels used: 1
  4115 ;; Hardware stack levels required when called: 3
  4116 ;; This function calls:
  4117 ;;		_MFRC522_AntennaOff
  4118 ;;		_MFRC522_AntennaOn
  4119 ;;		_MFRC522_Reset
  4120 ;;		_MFRC522_Wr
  4121 ;; This function is called by:
  4122 ;;		_main
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text23
  4127  001F70                     __ptext23:
  4128                           	callstack 0
  4129  001F70                     _MFRC522_Init:
  4130                           	callstack 27
  4131  001F70                     
  4132                           ;rc522.c: 102:     TRISDbits.RD2 = 0;
  4133  001F70  9495               	bcf	149,2,c	;volatile
  4134                           
  4135                           ;rc522.c: 103:     TRISDbits.RD1 = 0;
  4136  001F72  9295               	bcf	149,1,c	;volatile
  4137                           
  4138                           ;rc522.c: 104:     TRISAbits.RA0 = 0;
  4139  001F74  9092               	bcf	146,0,c	;volatile
  4140                           
  4141                           ;rc522.c: 105:     TRISAbits.RA1 = 0;
  4142  001F76  9292               	bcf	146,1,c	;volatile
  4143                           
  4144                           ;rc522.c: 106:     TRISDbits.RD3 = 1;
  4145  001F78  8695               	bsf	149,3,c	;volatile
  4146                           
  4147                           ;rc522.c: 107:     TRISDbits.RD4 = 0;
  4148  001F7A  9895               	bcf	149,4,c	;volatile
  4149                           
  4150                           ;rc522.c: 108:     LATDbits.LD1 = 0;
  4151  001F7C  928C               	bcf	140,1,c	;volatile
  4152                           
  4153                           ;rc522.c: 109:     LATDbits.LD2 = 0;
  4154  001F7E  948C               	bcf	140,2,c	;volatile
  4155                           
  4156                           ;rc522.c: 110:     LATAbits.LA0 = 1;
  4157  001F80  8089               	bsf	137,0,c	;volatile
  4158                           
  4159                           ;rc522.c: 111:     LATAbits.LA1 = 1;
  4160  001F82  8289               	bsf	137,1,c	;volatile
  4161                           
  4162                           ;rc522.c: 112:     LATDbits.LD4 = 1;
  4163  001F84  888C               	bsf	140,4,c	;volatile
  4164  001F86                     
  4165                           ;rc522.c: 113:     MFRC522_Reset();
  4166  001F86  ECAC  F011         	call	_MFRC522_Reset	;wreg free
  4167                           
  4168                           ;rc522.c: 114:     MFRC522_Wr(0x2A, 0x8D);
  4169  001F8A  0E8D               	movlw	141
  4170  001F8C  6E01               	movwf	MFRC522_Wr@value^0,c
  4171  001F8E  0E2A               	movlw	42
  4172  001F90  ECD2  F00E         	call	_MFRC522_Wr
  4173                           
  4174                           ;rc522.c: 115:     MFRC522_Wr(0x2B, 0x3E);
  4175  001F94  0E3E               	movlw	62
  4176  001F96  6E01               	movwf	MFRC522_Wr@value^0,c
  4177  001F98  0E2B               	movlw	43
  4178  001F9A  ECD2  F00E         	call	_MFRC522_Wr
  4179                           
  4180                           ;rc522.c: 116:     MFRC522_Wr(0x2D, 30);
  4181  001F9E  0E1E               	movlw	30
  4182  001FA0  6E01               	movwf	MFRC522_Wr@value^0,c
  4183  001FA2  0E2D               	movlw	45
  4184  001FA4  ECD2  F00E         	call	_MFRC522_Wr
  4185                           
  4186                           ;rc522.c: 117:     MFRC522_Wr(0x2C, 0);
  4187  001FA8  0E00               	movlw	0
  4188  001FAA  6E01               	movwf	MFRC522_Wr@value^0,c
  4189  001FAC  0E2C               	movlw	44
  4190  001FAE  ECD2  F00E         	call	_MFRC522_Wr
  4191                           
  4192                           ;rc522.c: 118:     MFRC522_Wr(0x15, 0x40);
  4193  001FB2  0E40               	movlw	64
  4194  001FB4  6E01               	movwf	MFRC522_Wr@value^0,c
  4195  001FB6  0E15               	movlw	21
  4196  001FB8  ECD2  F00E         	call	_MFRC522_Wr
  4197                           
  4198                           ;rc522.c: 119:     MFRC522_Wr(0x11, 0x3D);
  4199  001FBC  0E3D               	movlw	61
  4200  001FBE  6E01               	movwf	MFRC522_Wr@value^0,c
  4201  001FC0  0E11               	movlw	17
  4202  001FC2  ECD2  F00E         	call	_MFRC522_Wr
  4203                           
  4204                           ;rc522.c: 120:     MFRC522_AntennaOff();
  4205  001FC6  EC31  F012         	call	_MFRC522_AntennaOff	;wreg free
  4206                           
  4207                           ;rc522.c: 121:     MFRC522_AntennaOn();
  4208  001FCA  EC20  F012         	call	_MFRC522_AntennaOn	;wreg free
  4209  001FCE  0012               	return		;funcret
  4210  001FD0                     __end_of_MFRC522_Init:
  4211                           	callstack 0
  4212                           
  4213 ;; *************** function _MFRC522_Reset *****************
  4214 ;; Defined at:
  4215 ;;		line 76 in file "rc522.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;		None
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;		None
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  1    wreg      void 
  4222 ;; Registers used:
  4223 ;;		wreg, status,2, status,0, cstack
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4229 ;;      Params:         0       0       0       0       0       0       0       0       0
  4230 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4232 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4233 ;;Total ram usage:        0 bytes
  4234 ;; Hardware stack levels used: 1
  4235 ;; Hardware stack levels required when called: 1
  4236 ;; This function calls:
  4237 ;;		_MFRC522_Wr
  4238 ;; This function is called by:
  4239 ;;		_MFRC522_Init
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text24
  4244  002358                     __ptext24:
  4245                           	callstack 0
  4246  002358                     _MFRC522_Reset:
  4247                           	callstack 28
  4248  002358                     
  4249                           ;rc522.c: 78:     LATDbits.LD4 = 1;
  4250  002358  888C               	bsf	140,4,c	;volatile
  4251                           
  4252                           ;rc522.c: 79:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  4253  00235A  D000               	nop2		;2 cycle nop
  4254  00235C  D000               	nop2		;2 cycle nop
  4255  00235E  D000               	nop2		;2 cycle nop
  4256                           
  4257                           ;rc522.c: 80:     LATDbits.LD4 = 0;
  4258  002360  988C               	bcf	140,4,c	;volatile
  4259                           
  4260                           ;rc522.c: 81:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  4261  002362  D000               	nop2		;2 cycle nop
  4262  002364  D000               	nop2		;2 cycle nop
  4263  002366  D000               	nop2		;2 cycle nop
  4264                           
  4265                           ;rc522.c: 82:     LATDbits.LD4 = 1;
  4266  002368  888C               	bsf	140,4,c	;volatile
  4267                           
  4268                           ;rc522.c: 83:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  4269  00236A  D000               	nop2		;2 cycle nop
  4270  00236C  D000               	nop2		;2 cycle nop
  4271  00236E  D000               	nop2		;2 cycle nop
  4272  002370                     
  4273                           ;rc522.c: 84:     MFRC522_Wr(0x01, 0x0F);
  4274  002370  0E0F               	movlw	15
  4275  002372  6E01               	movwf	MFRC522_Wr@value^0,c
  4276  002374  0E01               	movlw	1
  4277  002376  ECD2  F00E         	call	_MFRC522_Wr
  4278  00237A                     
  4279                           ;rc522.c: 85:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  4280  00237A  D000               	nop2		;2 cycle nop
  4281  00237C  D000               	nop2		;2 cycle nop
  4282  00237E  D000               	nop2		;2 cycle nop
  4283  002380  0012               	return		;funcret
  4284  002382                     __end_of_MFRC522_Reset:
  4285                           	callstack 0
  4286                           
  4287 ;; *************** function _MFRC522_AntennaOn *****************
  4288 ;; Defined at:
  4289 ;;		line 88 in file "rc522.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  stt             1    0        unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4303 ;;      Params:         0       0       0       0       0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4306 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 2
  4310 ;; This function calls:
  4311 ;;		_MFRC522_Rd
  4312 ;;		_MFRC522_Set_Bit
  4313 ;; This function is called by:
  4314 ;;		_MFRC522_Init
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           	psect	text25
  4319  002440                     __ptext25:
  4320                           	callstack 0
  4321  002440                     _MFRC522_AntennaOn:
  4322                           	callstack 27
  4323  002440  0E14               	movlw	20
  4324  002442  EC1D  F00D         	call	_MFRC522_Rd
  4325                           
  4326                           ;rc522.c: 92:     MFRC522_Set_Bit(0x14, 0x03);
  4327  002446  0E03               	movlw	3
  4328  002448  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  4329  00244A  0E14               	movlw	20
  4330  00244C  EC14  F012         	call	_MFRC522_Set_Bit
  4331  002450  0012               	return		;funcret
  4332  002452                     __end_of_MFRC522_AntennaOn:
  4333                           	callstack 0
  4334                           
  4335 ;; *************** function _MFRC522_AntennaOff *****************
  4336 ;; Defined at:
  4337 ;;		line 95 in file "rc522.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;		None
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;		None
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  1    wreg      void 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4351 ;;      Params:         0       0       0       0       0       0       0       0       0
  4352 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4354 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4355 ;;Total ram usage:        0 bytes
  4356 ;; Hardware stack levels used: 1
  4357 ;; Hardware stack levels required when called: 2
  4358 ;; This function calls:
  4359 ;;		_MFRC522_Clear_Bit
  4360 ;; This function is called by:
  4361 ;;		_MFRC522_Init
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text26
  4366  002462                     __ptext26:
  4367                           	callstack 0
  4368  002462                     _MFRC522_AntennaOff:
  4369                           	callstack 27
  4370  002462                     
  4371                           ;rc522.c: 97:     MFRC522_Clear_Bit(0x14, 0x03);
  4372  002462  0E03               	movlw	3
  4373  002464  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  4374  002466  0E14               	movlw	20
  4375  002468  EC07  F012         	call	_MFRC522_Clear_Bit
  4376  00246C  0012               	return		;funcret
  4377  00246E                     __end_of_MFRC522_AntennaOff:
  4378                           	callstack 0
  4379                           
  4380 ;; *************** function _MFRC522_Halt *****************
  4381 ;; Defined at:
  4382 ;;		line 276 in file "rc522.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  buff            4   31[COMRAM] unsigned char [4]
  4387 ;;  unLen           2   35[COMRAM] unsigned int 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4397 ;;      Params:         0       0       0       0       0       0       0       0       0
  4398 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4400 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4401 ;;Total ram usage:        6 bytes
  4402 ;; Hardware stack levels used: 1
  4403 ;; Hardware stack levels required when called: 3
  4404 ;; This function calls:
  4405 ;;		_MFRC522_CRC
  4406 ;;		_MFRC522_Clear_Bit
  4407 ;;		_MFRC522_ToCard
  4408 ;; This function is called by:
  4409 ;;		_main
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text27
  4414  001FD0                     __ptext27:
  4415                           	callstack 0
  4416  001FD0                     _MFRC522_Halt:
  4417                           	callstack 27
  4418  001FD0                     
  4419                           ;rc522.c: 278:     unsigned unLen;;rc522.c: 279:     char buff[4];;rc522.c: 280:     buf
      +                          f[0] = 0x50;
  4420  001FD0  0E50               	movlw	80
  4421  001FD2  6E20               	movwf	MFRC522_Halt@buff^0,c
  4422                           
  4423                           ;rc522.c: 281:     buff[1] = 0;
  4424  001FD4  0E00               	movlw	0
  4425  001FD6  6E21               	movwf	(MFRC522_Halt@buff+1)^0,c
  4426  001FD8                     
  4427                           ;rc522.c: 282:     MFRC522_CRC(buff, 2, &buff[2]);
  4428  001FD8  0E20               	movlw	low MFRC522_Halt@buff
  4429  001FDA  6E0D               	movwf	MFRC522_CRC@dataIn^0,c
  4430  001FDC  0E00               	movlw	high MFRC522_Halt@buff
  4431  001FDE  6E0E               	movwf	(MFRC522_CRC@dataIn+1)^0,c
  4432  001FE0  0E02               	movlw	2
  4433  001FE2  6E0F               	movwf	MFRC522_CRC@length^0,c
  4434  001FE4  0E22               	movlw	low (MFRC522_Halt@buff+2)
  4435  001FE6  6E10               	movwf	MFRC522_CRC@dataOut^0,c
  4436  001FE8  0E00               	movlw	high (MFRC522_Halt@buff+2)
  4437  001FEA  6E11               	movwf	(MFRC522_CRC@dataOut+1)^0,c
  4438  001FEC  EC82  F00E         	call	_MFRC522_CRC	;wreg free
  4439  001FF0                     
  4440                           ;rc522.c: 283:     MFRC522_Clear_Bit(0x08, 0x80);
  4441  001FF0  0E80               	movlw	128
  4442  001FF2  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  4443  001FF4  0E08               	movlw	8
  4444  001FF6  EC07  F012         	call	_MFRC522_Clear_Bit
  4445  001FFA                     
  4446                           ;rc522.c: 284:     MFRC522_ToCard(0x0C, buff, 4, buff, &unLen);
  4447  001FFA  0E20               	movlw	low MFRC522_Halt@buff
  4448  001FFC  6E0D               	movwf	MFRC522_ToCard@sendData^0,c
  4449  001FFE  0E00               	movlw	high MFRC522_Halt@buff
  4450  002000  6E0E               	movwf	(MFRC522_ToCard@sendData+1)^0,c
  4451  002002  0E04               	movlw	4
  4452  002004  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
  4453  002006  0E20               	movlw	low MFRC522_Halt@buff
  4454  002008  6E10               	movwf	MFRC522_ToCard@backData^0,c
  4455  00200A  0E00               	movlw	high MFRC522_Halt@buff
  4456  00200C  6E11               	movwf	(MFRC522_ToCard@backData+1)^0,c
  4457  00200E  0E24               	movlw	low MFRC522_Halt@unLen
  4458  002010  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  4459  002012  0E00               	movlw	high MFRC522_Halt@unLen
  4460  002014  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  4461  002016  0E0C               	movlw	12
  4462  002018  EC17  F008         	call	_MFRC522_ToCard
  4463  00201C                     
  4464                           ;rc522.c: 285:     MFRC522_Clear_Bit(0x08, 0x08);
  4465  00201C  0E08               	movlw	8
  4466  00201E  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  4467  002020  0E08               	movlw	8
  4468  002022  EC07  F012         	call	_MFRC522_Clear_Bit
  4469  002026  0012               	return		;funcret
  4470  002028                     __end_of_MFRC522_Halt:
  4471                           	callstack 0
  4472                           
  4473 ;; *************** function _MFRC522_ToCard *****************
  4474 ;; Defined at:
  4475 ;;		line 124 in file "rc522.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  command         1    wreg     unsigned char 
  4478 ;;  sendData        2   12[COMRAM] PTR unsigned char 
  4479 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), UID(16), TagType(1), 
  4480 ;;  sendLen         1   14[COMRAM] unsigned char 
  4481 ;;  backData        2   15[COMRAM] PTR unsigned char 
  4482 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), UID(16), TagType(1), 
  4483 ;;  backLen         2   17[COMRAM] PTR unsigned int 
  4484 ;;		 -> MFRC522_AntiColl@unLen(2), MFRC522_Halt@unLen(2), MFRC522_SelectTag@recvBits(2), MFRC522_Request@backBits(2), 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  command         1   27[COMRAM] unsigned char 
  4487 ;;  i               2   28[COMRAM] unsigned int 
  4488 ;;  n               1   30[COMRAM] unsigned char 
  4489 ;;  irqEn           1   26[COMRAM] unsigned char 
  4490 ;;  lastBits        1   25[COMRAM] unsigned char 
  4491 ;;  _status         1   24[COMRAM] unsigned char 
  4492 ;;  waitIRq         1   23[COMRAM] unsigned char 
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      unsigned char 
  4495 ;; Registers used:
  4496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4502 ;;      Params:         7       0       0       0       0       0       0       0       0
  4503 ;;      Locals:         8       0       0       0       0       0       0       0       0
  4504 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4505 ;;      Totals:        19       0       0       0       0       0       0       0       0
  4506 ;;Total ram usage:       19 bytes
  4507 ;; Hardware stack levels used: 1
  4508 ;; Hardware stack levels required when called: 2
  4509 ;; This function calls:
  4510 ;;		_MFRC522_Clear_Bit
  4511 ;;		_MFRC522_Rd
  4512 ;;		_MFRC522_Set_Bit
  4513 ;;		_MFRC522_Wr
  4514 ;; This function is called by:
  4515 ;;		_MFRC522_Request
  4516 ;;		_MFRC522_Halt
  4517 ;;		_MFRC522_AntiColl
  4518 ;;		_MFRC522_SelectTag
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text28
  4523  00102E                     __ptext28:
  4524                           	callstack 0
  4525  00102E                     _MFRC522_ToCard:
  4526                           	callstack 26
  4527                           
  4528                           ;incstack = 0
  4529                           ;MFRC522_ToCard@command stored from wreg
  4530  00102E  6E1C               	movwf	MFRC522_ToCard@command^0,c
  4531  001030                     
  4532                           ;rc522.c: 124: char MFRC522_ToCard(char command, char *sendData, char sendLen, char *bac
      +                          kData, unsigned *backLen);rc522.c: 125: {;rc522.c: 126:     char _status = 2;
  4533  001030  0E02               	movlw	2
  4534  001032  6E19               	movwf	MFRC522_ToCard@_status^0,c
  4535                           
  4536                           ;rc522.c: 127:     char irqEn = 0x00;
  4537  001034  0E00               	movlw	0
  4538  001036  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
  4539                           
  4540                           ;rc522.c: 128:     char waitIRq = 0x00;
  4541  001038  0E00               	movlw	0
  4542  00103A  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
  4543                           
  4544                           ;rc522.c: 129:     char lastBits;;rc522.c: 130:     char n;;rc522.c: 131:     unsigned i
      +                          ;;rc522.c: 133:     switch(command)
  4545  00103C  EF2C  F008         	goto	l2511
  4546  001040                     l2505:
  4547                           
  4548                           ;rc522.c: 136:             irqEn = 0x12;
  4549  001040  0E12               	movlw	18
  4550  001042  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
  4551                           
  4552                           ;rc522.c: 137:             waitIRq = 0x10;
  4553  001044  0E10               	movlw	16
  4554  001046  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
  4555                           
  4556                           ;rc522.c: 138:             break;
  4557  001048  EF41  F008         	goto	l2513
  4558  00104C                     l2507:
  4559                           
  4560                           ;rc522.c: 141:             irqEn = 0x77;
  4561  00104C  0E77               	movlw	119
  4562  00104E  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
  4563                           
  4564                           ;rc522.c: 142:             waitIRq = 0x30;
  4565  001050  0E30               	movlw	48
  4566  001052  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
  4567                           
  4568                           ;rc522.c: 143:             break;
  4569  001054  EF41  F008         	goto	l2513
  4570  001058                     l2511:
  4571  001058  501C               	movf	MFRC522_ToCard@command^0,w,c
  4572  00105A  6E14               	movwf	??_MFRC522_ToCard^0,c
  4573  00105C  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
  4574                           
  4575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4576                           ; Switch size 1, requested type "simple"
  4577                           ; Number of cases is 1, Range of values is 0 to 0
  4578                           ; switch strategies available:
  4579                           ; Name         Instructions Cycles
  4580                           ; simple_byte            4     3 (average)
  4581                           ;	Chosen strategy is simple_byte
  4582  00105E  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  4583  001060  0A00               	xorlw	0	; case 0
  4584  001062  B4D8               	btfsc	status,2,c
  4585  001064  EF36  F008         	goto	l3221
  4586  001068  EF41  F008         	goto	l2513
  4587  00106C                     l3221:
  4588                           
  4589                           ; Switch size 1, requested type "simple"
  4590                           ; Number of cases is 2, Range of values is 12 to 14
  4591                           ; switch strategies available:
  4592                           ; Name         Instructions Cycles
  4593                           ; simple_byte            7     4 (average)
  4594                           ;	Chosen strategy is simple_byte
  4595  00106C  5014               	movf	??_MFRC522_ToCard^0,w,c
  4596  00106E  0A0C               	xorlw	12	; case 12
  4597  001070  B4D8               	btfsc	status,2,c
  4598  001072  EF26  F008         	goto	l2507
  4599  001076  0A02               	xorlw	2	; case 14
  4600  001078  B4D8               	btfsc	status,2,c
  4601  00107A  EF20  F008         	goto	l2505
  4602  00107E  EF41  F008         	goto	l2513
  4603  001082                     l2513:
  4604                           
  4605                           ;rc522.c: 148:     MFRC522_Wr(0x02, irqEn | 0x80);
  4606  001082  501B               	movf	MFRC522_ToCard@irqEn^0,w,c
  4607  001084  0980               	iorlw	128
  4608  001086  6E01               	movwf	MFRC522_Wr@value^0,c
  4609  001088  0E02               	movlw	2
  4610  00108A  ECD2  F00E         	call	_MFRC522_Wr
  4611                           
  4612                           ;rc522.c: 149:     MFRC522_Clear_Bit(0x04, 0x80);
  4613  00108E  0E80               	movlw	128
  4614  001090  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  4615  001092  0E04               	movlw	4
  4616  001094  EC07  F012         	call	_MFRC522_Clear_Bit
  4617                           
  4618                           ;rc522.c: 150:     MFRC522_Set_Bit(0x0A, 0x80);
  4619  001098  0E80               	movlw	128
  4620  00109A  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  4621  00109C  0E0A               	movlw	10
  4622  00109E  EC14  F012         	call	_MFRC522_Set_Bit
  4623                           
  4624                           ;rc522.c: 151:     MFRC522_Wr(0x01, 0x00);
  4625  0010A2  0E00               	movlw	0
  4626  0010A4  6E01               	movwf	MFRC522_Wr@value^0,c
  4627  0010A6  0E01               	movlw	1
  4628  0010A8  ECD2  F00E         	call	_MFRC522_Wr
  4629  0010AC                     
  4630                           ;rc522.c: 153:     for(i=0; i<sendLen; i++)
  4631  0010AC  0E00               	movlw	0
  4632  0010AE  6E1E               	movwf	(MFRC522_ToCard@i+1)^0,c
  4633  0010B0  0E00               	movlw	0
  4634  0010B2  6E1D               	movwf	MFRC522_ToCard@i^0,c
  4635  0010B4  EF69  F008         	goto	l2521
  4636  0010B8                     l2517:
  4637                           
  4638                           ;rc522.c: 154:     {;rc522.c: 155:         MFRC522_Wr(0x09, sendData[i]);
  4639  0010B8  501D               	movf	MFRC522_ToCard@i^0,w,c
  4640  0010BA  240D               	addwf	MFRC522_ToCard@sendData^0,w,c
  4641  0010BC  6ED9               	movwf	fsr2l,c
  4642  0010BE  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
  4643  0010C0  200E               	addwfc	(MFRC522_ToCard@sendData+1)^0,w,c
  4644  0010C2  6EDA               	movwf	fsr2h,c
  4645  0010C4  50DF               	movf	indf2,w,c
  4646  0010C6  6E01               	movwf	MFRC522_Wr@value^0,c
  4647  0010C8  0E09               	movlw	9
  4648  0010CA  ECD2  F00E         	call	_MFRC522_Wr
  4649  0010CE                     
  4650                           ;rc522.c: 156:     }
  4651  0010CE  4A1D               	infsnz	MFRC522_ToCard@i^0,f,c
  4652  0010D0  2A1E               	incf	(MFRC522_ToCard@i+1)^0,f,c
  4653  0010D2                     l2521:
  4654  0010D2  500F               	movf	MFRC522_ToCard@sendLen^0,w,c
  4655  0010D4  6E14               	movwf	??_MFRC522_ToCard^0,c
  4656  0010D6  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
  4657  0010D8  5014               	movf	??_MFRC522_ToCard^0,w,c
  4658  0010DA  5C1D               	subwf	MFRC522_ToCard@i^0,w,c
  4659  0010DC  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  4660  0010DE  581E               	subwfb	(MFRC522_ToCard@i+1)^0,w,c
  4661  0010E0  A0D8               	btfss	status,0,c
  4662  0010E2  EF75  F008         	goto	u2091
  4663  0010E6  EF77  F008         	goto	u2090
  4664  0010EA                     u2091:
  4665  0010EA  EF5C  F008         	goto	l2517
  4666  0010EE                     u2090:
  4667  0010EE                     
  4668                           ;rc522.c: 157:     MFRC522_Wr(0x01, command);
  4669  0010EE  C01C  F001         	movff	MFRC522_ToCard@command,MFRC522_Wr@value
  4670  0010F2  0E01               	movlw	1
  4671  0010F4  ECD2  F00E         	call	_MFRC522_Wr
  4672  0010F8                     
  4673                           ;rc522.c: 158:     if(command == 0x0C)
  4674  0010F8  0E0C               	movlw	12
  4675  0010FA  181C               	xorwf	MFRC522_ToCard@command^0,w,c
  4676  0010FC  A4D8               	btfss	status,2,c
  4677  0010FE  EF83  F008         	goto	u2101
  4678  001102  EF85  F008         	goto	u2100
  4679  001106                     u2101:
  4680  001106  EF8A  F008         	goto	l2529
  4681  00110A                     u2100:
  4682  00110A                     
  4683                           ;rc522.c: 159:     {;rc522.c: 160:         MFRC522_Set_Bit(0x0D, 0x80);
  4684  00110A  0E80               	movlw	128
  4685  00110C  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  4686  00110E  0E0D               	movlw	13
  4687  001110  EC14  F012         	call	_MFRC522_Set_Bit
  4688  001114                     l2529:
  4689                           
  4690                           ;rc522.c: 162:     i = 0xFFFF;
  4691  001114  681D               	setf	MFRC522_ToCard@i^0,c
  4692  001116  681E               	setf	(MFRC522_ToCard@i+1)^0,c
  4693  001118                     l231:
  4694                           
  4695                           ;rc522.c: 164:     {;rc522.c: 165:         n = MFRC522_Rd(0x04);
  4696  001118  0E04               	movlw	4
  4697  00111A  EC1D  F00D         	call	_MFRC522_Rd
  4698  00111E  6E1F               	movwf	MFRC522_ToCard@n^0,c
  4699  001120                     
  4700                           ;rc522.c: 166:         i--;
  4701  001120  061D               	decf	MFRC522_ToCard@i^0,f,c
  4702  001122  A0D8               	btfss	status,0,c
  4703  001124  061E               	decf	(MFRC522_ToCard@i+1)^0,f,c
  4704  001126                     
  4705                           ;rc522.c: 167:     }while(i && !(n & 0x01) && !(n & waitIRq));
  4706  001126  501D               	movf	MFRC522_ToCard@i^0,w,c
  4707  001128  101E               	iorwf	(MFRC522_ToCard@i+1)^0,w,c
  4708  00112A  B4D8               	btfsc	status,2,c
  4709  00112C  EF9A  F008         	goto	u2111
  4710  001130  EF9C  F008         	goto	u2110
  4711  001134                     u2111:
  4712  001134  EFAD  F008         	goto	l2539
  4713  001138                     u2110:
  4714  001138  B01F               	btfsc	MFRC522_ToCard@n^0,0,c
  4715  00113A  EFA1  F008         	goto	u2121
  4716  00113E  EFA3  F008         	goto	u2120
  4717  001142                     u2121:
  4718  001142  EFAD  F008         	goto	l2539
  4719  001146                     u2120:
  4720  001146  501F               	movf	MFRC522_ToCard@n^0,w,c
  4721  001148  1418               	andwf	MFRC522_ToCard@waitIRq^0,w,c
  4722  00114A  0900               	iorlw	0
  4723  00114C  B4D8               	btfsc	status,2,c
  4724  00114E  EFAB  F008         	goto	u2131
  4725  001152  EFAD  F008         	goto	u2130
  4726  001156                     u2131:
  4727  001156  EF8C  F008         	goto	l231
  4728  00115A                     u2130:
  4729  00115A                     l2539:
  4730                           
  4731                           ;rc522.c: 169:     MFRC522_Clear_Bit(0x0D, 0x80);
  4732  00115A  0E80               	movlw	128
  4733  00115C  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  4734  00115E  0E0D               	movlw	13
  4735  001160  EC07  F012         	call	_MFRC522_Clear_Bit
  4736  001164                     
  4737                           ;rc522.c: 170:     if(i != 0)
  4738  001164  501D               	movf	MFRC522_ToCard@i^0,w,c
  4739  001166  101E               	iorwf	(MFRC522_ToCard@i+1)^0,w,c
  4740  001168  B4D8               	btfsc	status,2,c
  4741  00116A  EFB9  F008         	goto	u2141
  4742  00116E  EFBB  F008         	goto	u2140
  4743  001172                     u2141:
  4744  001172  EF5C  F009         	goto	l235
  4745  001176                     u2140:
  4746  001176                     
  4747                           ;rc522.c: 171:     {;rc522.c: 172:         if(!(MFRC522_Rd(0x06) & 0x1B))
  4748  001176  0E06               	movlw	6
  4749  001178  EC1D  F00D         	call	_MFRC522_Rd
  4750  00117C  6E14               	movwf	??_MFRC522_ToCard^0,c
  4751  00117E  0E1B               	movlw	27
  4752  001180  1614               	andwf	??_MFRC522_ToCard^0,f,c
  4753  001182  A4D8               	btfss	status,2,c
  4754  001184  EFC6  F008         	goto	u2151
  4755  001188  EFC8  F008         	goto	u2150
  4756  00118C                     u2151:
  4757  00118C  EF5A  F009         	goto	l2577
  4758  001190                     u2150:
  4759  001190                     
  4760                           ;rc522.c: 173:         {;rc522.c: 174:             _status = 0;
  4761  001190  0E00               	movlw	0
  4762  001192  6E19               	movwf	MFRC522_ToCard@_status^0,c
  4763  001194                     
  4764                           ;rc522.c: 175:             if(n & irqEn & 0x01)
  4765  001194  501F               	movf	MFRC522_ToCard@n^0,w,c
  4766  001196  141B               	andwf	MFRC522_ToCard@irqEn^0,w,c
  4767  001198  6E14               	movwf	??_MFRC522_ToCard^0,c
  4768  00119A  A014               	btfss	??_MFRC522_ToCard^0,0,c
  4769  00119C  EFD2  F008         	goto	u2161
  4770  0011A0  EFD4  F008         	goto	u2160
  4771  0011A4                     u2161:
  4772  0011A4  EFD6  F008         	goto	l2551
  4773  0011A8                     u2160:
  4774  0011A8                     
  4775                           ;rc522.c: 176:             {;rc522.c: 177:                 _status = 1;
  4776  0011A8  0E01               	movlw	1
  4777  0011AA  6E19               	movwf	MFRC522_ToCard@_status^0,c
  4778  0011AC                     l2551:
  4779                           
  4780                           ;rc522.c: 179:             if(command == 0x0C)
  4781  0011AC  0E0C               	movlw	12
  4782  0011AE  181C               	xorwf	MFRC522_ToCard@command^0,w,c
  4783  0011B0  A4D8               	btfss	status,2,c
  4784  0011B2  EFDD  F008         	goto	u2171
  4785  0011B6  EFDF  F008         	goto	u2170
  4786  0011BA                     u2171:
  4787  0011BA  EF5C  F009         	goto	l235
  4788  0011BE                     u2170:
  4789  0011BE                     
  4790                           ;rc522.c: 180:             {;rc522.c: 181:                 n = MFRC522_Rd(0x0A);
  4791  0011BE  0E0A               	movlw	10
  4792  0011C0  EC1D  F00D         	call	_MFRC522_Rd
  4793  0011C4  6E1F               	movwf	MFRC522_ToCard@n^0,c
  4794                           
  4795                           ;rc522.c: 182:                 lastBits = MFRC522_Rd(0x0C) & 0x07;
  4796  0011C6  0E0C               	movlw	12
  4797  0011C8  EC1D  F00D         	call	_MFRC522_Rd
  4798  0011CC  0B07               	andlw	7
  4799  0011CE  6E1A               	movwf	MFRC522_ToCard@lastBits^0,c
  4800  0011D0                     
  4801                           ;rc522.c: 183:                 if(lastBits)
  4802  0011D0  501A               	movf	MFRC522_ToCard@lastBits^0,w,c
  4803  0011D2  B4D8               	btfsc	status,2,c
  4804  0011D4  EFEE  F008         	goto	u2181
  4805  0011D8  EFF0  F008         	goto	u2180
  4806  0011DC                     u2181:
  4807  0011DC  EF12  F009         	goto	l2559
  4808  0011E0                     u2180:
  4809  0011E0                     
  4810                           ;rc522.c: 184:                 {;rc522.c: 185:                     *backLen = (n-1) * 8 
      +                          + lastBits;
  4811  0011E0  0EF8               	movlw	248
  4812  0011E2  6E14               	movwf	??_MFRC522_ToCard^0,c
  4813  0011E4  0EFF               	movlw	255
  4814  0011E6  6E15               	movwf	(??_MFRC522_ToCard+1)^0,c
  4815  0011E8  501A               	movf	MFRC522_ToCard@lastBits^0,w,c
  4816  0011EA  C01F  F016         	movff	MFRC522_ToCard@n,??_MFRC522_ToCard+2
  4817  0011EE  6A17               	clrf	(??_MFRC522_ToCard+3)^0,c
  4818  0011F0  90D8               	bcf	status,0,c
  4819  0011F2  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  4820  0011F4  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  4821  0011F6  90D8               	bcf	status,0,c
  4822  0011F8  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  4823  0011FA  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  4824  0011FC  90D8               	bcf	status,0,c
  4825  0011FE  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  4826  001200  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  4827  001202  2616               	addwf	(??_MFRC522_ToCard+2)^0,f,c
  4828  001204  0E00               	movlw	0
  4829  001206  2217               	addwfc	(??_MFRC522_ToCard+3)^0,f,c
  4830  001208  5014               	movf	??_MFRC522_ToCard^0,w,c
  4831  00120A  2616               	addwf	(??_MFRC522_ToCard+2)^0,f,c
  4832  00120C  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  4833  00120E  2217               	addwfc	(??_MFRC522_ToCard+3)^0,f,c
  4834  001210  C012  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  4835  001214  C013  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  4836  001218  C016  FFDE         	movff	??_MFRC522_ToCard+2,postinc2
  4837  00121C  C017  FFDD         	movff	??_MFRC522_ToCard+3,postdec2
  4838                           
  4839                           ;rc522.c: 186:                 }
  4840  001220  EF1C  F009         	goto	l2561
  4841  001224                     l2559:
  4842                           
  4843                           ;rc522.c: 188:                 {;rc522.c: 189:                     *backLen = n * 8;
  4844  001224  501F               	movf	MFRC522_ToCard@n^0,w,c
  4845  001226  0D08               	mullw	8
  4846  001228  C012  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  4847  00122C  C013  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  4848  001230  CFF3 FFDE          	movff	prodl,postinc2
  4849  001234  CFF4 FFDD          	movff	prodh,postdec2
  4850  001238                     l2561:
  4851                           
  4852                           ;rc522.c: 191:                 if(n == 0)
  4853  001238  501F               	movf	MFRC522_ToCard@n^0,w,c
  4854  00123A  A4D8               	btfss	status,2,c
  4855  00123C  EF22  F009         	goto	u2191
  4856  001240  EF24  F009         	goto	u2190
  4857  001244                     u2191:
  4858  001244  EF26  F009         	goto	l2565
  4859  001248                     u2190:
  4860  001248                     
  4861                           ;rc522.c: 192:                 {;rc522.c: 193:                     n = 1;
  4862  001248  0E01               	movlw	1
  4863  00124A  6E1F               	movwf	MFRC522_ToCard@n^0,c
  4864  00124C                     l2565:
  4865                           
  4866                           ;rc522.c: 195:                 if(n > 16)
  4867  00124C  0E10               	movlw	16
  4868  00124E  641F               	cpfsgt	MFRC522_ToCard@n^0,c
  4869  001250  EF2C  F009         	goto	u2201
  4870  001254  EF2E  F009         	goto	u2200
  4871  001258                     u2201:
  4872  001258  EF30  F009         	goto	l242
  4873  00125C                     u2200:
  4874  00125C                     
  4875                           ;rc522.c: 196:                 {;rc522.c: 197:                     n = 16;
  4876  00125C  0E10               	movlw	16
  4877  00125E  6E1F               	movwf	MFRC522_ToCard@n^0,c
  4878  001260                     l242:
  4879                           
  4880                           ;rc522.c: 199:                 for(i=0; i<n; i++)
  4881  001260  0E00               	movlw	0
  4882  001262  6E1E               	movwf	(MFRC522_ToCard@i+1)^0,c
  4883  001264  0E00               	movlw	0
  4884  001266  6E1D               	movwf	MFRC522_ToCard@i^0,c
  4885  001268  EF42  F009         	goto	l2573
  4886  00126C                     l2569:
  4887                           
  4888                           ;rc522.c: 200:                 {;rc522.c: 201:                     backData[i] = MFRC522
      +                          _Rd(0x09);
  4889  00126C  501D               	movf	MFRC522_ToCard@i^0,w,c
  4890  00126E  2410               	addwf	MFRC522_ToCard@backData^0,w,c
  4891  001270  6ED9               	movwf	fsr2l,c
  4892  001272  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
  4893  001274  2011               	addwfc	(MFRC522_ToCard@backData+1)^0,w,c
  4894  001276  6EDA               	movwf	fsr2h,c
  4895  001278  0E09               	movlw	9
  4896  00127A  EC1D  F00D         	call	_MFRC522_Rd
  4897  00127E  6EDF               	movwf	indf2,c
  4898  001280                     
  4899                           ;rc522.c: 202:                 }
  4900  001280  4A1D               	infsnz	MFRC522_ToCard@i^0,f,c
  4901  001282  2A1E               	incf	(MFRC522_ToCard@i+1)^0,f,c
  4902  001284                     l2573:
  4903  001284  501F               	movf	MFRC522_ToCard@n^0,w,c
  4904  001286  6E14               	movwf	??_MFRC522_ToCard^0,c
  4905  001288  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
  4906  00128A  5014               	movf	??_MFRC522_ToCard^0,w,c
  4907  00128C  5C1D               	subwf	MFRC522_ToCard@i^0,w,c
  4908  00128E  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  4909  001290  581E               	subwfb	(MFRC522_ToCard@i+1)^0,w,c
  4910  001292  A0D8               	btfss	status,0,c
  4911  001294  EF4E  F009         	goto	u2211
  4912  001298  EF50  F009         	goto	u2210
  4913  00129C                     u2211:
  4914  00129C  EF36  F009         	goto	l2569
  4915  0012A0                     u2210:
  4916  0012A0                     
  4917                           ;rc522.c: 203:                 backData[i] = 0;
  4918  0012A0  501D               	movf	MFRC522_ToCard@i^0,w,c
  4919  0012A2  2410               	addwf	MFRC522_ToCard@backData^0,w,c
  4920  0012A4  6ED9               	movwf	fsr2l,c
  4921  0012A6  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
  4922  0012A8  2011               	addwfc	(MFRC522_ToCard@backData+1)^0,w,c
  4923  0012AA  6EDA               	movwf	fsr2h,c
  4924  0012AC  0E00               	movlw	0
  4925  0012AE  6EDF               	movwf	indf2,c
  4926  0012B0  EF5C  F009         	goto	l235
  4927  0012B4                     l2577:
  4928                           
  4929                           ;rc522.c: 207:         {;rc522.c: 208:             _status = 2;
  4930  0012B4  0E02               	movlw	2
  4931  0012B6  6E19               	movwf	MFRC522_ToCard@_status^0,c
  4932  0012B8                     l235:
  4933                           
  4934                           ;rc522.c: 211:     return _status;
  4935  0012B8  5019               	movf	MFRC522_ToCard@_status^0,w,c
  4936  0012BA  0012               	return		;funcret
  4937  0012BC                     __end_of_MFRC522_ToCard:
  4938                           	callstack 0
  4939                           
  4940 ;; *************** function _MFRC522_CRC *****************
  4941 ;; Defined at:
  4942 ;;		line 228 in file "rc522.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  dataIn          2   12[COMRAM] PTR unsigned char 
  4945 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  4946 ;;  length          1   14[COMRAM] unsigned char 
  4947 ;;  dataOut         2   15[COMRAM] PTR unsigned char 
  4948 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;  i               1   18[COMRAM] unsigned char 
  4951 ;;  n               1   17[COMRAM] unsigned char 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4961 ;;      Params:         5       0       0       0       0       0       0       0       0
  4962 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4964 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4965 ;;Total ram usage:        7 bytes
  4966 ;; Hardware stack levels used: 1
  4967 ;; Hardware stack levels required when called: 2
  4968 ;; This function calls:
  4969 ;;		_MFRC522_Clear_Bit
  4970 ;;		_MFRC522_Rd
  4971 ;;		_MFRC522_Set_Bit
  4972 ;;		_MFRC522_Wr
  4973 ;; This function is called by:
  4974 ;;		_MFRC522_Halt
  4975 ;;		_MFRC522_SelectTag
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text29
  4980  001D04                     __ptext29:
  4981                           	callstack 0
  4982  001D04                     _MFRC522_CRC:
  4983                           	callstack 27
  4984  001D04                     
  4985                           ;rc522.c: 228: void MFRC522_CRC(char *dataIn, char length, char *dataOut);rc522.c: 229: 
      +                          {;rc522.c: 230:     char i, n;;rc522.c: 231:     MFRC522_Clear_Bit(0x05, 0x04);
  4986  001D04  0E04               	movlw	4
  4987  001D06  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  4988  001D08  0E05               	movlw	5
  4989  001D0A  EC07  F012         	call	_MFRC522_Clear_Bit
  4990                           
  4991                           ;rc522.c: 232:     MFRC522_Set_Bit(0x0A, 0x80);
  4992  001D0E  0E80               	movlw	128
  4993  001D10  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  4994  001D12  0E0A               	movlw	10
  4995  001D14  EC14  F012         	call	_MFRC522_Set_Bit
  4996  001D18                     
  4997                           ;rc522.c: 233:     for(i=0; i<length; i++)
  4998  001D18  0E00               	movlw	0
  4999  001D1A  6E13               	movwf	MFRC522_CRC@i^0,c
  5000  001D1C  EF9C  F00E         	goto	l2717
  5001  001D20                     l2711:
  5002                           
  5003                           ;rc522.c: 234:     {;rc522.c: 235:         MFRC522_Wr(0x09, *dataIn++);
  5004  001D20  C00D  FFD9         	movff	MFRC522_CRC@dataIn,fsr2l
  5005  001D24  C00E  FFDA         	movff	MFRC522_CRC@dataIn+1,fsr2h
  5006  001D28  50DF               	movf	indf2,w,c
  5007  001D2A  6E01               	movwf	MFRC522_Wr@value^0,c
  5008  001D2C  0E09               	movlw	9
  5009  001D2E  ECD2  F00E         	call	_MFRC522_Wr
  5010  001D32  4A0D               	infsnz	MFRC522_CRC@dataIn^0,f,c
  5011  001D34  2A0E               	incf	(MFRC522_CRC@dataIn+1)^0,f,c
  5012  001D36                     
  5013                           ;rc522.c: 236:     }
  5014  001D36  2A13               	incf	MFRC522_CRC@i^0,f,c
  5015  001D38                     l2717:
  5016  001D38  500F               	movf	MFRC522_CRC@length^0,w,c
  5017  001D3A  5C13               	subwf	MFRC522_CRC@i^0,w,c
  5018  001D3C  A0D8               	btfss	status,0,c
  5019  001D3E  EFA3  F00E         	goto	u2351
  5020  001D42  EFA5  F00E         	goto	u2350
  5021  001D46                     u2351:
  5022  001D46  EF90  F00E         	goto	l2711
  5023  001D4A                     u2350:
  5024  001D4A                     
  5025                           ;rc522.c: 237:     MFRC522_Wr(0x01, 0x03);
  5026  001D4A  0E03               	movlw	3
  5027  001D4C  6E01               	movwf	MFRC522_Wr@value^0,c
  5028  001D4E  0E01               	movlw	1
  5029  001D50  ECD2  F00E         	call	_MFRC522_Wr
  5030  001D54                     
  5031                           ;rc522.c: 238:     i = 0xFF;
  5032  001D54  6813               	setf	MFRC522_CRC@i^0,c
  5033  001D56                     l259:
  5034                           
  5035                           ;rc522.c: 240:     {;rc522.c: 241:         n = MFRC522_Rd( 0x05 );
  5036  001D56  0E05               	movlw	5
  5037  001D58  EC1D  F00D         	call	_MFRC522_Rd
  5038  001D5C  6E12               	movwf	MFRC522_CRC@n^0,c
  5039  001D5E                     
  5040                           ;rc522.c: 242:         i--;
  5041  001D5E  0613               	decf	MFRC522_CRC@i^0,f,c
  5042  001D60                     
  5043                           ;rc522.c: 243:     }
  5044  001D60  5013               	movf	MFRC522_CRC@i^0,w,c
  5045  001D62  B4D8               	btfsc	status,2,c
  5046  001D64  EFB6  F00E         	goto	u2361
  5047  001D68  EFB8  F00E         	goto	u2360
  5048  001D6C                     u2361:
  5049  001D6C  EFBF  F00E         	goto	l2729
  5050  001D70                     u2360:
  5051  001D70  A412               	btfss	MFRC522_CRC@n^0,2,c
  5052  001D72  EFBD  F00E         	goto	u2371
  5053  001D76  EFBF  F00E         	goto	u2370
  5054  001D7A                     u2371:
  5055  001D7A  EFAB  F00E         	goto	l259
  5056  001D7E                     u2370:
  5057  001D7E                     l2729:
  5058                           
  5059                           ;rc522.c: 245:     dataOut[0] = MFRC522_Rd(0x22);
  5060  001D7E  0E22               	movlw	34
  5061  001D80  EC1D  F00D         	call	_MFRC522_Rd
  5062  001D84  C010  FFD9         	movff	MFRC522_CRC@dataOut,fsr2l
  5063  001D88  C011  FFDA         	movff	MFRC522_CRC@dataOut+1,fsr2h
  5064  001D8C  6EDF               	movwf	indf2,c
  5065                           
  5066                           ;rc522.c: 246:     dataOut[1] = MFRC522_Rd(0x21);
  5067  001D8E  EE20 F001          	lfsr	2,1
  5068  001D92  5010               	movf	MFRC522_CRC@dataOut^0,w,c
  5069  001D94  26D9               	addwf	fsr2l,f,c
  5070  001D96  5011               	movf	(MFRC522_CRC@dataOut+1)^0,w,c
  5071  001D98  22DA               	addwfc	fsr2h,f,c
  5072  001D9A  0E21               	movlw	33
  5073  001D9C  EC1D  F00D         	call	_MFRC522_Rd
  5074  001DA0  6EDF               	movwf	indf2,c
  5075  001DA2  0012               	return		;funcret
  5076  001DA4                     __end_of_MFRC522_CRC:
  5077                           	callstack 0
  5078                           
  5079 ;; *************** function _MFRC522_Set_Bit *****************
  5080 ;; Defined at:
  5081 ;;		line 69 in file "rc522.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;  addr            1    wreg     unsigned char 
  5084 ;;  mask            1    9[COMRAM] unsigned char 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  addr            1   11[COMRAM] unsigned char 
  5087 ;;  tmp             1   10[COMRAM] unsigned char 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1    wreg      void 
  5090 ;; Registers used:
  5091 ;;		wreg, status,2, status,0, cstack
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5097 ;;      Params:         1       0       0       0       0       0       0       0       0
  5098 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5099 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5100 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5101 ;;Total ram usage:        3 bytes
  5102 ;; Hardware stack levels used: 1
  5103 ;; Hardware stack levels required when called: 1
  5104 ;; This function calls:
  5105 ;;		_MFRC522_Rd
  5106 ;;		_MFRC522_Wr
  5107 ;; This function is called by:
  5108 ;;		_MFRC522_AntennaOn
  5109 ;;		_MFRC522_ToCard
  5110 ;;		_MFRC522_CRC
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text30
  5115  002428                     __ptext30:
  5116                           	callstack 0
  5117  002428                     _MFRC522_Set_Bit:
  5118                           	callstack 26
  5119                           
  5120                           ;incstack = 0
  5121                           ;MFRC522_Set_Bit@addr stored from wreg
  5122  002428  6E0C               	movwf	MFRC522_Set_Bit@addr^0,c
  5123  00242A                     
  5124                           ;rc522.c: 72:     tmp = MFRC522_Rd(addr);
  5125  00242A  500C               	movf	MFRC522_Set_Bit@addr^0,w,c
  5126  00242C  EC1D  F00D         	call	_MFRC522_Rd
  5127  002430  6E0B               	movwf	MFRC522_Set_Bit@tmp^0,c
  5128  002432                     
  5129                           ;rc522.c: 73:     MFRC522_Wr(addr, tmp | mask);
  5130  002432  500B               	movf	MFRC522_Set_Bit@tmp^0,w,c
  5131  002434  100A               	iorwf	MFRC522_Set_Bit@mask^0,w,c
  5132  002436  6E01               	movwf	MFRC522_Wr@value^0,c
  5133  002438  500C               	movf	MFRC522_Set_Bit@addr^0,w,c
  5134  00243A  ECD2  F00E         	call	_MFRC522_Wr
  5135  00243E  0012               	return		;funcret
  5136  002440                     __end_of_MFRC522_Set_Bit:
  5137                           	callstack 0
  5138                           
  5139 ;; *************** function _MFRC522_Clear_Bit *****************
  5140 ;; Defined at:
  5141 ;;		line 62 in file "rc522.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  addr            1    wreg     unsigned char 
  5144 ;;  mask            1    9[COMRAM] unsigned char 
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;  addr            1   11[COMRAM] unsigned char 
  5147 ;;  tmp             1   10[COMRAM] unsigned char 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      void 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5157 ;;      Params:         1       0       0       0       0       0       0       0       0
  5158 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5160 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5161 ;;Total ram usage:        3 bytes
  5162 ;; Hardware stack levels used: 1
  5163 ;; Hardware stack levels required when called: 1
  5164 ;; This function calls:
  5165 ;;		_MFRC522_Rd
  5166 ;;		_MFRC522_Wr
  5167 ;; This function is called by:
  5168 ;;		_MFRC522_AntennaOff
  5169 ;;		_MFRC522_ToCard
  5170 ;;		_MFRC522_CRC
  5171 ;;		_MFRC522_Halt
  5172 ;;		_MFRC522_AntiColl
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text31
  5177  00240E                     __ptext31:
  5178                           	callstack 0
  5179  00240E                     _MFRC522_Clear_Bit:
  5180                           	callstack 26
  5181                           
  5182                           ;incstack = 0
  5183                           ;MFRC522_Clear_Bit@addr stored from wreg
  5184  00240E  6E0C               	movwf	MFRC522_Clear_Bit@addr^0,c
  5185  002410                     
  5186                           ;rc522.c: 65:     tmp = MFRC522_Rd(addr) ;
  5187  002410  500C               	movf	MFRC522_Clear_Bit@addr^0,w,c
  5188  002412  EC1D  F00D         	call	_MFRC522_Rd
  5189  002416  6E0B               	movwf	MFRC522_Clear_Bit@tmp^0,c
  5190  002418                     
  5191                           ;rc522.c: 66:     MFRC522_Wr(addr, tmp&~mask);
  5192  002418  500A               	movf	MFRC522_Clear_Bit@mask^0,w,c
  5193  00241A  0AFF               	xorlw	255
  5194  00241C  140B               	andwf	MFRC522_Clear_Bit@tmp^0,w,c
  5195  00241E  6E01               	movwf	MFRC522_Wr@value^0,c
  5196  002420  500C               	movf	MFRC522_Clear_Bit@addr^0,w,c
  5197  002422  ECD2  F00E         	call	_MFRC522_Wr
  5198  002426  0012               	return		;funcret
  5199  002428                     __end_of_MFRC522_Clear_Bit:
  5200                           	callstack 0
  5201                           
  5202 ;; *************** function _MFRC522_Wr *****************
  5203 ;; Defined at:
  5204 ;;		line 35 in file "rc522.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;  address         1    wreg     unsigned char 
  5207 ;;  value           1    0[COMRAM] unsigned char 
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;  address         1    2[COMRAM] unsigned char 
  5210 ;;  i               1    4[COMRAM] unsigned char 
  5211 ;;  ucAddr          1    3[COMRAM] unsigned char 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  1    wreg      void 
  5214 ;; Registers used:
  5215 ;;		wreg, status,2, status,0
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5221 ;;      Params:         1       0       0       0       0       0       0       0       0
  5222 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5223 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5224 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5225 ;;Total ram usage:        5 bytes
  5226 ;; Hardware stack levels used: 1
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_MFRC522_Clear_Bit
  5231 ;;		_MFRC522_Set_Bit
  5232 ;;		_MFRC522_Reset
  5233 ;;		_MFRC522_Init
  5234 ;;		_MFRC522_ToCard
  5235 ;;		_MFRC522_Request
  5236 ;;		_MFRC522_CRC
  5237 ;;		_MFRC522_AntiColl
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text32
  5242  001DA4                     __ptext32:
  5243                           	callstack 0
  5244  001DA4                     _MFRC522_Wr:
  5245                           	callstack 28
  5246                           
  5247                           ;incstack = 0
  5248                           ;MFRC522_Wr@address stored from wreg
  5249  001DA4  6E03               	movwf	MFRC522_Wr@address^0,c
  5250  001DA6                     
  5251                           ;rc522.c: 35: void MFRC522_Wr(unsigned char address, unsigned char value);rc522.c: 36: {
      +                          ;rc522.c: 37:     unsigned char i, ucAddr;;rc522.c: 38:     LATDbits.LD1 = 0;
  5252  001DA6  928C               	bcf	140,1,c	;volatile
  5253                           
  5254                           ;rc522.c: 39:     LATAbits.LA0 = 0;
  5255  001DA8  9089               	bcf	137,0,c	;volatile
  5256                           
  5257                           ;rc522.c: 40:     LATAbits.LA1 = 0;
  5258  001DAA  9289               	bcf	137,1,c	;volatile
  5259  001DAC                     
  5260                           ;rc522.c: 41:     ucAddr = ((address << 1) & 0x7E);
  5261  001DAC  5003               	movf	MFRC522_Wr@address^0,w,c
  5262  001DAE  2403               	addwf	MFRC522_Wr@address^0,w,c
  5263  001DB0  0B7E               	andlw	126
  5264  001DB2  6E04               	movwf	MFRC522_Wr@ucAddr^0,c
  5265  001DB4                     
  5266                           ;rc522.c: 43:     for(i=8; i>0; i--)
  5267  001DB4  0E08               	movlw	8
  5268  001DB6  6E05               	movwf	MFRC522_Wr@i^0,c
  5269  001DB8                     l2199:
  5270                           
  5271                           ;rc522.c: 44:     {;rc522.c: 45:         LATDbits.LD2 = ((ucAddr&0x80) == 0x80);
  5272  001DB8  BE04               	btfsc	MFRC522_Wr@ucAddr^0,7,c
  5273  001DBA  EFE1  F00E         	goto	u1521
  5274  001DBE  EFE5  F00E         	goto	u1520
  5275  001DC2                     u1521:
  5276  001DC2  6A02               	clrf	??_MFRC522_Wr^0,c
  5277  001DC4  2A02               	incf	??_MFRC522_Wr^0,f,c
  5278  001DC6  EFE6  F00E         	goto	u1538
  5279  001DCA                     u1520:
  5280  001DCA  6A02               	clrf	??_MFRC522_Wr^0,c
  5281  001DCC                     u1538:
  5282  001DCC  4602               	rlncf	??_MFRC522_Wr^0,f,c
  5283  001DCE  4602               	rlncf	??_MFRC522_Wr^0,f,c
  5284  001DD0  508C               	movf	140,w,c	;volatile
  5285  001DD2  1802               	xorwf	??_MFRC522_Wr^0,w,c
  5286  001DD4  0BFB               	andlw	-5
  5287  001DD6  1802               	xorwf	??_MFRC522_Wr^0,w,c
  5288  001DD8  6E8C               	movwf	140,c	;volatile
  5289  001DDA                     
  5290                           ;rc522.c: 46:         LATDbits.LD1 = 1;
  5291  001DDA  828C               	bsf	140,1,c	;volatile
  5292                           
  5293                           ;rc522.c: 47:         ucAddr <<= 1;
  5294  001DDC  90D8               	bcf	status,0,c
  5295  001DDE  3604               	rlcf	MFRC522_Wr@ucAddr^0,f,c
  5296  001DE0                     
  5297                           ;rc522.c: 48:         LATDbits.LD1 = 0;
  5298  001DE0  928C               	bcf	140,1,c	;volatile
  5299  001DE2                     
  5300                           ;rc522.c: 49:     }
  5301  001DE2  0605               	decf	MFRC522_Wr@i^0,f,c
  5302  001DE4  5005               	movf	MFRC522_Wr@i^0,w,c
  5303  001DE6  A4D8               	btfss	status,2,c
  5304  001DE8  EFF8  F00E         	goto	u1541
  5305  001DEC  EFFA  F00E         	goto	u1540
  5306  001DF0                     u1541:
  5307  001DF0  EFDC  F00E         	goto	l2199
  5308  001DF4                     u1540:
  5309  001DF4                     
  5310                           ;rc522.c: 50:     for(i=8; i>0; i--)
  5311  001DF4  0E08               	movlw	8
  5312  001DF6  6E05               	movwf	MFRC522_Wr@i^0,c
  5313  001DF8                     l2213:
  5314                           
  5315                           ;rc522.c: 51:     {;rc522.c: 52:         LATDbits.LD2 = ((value&0x80) == 0x80);
  5316  001DF8  BE01               	btfsc	MFRC522_Wr@value^0,7,c
  5317  001DFA  EF01  F00F         	goto	u1551
  5318  001DFE  EF05  F00F         	goto	u1550
  5319  001E02                     u1551:
  5320  001E02  6A02               	clrf	??_MFRC522_Wr^0,c
  5321  001E04  2A02               	incf	??_MFRC522_Wr^0,f,c
  5322  001E06  EF06  F00F         	goto	u1568
  5323  001E0A                     u1550:
  5324  001E0A  6A02               	clrf	??_MFRC522_Wr^0,c
  5325  001E0C                     u1568:
  5326  001E0C  4602               	rlncf	??_MFRC522_Wr^0,f,c
  5327  001E0E  4602               	rlncf	??_MFRC522_Wr^0,f,c
  5328  001E10  508C               	movf	140,w,c	;volatile
  5329  001E12  1802               	xorwf	??_MFRC522_Wr^0,w,c
  5330  001E14  0BFB               	andlw	-5
  5331  001E16  1802               	xorwf	??_MFRC522_Wr^0,w,c
  5332  001E18  6E8C               	movwf	140,c	;volatile
  5333  001E1A                     
  5334                           ;rc522.c: 53:         LATDbits.LD1 = 1;
  5335  001E1A  828C               	bsf	140,1,c	;volatile
  5336                           
  5337                           ;rc522.c: 54:         value <<= 1;
  5338  001E1C  90D8               	bcf	status,0,c
  5339  001E1E  3601               	rlcf	MFRC522_Wr@value^0,f,c
  5340  001E20                     
  5341                           ;rc522.c: 55:         LATDbits.LD1 = 0;
  5342  001E20  928C               	bcf	140,1,c	;volatile
  5343  001E22                     
  5344                           ;rc522.c: 56:     }
  5345  001E22  0605               	decf	MFRC522_Wr@i^0,f,c
  5346  001E24  5005               	movf	MFRC522_Wr@i^0,w,c
  5347  001E26  A4D8               	btfss	status,2,c
  5348  001E28  EF18  F00F         	goto	u1571
  5349  001E2C  EF1A  F00F         	goto	u1570
  5350  001E30                     u1571:
  5351  001E30  EFFC  F00E         	goto	l2213
  5352  001E34                     u1570:
  5353  001E34                     
  5354                           ;rc522.c: 57:     LATAbits.LA0 = 1;
  5355  001E34  8089               	bsf	137,0,c	;volatile
  5356                           
  5357                           ;rc522.c: 58:     LATAbits.LA1 = 1;
  5358  001E36  8289               	bsf	137,1,c	;volatile
  5359                           
  5360                           ;rc522.c: 59:     LATDbits.LD1 = 1;
  5361  001E38  828C               	bsf	140,1,c	;volatile
  5362  001E3A  0012               	return		;funcret
  5363  001E3C                     __end_of_MFRC522_Wr:
  5364                           	callstack 0
  5365                           
  5366 ;; *************** function _MFRC522_Rd *****************
  5367 ;; Defined at:
  5368 ;;		line 6 in file "rc522.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;  address         1    wreg     unsigned char 
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  address         1    2[COMRAM] unsigned char 
  5373 ;;  i               2    7[COMRAM] unsigned int 
  5374 ;;  ucResult        2    5[COMRAM] unsigned int 
  5375 ;;  ucAddr          2    3[COMRAM] unsigned int 
  5376 ;; Return value:  Size  Location     Type
  5377 ;;                  1    wreg      unsigned char 
  5378 ;; Registers used:
  5379 ;;		wreg, status,2, status,0
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5385 ;;      Params:         0       0       0       0       0       0       0       0       0
  5386 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5387 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5388 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5389 ;;Total ram usage:        9 bytes
  5390 ;; Hardware stack levels used: 1
  5391 ;; This function calls:
  5392 ;;		Nothing
  5393 ;; This function is called by:
  5394 ;;		_MFRC522_Clear_Bit
  5395 ;;		_MFRC522_Set_Bit
  5396 ;;		_MFRC522_AntennaOn
  5397 ;;		_MFRC522_ToCard
  5398 ;;		_MFRC522_CRC
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text33
  5403  001A3A                     __ptext33:
  5404                           	callstack 0
  5405  001A3A                     _MFRC522_Rd:
  5406                           	callstack 26
  5407                           
  5408                           ;incstack = 0
  5409                           ;MFRC522_Rd@address stored from wreg
  5410  001A3A  6E03               	movwf	MFRC522_Rd@address^0,c
  5411  001A3C                     
  5412                           ;rc522.c: 6: unsigned char MFRC522_Rd(unsigned char address);rc522.c: 7: {;rc522.c: 8:  
      +                             unsigned int i, ucAddr;;rc522.c: 9:     unsigned int ucResult = 0;
  5413  001A3C  0E00               	movlw	0
  5414  001A3E  6E07               	movwf	(MFRC522_Rd@ucResult+1)^0,c
  5415  001A40  0E00               	movlw	0
  5416  001A42  6E06               	movwf	MFRC522_Rd@ucResult^0,c
  5417  001A44                     
  5418                           ;rc522.c: 10:     LATDbits.LD1 = 0;
  5419  001A44  928C               	bcf	140,1,c	;volatile
  5420  001A46                     
  5421                           ;rc522.c: 11:     LATAbits.LA0 = 0;
  5422  001A46  9089               	bcf	137,0,c	;volatile
  5423  001A48                     
  5424                           ;rc522.c: 12:     LATAbits.LA1 = 0;
  5425  001A48  9289               	bcf	137,1,c	;volatile
  5426  001A4A                     
  5427                           ;rc522.c: 13:     ucAddr = ((address << 1) & 0x7E) | 0x80;
  5428  001A4A  5003               	movf	MFRC522_Rd@address^0,w,c
  5429  001A4C  2403               	addwf	MFRC522_Rd@address^0,w,c
  5430  001A4E  0B7E               	andlw	126
  5431  001A50  6E01               	movwf	??_MFRC522_Rd^0,c
  5432  001A52  6A02               	clrf	(??_MFRC522_Rd+1)^0,c
  5433  001A54  0E80               	movlw	128
  5434  001A56  1001               	iorwf	??_MFRC522_Rd^0,w,c
  5435  001A58  6E04               	movwf	MFRC522_Rd@ucAddr^0,c
  5436  001A5A  5002               	movf	(??_MFRC522_Rd+1)^0,w,c
  5437  001A5C  6E05               	movwf	(MFRC522_Rd@ucAddr+1)^0,c
  5438  001A5E                     
  5439                           ;rc522.c: 15:     for(i=8; i>0; i--)
  5440  001A5E  0E00               	movlw	0
  5441  001A60  6E09               	movwf	(MFRC522_Rd@i+1)^0,c
  5442  001A62  0E08               	movlw	8
  5443  001A64  6E08               	movwf	MFRC522_Rd@i^0,c
  5444  001A66                     l2161:
  5445                           
  5446                           ;rc522.c: 16:     {;rc522.c: 17:         LATDbits.LD2 = ((ucAddr & 0x80) == 0x80);
  5447  001A66  BE04               	btfsc	MFRC522_Rd@ucAddr^0,7,c
  5448  001A68  EF38  F00D         	goto	u1471
  5449  001A6C  EF3C  F00D         	goto	u1470
  5450  001A70                     u1471:
  5451  001A70  6A01               	clrf	??_MFRC522_Rd^0,c
  5452  001A72  2A01               	incf	??_MFRC522_Rd^0,f,c
  5453  001A74  EF3D  F00D         	goto	u1488
  5454  001A78                     u1470:
  5455  001A78  6A01               	clrf	??_MFRC522_Rd^0,c
  5456  001A7A                     u1488:
  5457  001A7A  4601               	rlncf	??_MFRC522_Rd^0,f,c
  5458  001A7C  4601               	rlncf	??_MFRC522_Rd^0,f,c
  5459  001A7E  508C               	movf	140,w,c	;volatile
  5460  001A80  1801               	xorwf	??_MFRC522_Rd^0,w,c
  5461  001A82  0BFB               	andlw	-5
  5462  001A84  1801               	xorwf	??_MFRC522_Rd^0,w,c
  5463  001A86  6E8C               	movwf	140,c	;volatile
  5464  001A88                     
  5465                           ;rc522.c: 18:         LATDbits.LD1 = 1;
  5466  001A88  828C               	bsf	140,1,c	;volatile
  5467  001A8A                     
  5468                           ;rc522.c: 19:         ucAddr <<= 1;
  5469  001A8A  90D8               	bcf	status,0,c
  5470  001A8C  3604               	rlcf	MFRC522_Rd@ucAddr^0,f,c
  5471  001A8E  3605               	rlcf	(MFRC522_Rd@ucAddr+1)^0,f,c
  5472  001A90                     
  5473                           ;rc522.c: 20:         LATDbits.LD1 = 0;
  5474  001A90  928C               	bcf	140,1,c	;volatile
  5475  001A92                     
  5476                           ;rc522.c: 21:     }
  5477  001A92  0608               	decf	MFRC522_Rd@i^0,f,c
  5478  001A94  A0D8               	btfss	status,0,c
  5479  001A96  0609               	decf	(MFRC522_Rd@i+1)^0,f,c
  5480  001A98  5008               	movf	MFRC522_Rd@i^0,w,c
  5481  001A9A  1009               	iorwf	(MFRC522_Rd@i+1)^0,w,c
  5482  001A9C  A4D8               	btfss	status,2,c
  5483  001A9E  EF53  F00D         	goto	u1491
  5484  001AA2  EF55  F00D         	goto	u1490
  5485  001AA6                     u1491:
  5486  001AA6  EF33  F00D         	goto	l2161
  5487  001AAA                     u1490:
  5488  001AAA                     
  5489                           ;rc522.c: 22:     for(i=8; i>0; i--)
  5490  001AAA  0E00               	movlw	0
  5491  001AAC  6E09               	movwf	(MFRC522_Rd@i+1)^0,c
  5492  001AAE  0E08               	movlw	8
  5493  001AB0  6E08               	movwf	MFRC522_Rd@i^0,c
  5494  001AB2                     l192:
  5495                           
  5496                           ;rc522.c: 23:     {;rc522.c: 24:         LATDbits.LD1 = 1;
  5497  001AB2  828C               	bsf	140,1,c	;volatile
  5498  001AB4                     
  5499                           ;rc522.c: 25:         ucResult <<= 1;
  5500  001AB4  90D8               	bcf	status,0,c
  5501  001AB6  3606               	rlcf	MFRC522_Rd@ucResult^0,f,c
  5502  001AB8  3607               	rlcf	(MFRC522_Rd@ucResult+1)^0,f,c
  5503  001ABA                     
  5504                           ;rc522.c: 26:         ucResult |= (short)PORTDbits.RD3;
  5505  001ABA  B683               	btfsc	131,3,c	;volatile
  5506  001ABC  EF62  F00D         	goto	u1501
  5507  001AC0  EF66  F00D         	goto	u1500
  5508  001AC4                     u1501:
  5509  001AC4  6A01               	clrf	??_MFRC522_Rd^0,c
  5510  001AC6  2A01               	incf	??_MFRC522_Rd^0,f,c
  5511  001AC8  EF67  F00D         	goto	u1508
  5512  001ACC                     u1500:
  5513  001ACC  6A01               	clrf	??_MFRC522_Rd^0,c
  5514  001ACE                     u1508:
  5515  001ACE  5001               	movf	??_MFRC522_Rd^0,w,c
  5516  001AD0  1206               	iorwf	MFRC522_Rd@ucResult^0,f,c
  5517  001AD2                     
  5518                           ;rc522.c: 27:         LATDbits.LD1 = 0;
  5519  001AD2  928C               	bcf	140,1,c	;volatile
  5520  001AD4                     
  5521                           ;rc522.c: 28:     }
  5522  001AD4  0608               	decf	MFRC522_Rd@i^0,f,c
  5523  001AD6  A0D8               	btfss	status,0,c
  5524  001AD8  0609               	decf	(MFRC522_Rd@i+1)^0,f,c
  5525  001ADA  5008               	movf	MFRC522_Rd@i^0,w,c
  5526  001ADC  1009               	iorwf	(MFRC522_Rd@i+1)^0,w,c
  5527  001ADE  A4D8               	btfss	status,2,c
  5528  001AE0  EF74  F00D         	goto	u1511
  5529  001AE4  EF76  F00D         	goto	u1510
  5530  001AE8                     u1511:
  5531  001AE8  EF59  F00D         	goto	l192
  5532  001AEC                     u1510:
  5533  001AEC                     
  5534                           ;rc522.c: 29:     LATAbits.LA0 = 1;
  5535  001AEC  8089               	bsf	137,0,c	;volatile
  5536                           
  5537                           ;rc522.c: 30:     LATAbits.LA1 = 1;
  5538  001AEE  8289               	bsf	137,1,c	;volatile
  5539                           
  5540                           ;rc522.c: 31:     LATDbits.LD1 = 1;
  5541  001AF0  828C               	bsf	140,1,c	;volatile
  5542  001AF2                     
  5543                           ;rc522.c: 32:     return ucResult;
  5544  001AF2  5006               	movf	MFRC522_Rd@ucResult^0,w,c
  5545  001AF4  0012               	return		;funcret
  5546  001AF6                     __end_of_MFRC522_Rd:
  5547                           	callstack 0
  5548                           
  5549 ;; *************** function _LCD_Print *****************
  5550 ;; Defined at:
  5551 ;;		line 109 in file "I2C.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;  LCD_Str         2    4[COMRAM] PTR unsigned char 
  5554 ;;		 -> data_buffer(16), temp(16), STR_1(8), 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  i               1    9[COMRAM] unsigned char 
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      void 
  5559 ;; Registers used:
  5560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5566 ;;      Params:         2       0       0       0       0       0       0       0       0
  5567 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5568 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5569 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5570 ;;Total ram usage:        6 bytes
  5571 ;; Hardware stack levels used: 1
  5572 ;; Hardware stack levels required when called: 3
  5573 ;; This function calls:
  5574 ;;		_LCD_Write_Nibble
  5575 ;; This function is called by:
  5576 ;;		_main
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           	psect	text34
  5581  001AF6                     __ptext34:
  5582                           	callstack 0
  5583  001AF6                     _LCD_Print:
  5584                           	callstack 27
  5585  001AF6                     
  5586                           ;I2C.c: 109: void LCD_Print(char* LCD_Str);I2C.c: 110: {;I2C.c: 111:   uint8_t i = 0;
  5587  001AF6  0E00               	movlw	0
  5588  001AF8  6E0A               	movwf	LCD_Print@i^0,c
  5589  001AFA                     
  5590                           ;I2C.c: 112:   RS = 1;
  5591  001AFA  0100               	movlb	0	; () banked
  5592  001AFC  81DA               	bsf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  5593                           
  5594                           ;I2C.c: 113:   while(LCD_Str[i] != '\0')
  5595  001AFE  EFB7  F00D         	goto	l3099
  5596  001B02                     l3095:
  5597                           
  5598                           ;I2C.c: 114:   {;I2C.c: 115:     LCD_Write_Nibble(LCD_Str[i] & 0xF0);
  5599  001B02  500A               	movf	LCD_Print@i^0,w,c
  5600  001B04  2405               	addwf	LCD_Print@LCD_Str^0,w,c
  5601  001B06  6E07               	movwf	??_LCD_Print^0,c
  5602  001B08  0E00               	movlw	0
  5603  001B0A  2006               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  5604  001B0C  6E08               	movwf	(??_LCD_Print+1)^0,c
  5605  001B0E  C007  FFF6         	movff	??_LCD_Print,tblptrl
  5606  001B12  C008  FFF7         	movff	??_LCD_Print+1,tblptrh
  5607  001B16  6AF8               	clrf	tblptru,c
  5608  001B18  0E07               	movlw	(high __ramtop+-1)
  5609  001B1A  64F7               	cpfsgt	tblptrh,c
  5610  001B1C  D003               	bra	u2617
  5611  001B1E  0008               	tblrd		*
  5612  001B20  50F5               	movf	tablat,w,c
  5613  001B22  D005               	bra	u2610
  5614  001B24                     u2617:
  5615  001B24  CFF6 FFE1          	movff	tblptrl,fsr1l
  5616  001B28  CFF7 FFE2          	movff	tblptrh,fsr1h
  5617  001B2C  50E7               	movf	indf1,w,c
  5618  001B2E                     u2610:
  5619  001B2E  0BF0               	andlw	240
  5620  001B30  EC49  F011         	call	_LCD_Write_Nibble
  5621                           
  5622                           ;I2C.c: 116:     LCD_Write_Nibble( (LCD_Str[i++] << 4) & 0xF0 );
  5623  001B34  500A               	movf	LCD_Print@i^0,w,c
  5624  001B36  2405               	addwf	LCD_Print@LCD_Str^0,w,c
  5625  001B38  6E07               	movwf	??_LCD_Print^0,c
  5626  001B3A  0E00               	movlw	0
  5627  001B3C  2006               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  5628  001B3E  6E08               	movwf	(??_LCD_Print+1)^0,c
  5629  001B40  C007  FFF6         	movff	??_LCD_Print,tblptrl
  5630  001B44  C008  FFF7         	movff	??_LCD_Print+1,tblptrh
  5631  001B48  6AF8               	clrf	tblptru,c
  5632  001B4A  0E07               	movlw	(high __ramtop+-1)
  5633  001B4C  64F7               	cpfsgt	tblptrh,c
  5634  001B4E  D003               	bra	u2627
  5635  001B50  0008               	tblrd		*
  5636  001B52  50F5               	movf	tablat,w,c
  5637  001B54  D005               	bra	u2620
  5638  001B56                     u2627:
  5639  001B56  CFF6 FFE1          	movff	tblptrl,fsr1l
  5640  001B5A  CFF7 FFE2          	movff	tblptrh,fsr1h
  5641  001B5E  50E7               	movf	indf1,w,c
  5642  001B60                     u2620:
  5643  001B60  6E09               	movwf	(??_LCD_Print+2)^0,c
  5644  001B62  3809               	swapf	(??_LCD_Print+2)^0,w,c
  5645  001B64  0BF0               	andlw	240
  5646  001B66  0BF0               	andlw	240
  5647  001B68  EC49  F011         	call	_LCD_Write_Nibble
  5648  001B6C  2A0A               	incf	LCD_Print@i^0,f,c
  5649  001B6E                     l3099:
  5650                           
  5651                           ;I2C.c: 113:   while(LCD_Str[i] != '\0')
  5652  001B6E  500A               	movf	LCD_Print@i^0,w,c
  5653  001B70  2405               	addwf	LCD_Print@LCD_Str^0,w,c
  5654  001B72  6E07               	movwf	??_LCD_Print^0,c
  5655  001B74  0E00               	movlw	0
  5656  001B76  2006               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  5657  001B78  6E08               	movwf	(??_LCD_Print+1)^0,c
  5658  001B7A  C007  FFF6         	movff	??_LCD_Print,tblptrl
  5659  001B7E  C008  FFF7         	movff	??_LCD_Print+1,tblptrh
  5660  001B82  6AF8               	clrf	tblptru,c
  5661  001B84  0E07               	movlw	(high __ramtop+-1)
  5662  001B86  64F7               	cpfsgt	tblptrh,c
  5663  001B88  D003               	bra	u2637
  5664  001B8A  0008               	tblrd		*
  5665  001B8C  50F5               	movf	tablat,w,c
  5666  001B8E  D005               	bra	u2630
  5667  001B90                     u2637:
  5668  001B90  CFF6 FFE1          	movff	tblptrl,fsr1l
  5669  001B94  CFF7 FFE2          	movff	tblptrh,fsr1h
  5670  001B98  50E7               	movf	indf1,w,c
  5671  001B9A                     u2630:
  5672  001B9A  0900               	iorlw	0
  5673  001B9C  A4D8               	btfss	status,2,c
  5674  001B9E  EFD3  F00D         	goto	u2641
  5675  001BA2  EFD5  F00D         	goto	u2640
  5676  001BA6                     u2641:
  5677  001BA6  EF81  F00D         	goto	l3095
  5678  001BAA                     u2640:
  5679  001BAA  0012               	return		;funcret
  5680  001BAC                     __end_of_LCD_Print:
  5681                           	callstack 0
  5682                           
  5683 ;; *************** function _LCD_Goto *****************
  5684 ;; Defined at:
  5685 ;;		line 83 in file "I2C.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;  col             1    wreg     unsigned char 
  5688 ;;  row             1    6[COMRAM] unsigned char 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  col             1    9[COMRAM] unsigned char 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  1    wreg      void 
  5693 ;; Registers used:
  5694 ;;		wreg, status,2, status,0, cstack
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5700 ;;      Params:         1       0       0       0       0       0       0       0       0
  5701 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5702 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5703 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5704 ;;Total ram usage:        4 bytes
  5705 ;; Hardware stack levels used: 1
  5706 ;; Hardware stack levels required when called: 4
  5707 ;; This function calls:
  5708 ;;		_LCD_Cmd
  5709 ;; This function is called by:
  5710 ;;		_main
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text35
  5715  001E3C                     __ptext35:
  5716                           	callstack 0
  5717  001E3C                     _LCD_Goto:
  5718                           	callstack 26
  5719                           
  5720                           ;incstack = 0
  5721                           ;LCD_Goto@col stored from wreg
  5722  001E3C  6E0A               	movwf	LCD_Goto@col^0,c
  5723  001E3E                     
  5724                           ;I2C.c: 83: void LCD_Goto(uint8_t col, uint8_t row);I2C.c: 84: {;I2C.c: 85:   switch(row
      +                          )
  5725  001E3E  EF39  F00F         	goto	l3085
  5726  001E42                     l3077:
  5727                           
  5728                           ;I2C.c: 88:       LCD_Cmd(0xC0 + col - 1);
  5729  001E42  500A               	movf	LCD_Goto@col^0,w,c
  5730  001E44  0FBF               	addlw	191
  5731  001E46  EC69  F010         	call	_LCD_Cmd
  5732                           
  5733                           ;I2C.c: 89:       break;
  5734  001E4A  EF52  F00F         	goto	l157
  5735  001E4E                     l3079:
  5736                           
  5737                           ;I2C.c: 91:       LCD_Cmd(0x94 + col - 1);
  5738  001E4E  500A               	movf	LCD_Goto@col^0,w,c
  5739  001E50  0F93               	addlw	147
  5740  001E52  EC69  F010         	call	_LCD_Cmd
  5741                           
  5742                           ;I2C.c: 92:       break;
  5743  001E56  EF52  F00F         	goto	l157
  5744  001E5A                     l3081:
  5745                           
  5746                           ;I2C.c: 94:       LCD_Cmd(0xD4 + col - 1);
  5747  001E5A  500A               	movf	LCD_Goto@col^0,w,c
  5748  001E5C  0FD3               	addlw	211
  5749  001E5E  EC69  F010         	call	_LCD_Cmd
  5750                           
  5751                           ;I2C.c: 95:     break;
  5752  001E62  EF52  F00F         	goto	l157
  5753  001E66                     l3083:
  5754                           
  5755                           ;I2C.c: 97:       LCD_Cmd(0x80 + col - 1);
  5756  001E66  500A               	movf	LCD_Goto@col^0,w,c
  5757  001E68  0F7F               	addlw	127
  5758  001E6A  EC69  F010         	call	_LCD_Cmd
  5759                           
  5760                           ;I2C.c: 98:   }
  5761  001E6E  EF52  F00F         	goto	l157
  5762  001E72                     l3085:
  5763  001E72  5007               	movf	LCD_Goto@row^0,w,c
  5764  001E74  6E08               	movwf	??_LCD_Goto^0,c
  5765  001E76  6A09               	clrf	(??_LCD_Goto+1)^0,c
  5766                           
  5767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5768                           ; Switch size 1, requested type "simple"
  5769                           ; Number of cases is 1, Range of values is 0 to 0
  5770                           ; switch strategies available:
  5771                           ; Name         Instructions Cycles
  5772                           ; simple_byte            4     3 (average)
  5773                           ;	Chosen strategy is simple_byte
  5774  001E78  5009               	movf	(??_LCD_Goto+1)^0,w,c
  5775  001E7A  0A00               	xorlw	0	; case 0
  5776  001E7C  B4D8               	btfsc	status,2,c
  5777  001E7E  EF43  F00F         	goto	l3223
  5778  001E82  EF33  F00F         	goto	l3083
  5779  001E86                     l3223:
  5780                           
  5781                           ; Switch size 1, requested type "simple"
  5782                           ; Number of cases is 3, Range of values is 2 to 4
  5783                           ; switch strategies available:
  5784                           ; Name         Instructions Cycles
  5785                           ; simple_byte           10     6 (average)
  5786                           ;	Chosen strategy is simple_byte
  5787  001E86  5008               	movf	??_LCD_Goto^0,w,c
  5788  001E88  0A02               	xorlw	2	; case 2
  5789  001E8A  B4D8               	btfsc	status,2,c
  5790  001E8C  EF21  F00F         	goto	l3077
  5791  001E90  0A01               	xorlw	1	; case 3
  5792  001E92  B4D8               	btfsc	status,2,c
  5793  001E94  EF27  F00F         	goto	l3079
  5794  001E98  0A07               	xorlw	7	; case 4
  5795  001E9A  B4D8               	btfsc	status,2,c
  5796  001E9C  EF2D  F00F         	goto	l3081
  5797  001EA0  EF33  F00F         	goto	l3083
  5798  001EA4                     l157:
  5799  001EA4  0012               	return		;funcret
  5800  001EA6                     __end_of_LCD_Goto:
  5801                           	callstack 0
  5802                           
  5803 ;; *************** function _LCD_Begin *****************
  5804 ;; Defined at:
  5805 ;;		line 120 in file "I2C.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;  _i2c_addr       1    wreg     unsigned char 
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;  _i2c_addr       1    8[COMRAM] unsigned char 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      void 
  5812 ;; Registers used:
  5813 ;;		wreg, status,2, status,0, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5819 ;;      Params:         0       0       0       0       0       0       0       0       0
  5820 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5821 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5822 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5823 ;;Total ram usage:        3 bytes
  5824 ;; Hardware stack levels used: 1
  5825 ;; Hardware stack levels required when called: 4
  5826 ;; This function calls:
  5827 ;;		_Expander_Write
  5828 ;;		_LCD_Cmd
  5829 ;; This function is called by:
  5830 ;;		_main
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text36
  5835  0017BC                     __ptext36:
  5836                           	callstack 0
  5837  0017BC                     _LCD_Begin:
  5838                           	callstack 26
  5839                           
  5840                           ;incstack = 0
  5841                           ;LCD_Begin@_i2c_addr stored from wreg
  5842  0017BC  6E09               	movwf	LCD_Begin@_i2c_addr^0,c
  5843  0017BE                     
  5844                           ;I2C.c: 120: void LCD_Begin(uint8_t _i2c_addr);I2C.c: 121: {;I2C.c: 122:   i2c_addr = _i
      +                          2c_addr;
  5845  0017BE  C009  F0D9         	movff	LCD_Begin@_i2c_addr,_i2c_addr
  5846  0017C2                     
  5847                           ;I2C.c: 123:   Expander_Write(0);
  5848  0017C2  0E00               	movlw	0
  5849  0017C4  ECF8  F011         	call	_Expander_Write
  5850  0017C8                     
  5851                           ;I2C.c: 125:   _delay((unsigned long)((40)*(27000000/4000.0)));
  5852  0017C8  0E02               	movlw	2
  5853  0017CA  6E08               	movwf	(??_LCD_Begin+1)^0,c
  5854  0017CC  0E5F               	movlw	95
  5855  0017CE  6E07               	movwf	??_LCD_Begin^0,c
  5856  0017D0  0EA3               	movlw	163
  5857  0017D2                     u2727:
  5858  0017D2  2EE8               	decfsz	wreg,f,c
  5859  0017D4  D7FE               	bra	u2727
  5860  0017D6  2E07               	decfsz	??_LCD_Begin^0,f,c
  5861  0017D8  D7FC               	bra	u2727
  5862  0017DA  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  5863  0017DC  D7FA               	bra	u2727
  5864  0017DE  F000               	nop	
  5865                           
  5866                           ;I2C.c: 126:   LCD_Cmd(3);
  5867  0017E0  0E03               	movlw	3
  5868  0017E2  EC69  F010         	call	_LCD_Cmd
  5869  0017E6                     
  5870                           ;I2C.c: 127:   _delay((unsigned long)((5)*(27000000/4000.0)));
  5871  0017E6  0E2C               	movlw	44
  5872  0017E8  6E07               	movwf	??_LCD_Begin^0,c
  5873  0017EA  0ED4               	movlw	212
  5874  0017EC                     u2737:
  5875  0017EC  2EE8               	decfsz	wreg,f,c
  5876  0017EE  D7FE               	bra	u2737
  5877  0017F0  2E07               	decfsz	??_LCD_Begin^0,f,c
  5878  0017F2  D7FC               	bra	u2737
  5879  0017F4                     
  5880                           ;I2C.c: 128:   LCD_Cmd(3);
  5881  0017F4  0E03               	movlw	3
  5882  0017F6  EC69  F010         	call	_LCD_Cmd
  5883                           
  5884                           ;I2C.c: 129:   _delay((unsigned long)((5)*(27000000/4000.0)));
  5885  0017FA  0E2C               	movlw	44
  5886  0017FC  6E07               	movwf	??_LCD_Begin^0,c
  5887  0017FE  0ED4               	movlw	212
  5888  001800                     u2747:
  5889  001800  2EE8               	decfsz	wreg,f,c
  5890  001802  D7FE               	bra	u2747
  5891  001804  2E07               	decfsz	??_LCD_Begin^0,f,c
  5892  001806  D7FC               	bra	u2747
  5893  001808                     
  5894                           ;I2C.c: 130:   LCD_Cmd(3);
  5895  001808  0E03               	movlw	3
  5896  00180A  EC69  F010         	call	_LCD_Cmd
  5897  00180E                     
  5898                           ;I2C.c: 131:   _delay((unsigned long)((5)*(27000000/4000.0)));
  5899  00180E  0E2C               	movlw	44
  5900  001810  6E07               	movwf	??_LCD_Begin^0,c
  5901  001812  0ED4               	movlw	212
  5902  001814                     u2757:
  5903  001814  2EE8               	decfsz	wreg,f,c
  5904  001816  D7FE               	bra	u2757
  5905  001818  2E07               	decfsz	??_LCD_Begin^0,f,c
  5906  00181A  D7FC               	bra	u2757
  5907                           
  5908                           ;I2C.c: 132:   LCD_Cmd(0x02);
  5909  00181C  0E02               	movlw	2
  5910  00181E  EC69  F010         	call	_LCD_Cmd
  5911  001822                     
  5912                           ;I2C.c: 133:   _delay((unsigned long)((5)*(27000000/4000.0)));
  5913  001822  0E2C               	movlw	44
  5914  001824  6E07               	movwf	??_LCD_Begin^0,c
  5915  001826  0ED4               	movlw	212
  5916  001828                     u2767:
  5917  001828  2EE8               	decfsz	wreg,f,c
  5918  00182A  D7FE               	bra	u2767
  5919  00182C  2E07               	decfsz	??_LCD_Begin^0,f,c
  5920  00182E  D7FC               	bra	u2767
  5921  001830                     
  5922                           ;I2C.c: 134:   LCD_Cmd(0x20 | (2 << 2));
  5923  001830  0E28               	movlw	40
  5924  001832  EC69  F010         	call	_LCD_Cmd
  5925                           
  5926                           ;I2C.c: 135:   _delay((unsigned long)((50)*(27000000/4000.0)));
  5927  001836  0E02               	movlw	2
  5928  001838  6E08               	movwf	(??_LCD_Begin+1)^0,c
  5929  00183A  0EB7               	movlw	183
  5930  00183C  6E07               	movwf	??_LCD_Begin^0,c
  5931  00183E  0E4C               	movlw	76
  5932  001840                     u2777:
  5933  001840  2EE8               	decfsz	wreg,f,c
  5934  001842  D7FE               	bra	u2777
  5935  001844  2E07               	decfsz	??_LCD_Begin^0,f,c
  5936  001846  D7FC               	bra	u2777
  5937  001848  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  5938  00184A  D7FA               	bra	u2777
  5939  00184C  D000               	nop2	
  5940  00184E                     
  5941                           ;I2C.c: 136:   LCD_Cmd(0x0C);
  5942  00184E  0E0C               	movlw	12
  5943  001850  EC69  F010         	call	_LCD_Cmd
  5944  001854                     
  5945                           ;I2C.c: 137:   _delay((unsigned long)((50)*(27000000/4000.0)));
  5946  001854  0E02               	movlw	2
  5947  001856  6E08               	movwf	(??_LCD_Begin+1)^0,c
  5948  001858  0EB7               	movlw	183
  5949  00185A  6E07               	movwf	??_LCD_Begin^0,c
  5950  00185C  0E4C               	movlw	76
  5951  00185E                     u2787:
  5952  00185E  2EE8               	decfsz	wreg,f,c
  5953  001860  D7FE               	bra	u2787
  5954  001862  2E07               	decfsz	??_LCD_Begin^0,f,c
  5955  001864  D7FC               	bra	u2787
  5956  001866  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  5957  001868  D7FA               	bra	u2787
  5958  00186A  D000               	nop2	
  5959                           
  5960                           ;I2C.c: 138:   LCD_Cmd(0x01);
  5961  00186C  0E01               	movlw	1
  5962  00186E  EC69  F010         	call	_LCD_Cmd
  5963  001872                     
  5964                           ;I2C.c: 139:   _delay((unsigned long)((50)*(27000000/4000.0)));
  5965  001872  0E02               	movlw	2
  5966  001874  6E08               	movwf	(??_LCD_Begin+1)^0,c
  5967  001876  0EB7               	movlw	183
  5968  001878  6E07               	movwf	??_LCD_Begin^0,c
  5969  00187A  0E4C               	movlw	76
  5970  00187C                     u2797:
  5971  00187C  2EE8               	decfsz	wreg,f,c
  5972  00187E  D7FE               	bra	u2797
  5973  001880  2E07               	decfsz	??_LCD_Begin^0,f,c
  5974  001882  D7FC               	bra	u2797
  5975  001884  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  5976  001886  D7FA               	bra	u2797
  5977  001888  D000               	nop2	
  5978  00188A                     
  5979                           ;I2C.c: 140:   LCD_Cmd(0x04 | 0x02);
  5980  00188A  0E06               	movlw	6
  5981  00188C  EC69  F010         	call	_LCD_Cmd
  5982                           
  5983                           ;I2C.c: 141:   _delay((unsigned long)((50)*(27000000/4000.0)));
  5984  001890  0E02               	movlw	2
  5985  001892  6E08               	movwf	(??_LCD_Begin+1)^0,c
  5986  001894  0EB7               	movlw	183
  5987  001896  6E07               	movwf	??_LCD_Begin^0,c
  5988  001898  0E4C               	movlw	76
  5989  00189A                     u2807:
  5990  00189A  2EE8               	decfsz	wreg,f,c
  5991  00189C  D7FE               	bra	u2807
  5992  00189E  2E07               	decfsz	??_LCD_Begin^0,f,c
  5993  0018A0  D7FC               	bra	u2807
  5994  0018A2  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  5995  0018A4  D7FA               	bra	u2807
  5996  0018A6  D000               	nop2	
  5997  0018A8  0012               	return		;funcret
  5998  0018AA                     __end_of_LCD_Begin:
  5999                           	callstack 0
  6000                           
  6001 ;; *************** function _LCD_Cmd *****************
  6002 ;; Defined at:
  6003 ;;		line 74 in file "I2C.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;  Command         1    wreg     unsigned char 
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;  Command         1    5[COMRAM] unsigned char 
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  1    wreg      void 
  6010 ;; Registers used:
  6011 ;;		wreg, status,2, status,0, cstack
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6017 ;;      Params:         0       0       0       0       0       0       0       0       0
  6018 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6019 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6020 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6021 ;;Total ram usage:        2 bytes
  6022 ;; Hardware stack levels used: 1
  6023 ;; Hardware stack levels required when called: 3
  6024 ;; This function calls:
  6025 ;;		_LCD_Write_Nibble
  6026 ;; This function is called by:
  6027 ;;		_main
  6028 ;;		_LCD_Goto
  6029 ;;		_LCD_Begin
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text37
  6034  0020D2                     __ptext37:
  6035                           	callstack 0
  6036  0020D2                     _LCD_Cmd:
  6037                           	callstack 26
  6038                           
  6039                           ;incstack = 0
  6040                           ;LCD_Cmd@Command stored from wreg
  6041  0020D2  6E06               	movwf	LCD_Cmd@Command^0,c
  6042  0020D4                     
  6043                           ;I2C.c: 74: void LCD_Cmd(uint8_t Command);I2C.c: 75: {;I2C.c: 76:   RS = 0;
  6044  0020D4  0100               	movlb	0	; () banked
  6045  0020D6  91DA               	bcf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  6046  0020D8                     
  6047                           ; BSR set to: 0
  6048                           ;I2C.c: 77:   LCD_Write_Nibble(Command & 0xF0);
  6049  0020D8  5006               	movf	LCD_Cmd@Command^0,w,c
  6050  0020DA  0BF0               	andlw	240
  6051  0020DC  EC49  F011         	call	_LCD_Write_Nibble
  6052                           
  6053                           ;I2C.c: 78:   LCD_Write_Nibble((Command << 4) & 0xF0);
  6054  0020E0  3806               	swapf	LCD_Cmd@Command^0,w,c
  6055  0020E2  0BF0               	andlw	240
  6056  0020E4  0BF0               	andlw	240
  6057  0020E6  EC49  F011         	call	_LCD_Write_Nibble
  6058  0020EA                     
  6059                           ;I2C.c: 79:   if((Command == 0x01) || (Command == 0x02))
  6060  0020EA  0406               	decf	LCD_Cmd@Command^0,w,c
  6061  0020EC  B4D8               	btfsc	status,2,c
  6062  0020EE  EF7B  F010         	goto	u2591
  6063  0020F2  EF7D  F010         	goto	u2590
  6064  0020F6                     u2591:
  6065  0020F6  EF86  F010         	goto	l3047
  6066  0020FA                     u2590:
  6067  0020FA  0E02               	movlw	2
  6068  0020FC  1806               	xorwf	LCD_Cmd@Command^0,w,c
  6069  0020FE  A4D8               	btfss	status,2,c
  6070  002100  EF84  F010         	goto	u2601
  6071  002104  EF86  F010         	goto	u2600
  6072  002108                     u2601:
  6073  002108  EF8E  F010         	goto	l148
  6074  00210C                     u2600:
  6075  00210C                     l3047:
  6076                           
  6077                           ;I2C.c: 80:     _delay((unsigned long)((2)*(27000000/4000.0)));
  6078  00210C  0E12               	movlw	18
  6079  00210E  6E05               	movwf	??_LCD_Cmd^0,c
  6080  002110  0E87               	movlw	135
  6081  002112                     u2817:
  6082  002112  2EE8               	decfsz	wreg,f,c
  6083  002114  D7FE               	bra	u2817
  6084  002116  2E05               	decfsz	??_LCD_Cmd^0,f,c
  6085  002118  D7FC               	bra	u2817
  6086  00211A  F000               	nop	
  6087  00211C                     l148:
  6088  00211C  0012               	return		;funcret
  6089  00211E                     __end_of_LCD_Cmd:
  6090                           	callstack 0
  6091                           
  6092 ;; *************** function _LCD_Write_Nibble *****************
  6093 ;; Defined at:
  6094 ;;		line 63 in file "I2C.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  n               1    wreg     unsigned char 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  n               1    3[COMRAM] unsigned char 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1    wreg      void 
  6101 ;; Registers used:
  6102 ;;		wreg, status,2, status,0, cstack
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6108 ;;      Params:         0       0       0       0       0       0       0       0       0
  6109 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6111 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6112 ;;Total ram usage:        1 bytes
  6113 ;; Hardware stack levels used: 1
  6114 ;; Hardware stack levels required when called: 2
  6115 ;; This function calls:
  6116 ;;		_Expander_Write
  6117 ;; This function is called by:
  6118 ;;		_LCD_Cmd
  6119 ;;		_LCD_Print
  6120 ;;		_LCD_PutC
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text38
  6125  002292                     __ptext38:
  6126                           	callstack 0
  6127  002292                     _LCD_Write_Nibble:
  6128                           	callstack 27
  6129                           
  6130                           ;incstack = 0
  6131                           ;LCD_Write_Nibble@n stored from wreg
  6132  002292  6E04               	movwf	LCD_Write_Nibble@n^0,c
  6133  002294                     
  6134                           ;I2C.c: 63: void LCD_Write_Nibble(uint8_t n);I2C.c: 64: {;I2C.c: 65:   n |= RS;
  6135  002294  0E00               	movlw	0
  6136  002296  0100               	movlb	0	; () banked
  6137  002298  B1DA               	btfsc	(_RS/(0+8))& (0+255),_RS& (0+7),b
  6138  00229A  0E01               	movlw	1
  6139  00229C  1204               	iorwf	LCD_Write_Nibble@n^0,f,c
  6140  00229E                     
  6141                           ; BSR set to: 0
  6142                           ;I2C.c: 66:   Expander_Write(n & 0xFB);
  6143  00229E  5004               	movf	LCD_Write_Nibble@n^0,w,c
  6144  0022A0  0BFB               	andlw	251
  6145  0022A2  ECF8  F011         	call	_Expander_Write
  6146  0022A6                     
  6147                           ;I2C.c: 67:   _delay((unsigned long)((1)*(27000000/4000000.0)));
  6148  0022A6  D000               	nop2		;2 cycle nop
  6149  0022A8  D000               	nop2		;2 cycle nop
  6150  0022AA  D000               	nop2		;2 cycle nop
  6151  0022AC                     
  6152                           ;I2C.c: 68:   Expander_Write(n | 0x04);
  6153  0022AC  5004               	movf	LCD_Write_Nibble@n^0,w,c
  6154  0022AE  0904               	iorlw	4
  6155  0022B0  ECF8  F011         	call	_Expander_Write
  6156  0022B4                     
  6157                           ;I2C.c: 69:   _delay((unsigned long)((1)*(27000000/4000000.0)));
  6158  0022B4  D000               	nop2		;2 cycle nop
  6159  0022B6  D000               	nop2		;2 cycle nop
  6160  0022B8  D000               	nop2		;2 cycle nop
  6161  0022BA                     
  6162                           ;I2C.c: 70:   Expander_Write(n & 0xFB);
  6163  0022BA  5004               	movf	LCD_Write_Nibble@n^0,w,c
  6164  0022BC  0BFB               	andlw	251
  6165  0022BE  ECF8  F011         	call	_Expander_Write
  6166  0022C2                     
  6167                           ;I2C.c: 71:   _delay((unsigned long)((100)*(27000000/4000000.0)));
  6168  0022C2  0EE1               	movlw	225
  6169  0022C4                     u2827:
  6170  0022C4  2EE8               	decfsz	wreg,f,c
  6171  0022C6  D7FE               	bra	u2827
  6172  0022C8  0012               	return		;funcret
  6173  0022CA                     __end_of_LCD_Write_Nibble:
  6174                           	callstack 0
  6175                           
  6176 ;; *************** function _Expander_Write *****************
  6177 ;; Defined at:
  6178 ;;		line 55 in file "I2C.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  value           1    wreg     unsigned char 
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;  value           1    2[COMRAM] unsigned char 
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  1    wreg      void 
  6185 ;; Registers used:
  6186 ;;		wreg, status,2, status,0, cstack
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6192 ;;      Params:         0       0       0       0       0       0       0       0       0
  6193 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6195 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6196 ;;Total ram usage:        1 bytes
  6197 ;; Hardware stack levels used: 1
  6198 ;; Hardware stack levels required when called: 1
  6199 ;; This function calls:
  6200 ;;		_I2CLCD_Start
  6201 ;;		_I2CLCD_Stop
  6202 ;;		_I2CLCD_Write
  6203 ;; This function is called by:
  6204 ;;		_LCD_Write_Nibble
  6205 ;;		_LCD_Begin
  6206 ;;		_Backlight
  6207 ;;		_noBacklight
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           	psect	text39
  6212  0023F0                     __ptext39:
  6213                           	callstack 0
  6214  0023F0                     _Expander_Write:
  6215                           	callstack 27
  6216                           
  6217                           ;incstack = 0
  6218                           ;Expander_Write@value stored from wreg
  6219  0023F0  6E03               	movwf	Expander_Write@value^0,c
  6220  0023F2                     
  6221                           ;I2C.c: 55: void Expander_Write(uint8_t value);I2C.c: 56: {;I2C.c: 57:   I2CLCD_Start();
  6222  0023F2  ECD5  F011         	call	_I2CLCD_Start	;wreg free
  6223                           
  6224                           ;I2C.c: 58:   I2CLCD_Write(i2c_addr);
  6225  0023F6  0100               	movlb	0	; () banked
  6226  0023F8  51D9               	movf	_i2c_addr& (0+255),w,b
  6227  0023FA  EC96  F011         	call	_I2CLCD_Write
  6228                           
  6229                           ;I2C.c: 59:   I2CLCD_Write(value | backlight_val);
  6230  0023FE  5003               	movf	Expander_Write@value^0,w,c
  6231  002400  0100               	movlb	0	; () banked
  6232  002402  11DB               	iorwf	_backlight_val& (0+255),w,b
  6233  002404  EC96  F011         	call	_I2CLCD_Write
  6234                           
  6235                           ;I2C.c: 60:   I2CLCD_Stop();
  6236  002408  ECC1  F011         	call	_I2CLCD_Stop	;wreg free
  6237  00240C  0012               	return		;funcret
  6238  00240E                     __end_of_Expander_Write:
  6239                           	callstack 0
  6240                           
  6241 ;; *************** function _I2CLCD_Write *****************
  6242 ;; Defined at:
  6243 ;;		line 27 in file "I2C.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;  i2c_data        1    wreg     unsigned char 
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;  i2c_data        1    1[COMRAM] unsigned char 
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  1    wreg      void 
  6250 ;; Registers used:
  6251 ;;		wreg, status,2, status,0
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6257 ;;      Params:         0       0       0       0       0       0       0       0       0
  6258 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6259 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6260 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6261 ;;Total ram usage:        2 bytes
  6262 ;; Hardware stack levels used: 1
  6263 ;; This function calls:
  6264 ;;		Nothing
  6265 ;; This function is called by:
  6266 ;;		_Expander_Write
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           	psect	text40
  6271  00232C                     __ptext40:
  6272                           	callstack 0
  6273  00232C                     _I2CLCD_Write:
  6274                           	callstack 27
  6275                           
  6276                           ;incstack = 0
  6277                           ;I2CLCD_Write@i2c_data stored from wreg
  6278  00232C  6E02               	movwf	I2CLCD_Write@i2c_data^0,c
  6279  00232E                     l115:
  6280  00232E  B4C7               	btfsc	199,2,c	;volatile
  6281  002330  EF9C  F011         	goto	u2571
  6282  002334  EF9E  F011         	goto	u2570
  6283  002338                     u2571:
  6284  002338  EF97  F011         	goto	l115
  6285  00233C                     u2570:
  6286  00233C  CFC5 F001          	movff	4037,??_I2CLCD_Write	;volatile
  6287  002340  0E1F               	movlw	31
  6288  002342  1601               	andwf	??_I2CLCD_Write^0,f,c
  6289  002344  A4D8               	btfss	status,2,c
  6290  002346  EFA7  F011         	goto	u2581
  6291  00234A  EFA9  F011         	goto	u2580
  6292  00234E                     u2581:
  6293  00234E  EF97  F011         	goto	l115
  6294  002352                     u2580:
  6295  002352                     
  6296                           ;I2C.c: 30:   SSPBUF = i2c_data;
  6297  002352  C002  FFC9         	movff	I2CLCD_Write@i2c_data,4041	;volatile
  6298  002356  0012               	return		;funcret
  6299  002358                     __end_of_I2CLCD_Write:
  6300                           	callstack 0
  6301                           
  6302 ;; *************** function _I2CLCD_Stop *****************
  6303 ;; Defined at:
  6304 ;;		line 21 in file "I2C.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;		None
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;		None
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  1    wreg      void 
  6311 ;; Registers used:
  6312 ;;		wreg, status,2, status,0
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6318 ;;      Params:         0       0       0       0       0       0       0       0       0
  6319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6320 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6321 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6322 ;;Total ram usage:        1 bytes
  6323 ;; Hardware stack levels used: 1
  6324 ;; This function calls:
  6325 ;;		Nothing
  6326 ;; This function is called by:
  6327 ;;		_Expander_Write
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text41
  6332  002382                     __ptext41:
  6333                           	callstack 0
  6334  002382                     _I2CLCD_Stop:
  6335                           	callstack 27
  6336  002382                     l109:
  6337  002382  B4C7               	btfsc	199,2,c	;volatile
  6338  002384  EFC6  F011         	goto	u2551
  6339  002388  EFC8  F011         	goto	u2550
  6340  00238C                     u2551:
  6341  00238C  EFC1  F011         	goto	l109
  6342  002390                     u2550:
  6343  002390  CFC5 F001          	movff	4037,??_I2CLCD_Stop	;volatile
  6344  002394  0E1F               	movlw	31
  6345  002396  1601               	andwf	??_I2CLCD_Stop^0,f,c
  6346  002398  A4D8               	btfss	status,2,c
  6347  00239A  EFD1  F011         	goto	u2561
  6348  00239E  EFD3  F011         	goto	u2560
  6349  0023A2                     u2561:
  6350  0023A2  EFC1  F011         	goto	l109
  6351  0023A6                     u2560:
  6352  0023A6                     
  6353                           ;I2C.c: 24:   PEN = 1;
  6354  0023A6  84C5               	bsf	4037,2,c	;volatile
  6355  0023A8  0012               	return		;funcret
  6356  0023AA                     __end_of_I2CLCD_Stop:
  6357                           	callstack 0
  6358                           
  6359 ;; *************** function _I2CLCD_Start *****************
  6360 ;; Defined at:
  6361 ;;		line 15 in file "I2C.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;		None
  6364 ;; Auto vars:     Size  Location     Type
  6365 ;;		None
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  1    wreg      void 
  6368 ;; Registers used:
  6369 ;;		wreg, status,2, status,0
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6375 ;;      Params:         0       0       0       0       0       0       0       0       0
  6376 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6377 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6378 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6379 ;;Total ram usage:        1 bytes
  6380 ;; Hardware stack levels used: 1
  6381 ;; This function calls:
  6382 ;;		Nothing
  6383 ;; This function is called by:
  6384 ;;		_Expander_Write
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           	psect	text42
  6389  0023AA                     __ptext42:
  6390                           	callstack 0
  6391  0023AA                     _I2CLCD_Start:
  6392                           	callstack 27
  6393  0023AA                     l103:
  6394  0023AA  B4C7               	btfsc	199,2,c	;volatile
  6395  0023AC  EFDA  F011         	goto	u2531
  6396  0023B0  EFDC  F011         	goto	u2530
  6397  0023B4                     u2531:
  6398  0023B4  EFD5  F011         	goto	l103
  6399  0023B8                     u2530:
  6400  0023B8  CFC5 F001          	movff	4037,??_I2CLCD_Start	;volatile
  6401  0023BC  0E1F               	movlw	31
  6402  0023BE  1601               	andwf	??_I2CLCD_Start^0,f,c
  6403  0023C0  A4D8               	btfss	status,2,c
  6404  0023C2  EFE5  F011         	goto	u2541
  6405  0023C6  EFE7  F011         	goto	u2540
  6406  0023CA                     u2541:
  6407  0023CA  EFD5  F011         	goto	l103
  6408  0023CE                     u2540:
  6409  0023CE                     
  6410                           ;I2C.c: 18:   SEN = 1;
  6411  0023CE  80C5               	bsf	4037,0,c	;volatile
  6412  0023D0  0012               	return		;funcret
  6413  0023D2                     __end_of_I2CLCD_Start:
  6414                           	callstack 0
  6415                           
  6416 ;; *************** function _I2CLCD_Init *****************
  6417 ;; Defined at:
  6418 ;;		line 7 in file "I2C.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  i2c_clk_freq    4   13[COMRAM] unsigned long 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1    wreg      void 
  6425 ;; Registers used:
  6426 ;;		wreg, status,2, status,0, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6432 ;;      Params:         4       0       0       0       0       0       0       0       0
  6433 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6434 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6435 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6436 ;;Total ram usage:        8 bytes
  6437 ;; Hardware stack levels used: 1
  6438 ;; Hardware stack levels required when called: 1
  6439 ;; This function calls:
  6440 ;;		___lldiv
  6441 ;; This function is called by:
  6442 ;;		_main
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text43
  6447  002028                     __ptext43:
  6448                           	callstack 0
  6449  002028                     _I2CLCD_Init:
  6450                           	callstack 29
  6451  002028                     
  6452                           ;I2C.c: 7: void I2CLCD_Init(uint32_t i2c_clk_freq);I2C.c: 8: {;I2C.c: 9:   SSPCON1 = 0x2
      +                          8;
  6453  002028  0E28               	movlw	40
  6454  00202A  6EC6               	movwf	198,c	;volatile
  6455                           
  6456                           ;I2C.c: 10:   SSPCON2 = 0x00;
  6457  00202C  0E00               	movlw	0
  6458  00202E  6EC5               	movwf	197,c	;volatile
  6459  002030                     
  6460                           ;I2C.c: 11:   SSPADD = (27000000/(4 * i2c_clk_freq)) - 1;
  6461  002030  0EC0               	movlw	192
  6462  002032  6E01               	movwf	___lldiv@dividend^0,c
  6463  002034  0EFC               	movlw	252
  6464  002036  6E02               	movwf	(___lldiv@dividend+1)^0,c
  6465  002038  0E9B               	movlw	155
  6466  00203A  6E03               	movwf	(___lldiv@dividend+2)^0,c
  6467  00203C  0E01               	movlw	1
  6468  00203E  6E04               	movwf	(___lldiv@dividend+3)^0,c
  6469  002040  C00E  F012         	movff	I2CLCD_Init@i2c_clk_freq,??_I2CLCD_Init
  6470  002044  C00F  F013         	movff	I2CLCD_Init@i2c_clk_freq+1,??_I2CLCD_Init+1
  6471  002048  C010  F014         	movff	I2CLCD_Init@i2c_clk_freq+2,??_I2CLCD_Init+2
  6472  00204C  C011  F015         	movff	I2CLCD_Init@i2c_clk_freq+3,??_I2CLCD_Init+3
  6473  002050  0E02               	movlw	2
  6474  002052                     u2425:
  6475  002052  90D8               	bcf	status,0,c
  6476  002054  3612               	rlcf	??_I2CLCD_Init^0,f,c
  6477  002056  3613               	rlcf	(??_I2CLCD_Init+1)^0,f,c
  6478  002058  3614               	rlcf	(??_I2CLCD_Init+2)^0,f,c
  6479  00205A  3615               	rlcf	(??_I2CLCD_Init+3)^0,f,c
  6480  00205C  2EE8               	decfsz	wreg,f,c
  6481  00205E  EF29  F010         	goto	u2425
  6482  002062  C012  F005         	movff	??_I2CLCD_Init,___lldiv@divisor
  6483  002066  C013  F006         	movff	??_I2CLCD_Init+1,___lldiv@divisor+1
  6484  00206A  C014  F007         	movff	??_I2CLCD_Init+2,___lldiv@divisor+2
  6485  00206E  C015  F008         	movff	??_I2CLCD_Init+3,___lldiv@divisor+3
  6486  002072  EC30  F00E         	call	___lldiv	;wreg free
  6487  002076  0401               	decf	?___lldiv^0,w,c
  6488  002078  6EC8               	movwf	200,c	;volatile
  6489  00207A                     
  6490                           ;I2C.c: 12:   SSPSTAT = 0;
  6491  00207A  0E00               	movlw	0
  6492  00207C  6EC7               	movwf	199,c	;volatile
  6493  00207E  0012               	return		;funcret
  6494  002080                     __end_of_I2CLCD_Init:
  6495                           	callstack 0
  6496                           
  6497 ;; *************** function ___lldiv *****************
  6498 ;; Defined at:
  6499 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  dividend        4    0[COMRAM] unsigned long 
  6502 ;;  divisor         4    4[COMRAM] unsigned long 
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;  quotient        4    8[COMRAM] unsigned long 
  6505 ;;  counter         1   12[COMRAM] unsigned char 
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  4    0[COMRAM] unsigned long 
  6508 ;; Registers used:
  6509 ;;		wreg, status,2, status,0
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6515 ;;      Params:         8       0       0       0       0       0       0       0       0
  6516 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6518 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6519 ;;Total ram usage:       13 bytes
  6520 ;; Hardware stack levels used: 1
  6521 ;; This function calls:
  6522 ;;		Nothing
  6523 ;; This function is called by:
  6524 ;;		_I2CLCD_Init
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text44
  6529  001C60                     __ptext44:
  6530                           	callstack 0
  6531  001C60                     ___lldiv:
  6532                           	callstack 29
  6533  001C60  0E00               	movlw	0
  6534  001C62  6E09               	movwf	___lldiv@quotient^0,c
  6535  001C64  0E00               	movlw	0
  6536  001C66  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  6537  001C68  0E00               	movlw	0
  6538  001C6A  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  6539  001C6C  0E00               	movlw	0
  6540  001C6E  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  6541  001C70  5005               	movf	___lldiv@divisor^0,w,c
  6542  001C72  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  6543  001C74  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  6544  001C76  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  6545  001C78  B4D8               	btfsc	status,2,c
  6546  001C7A  EF41  F00E         	goto	u2381
  6547  001C7E  EF43  F00E         	goto	u2380
  6548  001C82                     u2381:
  6549  001C82  EF79  F00E         	goto	l326
  6550  001C86                     u2380:
  6551  001C86  0E01               	movlw	1
  6552  001C88  6E0D               	movwf	___lldiv@counter^0,c
  6553  001C8A  EF4D  F00E         	goto	l2739
  6554  001C8E                     l2737:
  6555  001C8E  90D8               	bcf	status,0,c
  6556  001C90  3605               	rlcf	___lldiv@divisor^0,f,c
  6557  001C92  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  6558  001C94  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  6559  001C96  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  6560  001C98  2A0D               	incf	___lldiv@counter^0,f,c
  6561  001C9A                     l2739:
  6562  001C9A  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  6563  001C9C  EF52  F00E         	goto	u2391
  6564  001CA0  EF54  F00E         	goto	u2390
  6565  001CA4                     u2391:
  6566  001CA4  EF47  F00E         	goto	l2737
  6567  001CA8                     u2390:
  6568  001CA8                     l2741:
  6569  001CA8  90D8               	bcf	status,0,c
  6570  001CAA  3609               	rlcf	___lldiv@quotient^0,f,c
  6571  001CAC  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  6572  001CAE  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  6573  001CB0  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  6574  001CB2  5005               	movf	___lldiv@divisor^0,w,c
  6575  001CB4  5C01               	subwf	___lldiv@dividend^0,w,c
  6576  001CB6  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6577  001CB8  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  6578  001CBA  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6579  001CBC  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  6580  001CBE  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6581  001CC0  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  6582  001CC2  A0D8               	btfss	status,0,c
  6583  001CC4  EF66  F00E         	goto	u2401
  6584  001CC8  EF68  F00E         	goto	u2400
  6585  001CCC                     u2401:
  6586  001CCC  EF71  F00E         	goto	l2749
  6587  001CD0                     u2400:
  6588  001CD0  5005               	movf	___lldiv@divisor^0,w,c
  6589  001CD2  5E01               	subwf	___lldiv@dividend^0,f,c
  6590  001CD4  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6591  001CD6  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  6592  001CD8  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6593  001CDA  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  6594  001CDC  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6595  001CDE  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  6596  001CE0  8009               	bsf	___lldiv@quotient^0,0,c
  6597  001CE2                     l2749:
  6598  001CE2  90D8               	bcf	status,0,c
  6599  001CE4  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  6600  001CE6  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  6601  001CE8  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  6602  001CEA  3205               	rrcf	___lldiv@divisor^0,f,c
  6603  001CEC  2E0D               	decfsz	___lldiv@counter^0,f,c
  6604  001CEE  EF54  F00E         	goto	l2741
  6605  001CF2                     l326:
  6606  001CF2  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6607  001CF6  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6608  001CFA  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6609  001CFE  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6610  001D02  0012               	return		;funcret
  6611  001D04                     __end_of___lldiv:
  6612                           	callstack 0
  6613                           
  6614                           	psect	rparam
  6615  0000                     
  6616                           	psect	idloc
  6617                           
  6618                           ;Config register IDLOC0 @ 0x200000
  6619                           ;	unspecified, using default values
  6620  200000                     	org	2097152
  6621  200000  FF                 	db	255
  6622                           
  6623                           ;Config register IDLOC1 @ 0x200001
  6624                           ;	unspecified, using default values
  6625  200001                     	org	2097153
  6626  200001  FF                 	db	255
  6627                           
  6628                           ;Config register IDLOC2 @ 0x200002
  6629                           ;	unspecified, using default values
  6630  200002                     	org	2097154
  6631  200002  FF                 	db	255
  6632                           
  6633                           ;Config register IDLOC3 @ 0x200003
  6634                           ;	unspecified, using default values
  6635  200003                     	org	2097155
  6636  200003  FF                 	db	255
  6637                           
  6638                           ;Config register IDLOC4 @ 0x200004
  6639                           ;	unspecified, using default values
  6640  200004                     	org	2097156
  6641  200004  FF                 	db	255
  6642                           
  6643                           ;Config register IDLOC5 @ 0x200005
  6644                           ;	unspecified, using default values
  6645  200005                     	org	2097157
  6646  200005  FF                 	db	255
  6647                           
  6648                           ;Config register IDLOC6 @ 0x200006
  6649                           ;	unspecified, using default values
  6650  200006                     	org	2097158
  6651  200006  FF                 	db	255
  6652                           
  6653                           ;Config register IDLOC7 @ 0x200007
  6654                           ;	unspecified, using default values
  6655  200007                     	org	2097159
  6656  200007  FF                 	db	255
  6657                           
  6658                           	psect	config
  6659                           
  6660                           ;Config register CONFIG1L @ 0x300000
  6661                           ;	PLL Prescaler Selection bits
  6662                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  6663                           ;	System Clock Postscaler Selection bits
  6664                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  6665                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  6666                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  6667  300000                     	org	3145728
  6668  300000  00                 	db	0
  6669                           
  6670                           ;Config register CONFIG1H @ 0x300001
  6671                           ;	Oscillator Selection bits
  6672                           ;	FOSC = HS, HS oscillator (HS)
  6673                           ;	Fail-Safe Clock Monitor Enable bit
  6674                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6675                           ;	Internal/External Oscillator Switchover bit
  6676                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6677  300001                     	org	3145729
  6678  300001  0C                 	db	12
  6679                           
  6680                           ;Config register CONFIG2L @ 0x300002
  6681                           ;	Power-up Timer Enable bit
  6682                           ;	PWRT = ON, PWRT enabled
  6683                           ;	Brown-out Reset Enable bits
  6684                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6685                           ;	Brown-out Reset Voltage bits
  6686                           ;	BORV = 3, Minimum setting 2.05V
  6687                           ;	USB Voltage Regulator Enable bit
  6688                           ;	VREGEN = OFF, USB voltage regulator disabled
  6689  300002                     	org	3145730
  6690  300002  1E                 	db	30
  6691                           
  6692                           ;Config register CONFIG2H @ 0x300003
  6693                           ;	Watchdog Timer Enable bit
  6694                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6695                           ;	Watchdog Timer Postscale Select bits
  6696                           ;	WDTPS = 32768, 1:32768
  6697  300003                     	org	3145731
  6698  300003  1E                 	db	30
  6699                           
  6700                           ; Padding undefined space
  6701  300004                     	org	3145732
  6702  300004  FF                 	db	255
  6703                           
  6704                           ;Config register CONFIG3H @ 0x300005
  6705                           ;	CCP2 MUX bit
  6706                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  6707                           ;	PORTB A/D Enable bit
  6708                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6709                           ;	Low-Power Timer 1 Oscillator Enable bit
  6710                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6711                           ;	MCLR Pin Enable bit
  6712                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6713  300005                     	org	3145733
  6714  300005  81                 	db	129
  6715                           
  6716                           ;Config register CONFIG4L @ 0x300006
  6717                           ;	Stack Full/Underflow Reset Enable bit
  6718                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6719                           ;	Single-Supply ICSP Enable bit
  6720                           ;	LVP = OFF, Single-Supply ICSP disabled
  6721                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  6722                           ;	ICPRT = OFF, ICPORT disabled
  6723                           ;	Extended Instruction Set Enable bit
  6724                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6725                           ;	Background Debugger Enable bit
  6726                           ;	DEBUG = 0x1, unprogrammed default
  6727  300006                     	org	3145734
  6728  300006  81                 	db	129
  6729                           
  6730                           ; Padding undefined space
  6731  300007                     	org	3145735
  6732  300007  FF                 	db	255
  6733                           
  6734                           ;Config register CONFIG5L @ 0x300008
  6735                           ;	Code Protection bit
  6736                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  6737                           ;	Code Protection bit
  6738                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  6739                           ;	Code Protection bit
  6740                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  6741                           ;	Code Protection bit
  6742                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  6743  300008                     	org	3145736
  6744  300008  0F                 	db	15
  6745                           
  6746                           ;Config register CONFIG5H @ 0x300009
  6747                           ;	Boot Block Code Protection bit
  6748                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  6749                           ;	Data EEPROM Code Protection bit
  6750                           ;	CPD = OFF, Data EEPROM is not code-protected
  6751  300009                     	org	3145737
  6752  300009  C0                 	db	192
  6753                           
  6754                           ;Config register CONFIG6L @ 0x30000A
  6755                           ;	Write Protection bit
  6756                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  6757                           ;	Write Protection bit
  6758                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  6759                           ;	Write Protection bit
  6760                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  6761                           ;	Write Protection bit
  6762                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  6763  30000A                     	org	3145738
  6764  30000A  0F                 	db	15
  6765                           
  6766                           ;Config register CONFIG6H @ 0x30000B
  6767                           ;	Configuration Register Write Protection bit
  6768                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  6769                           ;	Boot Block Write Protection bit
  6770                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  6771                           ;	Data EEPROM Write Protection bit
  6772                           ;	WRTD = OFF, Data EEPROM is not write-protected
  6773  30000B                     	org	3145739
  6774  30000B  E0                 	db	224
  6775                           
  6776                           ;Config register CONFIG7L @ 0x30000C
  6777                           ;	Table Read Protection bit
  6778                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6779                           ;	Table Read Protection bit
  6780                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6781                           ;	Table Read Protection bit
  6782                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6783                           ;	Table Read Protection bit
  6784                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6785  30000C                     	org	3145740
  6786  30000C  0F                 	db	15
  6787                           
  6788                           ;Config register CONFIG7H @ 0x30000D
  6789                           ;	Boot Block Table Read Protection bit
  6790                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  6791  30000D                     	org	3145741
  6792  30000D  40                 	db	64
  6793                           tosu	equ	0xFFF
  6794                           tosh	equ	0xFFE
  6795                           tosl	equ	0xFFD
  6796                           stkptr	equ	0xFFC
  6797                           pclatu	equ	0xFFB
  6798                           pclath	equ	0xFFA
  6799                           pcl	equ	0xFF9
  6800                           tblptru	equ	0xFF8
  6801                           tblptrh	equ	0xFF7
  6802                           tblptrl	equ	0xFF6
  6803                           tablat	equ	0xFF5
  6804                           prodh	equ	0xFF4
  6805                           prodl	equ	0xFF3
  6806                           indf0	equ	0xFEF
  6807                           postinc0	equ	0xFEE
  6808                           postdec0	equ	0xFED
  6809                           preinc0	equ	0xFEC
  6810                           plusw0	equ	0xFEB
  6811                           fsr0h	equ	0xFEA
  6812                           fsr0l	equ	0xFE9
  6813                           wreg	equ	0xFE8
  6814                           indf1	equ	0xFE7
  6815                           postinc1	equ	0xFE6
  6816                           postdec1	equ	0xFE5
  6817                           preinc1	equ	0xFE4
  6818                           plusw1	equ	0xFE3
  6819                           fsr1h	equ	0xFE2
  6820                           fsr1l	equ	0xFE1
  6821                           bsr	equ	0xFE0
  6822                           indf2	equ	0xFDF
  6823                           postinc2	equ	0xFDE
  6824                           postdec2	equ	0xFDD
  6825                           preinc2	equ	0xFDC
  6826                           plusw2	equ	0xFDB
  6827                           fsr2h	equ	0xFDA
  6828                           fsr2l	equ	0xFD9
  6829                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    0
    Data        1
    BSS         92
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     29     124
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), UID(BANK0[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), UID(BANK0[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> data_buffer(BANK0[16]), temp(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S922$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S922$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    MFRC522_ReadCardSerial@str	PTR unsigned char  size(2) Largest target is 16
		 -> UID(BANK0[16]), 

    MFRC522_IsCard@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType(BANK0[1]), 

    MFRC522_AntiColl@serNum	PTR unsigned char  size(2) Largest target is 16
		 -> UID(BANK0[16]), 

    MFRC522_CRC@dataOut	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_CRC@dataIn	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_Request@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType(BANK0[1]), 

    MFRC522_ToCard@backData	PTR unsigned char  size(2) Largest target is 16
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), UID(BANK0[16]), TagType(BANK0[1]), 

    MFRC522_ToCard@backLen	PTR unsigned int  size(2) Largest target is 2
		 -> MFRC522_AntiColl@unLen(COMRAM[2]), MFRC522_Halt@unLen(COMRAM[2]), MFRC522_SelectTag@recvBits(COMRAM[2]), MFRC522_Request@backBits(COMRAM[2]), 

    MFRC522_ToCard@sendData	PTR unsigned char  size(2) Largest target is 16
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), UID(BANK0[16]), TagType(BANK0[1]), 

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 16
		 -> data_buffer(BANK0[16]), temp(BANK0[16]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _MFRC522_ReadCardSerial->_MFRC522_AntiColl
    _MFRC522_AntiColl->_MFRC522_ToCard
    _MFRC522_IsCard->_MFRC522_Request
    _MFRC522_Request->_MFRC522_ToCard
    _MFRC522_Reset->_MFRC522_Wr
    _MFRC522_AntennaOn->_MFRC522_Set_Bit
    _MFRC522_AntennaOff->_MFRC522_Clear_Bit
    _MFRC522_Halt->_MFRC522_ToCard
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_ToCard->_MFRC522_Set_Bit
    _MFRC522_CRC->_MFRC522_Clear_Bit
    _MFRC522_CRC->_MFRC522_Set_Bit
    _MFRC522_Set_Bit->_MFRC522_Rd
    _MFRC522_Clear_Bit->_MFRC522_Rd
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble
    _LCD_Write_Nibble->_Expander_Write
    _Expander_Write->_I2CLCD_Write
    _I2CLCD_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   72732
                                             92 COMRAM     2     2      0
                                             25 BANK0      4     4      0
                        _I2CLCD_Init
                          _LCD_Begin
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                   _MFRC522_AntiColl
                       _MFRC522_Halt
                       _MFRC522_Init
                     _MFRC522_IsCard
             _MFRC522_ReadCardSerial
                          _port_Init
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   12048
                                              6 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11391
                                             90 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   11032
                                             63 COMRAM    27    21      6
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    24     11    4647
                                             27 COMRAM    35    24     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              6     4      2     388
                                              6 COMRAM     6     4      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4814
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     394
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MFRC522_ReadCardSerial                               3     1      2   12065
                                             39 COMRAM     2     0      2
                   _MFRC522_AntiColl
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntiColl                                     8     6      2   11922
                                             31 COMRAM     8     6      2
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_IsCard                                       2     0      2    9592
                                             37 COMRAM     2     0      2
                    _MFRC522_Request
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Request                                      6     4      2    9494
                                             31 COMRAM     6     4      2
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Init                                         0     0      0    7318
                 _MFRC522_AntennaOff
                  _MFRC522_AntennaOn
                      _MFRC522_Reset
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Reset                                        0     0      0    1453
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOn                                    1     1      0    2174
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOff                                   0     0      0    2238
                  _MFRC522_Clear_Bit
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Halt                                         6     6      0   16650
                                             31 COMRAM     6     6      0
                        _MFRC522_CRC
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
 ---------------------------------------------------------------------------------
 (3) _MFRC522_ToCard                                      19    12      7    7783
                                             12 COMRAM    19    12      7
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_CRC                                          7     2      5    6480
                                             12 COMRAM     7     2      5
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit                                      3     2      1    2010
                                              9 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit                                    3     2      1    2238
                                              9 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr                                           5     4      1    1453
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd                                           9     9      0     163
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            6     4      2     710
                                              4 COMRAM     6     4      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Goto                                             4     3      1     797
                                              6 COMRAM     4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     375
                                              6 COMRAM     3     3      0
                     _Expander_Write
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              2     2      0     282
                                              4 COMRAM     2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Nibble                                     1     1      0     158
                                              3 COMRAM     1     1      0
                     _Expander_Write
 ---------------------------------------------------------------------------------
 (3) _Expander_Write                                       1     1      0      62
                                              2 COMRAM     1     1      0
                       _I2CLCD_Start
                        _I2CLCD_Stop
                       _I2CLCD_Write
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Write                                         2     2      0      31
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Stop                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Start                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2CLCD_Init                                          8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2CLCD_Init
     ___lldiv
   _LCD_Begin
     _Expander_Write
       _I2CLCD_Start
       _I2CLCD_Stop
       _I2CLCD_Write
     _LCD_Cmd
       _LCD_Write_Nibble
         _Expander_Write
   _LCD_Cmd
   _LCD_Goto
     _LCD_Cmd
   _LCD_Print
     _LCD_Write_Nibble
   _MFRC522_AntiColl
     _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Wr
     _MFRC522_ToCard
       _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Set_Bit
         _MFRC522_Rd
         _MFRC522_Wr
       _MFRC522_Wr
     _MFRC522_Wr
   _MFRC522_Halt
     _MFRC522_CRC
       _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Set_Bit
       _MFRC522_Wr
     _MFRC522_Clear_Bit
     _MFRC522_ToCard
   _MFRC522_Init
     _MFRC522_AntennaOff
       _MFRC522_Clear_Bit
     _MFRC522_AntennaOn
       _MFRC522_Rd
       _MFRC522_Set_Bit
     _MFRC522_Reset
       _MFRC522_Wr
     _MFRC522_Wr
   _MFRC522_IsCard
     _MFRC522_Request
       _MFRC522_ToCard
       _MFRC522_Wr
   _MFRC522_ReadCardSerial
     _MFRC522_AntiColl
   _port_Init
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _xtoa
           _isalpha
           _isupper
           _pad
           _toupper
             _islower
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     1D      7C       5       77.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITBIGSFRhhhh       36      0       0      20        0.0%
BITBIGSFRhhlh       2F      0       0      21        0.0%
BITBIGSFRll         23      0       0      26        0.0%
BITBIGSFRlh          5      0       0      25        0.0%
BITBIGSFRhlh         5      0       0      23        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BITBIGSFRhll         1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DA      27        0.0%
DATA                 0      0      DA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar 23 19:40:23 2022

                   MFRC522_Rd@i 0008                    MFRC522_CRC@i 0013                    MFRC522_CRC@n 0012  
                   MFRC522_Wr@i 0005                              l60 148C                              l67 2472  
                            _RS 06D0                             l100 207E                             l103 23AA  
                           l111 23A6                             l112 23A8                             l200 1E34  
                           l105 23CE                             l201 1E3A                             l106 23D0  
                           l210 2380                             l115 232E                             l204 2426  
                           l109 2382                             l117 2352                             l213 2450  
                           l118 2356                             l142 22C8                             l207 243E  
                           l231 1118                             l216 246C                             l242 1260  
                           l250 1F0A                             l139 240C                             l235 12B8  
                           l219 1FCE                             l148 211C                             l333 1D02  
                           l157 1EA4                             l253 1F0C                             l413 1656  
                           l326 1CF2                             l166 1BAA                             l263 1DA2  
                           l247 12BA                             l192 1AB2                             l280 1C5E  
                           l169 18A8                             l193 1AEC                             l273 2026  
                           l194 1AF4                             l426 17BA                             l259 1D56  
                           l284 2460                             l276 1C5C                             l289 23EE  
                           l977 20D0                             _PEN 007E2A                             _SEN 007E28  
                           _UID 009B                             _abs 21A6                             _led 0068  
                           _pad 1974                             wreg 000FE8                  ??_MFRC522_Halt 0020  
                ??_MFRC522_Init 000D                 __end_of_LCD_Cmd 211E                            l1010 19BA  
                          l1100 2290                            l1013 19FC                            l1021 08B0  
                          l1015 1A38                            l1023 08B8                            l1041 0AF0  
                          l1115 1972                            l1123 21A4                            ?_abs 0013  
                          l1132 22FE                            l1140 2160                            l2101 18CE  
                          l1126 2474                            l1046 0B2A                            l2103 18D8  
                          l2111 22CA                            l1048 0B32                            l2201 1DDA  
                          l2105 18F6                            l2121 2162                            l2113 22D6  
                          l1137 2158                            l1065 0D30                            l1146 2258  
                          l1074 102C                            l3011 23AA                            l2203 1DE0  
                          l1091 21E4                            l2107 192C                            l2123 216E  
                          l2115 22DA                            l1067 0D94                            l1083 1F66  
                          l1084 1F6E                            l3013 23B8                            l3021 233C  
                          l2221 1E24                            l2213 1DF8                            l2205 1DE2  
                          l2125 2180                            l2117 22F2                            l3101 12BC  
                          l1094 2220                            l3015 2382                            l3023 23F2  
                          l3031 22AC                            l2151 1A48                            l2215 1E1A  
                          l2207 1DE4                            l2231 1506                            l2223 14D0  
                          l2127 2184                            l2311 19B2                            l2303 1974  
                          l3111 12F4                            l3103 12C0                            l1088 21DC  
                          l3017 2390                            l3033 22B4                            l3025 2294  
                          l3041 20D8                            l2161 1A66                            l2153 1A4A  
                          l2145 1A3C                            l2217 1E20                            l2209 1DF4  
                          l2241 1562                            l2233 1514                            l2225 14D4  
                          l2321 1A20                            l2313 19C6                            l2305 1984  
                          l2401 0A40                            l2129 2222                            l3121 1328  
                          l3113 12FE                            l3105 12D4                            l3019 232E  
                          l3035 22BA                            l3027 229E                            l3043 20EA  
                          l3051 17C2                            l2171 1AAA                            l2163 1A88  
                          l2155 1A5E                            l2147 1A44                            l2219 1E22  
                          l2251 15CC                            l2243 156A                            l2235 1534  
                          l2227 14E2                            l2315 19DA                            l2307 1998  
                          l2411 0A92                            l2403 0A5A                            l3131 1370  
                          l3123 132A                            l3115 130A                            l3107 12DA  
                          l3037 22C2                            l3029 22A6                            l3045 20FA  
                          l3061 180E                            l3053 17C8                            l2181 1AD2  
                          l2165 1A8A                            l2149 1A46                            l3221 106C  
                          l2261 1616                            l2253 15EC                            l2245 157E  
                          l2237 1538                            l2229 1502                            l2325 21A6  
                          l2317 19DE                            l2309 19A6                            l2413 0AA4  
                          l2405 0A6A                            l2333 21E6                            l2341 211E  
                          l3141 13E6                            l3133 1380                            l3125 1336  
                          l3117 130C                            l3109 12DE                            l3047 210C  
                          l3039 20D4                            l3071 1872                            l3063 1822  
                          l3055 17E6                            l3223 1E86                            l2183 1AD4  
                          l2167 1A90                            l2191 1DAC                            l2351 2410  
                          l2511 1058                            l2503 1030                            l2263 1636  
                          l2255 15EE                            l2247 158C                            l2239 1544  
                          l2271 166A                            l2327 21C0                            l2319 1A0C  
                          l2415 0AB0                            l2407 0A7C                            l2343 214C  
                          l2431 0B48                            l2423 0AF2                            l3143 1410  
                          l3135 1394                            l3127 1342                            l3119 1322  
                          l3073 188A                            l3065 1830                            l3057 17F4  
                          l3049 17BE                            l3081 1E5A                            l2185 1AF2  
                          l2177 1AB4                            l2169 1A92                            l2193 1DB4  
                          l2353 2418                            l2521 10D2                            l2513 1082  
                          l2505 1040                            l2257 1600                            l2249 159E  
                          l2281 16DA                            l2273 168A                            l2097 18AA  
                          l2417 0AB8                            l2409 0A8C                            l2361 0810  
                          l2329 225A                            l2337 211E                            l2441 0B86  
                          l2433 0B50                            l2425 0B02                            l3161 148E  
                          l3153 1434                            l3145 141A                            l3137 13C2  
                          l3129 1352                            l3067 184E                            l3059 1808  
                          l3083 1E66                            l3075 1E3E                            l3091 1AF6  
                          l2179 1ABA                            l2355 242A                            l2531 1120  
                          l2523 10EE                            l2515 10AC                            l2507 104C  
                          l2259 1606                            l2291 1752                            l2283 16E2  
                          l2275 168E                            l2267 1658                            l2099 18BC  
                          l2419 0AC8                            l2371 088A                            l2363 0830  
                          l2451 0BC6                            l2443 0B8E                            l2435 0B70  
                          l2427 0B04                            l2611 0F12                            l2603 0EA6  
                          l3155 145E                            l3147 142C                            l3163 14AA  
                          l3139 13D2                            l3069 1854                            l3077 1E42  
                          l3085 1E72                            l3093 1AFA                            l2189 1DA6  
                          l2349 2410                            l2357 242A                            l2541 1164  
                          l2533 1126                            l2525 10F8                            l2517 10B8  
                          l2701 1EF2                            l2293 1764                            l2285 16F6  
                          l2277 169C                            l2269 165C                            l2381 08E6  
                          l2373 08A4                            l2365 0858                            l2461 0C38  
                          l2445 0BAA                            l2437 0B78                            l2429 0B1E  
                          l2621 0FBC                            l2613 0F4E                            l2605 0ECA  
                          l3165 14C2                            l3157 146A                            l3079 1E4E  
                          l3095 1B02                            l2199 1DB8                            l2359 2432  
                          l2711 1D20                            l2551 11AC                            l2543 1176  
                          l2535 1138                            l2527 110A                            l2519 10CE  
                          l2703 1F06                            l2287 1704                            l2295 176A  
                          l2279 16BC                            l2391 0984                            l2383 08EE  
                          l2375 08C0                            l2367 0878                            l2471 0CCE  
                          l2463 0C48                            l2447 0BBA                            l2439 0B80  
                          l2623 0FD0                            l2607 0EEE                            l3167 14C4  
                          l3159 1470                            l3097 1B6C                            l2721 1D54  
                          l2713 1D32                            l2561 1238                            l2553 11BE  
                          l2545 1190                            l2537 1146                            l2529 1114  
                          l2297 177A                            l2289 1732                            l2393 098A  
                          l2385 08F6                            l2377 08D2                            l2369 0888  
                          l2481 0D46                            l2473 0CEC                            l2465 0C4E  
                          l2457 0BF2                            l2609 0F04                            l2617 0F8A  
                          l2633 0FF6                            l2731 1C60                            l3099 1B6E  
                          l2723 1D5E                            l2715 1D36                            l2707 1D04  
                          l2571 1280                            l2563 1248                            l2555 11D0  
                          l2547 1194                            l2539 115A                            l2651 1BAC  
                          l2299 179A                            l2387 08FC                            l2395 09EE  
                          l2379 08E0                            l2483 0D56                            l2475 0D06  
                          l2467 0C54                            l2459 0C24                            l2635 101A  
                          l2619 0FAE                            l2627 0FDC                            l2741 1CA8  
                          l2733 1C70                            l2725 1D60                            l2717 1D38  
                          l2709 1D18                            l2573 1284                            l2565 124C  
                          l2557 11E0                            l2549 11A8                            l2661 1BE0  
                          l2653 1BB0                            l2397 0A08                            l2389 097E  
                          l2485 0D6C                            l2477 0D20                            l2469 0CB2  
                          l2629 0FEA                            l2751 1CEC                            l2743 1CB2  
                          l2735 1C86                            l2727 1D70                            l2719 1D4A  
                          l2575 12A0                            l2567 125C                            l2559 1224  
                          l2671 1C18                            l2663 1C04                            l2655 1BBA  
                          l2831 23D2                            l2399 0A26                            l2479 0D40  
                          l2591 0DDA                            l2745 1CD0                            l2737 1C8E  
                          l2729 1D7E                            l2569 126C                            l2577 12B4  
                          l2825 2452                            l2673 1C28                            l2665 1C14  
                          l2657 1BC6                            l2833 23DE                            l2761 246E  
                          l2593 0DDE                            l2585 0D96                            l2753 1F0E  
                          l2841 2080                            l2747 1CE0                            l2739 1C9A  
                          l2763 2028                            l2691 2462                            l2683 2358  
                          l2675 1C2A                            l2659 1BD6                            l2595 0E02  
                          l2587 0DBA                            l2755 1F16                            l2843 2092  
                          l2749 1CE2                            l2765 2030                            l2861 201C  
                          l2853 1FD0                            l2685 2370                            l2693 1EA8  
                          l2677 1C3A                            l2597 0E26                            l2589 0DC8  
                          l2757 1F24                            l2845 209A                            ?_pad 0011  
                          l2767 207A                            l2855 1FD8                            l2687 237A  
                          l2695 1EB2                            l2679 1C58                            l2599 0E6E  
                          l2759 1F4A                            l2847 20A2                            l2857 1FF0  
                          l2689 2440                            l2697 1EBE                            l2849 20BE  
                          l2859 1FFA                            l2795 1F70                            l2699 1EE2  
                          l2797 1F86               ?_LCD_Write_Nibble 0001                            STR_1 0801  
                          STR_2 080C                            STR_3 080C                            STR_4 0809  
                          u2000 0BF2                            u2001 0BEE                            u2010 0C24  
                          u2011 0C20                            u2100 110A                            u2020 0C8C  
                          u2101 1106                            u2110 1138                            u2030 0CCE  
                          u2111 1134                            u2031 0CCA                            u2200 125C  
                          u2120 1146                            u1400 2254                            u2040 0CEC  
                          u2201 1258                            u2121 1142                            u2041 0CE8  
                          u2025 0C7A                            u2210 12A0                            u2130 115A  
                          u1330 18BC                            u2050 0D06                            u2211 129C  
                          u2131 1156                            u1331 18B8                            u2051 0D02  
                          u1500 1ACC                            u2140 1176                            u2300 1C14  
                          u1340 18CE                            u2060 0D20                            u2220 0DBA  
                          u1501 1AC4                            u2141 1172                            u2301 1C10  
                          u1341 18CA                            u2061 0D1C                            u2221 0DB6  
                          u1510 1AEC                            u2150 1190                            u2310 1C3A  
                          u1350 18F6                            u2070 0D30                            u2230 0E02  
                          u1511 1AE8                            u2151 118C                            u2311 1C36  
                          u1351 18F2                            u2071 0D2C                            u2231 0DFE  
                          u2400 1CD0                            u1520 1DCA                            u2160 11A8  
                          u2320 1C58                            u1360 192C                            u2080 0D40  
                          u2240 0E26                            u2401 1CCC                            u1521 1DC2  
                          u2161 11A4                            u2321 1C54                            u1601 153E  
                          u1361 1928                            u2081 0D3C                            u2241 0E22  
                          u2170 11BE                            u2090 10EE                            u2330 1EF2  
                          u1610 1562                            u1370 22F2                            u2250 0ECA  
                          u2410 1F66                            u2171 11BA                            u2091 10EA  
                          u2331 1EEE                            u1611 155E                            u1371 22EE  
                          u2251 0EC6                            u2411 1F62                            u1508 1ACE  
                          u1540 1DF4                            u2180 11E0                            u2340 1F06  
                          u1620 158C                            u1700 177A                            u1380 21A4  
                          u2260 0EEE                            u1541 1DF0                            u2181 11DC  
                          u2341 1F02                            u1621 1588                            u1701 1776  
                          u1381 21A0                            u2261 0EEA                            u1470 1A78  
                          u1550 1E0A                            u2350 1D4A                            u2190 1248  
                          u1630 15CC                            u1710 1984                            u1390 2252  
                          u2270 0FAE                            u1471 1A70                            u1551 1E02  
                          u2351 1D46                            u2191 1244                            u1631 15C8  
                          u1711 1980                            u1391 224C                            u2271 0FAA  
                          u2600 210C                            u2360 1D70                            u1640 1616  
                          u1720 19A6                            u1800 214C                            u2425 2052  
                          u2601 2108                            u2361 1D6C                            u1641 1612  
                          u1721 19A2                            u1801 2148                            u2530 23B8  
                          u2610 1B2E                            u1490 1AAA                            u1570 1E34  
                          u1538 1DCC                            u2370 1D7E                            u1650 166A  
                          u1730 19FC                            u1810 0840                            u2531 23B4  
                          u1491 1AA6                            u1571 1E30                            u2371 1D7A  
                          u1651 1666                            u1731 19F8                            u1811 083A  
                          u2380 1C86                            u2540 23CE                            u2620 1B60  
                          u1580 14E2                            u1660 169C                            u1740 1A0C  
                          u1900 0A40                            u1820 0842                            u2381 1C82  
                          u2541 23CA                            u1581 14DE                            u1661 1698  
                          u1741 1A08                            u1901 0A3C                            u2390 1CA8  
                          u2550 2390                            u2630 1B9A                            u1590 1514  
                          u1670 16DA                            u1750 21C0                            u1910 0A5A  
                          u1830 0858                            u2391 1CA4                            u2551 238C  
                          u1591 1510                            u1671 16D6                            u1751 21BC  
                          u1911 0A56                            u1831 0854                            u2560 23A6  
                          u2640 1BAA                            u1488 1A7A                            u1568 1E0C  
                          u1680 1704                            u1920 0A6A                            u1840 0888  
                          u1760 228A                            u2561 23A2                            u2641 1BA6  
                          u2617 1B24                            u1681 1700                            u1921 0A66  
                          u1841 0884                            u1761 2284                            u2570 233C  
                          u1690 1732                            u1930 0A7C                            u1850 08A4  
                          u1770 228C                            u2650 1370                            u2571 2338  
                          u2627 1B56                            u1691 172E                            u1931 0A78  
                          u1851 08A0                            u2707 1498                            u2651 136C  
                          u2580 2352                            u1940 0A8C                            u1860 08D2  
                          u1780 221A                            u2660 142C                            u2581 234E  
                          u2637 1B90                            u1941 0A88                            u1861 08CE  
                          u1781 2214                            u2717 14B4                            u2661 1428  
                          u2590 20FA                            u1950 0AA4                            u1870 08E0  
                          u1790 221C                            u2670 148C                            u2591 20F6  
                          u2807 189A                            u2727 17D2                            u1951 0AA0  
                          u1871 08DC                            u2671 1488                            u1880 0A08  
                          u1960 0B02                            u2817 2112                            u2737 17EC  
                          u1881 0A04                            u1961 0AFE                            u1890 0A26  
                          u1970 0B1E                            u2827 22C4                            u2747 1800  
                          u1891 0A22                            u1971 0B1A                            u1980 0B48  
                          u2757 1814                            u1981 0B44                            u1990 0BAA  
                          u2767 1828                            u1991 0BA6                            u2687 12E8  
                          u2777 1840                            u2697 1316                            u2787 185E  
                          _RCEN 007E2B                            u2797 187C                            _RSEN 007E29  
            ??_LCD_Write_Nibble 0004                            abs@a 0013                            _dbuf 006B  
                          _main 12BC                            _dtoa 0810                            _prec 0064  
                          _temp 008B           MFRC522_AntiColl@unLen 0024                            _nout 0060  
                          pad@i 0018                            pad@p 0015                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                          _xtoa 0AF2                            prodh 000FF4                            prodl 000FF3  
                          start 0000                _MFRC522_AntiColl 1BAC                     LCD_Goto@col 000A  
                   LCD_Goto@row 0007                    ___param_bank 000000                 ??_MFRC522_Reset 0006  
                         ??_abs 0015                           ??_pad 0017                __end_of_LCD_Goto 1EA6  
               __end_of___aodiv 1658                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 17BC                           _ACKEN 007E2C                           _ACKDT 007E2D  
       ?_MFRC522_ReadCardSerial 0028                 __end_of___lldiv 1D04                           ?_xtoa 001C  
                         _LATB7 007C57                    vfpfcnvrt@fmt 0042                    vfpfcnvrt@llu 0052  
                         _flags 0066                           _fputc 18AA                 __end_of_isalpha 2222  
                         _fputs 2162          MFRC522_AntiColl@serNum 0020                           pad@fp 0011  
                         _width 0062                           _putch 2474                           main@i 00D7  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
               __end_of_islower 225A                 __end_of_isupper 2292                           tablat 000FF5  
             _MFRC522_Clear_Bit 240E                           status 000FD8                 __end_of_sprintf 20D2  
                         xtoa@c 003D                           xtoa@d 001E                           xtoa@i 003B  
                         xtoa@n 0033                           xtoa@p 002F                           xtoa@w 0031  
                         xtoa@x 0026              ?_MFRC522_Clear_Bit 000A                 __end_of_toupper 2162  
             _MFRC522_AntennaOn 2440                 __initialization 2300                    __end_of_main 14D0  
                  __end_of_dtoa 0AF2              ?_MFRC522_AntennaOn 0001             ??_MFRC522_Clear_Bit 000B  
                  __end_of_xtoa 0D96                ??_MFRC522_IsCard 0028       MFRC522_ReadCardSerial@str 0028  
__end_of_MFRC522_ReadCardSerial 23F0                ??_MFRC522_ToCard 0014                          ??_main 005D  
                        ??_dtoa 0026             ??_MFRC522_AntennaOn 000D               __end_of_LCD_Begin 18AA  
                        ??_xtoa 0027                   __activetblptr 000002                       ??_LCD_Cmd 0005  
               MFRC522_ToCard@i 001D                 MFRC522_ToCard@n 001F           MFRC522_ToCard@backLen 0012  
             __end_of_LCD_Print 1BAC              MFRC522_Rd@ucResult 0006                 MFRC522_Wr@value 0001  
     __end_of_MFRC522_Clear_Bit 2428           MFRC522_ToCard@_status 0019           MFRC522_ToCard@command 001C  
                        ?_fputc 0001                          ?_fputs 000A                          ?_putch 0001  
         MFRC522_ToCard@sendLen 000F           MFRC522_ToCard@waitIRq 0018                          _SSPADD 000FC8  
                        _TRISB7 007C9F                          _SSPBUF 000FC9       __end_of_MFRC522_AntennaOn 2452  
                  vfprintf@cfmt 005B                       ??___aodiv 0011                       ??___aomod 0011  
          __end_of_MFRC522_Halt 2028            __end_of_MFRC522_Init 1FD0         MFRC522_AntiColl@_status 0026  
                     ??___lldiv 0009                          clear_0 231C                          isa$std 000001  
                        pad@buf 0013                          _status 006A                          dtoa@fp 001C  
                        _strlen 22CA                          fputc@c 0001                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                       ??_isalpha 0003  
                     ??_islower 0003                    __mediumconst 0000                          tblptrh 000FF7  
                     ??_isupper 0003                          tblptrl 000FF6                          tblptru 000FF8  
                        putch@c 0001                __end_of_vfprintf 1F70                       ??_sprintf 005D  
                        xtoa@fp 001C                       ??_toupper 0009                      __accesstop 0060  
       __end_of__initialization 2322                       ?_LCD_Goto 0007                   ___rparam_used 000001  
        MFRC522_Request@TagType 0020                    ??_MFRC522_Rd 0001                    ??_MFRC522_Wr 0002  
            _MFRC522_AntennaOff 2462         I2CLCD_Init@i2c_clk_freq 000E                   _backlight_val 00DB  
                __pcstackCOMRAM 0001                    __pidataBANK0 2476                   ??_I2CLCD_Init 0012  
                 ??_I2CLCD_Stop 0001             ?_MFRC522_AntennaOff 0001                   __end_of_fputc 1974  
                 __end_of_fputs 21A6                  LCD_Cmd@Command 0006                   __end_of_putch 2476  
              MFRC522_Halt@buff 0020          MFRC522_Request@_status 0023                MFRC522_Rd@ucAddr 0004  
        MFRC522_Request@reqMode 0022        __end_of_MFRC522_AntiColl 1C60               ??_MFRC522_Set_Bit 000B  
            __end_of_MFRC522_Rd 1AF6              __end_of_MFRC522_Wr 1E3C               ??_MFRC522_Request 0022  
                       ??_fputc 0005                         ??_fputs 000E            ??_MFRC522_AntennaOff 000D  
                       ??_putch 0001                      __pbssBANK0 0060                      ??_LCD_Goto 0008  
        MFRC522_ToCard@backData 0010               MFRC522_CRC@dataIn 000D              MFRC522_Set_Bit@tmp 000B  
             MFRC522_CRC@length 000F                MFRC522_Wr@ucAddr 0004          MFRC522_ToCard@lastBits 001A  
                       ?_strlen 0001             __end_of_I2CLCD_Init 2080                         _LCD_Cmd 20D2  
           __end_of_I2CLCD_Stop 23AA          MFRC522_ToCard@sendData 000D                         _SSPCON1 000FC6  
                       _SSPCON2 000FC5                         _SSPSTAT 000FC7                         _TagType 00BB  
                       __Hparam 0000                         __Lparam 0000            MFRC522_Clear_Bit@tmp 000B  
           Expander_Write@value 0003            I2CLCD_Write@i2c_data 0002                         ___aodiv 14D0  
                       ___aomod 1658                         ___lldiv 1C60                       ?_vfprintf 00BC  
                  __psmallconst 0800                         __pcinit 2300           __end_of_MFRC522_Reset 2382  
                       __ramtop 0800                         __ptext0 12BC                         __ptext1 2080  
                       __ptext2 1F0E                         __ptext3 0D96                         __ptext4 0AF2  
                       __ptext5 211E                         __ptext6 2222                         __ptext7 225A  
                       __ptext8 21E6                         __ptext9 0810                  _Expander_Write 23F0  
                       _isalpha 21E6                         _islower 2222                         _isupper 225A  
                     _LCD_Begin 17BC                       _LCD_Print 1AF6                         _sprintf 2080  
                  _MFRC522_Halt 1FD0                    _MFRC522_Init 1F70                         _toupper 211E  
          end_of_initialization 2322                         fputc@fp 0003                   __Lmediumconst 0000  
                       fputs@fp 000C                 ___lldiv@divisor 0005                 ___lldiv@counter 000D  
             __end_of_port_Init 2474               __end_of_vfpfcnvrt 102E                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                   _I2CLCD_Init 2028                      ??_vfprintf 005B                     _I2CLCD_Stop 2382  
             LCD_Write_Nibble@n 0004                         strlen@a 0003                         strlen@s 0001  
        __end_of_Expander_Write 240E                   ?_I2CLCD_Start 0001                       _PORTDbits 000F83  
                 ?_I2CLCD_Write 0001                       _TRISAbits 000F92                       _TRISDbits 000F95  
                    ?_LCD_Begin 0001                      ?_LCD_Print 0005                   ??_MFRC522_CRC 0012  
              _LCD_Write_Nibble 2292                      LCD_Print@i 000A                 _MFRC522_Set_Bit 2428  
       MFRC522_Request@backBits 0024             MFRC522_ToCard@irqEn 001B                     vfpfcnvrt@ap 0044  
                   vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 004A                 _MFRC522_Request 1EA6  
                ??_I2CLCD_Start 0001                  ??_I2CLCD_Write 0001                 ?_Expander_Write 0001  
                 __pbitbssBANK0 06D0                  __end_of_strlen 2300             start_initialization 2300  
             MFRC522_Halt@unLen 0024               ?_MFRC522_AntiColl 0020               MFRC522_Rd@address 0003  
             MFRC522_AntiColl@i 0027                     __end_of_abs 21E6                     __end_of_pad 1A3A  
            ??_MFRC522_AntiColl 0022        ??_MFRC522_ReadCardSerial 002A                     vfprintf@fmt 00BE  
           __end_of_MFRC522_CRC 1DA4                     __pdataBANK0 00DB                        ??_strlen 0003  
                      ?_LCD_Cmd 0001                   __pcstackBANK0 00BC                ___aodiv@dividend 0001  
                   ??_LCD_Begin 0007                     _data_buffer 00AB                     ??_LCD_Print 0007  
                     __pnvBANK0 00D9         __end_of_MFRC522_Set_Bit 2440                       _main$1375 00D5  
            MFRC522_CRC@dataOut 0010         __end_of_MFRC522_Request 1F0E                       _dtoa$1015 002E  
           MFRC522_Set_Bit@addr 000C               MFRC522_Wr@address 0003             MFRC522_Set_Bit@mask 000A  
                      ?___aodiv 0001                        ?___aomod 0001                ___aodiv@quotient 0013  
                      ?___lldiv 0001                LCD_Print@LCD_Str 0005                     __smallconst 0800  
                      ?_isalpha 0001                        ?_islower 0001                        ?_isupper 0001  
                      ?_sprintf 00C2                        ?_toupper 0007            __end_of_I2CLCD_Start 23D2  
                      _LCD_Goto 1E3C                     _MFRC522_CRC 1D04            __end_of_I2CLCD_Write 2358  
                      _LATAbits 000F89                        _LATDbits 000F8C                    ?_I2CLCD_Init 000E  
                  ?_I2CLCD_Stop 0001                       _port_Init 246E                       _vfpfcnvrt 0D96  
                _MFRC522_IsCard 2452                  _MFRC522_ToCard 102E                      vfpfcnvrt@c 005A  
      __end_of_LCD_Write_Nibble 22CA                        _i2c_addr 00D9                ?_MFRC522_Set_Bit 000A  
                      __Hrparam 0000           MFRC522_Clear_Bit@addr 000C                ?_MFRC522_Request 0020  
         MFRC522_Clear_Bit@mask 000A                      vfprintf@ap 00C0                        __Lrparam 0000  
                    vfprintf@fp 00BC                ??_Expander_Write 0003                      ?_port_Init 0001  
                    ?_vfpfcnvrt 0040                 ___aodiv@divisor 0009                 ___aodiv@counter 0011  
        __end_of_MFRC522_IsCard 2462                      sprintf@fmt 00C4          __end_of_MFRC522_ToCard 12BC  
        _MFRC522_ReadCardSerial 23D2                        __ptext10 1974                        __ptext11 22CA  
                      __ptext20 1BAC                        __ptext12 2162                        __ptext21 2452  
                      __ptext13 18AA                        __ptext30 2428                        __ptext22 1EA6  
                      __ptext14 2474                        __ptext31 240E                        __ptext23 1F70  
                      __ptext15 21A6                        __ptext40 232C                        __ptext32 1DA4  
                      __ptext24 2358                        __ptext16 1658                        __ptext41 2382  
                      __ptext33 1A3A                        __ptext25 2440                        __ptext17 14D0  
                      __ptext42 23AA                        __ptext34 1AF6                        __ptext26 2462  
                      __ptext18 246E                        __ptext43 2028                        __ptext35 1E3C  
                      __ptext27 1FD0                        __ptext19 23D2                        __ptext44 1C60  
                      __ptext36 17BC                        __ptext28 102E                        __ptext37 20D2  
                      __ptext29 1D04                        __ptext38 2292                        __ptext39 23F0  
   MFRC522_AntiColl@serNumCheck 0023                      _MFRC522_Rd 1A3A                      _MFRC522_Wr 1DA4  
                      isa$xinst 000000                        _vfprintf 1F0E                   _MFRC522_Reset 2358  
              ___aomod@dividend 0001                 ?_MFRC522_IsCard 0026                 ?_MFRC522_ToCard 000D  
                      isalpha@c 0001              LCD_Begin@_i2c_addr 0009                       sprintf@ap 00C8  
                      islower@c 0001                ___lldiv@dividend 0001                        isupper@c 0001  
         MFRC522_IsCard@TagType 0026                     ??_port_Init 0001                 ___aomod@divisor 0009  
                   ??_vfpfcnvrt 0046                 ___aomod@counter 0011                  ?_MFRC522_Reset 0001  
                  _I2CLCD_Start 23AA                    _I2CLCD_Write 232C                        sprintf@f 00CA  
                      sprintf@s 00C2                ___lldiv@quotient 0009                        toupper@c 0007  
    __end_of_MFRC522_AntennaOff 246E                   ?_MFRC522_Halt 0001                   ?_MFRC522_Init 0001  
                  ___aodiv@sign 0012                    ?_MFRC522_CRC 000D                     ?_MFRC522_Rd 0001  
                   ?_MFRC522_Wr 0001                    ___aomod@sign 0012  
