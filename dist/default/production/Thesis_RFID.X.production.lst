

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar 30 08:44:26 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    93  0000                     
    94                           ; Version 2.40
    95                           ; Generated 17/11/2021 GMT
    96                           ; 
    97                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F4550 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	idataBANK0
   131  00395E                     __pidataBANK0:
   132                           	callstack 0
   133                           
   134                           ;initializer for _backlight_val
   135  00395E  08                 	db	8
   136                           
   137                           	psect	idataBANK1
   138  0038BE                     __pidataBANK1:
   139                           	callstack 0
   140                           
   141                           ;initializer for _data
   142  0038BE  68                 	db	104
   143  0038BF  65                 	db	101
   144  0038C0  6C                 	db	108
   145  0038C1  6C                 	db	108
   146  0038C2  6F                 	db	111
   147  0038C3  00                 	db	0
   148  0038C4  00                 	db	0
   149  0038C5  00                 	db	0
   150  0038C6  00                 	db	0
   151  0038C7  00                 	db	0
   152  0038C8  00                 	db	0
   153  0038C9  00                 	db	0
   154  0038CA  00                 	db	0
   155  0038CB  00                 	db	0
   156  0038CC  00                 	db	0
   157  0038CD  00                 	db	0
   158  0038CE  00                 	db	0
   159  0038CF  00                 	db	0
   160  0038D0  00                 	db	0
   161  0038D1  00                 	db	0
   162  0000                     _SSPSTAT	set	4039
   163  0000                     _SSPADD	set	4040
   164  0000                     _RCREG	set	4014
   165  0000                     _TXREG	set	4013
   166                           
   167                           	psect	nvBANK0
   168  0000F2                     __pnvBANK0:
   169                           	callstack 0
   170  0000F2                     _i2c_addr:
   171                           	callstack 0
   172  0000F2                     	ds	1
   173  0000                     _RCSTAbits	set	4011
   174  0000                     _ACKEN	set	32300
   175  0000                     _ACKDT	set	32301
   176  0000                     _RCEN	set	32299
   177  0000                     _RSEN	set	32297
   178  0000                     _PEN	set	32298
   179  0000                     _SEN	set	32296
   180  0000                     _CREN	set	32092
   181  0000                     _RCIF	set	31989
   182  0000                     _TRISC7	set	31911
   183  0000                     _PORTDbits	set	3971
   184  0000                     _LATAbits	set	3977
   185  0000                     _LATDbits	set	3980
   186  0000                     _TRISC6	set	31910
   187  0000                     _TRISDbits	set	3989
   188  0000                     _PIE1bits	set	3997
   189  0000                     _RCSTA	set	4011
   190  0000                     _TXSTA	set	4012
   191  0000                     _SPBRG	set	4015
   192  0000                     _SSPCON2	set	4037
   193  0000                     _SSPCON1	set	4038
   194  0000                     _INTCONbits	set	4082
   195  0000                     _TXIF	set	31988
   196  0000                     _SSPBUF	set	4041
   197  0000                     _TRISAbits	set	3986
   198                           
   199                           	psect	smallconst
   200  000800                     __psmallconst:
   201                           	callstack 0
   202  000800  00                 	db	0
   203  000801                     STR_3:
   204  000801  50                 	db	80	;'P'
   205  000802  6F                 	db	111	;'o'
   206  000803  73                 	db	115	;'s'
   207  000804  31                 	db	49	;'1'
   208  000805  00                 	db	0
   209  000806                     STR_6:
   210  000806  50                 	db	80	;'P'
   211  000807  6F                 	db	111	;'o'
   212  000808  73                 	db	115	;'s'
   213  000809  32                 	db	50	;'2'
   214  00080A  00                 	db	0
   215  00080B                     STR_9:
   216  00080B  50                 	db	80	;'P'
   217  00080C  6F                 	db	111	;'o'
   218  00080D  73                 	db	115	;'s'
   219  00080E  33                 	db	51	;'3'
   220  00080F  00                 	db	0
   221  000810                     STR_1:
   222  000810  50                 	db	80	;'P'
   223  000811  31                 	db	49	;'1'
   224  000812  00                 	db	0
   225  000813                     STR_4:
   226  000813  50                 	db	80	;'P'
   227  000814  32                 	db	50	;'2'
   228  000815  00                 	db	0
   229  000816                     STR_7:
   230  000816  50                 	db	80	;'P'
   231  000817  33                 	db	51	;'3'
   232  000818  00                 	db	0
   233  000819                     STR_2:
   234  000819  25                 	db	37
   235  00081A  58                 	db	88	;'X'
   236  00081B  00                 	db	0
   237  00081C  00                 	db	0	; dummy byte at the end
   238  0000                     
   239                           ; #config settings
   240                           
   241                           	psect	cinit
   242  003324                     __pcinit:
   243                           	callstack 0
   244  003324                     start_initialization:
   245                           	callstack 0
   246  003324                     __initialization:
   247                           	callstack 0
   248                           
   249                           ; Initialize objects allocated to BANK1 (20 bytes)
   250                           ; load TBLPTR registers with __pidataBANK1
   251  003324  0EBE               	movlw	low __pidataBANK1
   252  003326  6EF6               	movwf	tblptrl,c
   253  003328  0E38               	movlw	high __pidataBANK1
   254  00332A  6EF7               	movwf	tblptrh,c
   255  00332C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   256  00332E  6EF8               	movwf	tblptru,c
   257  003330  EE01  F014         	lfsr	0,__pdataBANK1
   258  003334  EE10 F014          	lfsr	1,20
   259  003338                     copy_data0:
   260  003338  0009               	tblrd		*+
   261  00333A  CFF5 FFEE          	movff	tablat,postinc0
   262  00333E  50E5               	movf	postdec1,w,c
   263  003340  50E1               	movf	fsr1l,w,c
   264  003342  E1FA               	bnz	copy_data0
   265                           
   266                           ; Initialize objects allocated to BANK0 (1 bytes)
   267                           ; load TBLPTR registers with __pidataBANK0
   268  003344  0E5E               	movlw	low __pidataBANK0
   269  003346  6EF6               	movwf	tblptrl,c
   270  003348  0E39               	movlw	high __pidataBANK0
   271  00334A  6EF7               	movwf	tblptrh,c
   272  00334C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   273  00334E  6EF8               	movwf	tblptru,c
   274  003350  0009               	tblrd		*+	;fetch initializer
   275  003352  CFF5 F0F4          	movff	tablat,__pdataBANK0
   276                           
   277                           ; Clear objects allocated to BANK1 (20 bytes)
   278  003356  EE01  F000         	lfsr	0,__pbssBANK1
   279  00335A  0E14               	movlw	20
   280  00335C                     clear_0:
   281  00335C  6AEE               	clrf	postinc0,c
   282  00335E  06E8               	decf	wreg,f,c
   283  003360  E1FD               	bnz	clear_0
   284                           
   285                           ; Clear objects allocated to BITBANK0 (1 bytes)
   286  003362  0100               	movlb	0
   287  003364  6BF3               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
   288                           
   289                           ; Clear objects allocated to BANK0 (128 bytes)
   290  003366  EE00  F060         	lfsr	0,__pbssBANK0
   291  00336A  0E80               	movlw	128
   292  00336C                     clear_1:
   293  00336C  6AEE               	clrf	postinc0,c
   294  00336E  06E8               	decf	wreg,f,c
   295  003370  E1FD               	bnz	clear_1
   296  003372                     end_of_initialization:
   297                           	callstack 0
   298  003372                     __end_of__initialization:
   299                           	callstack 0
   300  003372  0E00               	movlw	low (__Lmediumconst shr (0+16))
   301  003374  6EF8               	movwf	tblptru,c
   302  003376  0100               	movlb	0
   303  003378  EF3C  F008         	goto	_main	;jump to C main() function
   304                           
   305                           	psect	bitbssBANK0
   306  000798                     __pbitbssBANK0:
   307                           	callstack 0
   308  000798                     _RS:
   309                           	callstack 0
   310  000798                     	ds	1
   311                           
   312                           	psect	bssBANK0
   313  000060                     __pbssBANK0:
   314                           	callstack 0
   315  000060                     _nout:
   316                           	callstack 0
   317  000060                     	ds	2
   318  000062                     _width:
   319                           	callstack 0
   320  000062                     	ds	2
   321  000064                     _prec:
   322                           	callstack 0
   323  000064                     	ds	2
   324  000066                     _flags:
   325                           	callstack 0
   326  000066                     	ds	2
   327  000068                     _TagType4:
   328                           	callstack 0
   329  000068                     	ds	1
   330  000069                     _status_4:
   331                           	callstack 0
   332  000069                     	ds	1
   333  00006A                     _status_3:
   334                           	callstack 0
   335  00006A                     	ds	1
   336  00006B                     _status_2:
   337                           	callstack 0
   338  00006B                     	ds	1
   339  00006C                     _status_1:
   340                           	callstack 0
   341  00006C                     	ds	1
   342  00006D                     _dbuf:
   343                           	callstack 0
   344  00006D                     	ds	32
   345  00008D                     _UID_3:
   346                           	callstack 0
   347  00008D                     	ds	20
   348  0000A1                     _UID_2:
   349                           	callstack 0
   350  0000A1                     	ds	20
   351  0000B5                     _UID_1:
   352                           	callstack 0
   353  0000B5                     	ds	20
   354  0000C9                     _data_buffer:
   355                           	callstack 0
   356  0000C9                     	ds	20
   357  0000DD                     _TagType3:
   358                           	callstack 0
   359  0000DD                     	ds	1
   360  0000DE                     _TagType2:
   361                           	callstack 0
   362  0000DE                     	ds	1
   363  0000DF                     _TagType1:
   364                           	callstack 0
   365  0000DF                     	ds	1
   366                           
   367                           	psect	dataBANK0
   368  0000F4                     __pdataBANK0:
   369                           	callstack 0
   370  0000F4                     _backlight_val:
   371                           	callstack 0
   372  0000F4                     	ds	1
   373                           
   374                           	psect	bssBANK1
   375  000100                     __pbssBANK1:
   376                           	callstack 0
   377  000100                     _UID_4:
   378                           	callstack 0
   379  000100                     	ds	20
   380                           
   381                           	psect	dataBANK1
   382  000114                     __pdataBANK1:
   383                           	callstack 0
   384  000114                     _data:
   385                           	callstack 0
   386  000114                     	ds	20
   387                           
   388                           	psect	cstackBANK0
   389  0000E0                     __pcstackBANK0:
   390                           	callstack 0
   391  0000E0                     sprintf@ap:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x0
   395  0000E0                     	ds	2
   396  0000E2                     sprintf@f:
   397                           	callstack 0
   398                           
   399                           ; 11 bytes @ 0x2
   400  0000E2                     	ds	11
   401  0000ED                     ??_main:
   402                           
   403                           ; 1 bytes @ 0xD
   404  0000ED                     	ds	2
   405  0000EF                     main@i:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0xF
   409  0000EF                     	ds	1
   410  0000F0                     main@i_316:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x10
   414  0000F0                     	ds	1
   415  0000F1                     main@i_320:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x11
   419  0000F1                     	ds	1
   420                           
   421                           	psect	cstackCOMRAM
   422  000001                     __pcstackCOMRAM:
   423                           	callstack 0
   424  000001                     ??_I2CLCD_Start:
   425  000001                     ??_I2CLCD_Stop:
   426  000001                     ??_I2CLCD_Write:
   427  000001                     ??_MFRC522_Rd:
   428  000001                     ??_MFRC522_Rd2:
   429  000001                     ??_MFRC522_Rd3:
   430  000001                     ?_strlen:
   431                           	callstack 0
   432  000001                     ?_isupper:
   433                           	callstack 0
   434  000001                     ?_isalpha:
   435                           	callstack 0
   436  000001                     ?_islower:
   437                           	callstack 0
   438  000001                     ?___lldiv:
   439                           	callstack 0
   440  000001                     ?___fltol:
   441                           	callstack 0
   442  000001                     ?___xxtofl:
   443                           	callstack 0
   444  000001                     MFRC522_Wr@value:
   445                           	callstack 0
   446  000001                     MFRC522_Wr2@value:
   447                           	callstack 0
   448  000001                     MFRC522_Wr3@value:
   449                           	callstack 0
   450  000001                     isalpha@c:
   451                           	callstack 0
   452  000001                     isupper@c:
   453                           	callstack 0
   454  000001                     fputc@c:
   455                           	callstack 0
   456  000001                     strlen@s:
   457                           	callstack 0
   458  000001                     islower@c:
   459                           	callstack 0
   460  000001                     ___lldiv@dividend:
   461                           	callstack 0
   462  000001                     ___fltol@f1:
   463                           	callstack 0
   464  000001                     ___xxtofl@val:
   465                           	callstack 0
   466                           
   467                           ; 4 bytes @ 0x0
   468  000001                     	ds	1
   469  000002                     ??_MFRC522_Wr:
   470  000002                     ??_MFRC522_Wr2:
   471  000002                     ??_MFRC522_Wr3:
   472  000002                     I2CLCD_Write@i2c_data:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x1
   476  000002                     	ds	1
   477  000003                     ??_isupper:
   478  000003                     ??_isalpha:
   479  000003                     ??_islower:
   480  000003                     Expander_Write@value:
   481                           	callstack 0
   482  000003                     MFRC522_Rd@address:
   483                           	callstack 0
   484  000003                     MFRC522_Rd2@address:
   485                           	callstack 0
   486  000003                     MFRC522_Rd3@address:
   487                           	callstack 0
   488  000003                     MFRC522_Wr@address:
   489                           	callstack 0
   490  000003                     MFRC522_Wr2@address:
   491                           	callstack 0
   492  000003                     MFRC522_Wr3@address:
   493                           	callstack 0
   494  000003                     fputc@fp:
   495                           	callstack 0
   496  000003                     strlen@a:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x2
   500  000003                     	ds	1
   501  000004                     LCD_Write_Nibble@n:
   502                           	callstack 0
   503  000004                     MFRC522_Wr@ucAddr:
   504                           	callstack 0
   505  000004                     MFRC522_Wr2@ucAddr:
   506                           	callstack 0
   507  000004                     MFRC522_Wr3@ucAddr:
   508                           	callstack 0
   509  000004                     MFRC522_Rd@ucAddr:
   510                           	callstack 0
   511  000004                     MFRC522_Rd2@ucAddr:
   512                           	callstack 0
   513  000004                     MFRC522_Rd3@ucAddr:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x3
   517  000004                     	ds	1
   518  000005                     ??_LCD_Cmd:
   519  000005                     ??_fputc:
   520  000005                     ??___fltol:
   521  000005                     ??___xxtofl:
   522  000005                     MFRC522_Wr@i:
   523                           	callstack 0
   524  000005                     MFRC522_Wr2@i:
   525                           	callstack 0
   526  000005                     MFRC522_Wr3@i:
   527                           	callstack 0
   528  000005                     USART_TxChar@out:
   529                           	callstack 0
   530  000005                     LCD_Print@LCD_Str:
   531                           	callstack 0
   532  000005                     ___lldiv@divisor:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x4
   536  000005                     	ds	1
   537  000006                     LCD_Cmd@Command:
   538                           	callstack 0
   539  000006                     MFRC522_Rd@ucResult:
   540                           	callstack 0
   541  000006                     MFRC522_Rd2@ucResult:
   542                           	callstack 0
   543  000006                     MFRC522_Rd3@ucResult:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x5
   547  000006                     	ds	1
   548  000007                     ??_LCD_Begin:
   549  000007                     ??_USART_TxChar:
   550  000007                     ??_LCD_Print:
   551  000007                     ?_toupper:
   552                           	callstack 0
   553  000007                     LCD_Goto@row:
   554                           	callstack 0
   555  000007                     toupper@c:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x6
   559  000007                     	ds	1
   560  000008                     ??_LCD_Goto:
   561  000008                     MFRC522_Rd@i:
   562                           	callstack 0
   563  000008                     MFRC522_Rd2@i:
   564                           	callstack 0
   565  000008                     MFRC522_Rd3@i:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x7
   569  000008                     	ds	1
   570  000009                     ??_toupper:
   571  000009                     USART_TxChar@i:
   572                           	callstack 0
   573  000009                     LCD_Begin@_i2c_addr:
   574                           	callstack 0
   575  000009                     ___fltol@sign1:
   576                           	callstack 0
   577  000009                     ___xxtofl@sign:
   578                           	callstack 0
   579  000009                     ___lldiv@quotient:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x8
   583  000009                     	ds	1
   584  00000A                     LCD_Goto@col:
   585                           	callstack 0
   586  00000A                     LCD_Print@i:
   587                           	callstack 0
   588  00000A                     MFRC522_Clear_Bit@mask:
   589                           	callstack 0
   590  00000A                     MFRC522_Clear_Bit2@mask:
   591                           	callstack 0
   592  00000A                     MFRC522_Clear_Bit3@mask:
   593                           	callstack 0
   594  00000A                     MFRC522_Set_Bit@mask:
   595                           	callstack 0
   596  00000A                     MFRC522_Set_Bit2@mask:
   597                           	callstack 0
   598  00000A                     MFRC522_Set_Bit3@mask:
   599                           	callstack 0
   600  00000A                     ___fltol@exp1:
   601                           	callstack 0
   602  00000A                     ___xxtofl@exp:
   603                           	callstack 0
   604  00000A                     fputs@s:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x9
   608  00000A                     	ds	1
   609  00000B                     MFRC522_Clear_Bit@tmp:
   610                           	callstack 0
   611  00000B                     MFRC522_Clear_Bit2@tmp:
   612                           	callstack 0
   613  00000B                     MFRC522_Clear_Bit3@tmp:
   614                           	callstack 0
   615  00000B                     MFRC522_Set_Bit@tmp:
   616                           	callstack 0
   617  00000B                     MFRC522_Set_Bit2@tmp:
   618                           	callstack 0
   619  00000B                     MFRC522_Set_Bit3@tmp:
   620                           	callstack 0
   621  00000B                     ___xxtofl@arg:
   622                           	callstack 0
   623                           
   624                           ; 4 bytes @ 0xA
   625  00000B                     	ds	1
   626  00000C                     MFRC522_Clear_Bit@addr:
   627                           	callstack 0
   628  00000C                     MFRC522_Clear_Bit2@addr:
   629                           	callstack 0
   630  00000C                     MFRC522_Clear_Bit3@addr:
   631                           	callstack 0
   632  00000C                     MFRC522_Set_Bit@addr:
   633                           	callstack 0
   634  00000C                     MFRC522_Set_Bit2@addr:
   635                           	callstack 0
   636  00000C                     MFRC522_Set_Bit3@addr:
   637                           	callstack 0
   638  00000C                     fputs@fp:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0xB
   642  00000C                     	ds	1
   643  00000D                     ___lldiv@counter:
   644                           	callstack 0
   645  00000D                     MFRC522_ToCard@sendData:
   646                           	callstack 0
   647  00000D                     MFRC522_ToCard2@sendData:
   648                           	callstack 0
   649  00000D                     MFRC522_ToCard3@sendData:
   650                           	callstack 0
   651  00000D                     MFRC522_CRC@dataIn:
   652                           	callstack 0
   653  00000D                     MFRC522_CRC2@dataIn:
   654                           	callstack 0
   655  00000D                     MFRC522_CRC3@dataIn:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0xC
   659  00000D                     	ds	1
   660  00000E                     fputs@c:
   661                           	callstack 0
   662  00000E                     I2CLCD_Init@i2c_clk_freq:
   663                           	callstack 0
   664                           
   665                           ; 4 bytes @ 0xD
   666  00000E                     	ds	1
   667  00000F                     ?___fldiv:
   668                           	callstack 0
   669  00000F                     MFRC522_ToCard@sendLen:
   670                           	callstack 0
   671  00000F                     MFRC522_ToCard2@sendLen:
   672                           	callstack 0
   673  00000F                     MFRC522_ToCard3@sendLen:
   674                           	callstack 0
   675  00000F                     MFRC522_CRC@length:
   676                           	callstack 0
   677  00000F                     MFRC522_CRC2@length:
   678                           	callstack 0
   679  00000F                     MFRC522_CRC3@length:
   680                           	callstack 0
   681  00000F                     fputs@i:
   682                           	callstack 0
   683  00000F                     ___fldiv@b:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0xE
   687  00000F                     	ds	1
   688  000010                     MFRC522_ToCard@backData:
   689                           	callstack 0
   690  000010                     MFRC522_ToCard2@backData:
   691                           	callstack 0
   692  000010                     MFRC522_ToCard3@backData:
   693                           	callstack 0
   694  000010                     MFRC522_CRC@dataOut:
   695                           	callstack 0
   696  000010                     MFRC522_CRC2@dataOut:
   697                           	callstack 0
   698  000010                     MFRC522_CRC3@dataOut:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0xF
   702  000010                     	ds	1
   703  000011                     ?_pad:
   704                           	callstack 0
   705  000011                     pad@fp:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x10
   709  000011                     	ds	1
   710  000012                     ??_I2CLCD_Init:
   711  000012                     MFRC522_CRC@n:
   712                           	callstack 0
   713  000012                     MFRC522_CRC2@n:
   714                           	callstack 0
   715  000012                     MFRC522_CRC3@n:
   716                           	callstack 0
   717  000012                     MFRC522_ToCard@backLen:
   718                           	callstack 0
   719  000012                     MFRC522_ToCard2@backLen:
   720                           	callstack 0
   721  000012                     MFRC522_ToCard3@backLen:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x11
   725  000012                     	ds	1
   726  000013                     MFRC522_CRC@i:
   727                           	callstack 0
   728  000013                     MFRC522_CRC2@i:
   729                           	callstack 0
   730  000013                     MFRC522_CRC3@i:
   731                           	callstack 0
   732  000013                     pad@buf:
   733                           	callstack 0
   734  000013                     ___fldiv@a:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0x12
   738  000013                     	ds	1
   739  000014                     ??_MFRC522_ToCard:
   740  000014                     ??_MFRC522_ToCard2:
   741  000014                     ??_MFRC522_ToCard3:
   742                           
   743                           ; 1 bytes @ 0x13
   744  000014                     	ds	1
   745  000015                     pad@p:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x14
   749  000015                     	ds	2
   750  000017                     ??___fldiv:
   751  000017                     ??_pad:
   752                           
   753                           ; 1 bytes @ 0x16
   754  000017                     	ds	1
   755  000018                     MFRC522_ToCard@waitIRq:
   756                           	callstack 0
   757  000018                     MFRC522_ToCard2@waitIRq:
   758                           	callstack 0
   759  000018                     MFRC522_ToCard3@waitIRq:
   760                           	callstack 0
   761  000018                     pad@i:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x17
   765  000018                     	ds	1
   766  000019                     MFRC522_ToCard@_status:
   767                           	callstack 0
   768  000019                     MFRC522_ToCard2@_status:
   769                           	callstack 0
   770  000019                     MFRC522_ToCard3@_status:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x18
   774  000019                     	ds	1
   775  00001A                     MFRC522_ToCard@lastBits:
   776                           	callstack 0
   777  00001A                     MFRC522_ToCard2@lastBits:
   778                           	callstack 0
   779  00001A                     MFRC522_ToCard3@lastBits:
   780                           	callstack 0
   781  00001A                     pad@w:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x19
   785  00001A                     	ds	1
   786  00001B                     MFRC522_ToCard@irqEn:
   787                           	callstack 0
   788  00001B                     MFRC522_ToCard2@irqEn:
   789                           	callstack 0
   790  00001B                     MFRC522_ToCard3@irqEn:
   791                           	callstack 0
   792  00001B                     ___fldiv@rem:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x1A
   796  00001B                     	ds	1
   797  00001C                     ?_xtoa:
   798                           	callstack 0
   799  00001C                     MFRC522_ToCard@command:
   800                           	callstack 0
   801  00001C                     MFRC522_ToCard2@command:
   802                           	callstack 0
   803  00001C                     MFRC522_ToCard3@command:
   804                           	callstack 0
   805  00001C                     xtoa@fp:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x1B
   809  00001C                     	ds	1
   810  00001D                     MFRC522_ToCard@i:
   811                           	callstack 0
   812  00001D                     MFRC522_ToCard2@i:
   813                           	callstack 0
   814  00001D                     MFRC522_ToCard3@i:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x1C
   818  00001D                     	ds	1
   819  00001E                     xtoa@d:
   820                           	callstack 0
   821                           
   822                           ; 8 bytes @ 0x1D
   823  00001E                     	ds	1
   824  00001F                     MFRC522_ToCard@n:
   825                           	callstack 0
   826  00001F                     MFRC522_ToCard2@n:
   827                           	callstack 0
   828  00001F                     MFRC522_ToCard3@n:
   829                           	callstack 0
   830  00001F                     ___fldiv@sign:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x1E
   834  00001F                     	ds	1
   835  000020                     MFRC522_Request@TagType:
   836                           	callstack 0
   837  000020                     MFRC522_Request2@TagType:
   838                           	callstack 0
   839  000020                     MFRC522_Request3@TagType:
   840                           	callstack 0
   841  000020                     MFRC522_AntiColl@serNum:
   842                           	callstack 0
   843  000020                     MFRC522_AntiColl2@serNum:
   844                           	callstack 0
   845  000020                     MFRC522_AntiColl3@serNum:
   846                           	callstack 0
   847  000020                     ___fldiv@new_exp:
   848                           	callstack 0
   849  000020                     MFRC522_Halt@buff:
   850                           	callstack 0
   851  000020                     MFRC522_Halt2@buff:
   852                           	callstack 0
   853  000020                     MFRC522_Halt3@buff:
   854                           	callstack 0
   855                           
   856                           ; 4 bytes @ 0x1F
   857  000020                     	ds	2
   858  000022                     MFRC522_Request@reqMode:
   859                           	callstack 0
   860  000022                     MFRC522_Request2@reqMode:
   861                           	callstack 0
   862  000022                     MFRC522_Request3@reqMode:
   863                           	callstack 0
   864  000022                     ___fldiv@grs:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x21
   868  000022                     	ds	1
   869  000023                     MFRC522_Request@_status:
   870                           	callstack 0
   871  000023                     MFRC522_Request2@_status:
   872                           	callstack 0
   873  000023                     MFRC522_Request3@_status:
   874                           	callstack 0
   875  000023                     MFRC522_AntiColl@serNumCheck:
   876                           	callstack 0
   877  000023                     MFRC522_AntiColl2@serNumCheck:
   878                           	callstack 0
   879  000023                     MFRC522_AntiColl3@serNumCheck:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x22
   883  000023                     	ds	1
   884  000024                     MFRC522_Request@backBits:
   885                           	callstack 0
   886  000024                     MFRC522_Request2@backBits:
   887                           	callstack 0
   888  000024                     MFRC522_Request3@backBits:
   889                           	callstack 0
   890  000024                     MFRC522_Halt@unLen:
   891                           	callstack 0
   892  000024                     MFRC522_Halt2@unLen:
   893                           	callstack 0
   894  000024                     MFRC522_Halt3@unLen:
   895                           	callstack 0
   896  000024                     MFRC522_AntiColl@unLen:
   897                           	callstack 0
   898  000024                     MFRC522_AntiColl2@unLen:
   899                           	callstack 0
   900  000024                     MFRC522_AntiColl3@unLen:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x23
   904  000024                     	ds	2
   905  000026                     MFRC522_AntiColl@_status:
   906                           	callstack 0
   907  000026                     MFRC522_AntiColl2@_status:
   908                           	callstack 0
   909  000026                     MFRC522_AntiColl3@_status:
   910                           	callstack 0
   911  000026                     ___fldiv@bexp:
   912                           	callstack 0
   913  000026                     xtoa@x:
   914                           	callstack 0
   915  000026                     MFRC522_IsCard@TagType:
   916                           	callstack 0
   917  000026                     MFRC522_IsCard2@TagType:
   918                           	callstack 0
   919  000026                     MFRC522_IsCard3@TagType:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x25
   923  000026                     	ds	1
   924  000027                     ??_xtoa:
   925  000027                     MFRC522_AntiColl@i:
   926                           	callstack 0
   927  000027                     MFRC522_AntiColl2@i:
   928                           	callstack 0
   929  000027                     MFRC522_AntiColl3@i:
   930                           	callstack 0
   931  000027                     ___fldiv@aexp:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x26
   935  000027                     	ds	1
   936  000028                     ?___fladd:
   937                           	callstack 0
   938  000028                     MFRC522_ReadCardSerial@str:
   939                           	callstack 0
   940  000028                     MFRC522_ReadCardSerial2@str:
   941                           	callstack 0
   942  000028                     MFRC522_ReadCardSerial3@str:
   943                           	callstack 0
   944  000028                     ___fladd@b:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x27
   948  000028                     	ds	2
   949  00002A                     
   950                           ; 1 bytes @ 0x29
   951  00002A                     	ds	2
   952  00002C                     ___fladd@a:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x2B
   956  00002C                     	ds	3
   957  00002F                     xtoa@p:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x2E
   961  00002F                     	ds	1
   962  000030                     ??___fladd:
   963                           
   964                           ; 1 bytes @ 0x2F
   965  000030                     	ds	1
   966  000031                     xtoa@w:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x30
   970  000031                     	ds	2
   971  000033                     xtoa@n:
   972                           	callstack 0
   973                           
   974                           ; 8 bytes @ 0x32
   975  000033                     	ds	1
   976  000034                     ___fladd@signs:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x33
   980  000034                     	ds	1
   981  000035                     ___fladd@aexp:
   982                           	callstack 0
   983                           
   984                           ; 1 bytes @ 0x34
   985  000035                     	ds	1
   986  000036                     ___fladd@bexp:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x35
   990  000036                     	ds	1
   991  000037                     ___fladd@grs:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x36
   995  000037                     	ds	1
   996  000038                     USART_Init@baud_rate:
   997                           	callstack 0
   998                           
   999                           ; 4 bytes @ 0x37
  1000  000038                     	ds	3
  1001  00003B                     xtoa@i:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x3A
  1005  00003B                     	ds	1
  1006  00003C                     USART_Init@temp:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x3B
  1010  00003C                     	ds	1
  1011  00003D                     xtoa@c:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x3C
  1015  00003D                     	ds	2
  1016  00003F                     ?_vfpfcnvrt:
  1017                           	callstack 0
  1018  00003F                     vfpfcnvrt@fp:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x3E
  1022  00003F                     	ds	2
  1023  000041                     vfpfcnvrt@fmt:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x40
  1027  000041                     	ds	2
  1028  000043                     vfpfcnvrt@ap:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x42
  1032  000043                     	ds	2
  1033  000045                     ??_vfpfcnvrt:
  1034                           
  1035                           ; 1 bytes @ 0x44
  1036  000045                     	ds	4
  1037  000049                     vfpfcnvrt@llu:
  1038                           	callstack 0
  1039                           
  1040                           ; 8 bytes @ 0x48
  1041  000049                     	ds	8
  1042  000051                     vfpfcnvrt@c:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x50
  1046  000051                     	ds	1
  1047  000052                     ?_vfprintf:
  1048                           	callstack 0
  1049  000052                     vfprintf@fp:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x51
  1053  000052                     	ds	2
  1054  000054                     vfprintf@fmt:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x53
  1058  000054                     	ds	2
  1059  000056                     vfprintf@ap:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x55
  1063  000056                     	ds	2
  1064  000058                     vfprintf@cfmt:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x57
  1068  000058                     	ds	2
  1069  00005A                     ?_sprintf:
  1070                           	callstack 0
  1071  00005A                     sprintf@s:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x59
  1075  00005A                     	ds	2
  1076  00005C                     sprintf@fmt:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x5B
  1080  00005C                     	ds	4
  1081  000060                     
  1082                           ; 1 bytes @ 0x5F
  1083 ;;
  1084 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1085 ;;
  1086 ;; *************** function _main *****************
  1087 ;; Defined at:
  1088 ;;		line 26 in file "main.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  i               1   17[BANK0 ] unsigned char 
  1093 ;;  i               1   16[BANK0 ] unsigned char 
  1094 ;;  i               1   15[BANK0 ] unsigned char 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1104 ;;      Params:         0       0       0       0       0       0       0       0       0
  1105 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1106 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1107 ;;      Totals:         0       5       0       0       0       0       0       0       0
  1108 ;;Total ram usage:        5 bytes
  1109 ;; Hardware stack levels required when called: 8
  1110 ;; This function calls:
  1111 ;;		_I2CLCD_Init
  1112 ;;		_LCD_Begin
  1113 ;;		_LCD_Cmd
  1114 ;;		_LCD_Goto
  1115 ;;		_LCD_Print
  1116 ;;		_MFRC522_AntiColl
  1117 ;;		_MFRC522_AntiColl2
  1118 ;;		_MFRC522_AntiColl3
  1119 ;;		_MFRC522_Halt
  1120 ;;		_MFRC522_Halt2
  1121 ;;		_MFRC522_Halt3
  1122 ;;		_MFRC522_Init
  1123 ;;		_MFRC522_IsCard
  1124 ;;		_MFRC522_IsCard2
  1125 ;;		_MFRC522_IsCard3
  1126 ;;		_MFRC522_ReadCardSerial
  1127 ;;		_MFRC522_ReadCardSerial2
  1128 ;;		_MFRC522_ReadCardSerial3
  1129 ;;		_USART_Init
  1130 ;;		_USART_TxChar
  1131 ;;		_sprintf
  1132 ;;		_strlen
  1133 ;; This function is called by:
  1134 ;;		Startup code after reset
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text0
  1139  001078                     __ptext0:
  1140                           	callstack 0
  1141  001078                     _main:
  1142                           	callstack 23
  1143  001078                     
  1144                           ;main.c: 27:     I2CLCD_Init(100000);
  1145  001078  0EA0               	movlw	160
  1146  00107A  6E0E               	movwf	I2CLCD_Init@i2c_clk_freq^0,c
  1147  00107C  0E86               	movlw	134
  1148  00107E  6E0F               	movwf	(I2CLCD_Init@i2c_clk_freq+1)^0,c
  1149  001080  0E01               	movlw	1
  1150  001082  6E10               	movwf	(I2CLCD_Init@i2c_clk_freq+2)^0,c
  1151  001084  0E00               	movlw	0
  1152  001086  6E11               	movwf	(I2CLCD_Init@i2c_clk_freq+3)^0,c
  1153  001088  EC42  F01A         	call	_I2CLCD_Init	;wreg free
  1154                           
  1155                           ;main.c: 28:     LCD_Begin(0x4E);
  1156  00108C  0E4E               	movlw	78
  1157  00108E  EC72  F011         	call	_LCD_Begin
  1158                           
  1159                           ;main.c: 29:     MFRC522_Init();
  1160  001092  ECE9  F011         	call	_MFRC522_Init	;wreg free
  1161                           
  1162                           ;main.c: 30:     USART_Init(9600);
  1163  001096  0E80               	movlw	128
  1164  001098  6E38               	movwf	USART_Init@baud_rate^0,c
  1165  00109A  0E25               	movlw	37
  1166  00109C  6E39               	movwf	(USART_Init@baud_rate+1)^0,c
  1167  00109E  0E00               	movlw	0
  1168  0010A0  6E3A               	movwf	(USART_Init@baud_rate+2)^0,c
  1169  0010A2  0E00               	movlw	0
  1170  0010A4  6E3B               	movwf	(USART_Init@baud_rate+3)^0,c
  1171  0010A6  ECE9  F016         	call	_USART_Init	;wreg free
  1172  0010AA                     l4928:
  1173                           
  1174                           ;main.c: 32:     _delay((unsigned long)((500)*(27000000/4000.0)));
  1175  0010AA  0E12               	movlw	18
  1176  0010AC  0100               	movlb	0	; () banked
  1177  0010AE  6FEE               	movwf	(??_main+1)& (0+255),b
  1178  0010B0  0E20               	movlw	32
  1179  0010B2  6FED               	movwf	??_main& (0+255),b
  1180  0010B4  0E0F               	movlw	15
  1181  0010B6                     u5117:
  1182  0010B6  2EE8               	decfsz	wreg,f,c
  1183  0010B8  D7FE               	bra	u5117
  1184  0010BA  2FED               	decfsz	??_main& (0+255),f,b
  1185  0010BC  D7FC               	bra	u5117
  1186  0010BE  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  1187  0010C0  D7FA               	bra	u5117
  1188  0010C2  D000               	nop2	
  1189  0010C4                     l4930:
  1190                           
  1191                           ;main.c: 34:         MFRC522_IsCard(&TagType1);
  1192  0010C4  0EDF               	movlw	low _TagType1
  1193  0010C6  6E26               	movwf	MFRC522_IsCard@TagType^0,c
  1194  0010C8  0E00               	movlw	high _TagType1
  1195  0010CA  6E27               	movwf	(MFRC522_IsCard@TagType+1)^0,c
  1196  0010CC  EC94  F01C         	call	_MFRC522_IsCard	;wreg free
  1197  0010D0                     
  1198                           ;main.c: 35:         MFRC522_ReadCardSerial(&UID_1);
  1199  0010D0  0EB5               	movlw	low _UID_1
  1200  0010D2  6E28               	movwf	MFRC522_ReadCardSerial@str^0,c
  1201  0010D4  0E00               	movlw	high _UID_1
  1202  0010D6  6E29               	movwf	(MFRC522_ReadCardSerial@str+1)^0,c
  1203  0010D8  ECF6  F01B         	call	_MFRC522_ReadCardSerial	;wreg free
  1204  0010DC                     
  1205                           ;main.c: 36:         status_1 = MFRC522_AntiColl(&UID_1);
  1206  0010DC  0EB5               	movlw	low _UID_1
  1207  0010DE  6E20               	movwf	MFRC522_AntiColl@serNum^0,c
  1208  0010E0  0E00               	movlw	high _UID_1
  1209  0010E2  6E21               	movwf	(MFRC522_AntiColl@serNum+1)^0,c
  1210  0010E4  EC4D  F015         	call	_MFRC522_AntiColl	;wreg free
  1211  0010E8  0100               	movlb	0	; () banked
  1212  0010EA  6F6C               	movwf	_status_1& (0+255),b
  1213  0010EC                     
  1214                           ; BSR set to: 0
  1215                           ;main.c: 38:         MFRC522_IsCard2(&TagType2);
  1216  0010EC  0EDE               	movlw	low _TagType2
  1217  0010EE  6E26               	movwf	MFRC522_IsCard2@TagType^0,c
  1218  0010F0  0E00               	movlw	high _TagType2
  1219  0010F2  6E27               	movwf	(MFRC522_IsCard2@TagType+1)^0,c
  1220  0010F4  EC8C  F01C         	call	_MFRC522_IsCard2	;wreg free
  1221  0010F8                     
  1222                           ;main.c: 39:         MFRC522_ReadCardSerial2(&UID_2);
  1223  0010F8  0EA1               	movlw	low _UID_2
  1224  0010FA  6E28               	movwf	MFRC522_ReadCardSerial2@str^0,c
  1225  0010FC  0E00               	movlw	high _UID_2
  1226  0010FE  6E29               	movwf	(MFRC522_ReadCardSerial2@str+1)^0,c
  1227  001100  ECE7  F01B         	call	_MFRC522_ReadCardSerial2	;wreg free
  1228  001104                     
  1229                           ;main.c: 40:         status_2 = MFRC522_AntiColl2(&UID_2);
  1230  001104  0EA1               	movlw	low _UID_2
  1231  001106  6E20               	movwf	MFRC522_AntiColl2@serNum^0,c
  1232  001108  0E00               	movlw	high _UID_2
  1233  00110A  6E21               	movwf	(MFRC522_AntiColl2@serNum+1)^0,c
  1234  00110C  ECF3  F014         	call	_MFRC522_AntiColl2	;wreg free
  1235  001110  0100               	movlb	0	; () banked
  1236  001112  6F6B               	movwf	_status_2& (0+255),b
  1237  001114                     
  1238                           ; BSR set to: 0
  1239                           ;main.c: 42:         MFRC522_IsCard3(&TagType3);
  1240  001114  0EDD               	movlw	low _TagType3
  1241  001116  6E26               	movwf	MFRC522_IsCard3@TagType^0,c
  1242  001118  0E00               	movlw	high _TagType3
  1243  00111A  6E27               	movwf	(MFRC522_IsCard3@TagType+1)^0,c
  1244  00111C  EC84  F01C         	call	_MFRC522_IsCard3	;wreg free
  1245  001120                     
  1246                           ;main.c: 43:         MFRC522_ReadCardSerial3(&UID_3);
  1247  001120  0E8D               	movlw	low _UID_3
  1248  001122  6E28               	movwf	MFRC522_ReadCardSerial3@str^0,c
  1249  001124  0E00               	movlw	high _UID_3
  1250  001126  6E29               	movwf	(MFRC522_ReadCardSerial3@str+1)^0,c
  1251  001128  ECD8  F01B         	call	_MFRC522_ReadCardSerial3	;wreg free
  1252  00112C                     
  1253                           ;main.c: 44:         status_3 = MFRC522_AntiColl3(&UID_3);
  1254  00112C  0E8D               	movlw	low _UID_3
  1255  00112E  6E20               	movwf	MFRC522_AntiColl3@serNum^0,c
  1256  001130  0E00               	movlw	high _UID_3
  1257  001132  6E21               	movwf	(MFRC522_AntiColl3@serNum+1)^0,c
  1258  001134  EC99  F014         	call	_MFRC522_AntiColl3	;wreg free
  1259  001138  0100               	movlb	0	; () banked
  1260  00113A  6F6A               	movwf	_status_3& (0+255),b
  1261  00113C                     
  1262                           ; BSR set to: 0
  1263                           ;main.c: 50:         if(strlen(UID_1) == 1 || strlen(UID_2) == 1 || strlen(UID_3) == 1){
  1264  00113C  0EB5               	movlw	low _UID_1
  1265  00113E  6E01               	movwf	strlen@s^0,c
  1266  001140  0E00               	movlw	high _UID_1
  1267  001142  6E02               	movwf	(strlen@s+1)^0,c
  1268  001144  EC97  F01A         	call	_strlen	;wreg free
  1269  001148  0401               	decf	?_strlen^0,w,c
  1270  00114A  1002               	iorwf	(?_strlen+1)^0,w,c
  1271  00114C  B4D8               	btfsc	status,2,c
  1272  00114E  EFAB  F008         	goto	u4931
  1273  001152  EFAD  F008         	goto	u4930
  1274  001156                     u4931:
  1275  001156  EFCB  F008         	goto	l4954
  1276  00115A                     u4930:
  1277  00115A  0EA1               	movlw	low _UID_2
  1278  00115C  6E01               	movwf	strlen@s^0,c
  1279  00115E  0E00               	movlw	high _UID_2
  1280  001160  6E02               	movwf	(strlen@s+1)^0,c
  1281  001162  EC97  F01A         	call	_strlen	;wreg free
  1282  001166  0401               	decf	?_strlen^0,w,c
  1283  001168  1002               	iorwf	(?_strlen+1)^0,w,c
  1284  00116A  B4D8               	btfsc	status,2,c
  1285  00116C  EFBA  F008         	goto	u4941
  1286  001170  EFBC  F008         	goto	u4940
  1287  001174                     u4941:
  1288  001174  EFCB  F008         	goto	l4954
  1289  001178                     u4940:
  1290  001178  0E8D               	movlw	low _UID_3
  1291  00117A  6E01               	movwf	strlen@s^0,c
  1292  00117C  0E00               	movlw	high _UID_3
  1293  00117E  6E02               	movwf	(strlen@s+1)^0,c
  1294  001180  EC97  F01A         	call	_strlen	;wreg free
  1295  001184  0401               	decf	?_strlen^0,w,c
  1296  001186  1002               	iorwf	(?_strlen+1)^0,w,c
  1297  001188  A4D8               	btfss	status,2,c
  1298  00118A  EFC9  F008         	goto	u4951
  1299  00118E  EFCB  F008         	goto	u4950
  1300  001192                     u4951:
  1301  001192  EFCE  F008         	goto	l114
  1302  001196                     u4950:
  1303  001196                     l4954:
  1304                           
  1305                           ;main.c: 51:             LCD_Cmd(0x01);
  1306  001196  0E01               	movlw	1
  1307  001198  ECBE  F01A         	call	_LCD_Cmd
  1308  00119C                     l114:
  1309                           
  1310                           ;main.c: 54:         LCD_Goto(1, 2);
  1311  00119C  0E02               	movlw	2
  1312  00119E  6E07               	movwf	LCD_Goto@row^0,c
  1313  0011A0  0E01               	movlw	1
  1314  0011A2  EC90  F018         	call	_LCD_Goto
  1315  0011A6                     
  1316                           ;main.c: 55:         if(status_1 == 0){
  1317  0011A6  0100               	movlb	0	; () banked
  1318  0011A8  516C               	movf	_status_1& (0+255),w,b
  1319  0011AA  A4D8               	btfss	status,2,c
  1320  0011AC  EFDA  F008         	goto	u4961
  1321  0011B0  EFDC  F008         	goto	u4960
  1322  0011B4                     u4961:
  1323  0011B4  EF2A  F009         	goto	l4982
  1324  0011B8                     u4960:
  1325  0011B8                     
  1326                           ; BSR set to: 0
  1327                           ;main.c: 56:             USART_TxChar("P1");
  1328  0011B8  0E10               	movlw	low STR_1
  1329  0011BA  6E05               	movwf	USART_TxChar@out^0,c
  1330  0011BC  0E08               	movlw	high STR_1
  1331  0011BE  6E06               	movwf	(USART_TxChar@out+1)^0,c
  1332  0011C0  EC58  F018         	call	_USART_TxChar	;wreg free
  1333  0011C4                     
  1334                           ;main.c: 57:             for(uint8_t i = 0; i < 5; i++)
  1335  0011C4  0E00               	movlw	0
  1336  0011C6  0100               	movlb	0	; () banked
  1337  0011C8  6FEF               	movwf	main@i& (0+255),b
  1338  0011CA                     l4966:
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;main.c: 58:             {;main.c: 59:                 sprintf(data_buffer, "%X", UID_1[
      +                          i]);
  1342  0011CA  0EC9               	movlw	low _data_buffer
  1343  0011CC  6E5A               	movwf	sprintf@s^0,c
  1344  0011CE  0E00               	movlw	high _data_buffer
  1345  0011D0  6E5B               	movwf	(sprintf@s+1)^0,c
  1346  0011D2  0E19               	movlw	low STR_2
  1347  0011D4  6E5C               	movwf	sprintf@fmt^0,c
  1348  0011D6  0E08               	movlw	high STR_2
  1349  0011D8  6E5D               	movwf	(sprintf@fmt+1)^0,c
  1350  0011DA  0EB5               	movlw	low _UID_1
  1351  0011DC  25EF               	addwf	main@i& (0+255),w,b
  1352  0011DE  6ED9               	movwf	fsr2l,c
  1353  0011E0  6ADA               	clrf	fsr2h,c
  1354  0011E2  0E00               	movlw	high _UID_1
  1355  0011E4  22DA               	addwfc	fsr2h,f,c
  1356  0011E6  50DF               	movf	indf2,w,c
  1357  0011E8  6FED               	movwf	??_main& (0+255),b
  1358  0011EA  51ED               	movf	??_main& (0+255),w,b
  1359  0011EC  6E5E               	movwf	(?_sprintf+4)^0,c
  1360  0011EE  6A5F               	clrf	(?_sprintf+5)^0,c
  1361  0011F0  EC6E  F01A         	call	_sprintf	;wreg free
  1362  0011F4                     
  1363                           ;main.c: 60:                 LCD_Print(data_buffer);
  1364  0011F4  0EC9               	movlw	low _data_buffer
  1365  0011F6  6E05               	movwf	LCD_Print@LCD_Str^0,c
  1366  0011F8  0E00               	movlw	high _data_buffer
  1367  0011FA  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1368  0011FC  EC3E  F014         	call	_LCD_Print	;wreg free
  1369  001200                     
  1370                           ;main.c: 62:                 USART_TxChar(data_buffer);
  1371  001200  0EC9               	movlw	low _data_buffer
  1372  001202  6E05               	movwf	USART_TxChar@out^0,c
  1373  001204  0E00               	movlw	high _data_buffer
  1374  001206  6E06               	movwf	(USART_TxChar@out+1)^0,c
  1375  001208  EC58  F018         	call	_USART_TxChar	;wreg free
  1376  00120C                     
  1377                           ;main.c: 63:             }
  1378  00120C  0100               	movlb	0	; () banked
  1379  00120E  2BEF               	incf	main@i& (0+255),f,b
  1380  001210                     
  1381                           ; BSR set to: 0
  1382  001210  0E04               	movlw	4
  1383  001212  65EF               	cpfsgt	main@i& (0+255),b
  1384  001214  EF0E  F009         	goto	u4971
  1385  001218  EF10  F009         	goto	u4970
  1386  00121C                     u4971:
  1387  00121C  EFE5  F008         	goto	l4966
  1388  001220                     u4970:
  1389  001220                     
  1390                           ; BSR set to: 0
  1391                           ;main.c: 64:             LCD_Goto(1, 1);
  1392  001220  0E01               	movlw	1
  1393  001222  6E07               	movwf	LCD_Goto@row^0,c
  1394  001224  0E01               	movlw	1
  1395  001226  EC90  F018         	call	_LCD_Goto
  1396  00122A                     
  1397                           ;main.c: 65:             LCD_Print("Pos1");
  1398  00122A  0E01               	movlw	low STR_3
  1399  00122C  6E05               	movwf	LCD_Print@LCD_Str^0,c
  1400  00122E  0E08               	movlw	high STR_3
  1401  001230  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1402  001232  EC3E  F014         	call	_LCD_Print	;wreg free
  1403  001236                     
  1404                           ;main.c: 66:             _delay((unsigned long)((500)*(27000000/4000.0)));
  1405  001236  0E12               	movlw	18
  1406  001238  0100               	movlb	0	; () banked
  1407  00123A  6FEE               	movwf	(??_main+1)& (0+255),b
  1408  00123C  0E20               	movlw	32
  1409  00123E  6FED               	movwf	??_main& (0+255),b
  1410  001240  0E0F               	movlw	15
  1411  001242                     u5127:
  1412  001242  2EE8               	decfsz	wreg,f,c
  1413  001244  D7FE               	bra	u5127
  1414  001246  2FED               	decfsz	??_main& (0+255),f,b
  1415  001248  D7FC               	bra	u5127
  1416  00124A  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  1417  00124C  D7FA               	bra	u5127
  1418  00124E  D000               	nop2	
  1419                           
  1420                           ;main.c: 67:         } else {
  1421  001250  EF39  F009         	goto	l4986
  1422  001254                     l4982:
  1423                           
  1424                           ; BSR set to: 0
  1425                           ;main.c: 68:             _delay((unsigned long)((50)*(27000000/4000.0)));
  1426  001254  0E02               	movlw	2
  1427  001256  0100               	movlb	0	; () banked
  1428  001258  6FEE               	movwf	(??_main+1)& (0+255),b
  1429  00125A  0EB7               	movlw	183
  1430  00125C  6FED               	movwf	??_main& (0+255),b
  1431  00125E  0E4C               	movlw	76
  1432  001260                     u5137:
  1433  001260  2EE8               	decfsz	wreg,f,c
  1434  001262  D7FE               	bra	u5137
  1435  001264  2FED               	decfsz	??_main& (0+255),f,b
  1436  001266  D7FC               	bra	u5137
  1437  001268  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  1438  00126A  D7FA               	bra	u5137
  1439  00126C  F000               	nop	
  1440  00126E                     
  1441                           ;main.c: 69:             MFRC522_Halt();
  1442  00126E  EC16  F01A         	call	_MFRC522_Halt	;wreg free
  1443  001272                     l4986:
  1444                           
  1445                           ;main.c: 72:         LCD_Goto(1, 2);
  1446  001272  0E02               	movlw	2
  1447  001274  6E07               	movwf	LCD_Goto@row^0,c
  1448  001276  0E01               	movlw	1
  1449  001278  EC90  F018         	call	_LCD_Goto
  1450  00127C                     
  1451                           ;main.c: 73:         if(status_2 == 0){
  1452  00127C  0100               	movlb	0	; () banked
  1453  00127E  516B               	movf	_status_2& (0+255),w,b
  1454  001280  A4D8               	btfss	status,2,c
  1455  001282  EF45  F009         	goto	u4981
  1456  001286  EF47  F009         	goto	u4980
  1457  00128A                     u4981:
  1458  00128A  EF95  F009         	goto	l5014
  1459  00128E                     u4980:
  1460  00128E                     
  1461                           ; BSR set to: 0
  1462                           ;main.c: 74:             USART_TxChar("P2");
  1463  00128E  0E13               	movlw	low STR_4
  1464  001290  6E05               	movwf	USART_TxChar@out^0,c
  1465  001292  0E08               	movlw	high STR_4
  1466  001294  6E06               	movwf	(USART_TxChar@out+1)^0,c
  1467  001296  EC58  F018         	call	_USART_TxChar	;wreg free
  1468  00129A                     
  1469                           ;main.c: 75:             for(uint8_t i = 0; i < 5; i++)
  1470  00129A  0E00               	movlw	0
  1471  00129C  0100               	movlb	0	; () banked
  1472  00129E  6FF0               	movwf	main@i_316& (0+255),b
  1473  0012A0                     l4998:
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;main.c: 76:             {;main.c: 77:                 sprintf(data_buffer, "%X", UID_2[
      +                          i]);
  1477  0012A0  0EC9               	movlw	low _data_buffer
  1478  0012A2  6E5A               	movwf	sprintf@s^0,c
  1479  0012A4  0E00               	movlw	high _data_buffer
  1480  0012A6  6E5B               	movwf	(sprintf@s+1)^0,c
  1481  0012A8  0E19               	movlw	low STR_2
  1482  0012AA  6E5C               	movwf	sprintf@fmt^0,c
  1483  0012AC  0E08               	movlw	high STR_2
  1484  0012AE  6E5D               	movwf	(sprintf@fmt+1)^0,c
  1485  0012B0  0EA1               	movlw	low _UID_2
  1486  0012B2  25F0               	addwf	main@i_316& (0+255),w,b
  1487  0012B4  6ED9               	movwf	fsr2l,c
  1488  0012B6  6ADA               	clrf	fsr2h,c
  1489  0012B8  0E00               	movlw	high _UID_2
  1490  0012BA  22DA               	addwfc	fsr2h,f,c
  1491  0012BC  50DF               	movf	indf2,w,c
  1492  0012BE  6FED               	movwf	??_main& (0+255),b
  1493  0012C0  51ED               	movf	??_main& (0+255),w,b
  1494  0012C2  6E5E               	movwf	(?_sprintf+4)^0,c
  1495  0012C4  6A5F               	clrf	(?_sprintf+5)^0,c
  1496  0012C6  EC6E  F01A         	call	_sprintf	;wreg free
  1497  0012CA                     
  1498                           ;main.c: 78:                 LCD_Print(data_buffer);
  1499  0012CA  0EC9               	movlw	low _data_buffer
  1500  0012CC  6E05               	movwf	LCD_Print@LCD_Str^0,c
  1501  0012CE  0E00               	movlw	high _data_buffer
  1502  0012D0  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1503  0012D2  EC3E  F014         	call	_LCD_Print	;wreg free
  1504  0012D6                     
  1505                           ;main.c: 80:                 USART_TxChar(data_buffer);
  1506  0012D6  0EC9               	movlw	low _data_buffer
  1507  0012D8  6E05               	movwf	USART_TxChar@out^0,c
  1508  0012DA  0E00               	movlw	high _data_buffer
  1509  0012DC  6E06               	movwf	(USART_TxChar@out+1)^0,c
  1510  0012DE  EC58  F018         	call	_USART_TxChar	;wreg free
  1511  0012E2                     
  1512                           ;main.c: 81:             }
  1513  0012E2  0100               	movlb	0	; () banked
  1514  0012E4  2BF0               	incf	main@i_316& (0+255),f,b
  1515  0012E6                     
  1516                           ; BSR set to: 0
  1517  0012E6  0E04               	movlw	4
  1518  0012E8  65F0               	cpfsgt	main@i_316& (0+255),b
  1519  0012EA  EF79  F009         	goto	u4991
  1520  0012EE  EF7B  F009         	goto	u4990
  1521  0012F2                     u4991:
  1522  0012F2  EF50  F009         	goto	l4998
  1523  0012F6                     u4990:
  1524  0012F6                     
  1525                           ; BSR set to: 0
  1526                           ;main.c: 82:             LCD_Goto(1, 1);
  1527  0012F6  0E01               	movlw	1
  1528  0012F8  6E07               	movwf	LCD_Goto@row^0,c
  1529  0012FA  0E01               	movlw	1
  1530  0012FC  EC90  F018         	call	_LCD_Goto
  1531  001300                     
  1532                           ;main.c: 83:             LCD_Print("Pos2");
  1533  001300  0E06               	movlw	low STR_6
  1534  001302  6E05               	movwf	LCD_Print@LCD_Str^0,c
  1535  001304  0E08               	movlw	high STR_6
  1536  001306  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1537  001308  EC3E  F014         	call	_LCD_Print	;wreg free
  1538  00130C                     
  1539                           ;main.c: 84:             _delay((unsigned long)((500)*(27000000/4000.0)));
  1540  00130C  0E12               	movlw	18
  1541  00130E  0100               	movlb	0	; () banked
  1542  001310  6FEE               	movwf	(??_main+1)& (0+255),b
  1543  001312  0E20               	movlw	32
  1544  001314  6FED               	movwf	??_main& (0+255),b
  1545  001316  0E0F               	movlw	15
  1546  001318                     u5147:
  1547  001318  2EE8               	decfsz	wreg,f,c
  1548  00131A  D7FE               	bra	u5147
  1549  00131C  2FED               	decfsz	??_main& (0+255),f,b
  1550  00131E  D7FC               	bra	u5147
  1551  001320  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  1552  001322  D7FA               	bra	u5147
  1553  001324  D000               	nop2	
  1554                           
  1555                           ;main.c: 85:         } else {
  1556  001326  EFA4  F009         	goto	l5018
  1557  00132A                     l5014:
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;main.c: 86:             _delay((unsigned long)((50)*(27000000/4000.0)));
  1561  00132A  0E02               	movlw	2
  1562  00132C  0100               	movlb	0	; () banked
  1563  00132E  6FEE               	movwf	(??_main+1)& (0+255),b
  1564  001330  0EB7               	movlw	183
  1565  001332  6FED               	movwf	??_main& (0+255),b
  1566  001334  0E4C               	movlw	76
  1567  001336                     u5157:
  1568  001336  2EE8               	decfsz	wreg,f,c
  1569  001338  D7FE               	bra	u5157
  1570  00133A  2FED               	decfsz	??_main& (0+255),f,b
  1571  00133C  D7FC               	bra	u5157
  1572  00133E  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  1573  001340  D7FA               	bra	u5157
  1574  001342  F000               	nop	
  1575  001344                     
  1576                           ;main.c: 87:             MFRC522_Halt2();
  1577  001344  ECEA  F019         	call	_MFRC522_Halt2	;wreg free
  1578  001348                     l5018:
  1579                           
  1580                           ;main.c: 90:         LCD_Goto(1, 2);
  1581  001348  0E02               	movlw	2
  1582  00134A  6E07               	movwf	LCD_Goto@row^0,c
  1583  00134C  0E01               	movlw	1
  1584  00134E  EC90  F018         	call	_LCD_Goto
  1585  001352                     
  1586                           ;main.c: 91:         if(status_3 == 0) {
  1587  001352  0100               	movlb	0	; () banked
  1588  001354  516A               	movf	_status_3& (0+255),w,b
  1589  001356  A4D8               	btfss	status,2,c
  1590  001358  EFB0  F009         	goto	u5001
  1591  00135C  EFB2  F009         	goto	u5000
  1592  001360                     u5001:
  1593  001360  EFF3  F009         	goto	l5046
  1594  001364                     u5000:
  1595  001364                     
  1596                           ; BSR set to: 0
  1597                           ;main.c: 92:             USART_TxChar("P3");
  1598  001364  0E16               	movlw	low STR_7
  1599  001366  6E05               	movwf	USART_TxChar@out^0,c
  1600  001368  0E08               	movlw	high STR_7
  1601  00136A  6E06               	movwf	(USART_TxChar@out+1)^0,c
  1602  00136C  EC58  F018         	call	_USART_TxChar	;wreg free
  1603  001370                     
  1604                           ;main.c: 93:             for(uint8_t i = 0; i < 5; i++)
  1605  001370  0E00               	movlw	0
  1606  001372  0100               	movlb	0	; () banked
  1607  001374  6FF1               	movwf	main@i_320& (0+255),b
  1608  001376                     l5030:
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;main.c: 94:             {;main.c: 95:                 sprintf(data_buffer, "%X", UID_3[
      +                          i]);
  1612  001376  0EC9               	movlw	low _data_buffer
  1613  001378  6E5A               	movwf	sprintf@s^0,c
  1614  00137A  0E00               	movlw	high _data_buffer
  1615  00137C  6E5B               	movwf	(sprintf@s+1)^0,c
  1616  00137E  0E19               	movlw	low STR_2
  1617  001380  6E5C               	movwf	sprintf@fmt^0,c
  1618  001382  0E08               	movlw	high STR_2
  1619  001384  6E5D               	movwf	(sprintf@fmt+1)^0,c
  1620  001386  0E8D               	movlw	low _UID_3
  1621  001388  25F1               	addwf	main@i_320& (0+255),w,b
  1622  00138A  6ED9               	movwf	fsr2l,c
  1623  00138C  6ADA               	clrf	fsr2h,c
  1624  00138E  0E00               	movlw	high _UID_3
  1625  001390  22DA               	addwfc	fsr2h,f,c
  1626  001392  50DF               	movf	indf2,w,c
  1627  001394  6FED               	movwf	??_main& (0+255),b
  1628  001396  51ED               	movf	??_main& (0+255),w,b
  1629  001398  6E5E               	movwf	(?_sprintf+4)^0,c
  1630  00139A  6A5F               	clrf	(?_sprintf+5)^0,c
  1631  00139C  EC6E  F01A         	call	_sprintf	;wreg free
  1632  0013A0                     
  1633                           ;main.c: 96:                 LCD_Print(data_buffer);
  1634  0013A0  0EC9               	movlw	low _data_buffer
  1635  0013A2  6E05               	movwf	LCD_Print@LCD_Str^0,c
  1636  0013A4  0E00               	movlw	high _data_buffer
  1637  0013A6  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1638  0013A8  EC3E  F014         	call	_LCD_Print	;wreg free
  1639  0013AC                     
  1640                           ;main.c: 97:                 USART_TxChar(data_buffer);
  1641  0013AC  0EC9               	movlw	low _data_buffer
  1642  0013AE  6E05               	movwf	USART_TxChar@out^0,c
  1643  0013B0  0E00               	movlw	high _data_buffer
  1644  0013B2  6E06               	movwf	(USART_TxChar@out+1)^0,c
  1645  0013B4  EC58  F018         	call	_USART_TxChar	;wreg free
  1646  0013B8                     
  1647                           ;main.c: 98:             }
  1648  0013B8  0100               	movlb	0	; () banked
  1649  0013BA  2BF1               	incf	main@i_320& (0+255),f,b
  1650  0013BC                     
  1651                           ; BSR set to: 0
  1652  0013BC  0E04               	movlw	4
  1653  0013BE  65F1               	cpfsgt	main@i_320& (0+255),b
  1654  0013C0  EFE4  F009         	goto	u5011
  1655  0013C4  EFE6  F009         	goto	u5010
  1656  0013C8                     u5011:
  1657  0013C8  EFBB  F009         	goto	l5030
  1658  0013CC                     u5010:
  1659  0013CC                     
  1660                           ; BSR set to: 0
  1661                           ;main.c: 99:             LCD_Goto(1, 1);
  1662  0013CC  0E01               	movlw	1
  1663  0013CE  6E07               	movwf	LCD_Goto@row^0,c
  1664  0013D0  0E01               	movlw	1
  1665  0013D2  EC90  F018         	call	_LCD_Goto
  1666  0013D6                     
  1667                           ;main.c: 100:             LCD_Print("Pos3");
  1668  0013D6  0E0B               	movlw	low STR_9
  1669  0013D8  6E05               	movwf	LCD_Print@LCD_Str^0,c
  1670  0013DA  0E08               	movlw	high STR_9
  1671  0013DC  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1672  0013DE  EC3E  F014         	call	_LCD_Print	;wreg free
  1673  0013E2  EF55  F008         	goto	l4928
  1674  0013E6                     l5046:
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;main.c: 103:             _delay((unsigned long)((50)*(27000000/4000.0)));
  1678  0013E6  0E02               	movlw	2
  1679  0013E8  0100               	movlb	0	; () banked
  1680  0013EA  6FEE               	movwf	(??_main+1)& (0+255),b
  1681  0013EC  0EB7               	movlw	183
  1682  0013EE  6FED               	movwf	??_main& (0+255),b
  1683  0013F0  0E4C               	movlw	76
  1684  0013F2                     u5167:
  1685  0013F2  2EE8               	decfsz	wreg,f,c
  1686  0013F4  D7FE               	bra	u5167
  1687  0013F6  2FED               	decfsz	??_main& (0+255),f,b
  1688  0013F8  D7FC               	bra	u5167
  1689  0013FA  2FEE               	decfsz	(??_main+1)& (0+255),f,b
  1690  0013FC  D7FA               	bra	u5167
  1691  0013FE  F000               	nop	
  1692  001400                     
  1693                           ;main.c: 104:             MFRC522_Halt3();
  1694  001400  ECBE  F019         	call	_MFRC522_Halt3	;wreg free
  1695  001404  EF62  F008         	goto	l4930
  1696  001408  EF00  F000         	goto	start
  1697  00140C                     __end_of_main:
  1698                           	callstack 0
  1699                           
  1700 ;; *************** function _sprintf *****************
  1701 ;; Defined at:
  1702 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  s               2   89[COMRAM] PTR unsigned char 
  1705 ;;		 -> data_buffer(20), 
  1706 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
  1707 ;;		 -> STR_8(3), STR_5(3), STR_2(3), 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  f              11    2[BANK0 ] struct _IO_FILE
  1710 ;;  ap              2    0[BANK0 ] PTR void [1]
  1711 ;;		 -> ?_sprintf(2), 
  1712 ;;  ret             2    0        int 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  2   89[COMRAM] int 
  1715 ;; Registers used:
  1716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1722 ;;      Params:         6       0       0       0       0       0       0       0       0
  1723 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1725 ;;      Totals:         6      13       0       0       0       0       0       0       0
  1726 ;;Total ram usage:       19 bytes
  1727 ;; Hardware stack levels used: 1
  1728 ;; Hardware stack levels required when called: 7
  1729 ;; This function calls:
  1730 ;;		_vfprintf
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text1
  1737  0034DC                     __ptext1:
  1738                           	callstack 0
  1739  0034DC                     _sprintf:
  1740                           	callstack 23
  1741  0034DC  0E5E               	movlw	low (?_sprintf+4)
  1742  0034DE  0100               	movlb	0	; () banked
  1743  0034E0  6FE0               	movwf	sprintf@ap& (0+255),b
  1744  0034E2  0E00               	movlw	high (?_sprintf+4)
  1745  0034E4  6FE1               	movwf	(sprintf@ap+1)& (0+255),b
  1746  0034E6  C05A  F0E2         	movff	sprintf@s,sprintf@f
  1747  0034EA  C05B  F0E3         	movff	sprintf@s+1,sprintf@f+1
  1748  0034EE                     
  1749                           ; BSR set to: 0
  1750  0034EE  0E00               	movlw	0
  1751  0034F0  6FE6               	movwf	(sprintf@f+4)& (0+255),b
  1752  0034F2  0E00               	movlw	0
  1753  0034F4  6FE5               	movwf	(sprintf@f+3)& (0+255),b
  1754  0034F6                     
  1755                           ; BSR set to: 0
  1756  0034F6  0E00               	movlw	0
  1757  0034F8  6FEC               	movwf	(sprintf@f+10)& (0+255),b
  1758  0034FA  0E00               	movlw	0
  1759  0034FC  6FEB               	movwf	(sprintf@f+9)& (0+255),b
  1760  0034FE                     
  1761                           ; BSR set to: 0
  1762  0034FE  0EE2               	movlw	low sprintf@f
  1763  003500  6E52               	movwf	vfprintf@fp^0,c
  1764  003502  0E00               	movlw	high sprintf@f
  1765  003504  6E53               	movwf	(vfprintf@fp+1)^0,c
  1766  003506  C05C  F054         	movff	sprintf@fmt,vfprintf@fmt
  1767  00350A  C05D  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1768  00350E  0EE0               	movlw	low sprintf@ap
  1769  003510  6E56               	movwf	vfprintf@ap^0,c
  1770  003512  0E00               	movlw	high sprintf@ap
  1771  003514  6E57               	movwf	(vfprintf@ap+1)^0,c
  1772  003516  EC61  F019         	call	_vfprintf	;wreg free
  1773  00351A  0100               	movlb	0	; () banked
  1774  00351C  51E5               	movf	(sprintf@f+3)& (0+255),w,b
  1775  00351E  245A               	addwf	sprintf@s^0,w,c
  1776  003520  6ED9               	movwf	fsr2l,c
  1777  003522  51E6               	movf	(sprintf@f+4)& (0+255),w,b
  1778  003524  205B               	addwfc	(sprintf@s+1)^0,w,c
  1779  003526  6EDA               	movwf	fsr2h,c
  1780  003528  0E00               	movlw	0
  1781  00352A  6EDF               	movwf	indf2,c
  1782  00352C                     
  1783                           ; BSR set to: 0
  1784  00352C  0012               	return		;funcret
  1785  00352E                     __end_of_sprintf:
  1786                           	callstack 0
  1787                           
  1788 ;; *************** function _vfprintf *****************
  1789 ;; Defined at:
  1790 ;;		line 1390 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  1793 ;;		 -> sprintf@f(11), 
  1794 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  1795 ;;		 -> STR_8(3), STR_5(3), STR_2(3), 
  1796 ;;  ap              2   85[COMRAM] PTR PTR void 
  1797 ;;		 -> sprintf@ap(2), 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  1800 ;;		 -> STR_8(3), STR_5(3), STR_2(3), 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  2   81[COMRAM] int 
  1803 ;; Registers used:
  1804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1810 ;;      Params:         6       0       0       0       0       0       0       0       0
  1811 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1813 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1814 ;;Total ram usage:        8 bytes
  1815 ;; Hardware stack levels used: 1
  1816 ;; Hardware stack levels required when called: 6
  1817 ;; This function calls:
  1818 ;;		_vfpfcnvrt
  1819 ;; This function is called by:
  1820 ;;		_sprintf
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text2
  1825  0032C2                     __ptext2:
  1826                           	callstack 0
  1827  0032C2                     _vfprintf:
  1828                           	callstack 23
  1829  0032C2                     
  1830                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1831  0032C2  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  1832  0032C6  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1833  0032CA                     
  1834                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1835  0032CA  0E00               	movlw	0
  1836  0032CC  0100               	movlb	0	; () banked
  1837  0032CE  6F61               	movwf	(_nout+1)& (0+255),b
  1838  0032D0  0E00               	movlw	0
  1839  0032D2  6F60               	movwf	_nout& (0+255),b
  1840                           
  1841                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1842  0032D4  EF7F  F019         	goto	l4746
  1843  0032D8                     l4744:
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1847  0032D8  C052  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1848  0032DC  C053  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1849  0032E0  0E58               	movlw	low vfprintf@cfmt
  1850  0032E2  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1851  0032E4  0E00               	movlw	high vfprintf@cfmt
  1852  0032E6  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1853  0032E8  C056  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1854  0032EC  C057  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1855  0032F0  EC2D  F00F         	call	_vfpfcnvrt	;wreg free
  1856  0032F4  503F               	movf	?_vfpfcnvrt^0,w,c
  1857  0032F6  0100               	movlb	0	; () banked
  1858  0032F8  2760               	addwf	_nout& (0+255),f,b
  1859  0032FA  5040               	movf	(?_vfpfcnvrt+1)^0,w,c
  1860  0032FC  2361               	addwfc	(_nout+1)& (0+255),f,b
  1861  0032FE                     l4746:
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1865  0032FE  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  1866  003302  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1867  003306                     	if	0	;tblptru may be non-zero
  1868  003306                     	endif
  1869  003306                     	if	0	;tblptru may be non-zero
  1870  003306                     	endif
  1871  003306  0008               	tblrd		*
  1872  003308  50F5               	movf	tablat,w,c
  1873  00330A  0900               	iorlw	0
  1874  00330C  A4D8               	btfss	status,2,c
  1875  00330E  EF8B  F019         	goto	u4841
  1876  003312  EF8D  F019         	goto	u4840
  1877  003316                     u4841:
  1878  003316  EF6C  F019         	goto	l4744
  1879  00331A                     u4840:
  1880  00331A                     
  1881                           ; BSR set to: 0
  1882                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1883  00331A  C060  F052         	movff	_nout,?_vfprintf
  1884  00331E  C061  F053         	movff	_nout+1,?_vfprintf+1
  1885  003322                     
  1886                           ; BSR set to: 0
  1887  003322  0012               	return		;funcret
  1888  003324                     __end_of_vfprintf:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _vfpfcnvrt *****************
  1892 ;; Defined at:
  1893 ;;		line 692 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1896 ;;		 -> sprintf@f(11), 
  1897 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1898 ;;		 -> vfprintf@cfmt(2), 
  1899 ;;  ap              2   66[COMRAM] PTR PTR void 
  1900 ;;		 -> sprintf@ap(2), 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  llu             8   72[COMRAM] unsigned long long 
  1903 ;;  ll              8    0        long long 
  1904 ;;  f               4    0        long long 
  1905 ;;  vp              3    0        PTR void 
  1906 ;;  ct              3    0        unsigned char [3]
  1907 ;;  cp              3    0        PTR unsigned char 
  1908 ;;  i               2    0        int 
  1909 ;;  done            2    0        int 
  1910 ;;  c               1   80[COMRAM] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  2   62[COMRAM] int 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1920 ;;      Params:         6       0       0       0       0       0       0       0       0
  1921 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1922 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1923 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1924 ;;Total ram usage:       19 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 5
  1927 ;; This function calls:
  1928 ;;		_fputc
  1929 ;;		_xtoa
  1930 ;; This function is called by:
  1931 ;;		_vfprintf
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text3
  1936  001E5A                     __ptext3:
  1937                           	callstack 0
  1938  001E5A                     _vfpfcnvrt:
  1939                           	callstack 23
  1940  001E5A                     
  1941                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;D:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;D:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1942  001E5A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1943  001E5E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1944  001E62  CFDE FFF6          	movff	postinc2,tblptrl
  1945  001E66  CFDD FFF7          	movff	postdec2,tblptrh
  1946  001E6A                     	if	0	;tblptru may be non-zero
  1947  001E6A                     	endif
  1948  001E6A                     	if	0	;tblptru may be non-zero
  1949  001E6A                     	endif
  1950  001E6A  0008               	tblrd		*
  1951  001E6C  50F5               	movf	tablat,w,c
  1952  001E6E  0A25               	xorlw	37
  1953  001E70  A4D8               	btfss	status,2,c
  1954  001E72  EF3D  F00F         	goto	u3721
  1955  001E76  EF3F  F00F         	goto	u3720
  1956  001E7A                     u3721:
  1957  001E7A  EFF9  F00F         	goto	l4014
  1958  001E7E                     u3720:
  1959  001E7E                     
  1960                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1961  001E7E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1962  001E82  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1963  001E86  2ADE               	incf	postinc2,f,c
  1964  001E88  0E00               	movlw	0
  1965  001E8A  22DD               	addwfc	postdec2,f,c
  1966  001E8C                     
  1967                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1968  001E8C  0E00               	movlw	0
  1969  001E8E  0100               	movlb	0	; () banked
  1970  001E90  6F63               	movwf	(_width+1)& (0+255),b
  1971  001E92  0E00               	movlw	0
  1972  001E94  6F62               	movwf	_width& (0+255),b
  1973  001E96  C062  F066         	movff	_width,_flags
  1974  001E9A  C063  F067         	movff	_width+1,_flags+1
  1975  001E9E                     
  1976                           ; BSR set to: 0
  1977                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1978  001E9E  6964               	setf	_prec& (0+255),b
  1979  001EA0  6965               	setf	(_prec+1)& (0+255),b
  1980  001EA2                     
  1981                           ; BSR set to: 0
  1982                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1983  001EA2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1984  001EA6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1985  001EAA  CFDE FFF6          	movff	postinc2,tblptrl
  1986  001EAE  CFDD FFF7          	movff	postdec2,tblptrh
  1987  001EB2                     	if	0	;tblptru may be non-zero
  1988  001EB2                     	endif
  1989  001EB2                     	if	0	;tblptru may be non-zero
  1990  001EB2                     	endif
  1991  001EB2  0008               	tblrd		*
  1992  001EB4  50F5               	movf	tablat,w,c
  1993  001EB6  0A78               	xorlw	120
  1994  001EB8  B4D8               	btfsc	status,2,c
  1995  001EBA  EF61  F00F         	goto	u3731
  1996  001EBE  EF63  F00F         	goto	u3730
  1997  001EC2                     u3731:
  1998  001EC2  EF75  F00F         	goto	l3988
  1999  001EC6                     u3730:
  2000  001EC6                     
  2001                           ; BSR set to: 0
  2002  001EC6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2003  001ECA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2004  001ECE  CFDE FFF6          	movff	postinc2,tblptrl
  2005  001ED2  CFDD FFF7          	movff	postdec2,tblptrh
  2006  001ED6                     	if	0	;tblptru may be non-zero
  2007  001ED6                     	endif
  2008  001ED6                     	if	0	;tblptru may be non-zero
  2009  001ED6                     	endif
  2010  001ED6  0008               	tblrd		*
  2011  001ED8  50F5               	movf	tablat,w,c
  2012  001EDA  0A58               	xorlw	88
  2013  001EDC  A4D8               	btfss	status,2,c
  2014  001EDE  EF73  F00F         	goto	u3741
  2015  001EE2  EF75  F00F         	goto	u3740
  2016  001EE6                     u3741:
  2017  001EE6  EFC3  F00F         	goto	l3998
  2018  001EEA                     u3740:
  2019  001EEA                     l3988:
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  2023  001EEA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2024  001EEE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2025  001EF2  CFDE FFF6          	movff	postinc2,tblptrl
  2026  001EF6  CFDD FFF7          	movff	postdec2,tblptrh
  2027  001EFA                     	if	0	;tblptru may be non-zero
  2028  001EFA                     	endif
  2029  001EFA                     	if	0	;tblptru may be non-zero
  2030  001EFA                     	endif
  2031  001EFA  0008               	tblrd		*
  2032  001EFC  CFF5 F051          	movff	tablat,vfpfcnvrt@c
  2033  001F00                     
  2034                           ; BSR set to: 0
  2035                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  2036  001F00  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2037  001F04  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2038  001F08  2ADE               	incf	postinc2,f,c
  2039  001F0A  0E00               	movlw	0
  2040  001F0C  22DD               	addwfc	postdec2,f,c
  2041  001F0E                     
  2042                           ; BSR set to: 0
  2043                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2044  001F0E  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2045  001F12  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2046  001F16  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2047  001F1A  0E02               	movlw	2
  2048  001F1C  26DE               	addwf	postinc2,f,c
  2049  001F1E  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2050  001F22  0E00               	movlw	0
  2051  001F24  22DD               	addwfc	postdec2,f,c
  2052  001F26  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2053  001F2A  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2054  001F2E  CFDE F047          	movff	postinc2,??_vfpfcnvrt+2
  2055  001F32  CFDD F048          	movff	postdec2,??_vfpfcnvrt+3
  2056  001F36  C047  F049         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2057  001F3A  C048  F04A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2058  001F3E  6A4B               	clrf	(vfpfcnvrt@llu+2)^0,c
  2059  001F40  6A4C               	clrf	(vfpfcnvrt@llu+3)^0,c
  2060  001F42  6A4D               	clrf	(vfpfcnvrt@llu+4)^0,c
  2061  001F44  6A4E               	clrf	(vfpfcnvrt@llu+5)^0,c
  2062  001F46  6A4F               	clrf	(vfpfcnvrt@llu+6)^0,c
  2063  001F48  6A50               	clrf	(vfpfcnvrt@llu+7)^0,c
  2064  001F4A                     
  2065                           ; BSR set to: 0
  2066                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  2067  001F4A  C03F  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  2068  001F4E  C040  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2069  001F52  C049  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  2070  001F56  C04A  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2071  001F5A  C04B  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2072  001F5E  C04C  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2073  001F62  C04D  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2074  001F66  C04E  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2075  001F6A  C04F  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2076  001F6E  C050  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2077  001F72  C051  F026         	movff	vfpfcnvrt@c,xtoa@x
  2078  001F76  EC06  F00A         	call	_xtoa	;wreg free
  2079  001F7A  C01C  F03F         	movff	?_xtoa,?_vfpfcnvrt
  2080  001F7E  C01D  F040         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2081  001F82  EF14  F010         	goto	l1323
  2082  001F86                     l3998:
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2086  001F86  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2087  001F8A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2088  001F8E  CFDE FFF6          	movff	postinc2,tblptrl
  2089  001F92  CFDD FFF7          	movff	postdec2,tblptrh
  2090  001F96                     	if	0	;tblptru may be non-zero
  2091  001F96                     	endif
  2092  001F96                     	if	0	;tblptru may be non-zero
  2093  001F96                     	endif
  2094  001F96  0008               	tblrd		*
  2095  001F98  50F5               	movf	tablat,w,c
  2096  001F9A  0A25               	xorlw	37
  2097  001F9C  A4D8               	btfss	status,2,c
  2098  001F9E  EFD3  F00F         	goto	u3751
  2099  001FA2  EFD5  F00F         	goto	u3750
  2100  001FA6                     u3751:
  2101  001FA6  EFEC  F00F         	goto	l4008
  2102  001FAA                     u3750:
  2103  001FAA                     
  2104                           ; BSR set to: 0
  2105                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2106  001FAA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2107  001FAE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2108  001FB2  2ADE               	incf	postinc2,f,c
  2109  001FB4  0E00               	movlw	0
  2110  001FB6  22DD               	addwfc	postdec2,f,c
  2111  001FB8                     
  2112                           ; BSR set to: 0
  2113                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2114  001FB8  0E00               	movlw	0
  2115  001FBA  6E02               	movwf	(fputc@c+1)^0,c
  2116  001FBC  0E25               	movlw	37
  2117  001FBE  6E01               	movwf	fputc@c^0,c
  2118  001FC0  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2119  001FC4  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2120  001FC8  EC5F  F012         	call	_fputc	;wreg free
  2121  001FCC                     l4004:
  2122                           
  2123                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2124  001FCC  0E00               	movlw	0
  2125  001FCE  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
  2126  001FD0  0E01               	movlw	1
  2127  001FD2  6E3F               	movwf	?_vfpfcnvrt^0,c
  2128  001FD4  EF14  F010         	goto	l1323
  2129  001FD8                     l4008:
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2133  001FD8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2134  001FDC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2135  001FE0  2ADE               	incf	postinc2,f,c
  2136  001FE2  0E00               	movlw	0
  2137  001FE4  22DD               	addwfc	postdec2,f,c
  2138  001FE6                     
  2139                           ; BSR set to: 0
  2140                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2141  001FE6  0E00               	movlw	0
  2142  001FE8  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
  2143  001FEA  0E00               	movlw	0
  2144  001FEC  6E3F               	movwf	?_vfpfcnvrt^0,c
  2145  001FEE  EF14  F010         	goto	l1323
  2146  001FF2                     l4014:
  2147                           
  2148                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2149  001FF2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2150  001FF6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2151  001FFA  CFDE FFF6          	movff	postinc2,tblptrl
  2152  001FFE  CFDD FFF7          	movff	postdec2,tblptrh
  2153  002002                     	if	0	;tblptru may be non-zero
  2154  002002                     	endif
  2155  002002                     	if	0	;tblptru may be non-zero
  2156  002002                     	endif
  2157  002002  0008               	tblrd		*
  2158  002004  50F5               	movf	tablat,w,c
  2159  002006  6E01               	movwf	fputc@c^0,c
  2160  002008  6A02               	clrf	(fputc@c+1)^0,c
  2161  00200A  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2162  00200E  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2163  002012  EC5F  F012         	call	_fputc	;wreg free
  2164  002016                     
  2165                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2166  002016  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2167  00201A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2168  00201E  2ADE               	incf	postinc2,f,c
  2169  002020  0E00               	movlw	0
  2170  002022  22DD               	addwfc	postdec2,f,c
  2171  002024  EFE6  F00F         	goto	l4004
  2172  002028                     l1323:
  2173  002028  0012               	return		;funcret
  2174  00202A                     __end_of_vfpfcnvrt:
  2175                           	callstack 0
  2176                           
  2177 ;; *************** function _xtoa *****************
  2178 ;; Defined at:
  2179 ;;		line 645 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2182 ;;		 -> sprintf@f(11), 
  2183 ;;  d               8   29[COMRAM] unsigned long long 
  2184 ;;  x               1   37[COMRAM] unsigned char 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  n               8   50[COMRAM] unsigned long long 
  2187 ;;  c               2   60[COMRAM] int 
  2188 ;;  i               2   58[COMRAM] int 
  2189 ;;  w               2   48[COMRAM] int 
  2190 ;;  p               2   46[COMRAM] int 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  2   27[COMRAM] int 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2200 ;;      Params:        11       0       0       0       0       0       0       0       0
  2201 ;;      Locals:        16       0       0       0       0       0       0       0       0
  2202 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2203 ;;      Totals:        35       0       0       0       0       0       0       0       0
  2204 ;;Total ram usage:       35 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 4
  2207 ;; This function calls:
  2208 ;;		_isalpha
  2209 ;;		_isupper
  2210 ;;		_pad
  2211 ;;		_toupper
  2212 ;; This function is called by:
  2213 ;;		_vfpfcnvrt
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text4
  2218  00140C                     __ptext4:
  2219                           	callstack 0
  2220  00140C                     _xtoa:
  2221                           	callstack 23
  2222  00140C                     
  2223                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;D:\Program Files\Microchip\xc8\v2.36\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;D:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  2224  00140C  0100               	movlb	0	; () banked
  2225  00140E  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2226  001410  EF0C  F00A         	goto	u3201
  2227  001414  EF0E  F00A         	goto	u3200
  2228  001418                     u3201:
  2229  001418  EF0F  F00A         	goto	l3654
  2230  00141C                     u3200:
  2231  00141C                     
  2232                           ; BSR set to: 0
  2233                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  2234  00141C  9366               	bcf	_flags& (0+255),1,b
  2235  00141E                     l3654:
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  2239  00141E  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2240  001420  EF1C  F00A         	goto	u3210
  2241  001424  5165               	movf	(_prec+1)& (0+255),w,b
  2242  001426  E106               	bnz	u3211
  2243  001428  0564               	decf	_prec& (0+255),w,b
  2244  00142A  B0D8               	btfsc	status,0,c
  2245  00142C  EF1A  F00A         	goto	u3211
  2246  001430  EF1C  F00A         	goto	u3210
  2247  001434                     u3211:
  2248  001434  EF22  F00A         	goto	l1295
  2249  001438                     u3210:
  2250  001438                     
  2251                           ; BSR set to: 0
  2252  001438  0E00               	movlw	0
  2253  00143A  6E30               	movwf	(xtoa@p+1)^0,c
  2254  00143C  0E01               	movlw	1
  2255  00143E  6E2F               	movwf	xtoa@p^0,c
  2256  001440  EF26  F00A         	goto	l1297
  2257  001444                     l1295:
  2258                           
  2259                           ; BSR set to: 0
  2260  001444  C064  F02F         	movff	_prec,xtoa@p
  2261  001448  C065  F030         	movff	_prec+1,xtoa@p+1
  2262  00144C                     l1297:
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  2266  00144C  C062  F031         	movff	_width,xtoa@w
  2267  001450  C063  F032         	movff	_width+1,xtoa@w+1
  2268                           
  2269                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  2270  001454  A966               	btfss	_flags& (0+255),4,b
  2271  001456  EF2F  F00A         	goto	u3221
  2272  00145A  EF31  F00A         	goto	u3220
  2273  00145E                     u3221:
  2274  00145E  EF35  F00A         	goto	l3660
  2275  001462                     u3220:
  2276  001462                     
  2277                           ; BSR set to: 0
  2278                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  2279  001462  0EFE               	movlw	254
  2280  001464  2631               	addwf	xtoa@w^0,f,c
  2281  001466  0EFF               	movlw	255
  2282  001468  2232               	addwfc	(xtoa@w+1)^0,f,c
  2283  00146A                     l3660:
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 661:     n = d;
  2287  00146A  C01E  F033         	movff	xtoa@d,xtoa@n
  2288  00146E  C01F  F034         	movff	xtoa@d+1,xtoa@n+1
  2289  001472  C020  F035         	movff	xtoa@d+2,xtoa@n+2
  2290  001476  C021  F036         	movff	xtoa@d+3,xtoa@n+3
  2291  00147A  C022  F037         	movff	xtoa@d+4,xtoa@n+4
  2292  00147E  C023  F038         	movff	xtoa@d+5,xtoa@n+5
  2293  001482  C024  F039         	movff	xtoa@d+6,xtoa@n+6
  2294  001486  C025  F03A         	movff	xtoa@d+7,xtoa@n+7
  2295  00148A                     
  2296                           ; BSR set to: 0
  2297                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  2298  00148A  0E00               	movlw	0
  2299  00148C  6E3C               	movwf	(xtoa@i+1)^0,c
  2300  00148E  0E1F               	movlw	31
  2301  001490  6E3B               	movwf	xtoa@i^0,c
  2302  001492                     
  2303                           ; BSR set to: 0
  2304                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  2305  001492  0E00               	movlw	0
  2306  001494  6F8C               	movwf	(_dbuf+31)& (0+255),b
  2307                           
  2308                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2309  001496  EFE6  F00A         	goto	l3696
  2310  00149A                     l3666:
  2311                           
  2312                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 665:         --i;
  2313  00149A  063B               	decf	xtoa@i^0,f,c
  2314  00149C  A0D8               	btfss	status,0,c
  2315  00149E  063C               	decf	(xtoa@i+1)^0,f,c
  2316  0014A0                     
  2317                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  2318  0014A0  0E0F               	movlw	15
  2319  0014A2  1433               	andwf	xtoa@n^0,w,c
  2320  0014A4  6E3D               	movwf	xtoa@c^0,c
  2321  0014A6  6A3E               	clrf	(xtoa@c+1)^0,c
  2322  0014A8                     
  2323                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  2324  0014A8  BE3E               	btfsc	(xtoa@c+1)^0,7,c
  2325  0014AA  EF60  F00A         	goto	u3231
  2326  0014AE  503E               	movf	(xtoa@c+1)^0,w,c
  2327  0014B0  E109               	bnz	u3230
  2328  0014B2  0E0A               	movlw	10
  2329  0014B4  5C3D               	subwf	xtoa@c^0,w,c
  2330  0014B6  A0D8               	btfss	status,0,c
  2331  0014B8  EF60  F00A         	goto	u3231
  2332  0014BC  EF62  F00A         	goto	u3230
  2333  0014C0                     u3231:
  2334  0014C0  EF6A  F00A         	goto	l3674
  2335  0014C4                     u3230:
  2336  0014C4  0E57               	movlw	87
  2337  0014C6  243D               	addwf	xtoa@c^0,w,c
  2338  0014C8  6E3D               	movwf	xtoa@c^0,c
  2339  0014CA  0E00               	movlw	0
  2340  0014CC  203E               	addwfc	(xtoa@c+1)^0,w,c
  2341  0014CE  6E3E               	movwf	(xtoa@c+1)^0,c
  2342  0014D0  EF70  F00A         	goto	l3678
  2343  0014D4                     l3674:
  2344  0014D4  0E30               	movlw	48
  2345  0014D6  243D               	addwf	xtoa@c^0,w,c
  2346  0014D8  6E3D               	movwf	xtoa@c^0,c
  2347  0014DA  0E00               	movlw	0
  2348  0014DC  203E               	addwfc	(xtoa@c+1)^0,w,c
  2349  0014DE  6E3E               	movwf	(xtoa@c+1)^0,c
  2350  0014E0                     l3678:
  2351  0014E0  0EBF               	movlw	191
  2352  0014E2  6E27               	movwf	??_xtoa^0,c
  2353  0014E4  0EFF               	movlw	255
  2354  0014E6  6E28               	movwf	(??_xtoa+1)^0,c
  2355  0014E8  5026               	movf	xtoa@x^0,w,c
  2356  0014EA  6E29               	movwf	(??_xtoa+2)^0,c
  2357  0014EC  6A2A               	clrf	(??_xtoa+3)^0,c
  2358  0014EE  5027               	movf	??_xtoa^0,w,c
  2359  0014F0  2629               	addwf	(??_xtoa+2)^0,f,c
  2360  0014F2  5028               	movf	(??_xtoa+1)^0,w,c
  2361  0014F4  222A               	addwfc	(??_xtoa+3)^0,f,c
  2362  0014F6  502A               	movf	(??_xtoa+3)^0,w,c
  2363  0014F8  E107               	bnz	u3241
  2364  0014FA  0E1A               	movlw	26
  2365  0014FC  5C29               	subwf	(??_xtoa+2)^0,w,c
  2366  0014FE  B0D8               	btfsc	status,0,c
  2367  001500  EF84  F00A         	goto	u3241
  2368  001504  EF86  F00A         	goto	u3240
  2369  001508                     u3241:
  2370  001508  EFA9  F00A         	goto	l3688
  2371  00150C                     u3240:
  2372  00150C  0E9F               	movlw	159
  2373  00150E  6E27               	movwf	??_xtoa^0,c
  2374  001510  0EFF               	movlw	255
  2375  001512  6E28               	movwf	(??_xtoa+1)^0,c
  2376  001514  0E20               	movlw	32
  2377  001516  103D               	iorwf	xtoa@c^0,w,c
  2378  001518  6E29               	movwf	(??_xtoa+2)^0,c
  2379  00151A  0E00               	movlw	0
  2380  00151C  103E               	iorwf	(xtoa@c+1)^0,w,c
  2381  00151E  6E2A               	movwf	(??_xtoa+3)^0,c
  2382  001520  5027               	movf	??_xtoa^0,w,c
  2383  001522  2629               	addwf	(??_xtoa+2)^0,f,c
  2384  001524  5028               	movf	(??_xtoa+1)^0,w,c
  2385  001526  222A               	addwfc	(??_xtoa+3)^0,f,c
  2386  001528  502A               	movf	(??_xtoa+3)^0,w,c
  2387  00152A  E107               	bnz	u3251
  2388  00152C  0E1A               	movlw	26
  2389  00152E  5C29               	subwf	(??_xtoa+2)^0,w,c
  2390  001530  B0D8               	btfsc	status,0,c
  2391  001532  EF9D  F00A         	goto	u3251
  2392  001536  EF9F  F00A         	goto	u3250
  2393  00153A                     u3251:
  2394  00153A  EFA9  F00A         	goto	l3688
  2395  00153E                     u3250:
  2396  00153E                     
  2397                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  2398  00153E  C03D  F007         	movff	xtoa@c,toupper@c
  2399  001542  C03E  F008         	movff	xtoa@c+1,toupper@c+1
  2400  001546  ECE4  F01A         	call	_toupper	;wreg free
  2401  00154A  C007  F03D         	movff	?_toupper,xtoa@c
  2402  00154E  C008  F03E         	movff	?_toupper+1,xtoa@c+1
  2403  001552                     l3688:
  2404                           
  2405                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  2406  001552  0E6D               	movlw	low _dbuf
  2407  001554  243B               	addwf	xtoa@i^0,w,c
  2408  001556  6ED9               	movwf	fsr2l,c
  2409  001558  0E00               	movlw	high _dbuf
  2410  00155A  203C               	addwfc	(xtoa@i+1)^0,w,c
  2411  00155C  6EDA               	movwf	fsr2h,c
  2412  00155E  C03D  FFDF         	movff	xtoa@c,indf2
  2413  001562                     
  2414                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 672:         --p;
  2415  001562  062F               	decf	xtoa@p^0,f,c
  2416  001564  A0D8               	btfss	status,0,c
  2417  001566  0630               	decf	(xtoa@p+1)^0,f,c
  2418  001568                     
  2419                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 673:         --w;
  2420  001568  0631               	decf	xtoa@w^0,f,c
  2421  00156A  A0D8               	btfss	status,0,c
  2422  00156C  0632               	decf	(xtoa@w+1)^0,f,c
  2423  00156E                     
  2424                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  2425  00156E  C033  F027         	movff	xtoa@n,??_xtoa
  2426  001572  C034  F028         	movff	xtoa@n+1,??_xtoa+1
  2427  001576  C035  F029         	movff	xtoa@n+2,??_xtoa+2
  2428  00157A  C036  F02A         	movff	xtoa@n+3,??_xtoa+3
  2429  00157E  C037  F02B         	movff	xtoa@n+4,??_xtoa+4
  2430  001582  C038  F02C         	movff	xtoa@n+5,??_xtoa+5
  2431  001586  C039  F02D         	movff	xtoa@n+6,??_xtoa+6
  2432  00158A  C03A  F02E         	movff	xtoa@n+7,??_xtoa+7
  2433  00158E  0E05               	movlw	5
  2434  001590  EFD3  F00A         	goto	u3260
  2435  001594                     u3265:
  2436  001594  90D8               	bcf	status,0,c
  2437  001596  322E               	rrcf	(??_xtoa+7)^0,f,c
  2438  001598  322D               	rrcf	(??_xtoa+6)^0,f,c
  2439  00159A  322C               	rrcf	(??_xtoa+5)^0,f,c
  2440  00159C  322B               	rrcf	(??_xtoa+4)^0,f,c
  2441  00159E  322A               	rrcf	(??_xtoa+3)^0,f,c
  2442  0015A0  3229               	rrcf	(??_xtoa+2)^0,f,c
  2443  0015A2  3228               	rrcf	(??_xtoa+1)^0,f,c
  2444  0015A4  3227               	rrcf	??_xtoa^0,f,c
  2445  0015A6                     u3260:
  2446  0015A6  2EE8               	decfsz	wreg,f,c
  2447  0015A8  EFCA  F00A         	goto	u3265
  2448  0015AC  C027  F033         	movff	??_xtoa,xtoa@n
  2449  0015B0  C028  F034         	movff	??_xtoa+1,xtoa@n+1
  2450  0015B4  C029  F035         	movff	??_xtoa+2,xtoa@n+2
  2451  0015B8  C02A  F036         	movff	??_xtoa+3,xtoa@n+3
  2452  0015BC  C02B  F037         	movff	??_xtoa+4,xtoa@n+4
  2453  0015C0  C02C  F038         	movff	??_xtoa+5,xtoa@n+5
  2454  0015C4  C02D  F039         	movff	??_xtoa+6,xtoa@n+6
  2455  0015C8  C02E  F03A         	movff	??_xtoa+7,xtoa@n+7
  2456  0015CC                     l3696:
  2457                           
  2458                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2459  0015CC  BE3C               	btfsc	(xtoa@i+1)^0,7,c
  2460  0015CE  EFF2  F00A         	goto	u3271
  2461  0015D2  503C               	movf	(xtoa@i+1)^0,w,c
  2462  0015D4  E109               	bnz	u3270
  2463  0015D6  0E02               	movlw	2
  2464  0015D8  5C3B               	subwf	xtoa@i^0,w,c
  2465  0015DA  A0D8               	btfss	status,0,c
  2466  0015DC  EFF2  F00A         	goto	u3271
  2467  0015E0  EFF4  F00A         	goto	u3270
  2468  0015E4                     u3271:
  2469  0015E4  EF25  F00B         	goto	l1314
  2470  0015E8                     u3270:
  2471  0015E8  5033               	movf	xtoa@n^0,w,c
  2472  0015EA  1034               	iorwf	(xtoa@n+1)^0,w,c
  2473  0015EC  1035               	iorwf	(xtoa@n+2)^0,w,c
  2474  0015EE  1036               	iorwf	(xtoa@n+3)^0,w,c
  2475  0015F0  1037               	iorwf	(xtoa@n+4)^0,w,c
  2476  0015F2  1038               	iorwf	(xtoa@n+5)^0,w,c
  2477  0015F4  1039               	iorwf	(xtoa@n+6)^0,w,c
  2478  0015F6  103A               	iorwf	(xtoa@n+7)^0,w,c
  2479  0015F8  A4D8               	btfss	status,2,c
  2480  0015FA  EF01  F00B         	goto	u3281
  2481  0015FE  EF03  F00B         	goto	u3280
  2482  001602                     u3281:
  2483  001602  EF4D  F00A         	goto	l3666
  2484  001606                     u3280:
  2485  001606  BE30               	btfsc	(xtoa@p+1)^0,7,c
  2486  001608  EF10  F00B         	goto	u3290
  2487  00160C  5030               	movf	(xtoa@p+1)^0,w,c
  2488  00160E  E106               	bnz	u3291
  2489  001610  042F               	decf	xtoa@p^0,w,c
  2490  001612  B0D8               	btfsc	status,0,c
  2491  001614  EF0E  F00B         	goto	u3291
  2492  001618  EF10  F00B         	goto	u3290
  2493  00161C                     u3291:
  2494  00161C  EF4D  F00A         	goto	l3666
  2495  001620                     u3290:
  2496  001620  BE32               	btfsc	(xtoa@w+1)^0,7,c
  2497  001622  EF1B  F00B         	goto	u3301
  2498  001626  5032               	movf	(xtoa@w+1)^0,w,c
  2499  001628  E108               	bnz	u3300
  2500  00162A  0431               	decf	xtoa@w^0,w,c
  2501  00162C  A0D8               	btfss	status,0,c
  2502  00162E  EF1B  F00B         	goto	u3301
  2503  001632  EF1D  F00B         	goto	u3300
  2504  001636                     u3301:
  2505  001636  EF25  F00B         	goto	l1314
  2506  00163A                     u3300:
  2507  00163A  0100               	movlb	0	; () banked
  2508  00163C  B366               	btfsc	_flags& (0+255),1,b
  2509  00163E  EF23  F00B         	goto	u3311
  2510  001642  EF25  F00B         	goto	u3310
  2511  001646                     u3311:
  2512  001646  EF4D  F00A         	goto	l3666
  2513  00164A                     u3310:
  2514  00164A                     l1314:
  2515                           
  2516                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  2517  00164A  0100               	movlb	0	; () banked
  2518  00164C  A966               	btfss	_flags& (0+255),4,b
  2519  00164E  EF2B  F00B         	goto	u3321
  2520  001652  EF2D  F00B         	goto	u3320
  2521  001656                     u3321:
  2522  001656  EF43  F00B         	goto	l3712
  2523  00165A                     u3320:
  2524  00165A                     
  2525                           ; BSR set to: 0
  2526                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 679:         --i;
  2527  00165A  063B               	decf	xtoa@i^0,f,c
  2528  00165C  A0D8               	btfss	status,0,c
  2529  00165E  063C               	decf	(xtoa@i+1)^0,f,c
  2530  001660                     
  2531                           ; BSR set to: 0
  2532                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  2533  001660  0E6D               	movlw	low _dbuf
  2534  001662  243B               	addwf	xtoa@i^0,w,c
  2535  001664  6ED9               	movwf	fsr2l,c
  2536  001666  0E00               	movlw	high _dbuf
  2537  001668  203C               	addwfc	(xtoa@i+1)^0,w,c
  2538  00166A  6EDA               	movwf	fsr2h,c
  2539  00166C  C026  FFDF         	movff	xtoa@x,indf2
  2540  001670                     
  2541                           ; BSR set to: 0
  2542                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 681:         --i;
  2543  001670  063B               	decf	xtoa@i^0,f,c
  2544  001672  A0D8               	btfss	status,0,c
  2545  001674  063C               	decf	(xtoa@i+1)^0,f,c
  2546                           
  2547                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  2548  001676  0E6D               	movlw	low _dbuf
  2549  001678  243B               	addwf	xtoa@i^0,w,c
  2550  00167A  6ED9               	movwf	fsr2l,c
  2551  00167C  0E00               	movlw	high _dbuf
  2552  00167E  203C               	addwfc	(xtoa@i+1)^0,w,c
  2553  001680  6EDA               	movwf	fsr2h,c
  2554  001682  0E30               	movlw	48
  2555  001684  6EDF               	movwf	indf2,c
  2556  001686                     l3712:
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  2560  001686  C01C  F011         	movff	xtoa@fp,pad@fp
  2561  00168A  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  2562  00168E  0E6D               	movlw	low _dbuf
  2563  001690  243B               	addwf	xtoa@i^0,w,c
  2564  001692  6E13               	movwf	pad@buf^0,c
  2565  001694  0E00               	movlw	high _dbuf
  2566  001696  203C               	addwfc	(xtoa@i+1)^0,w,c
  2567  001698  6E14               	movwf	(pad@buf+1)^0,c
  2568  00169A  C031  F015         	movff	xtoa@w,pad@p
  2569  00169E  C032  F016         	movff	xtoa@w+1,pad@p+1
  2570  0016A2  ECC4  F012         	call	_pad	;wreg free
  2571  0016A6  C011  F01C         	movff	?_pad,?_xtoa
  2572  0016AA  C012  F01D         	movff	?_pad+1,?_xtoa+1
  2573  0016AE  0012               	return		;funcret
  2574  0016B0                     __end_of_xtoa:
  2575                           	callstack 0
  2576                           
  2577 ;; *************** function _toupper *****************
  2578 ;; Defined at:
  2579 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\toupper.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  c               2    6[COMRAM] int 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;		None
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  2    6[COMRAM] int 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2593 ;;      Params:         2       0       0       0       0       0       0       0       0
  2594 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2595 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2596 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2597 ;;Total ram usage:        6 bytes
  2598 ;; Hardware stack levels used: 1
  2599 ;; Hardware stack levels required when called: 1
  2600 ;; This function calls:
  2601 ;;		_islower
  2602 ;; This function is called by:
  2603 ;;		_xtoa
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text5
  2608  0035C8                     __ptext5:
  2609                           	callstack 0
  2610  0035C8                     _toupper:
  2611                           	callstack 25
  2612  0035C8  0E9F               	movlw	159
  2613  0035CA  6E09               	movwf	??_toupper^0,c
  2614  0035CC  0EFF               	movlw	255
  2615  0035CE  6E0A               	movwf	(??_toupper+1)^0,c
  2616  0035D0  C007  F00B         	movff	toupper@c,??_toupper+2
  2617  0035D4  C008  F00C         	movff	toupper@c+1,??_toupper+3
  2618  0035D8  5009               	movf	??_toupper^0,w,c
  2619  0035DA  260B               	addwf	(??_toupper+2)^0,f,c
  2620  0035DC  500A               	movf	(??_toupper+1)^0,w,c
  2621  0035DE  220C               	addwfc	(??_toupper+3)^0,f,c
  2622  0035E0  500C               	movf	(??_toupper+3)^0,w,c
  2623  0035E2  E107               	bnz	u3191
  2624  0035E4  0E1A               	movlw	26
  2625  0035E6  5C0B               	subwf	(??_toupper+2)^0,w,c
  2626  0035E8  B0D8               	btfsc	status,0,c
  2627  0035EA  EFF9  F01A         	goto	u3191
  2628  0035EE  EFFB  F01A         	goto	u3190
  2629  0035F2                     u3191:
  2630  0035F2  EF01  F01B         	goto	l1376
  2631  0035F6                     u3190:
  2632  0035F6  0E5F               	movlw	95
  2633  0035F8  1407               	andwf	toupper@c^0,w,c
  2634  0035FA  6E07               	movwf	?_toupper^0,c
  2635  0035FC  6A08               	clrf	(?_toupper+1)^0,c
  2636  0035FE  EF05  F01B         	goto	l1379
  2637  003602                     l1376:
  2638  003602  C007  F007         	movff	toupper@c,?_toupper
  2639  003606  C008  F008         	movff	toupper@c+1,?_toupper+1
  2640  00360A                     l1379:
  2641  00360A  0012               	return		;funcret
  2642  00360C                     __end_of_toupper:
  2643                           	callstack 0
  2644                           
  2645 ;; *************** function _islower *****************
  2646 ;; Defined at:
  2647 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\islower.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  c               2    0[COMRAM] int 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  2    0[COMRAM] int 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2661 ;;      Params:         2       0       0       0       0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2663 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2664 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2665 ;;Total ram usage:        6 bytes
  2666 ;; Hardware stack levels used: 1
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_toupper
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text6
  2675  00368C                     __ptext6:
  2676                           	callstack 0
  2677  00368C                     _islower:
  2678                           	callstack 25
  2679  00368C  0E9F               	movlw	159
  2680  00368E  6E03               	movwf	??_islower^0,c
  2681  003690  0EFF               	movlw	255
  2682  003692  6E04               	movwf	(??_islower+1)^0,c
  2683  003694  C001  F005         	movff	islower@c,??_islower+2
  2684  003698  C002  F006         	movff	islower@c+1,??_islower+3
  2685  00369C  5003               	movf	??_islower^0,w,c
  2686  00369E  2605               	addwf	(??_islower+2)^0,f,c
  2687  0036A0  5004               	movf	(??_islower+1)^0,w,c
  2688  0036A2  2206               	addwfc	(??_islower+3)^0,f,c
  2689  0036A4  5006               	movf	(??_islower+3)^0,w,c
  2690  0036A6  E10A               	bnz	u2700
  2691  0036A8  0E1A               	movlw	26
  2692  0036AA  5C05               	subwf	(??_islower+2)^0,w,c
  2693  0036AC  A0D8               	btfss	status,0,c
  2694  0036AE  EF5B  F01B         	goto	u2701
  2695  0036B2  EF5E  F01B         	goto	u2700
  2696  0036B6                     u2701:
  2697  0036B6  0E01               	movlw	1
  2698  0036B8  EF5F  F01B         	goto	u2710
  2699  0036BC                     u2700:
  2700  0036BC  0E00               	movlw	0
  2701  0036BE                     u2710:
  2702  0036BE  6E01               	movwf	?_islower^0,c
  2703  0036C0  6A02               	clrf	(?_islower+1)^0,c
  2704  0036C2  0012               	return		;funcret
  2705  0036C4                     __end_of_islower:
  2706                           	callstack 0
  2707                           
  2708 ;; *************** function _pad *****************
  2709 ;; Defined at:
  2710 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2713 ;;		 -> sprintf@f(11), 
  2714 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2715 ;;		 -> dbuf(32), 
  2716 ;;  p               2   20[COMRAM] int 
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  w               2   25[COMRAM] int 
  2719 ;;  i               2   23[COMRAM] int 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  2   16[COMRAM] int 
  2722 ;; Registers used:
  2723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2729 ;;      Params:         6       0       0       0       0       0       0       0       0
  2730 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2731 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2732 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2733 ;;Total ram usage:       11 bytes
  2734 ;; Hardware stack levels used: 1
  2735 ;; Hardware stack levels required when called: 3
  2736 ;; This function calls:
  2737 ;;		_fputc
  2738 ;;		_fputs
  2739 ;;		_strlen
  2740 ;; This function is called by:
  2741 ;;		_xtoa
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text7
  2746  002588                     __ptext7:
  2747                           	callstack 0
  2748  002588                     _pad:
  2749                           	callstack 23
  2750  002588                     
  2751                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2752  002588  0100               	movlb	0	; () banked
  2753  00258A  A166               	btfss	_flags& (0+255),0,b
  2754  00258C  EFCA  F012         	goto	u3111
  2755  002590  EFCC  F012         	goto	u3110
  2756  002594                     u3111:
  2757  002594  EFD6  F012         	goto	l3576
  2758  002598                     u3110:
  2759  002598                     
  2760                           ; BSR set to: 0
  2761                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2762  002598  C013  F00A         	movff	pad@buf,fputs@s
  2763  00259C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2764  0025A0  C011  F00C         	movff	pad@fp,fputs@fp
  2765  0025A4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2766  0025A8  EC06  F01B         	call	_fputs	;wreg free
  2767  0025AC                     l3576:
  2768                           
  2769                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2770  0025AC  BE16               	btfsc	(pad@p+1)^0,7,c
  2771  0025AE  EFDB  F012         	goto	u3121
  2772  0025B2  EFDD  F012         	goto	u3120
  2773  0025B6                     u3121:
  2774  0025B6  EFE3  F012         	goto	l3580
  2775  0025BA                     u3120:
  2776  0025BA  C015  F01A         	movff	pad@p,pad@w
  2777  0025BE  C016  F01B         	movff	pad@p+1,pad@w+1
  2778  0025C2  EFE7  F012         	goto	l1285
  2779  0025C6                     l3580:
  2780  0025C6  0E00               	movlw	0
  2781  0025C8  6E1B               	movwf	(pad@w+1)^0,c
  2782  0025CA  0E00               	movlw	0
  2783  0025CC  6E1A               	movwf	pad@w^0,c
  2784  0025CE                     l1285:
  2785                           
  2786                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2787  0025CE  0E00               	movlw	0
  2788  0025D0  6E19               	movwf	(pad@i+1)^0,c
  2789  0025D2  0E00               	movlw	0
  2790  0025D4  6E18               	movwf	pad@i^0,c
  2791                           
  2792                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2793  0025D6  EFF9  F012         	goto	l3586
  2794  0025DA                     l3582:
  2795                           
  2796                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2797  0025DA  0E00               	movlw	0
  2798  0025DC  6E02               	movwf	(fputc@c+1)^0,c
  2799  0025DE  0E20               	movlw	32
  2800  0025E0  6E01               	movwf	fputc@c^0,c
  2801  0025E2  C011  F003         	movff	pad@fp,fputc@fp
  2802  0025E6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2803  0025EA  EC5F  F012         	call	_fputc	;wreg free
  2804  0025EE                     
  2805                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2806  0025EE  4A18               	infsnz	pad@i^0,f,c
  2807  0025F0  2A19               	incf	(pad@i+1)^0,f,c
  2808  0025F2                     l3586:
  2809                           
  2810                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2811  0025F2  501A               	movf	pad@w^0,w,c
  2812  0025F4  5C18               	subwf	pad@i^0,w,c
  2813  0025F6  5019               	movf	(pad@i+1)^0,w,c
  2814  0025F8  0A80               	xorlw	128
  2815  0025FA  6E17               	movwf	??_pad^0,c
  2816  0025FC  501B               	movf	(pad@w+1)^0,w,c
  2817  0025FE  0A80               	xorlw	128
  2818  002600  5817               	subwfb	??_pad^0,w,c
  2819  002602  A0D8               	btfss	status,0,c
  2820  002604  EF06  F013         	goto	u3131
  2821  002608  EF08  F013         	goto	u3130
  2822  00260C                     u3131:
  2823  00260C  EFED  F012         	goto	l3582
  2824  002610                     u3130:
  2825  002610                     
  2826                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2827  002610  0100               	movlb	0	; () banked
  2828  002612  B166               	btfsc	_flags& (0+255),0,b
  2829  002614  EF0E  F013         	goto	u3141
  2830  002618  EF10  F013         	goto	u3140
  2831  00261C                     u3141:
  2832  00261C  EF1A  F013         	goto	l3590
  2833  002620                     u3140:
  2834  002620                     
  2835                           ; BSR set to: 0
  2836                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2837  002620  C013  F00A         	movff	pad@buf,fputs@s
  2838  002624  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2839  002628  C011  F00C         	movff	pad@fp,fputs@fp
  2840  00262C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2841  002630  EC06  F01B         	call	_fputs	;wreg free
  2842  002634                     l3590:
  2843                           
  2844                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2845  002634  C013  F001         	movff	pad@buf,strlen@s
  2846  002638  C014  F002         	movff	pad@buf+1,strlen@s+1
  2847  00263C  EC97  F01A         	call	_strlen	;wreg free
  2848  002640  501A               	movf	pad@w^0,w,c
  2849  002642  2401               	addwf	?_strlen^0,w,c
  2850  002644  6E11               	movwf	?_pad^0,c
  2851  002646  501B               	movf	(pad@w+1)^0,w,c
  2852  002648  2002               	addwfc	(?_strlen+1)^0,w,c
  2853  00264A  6E12               	movwf	(?_pad+1)^0,c
  2854  00264C  0012               	return		;funcret
  2855  00264E                     __end_of_pad:
  2856                           	callstack 0
  2857                           
  2858 ;; *************** function _fputs *****************
  2859 ;; Defined at:
  2860 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2863 ;;		 -> dbuf(32), 
  2864 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2865 ;;		 -> sprintf@f(11), 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  i               2   14[COMRAM] int 
  2868 ;;  c               1   13[COMRAM] unsigned char 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  2    9[COMRAM] int 
  2871 ;; Registers used:
  2872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2878 ;;      Params:         4       0       0       0       0       0       0       0       0
  2879 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2880 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2881 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2882 ;;Total ram usage:        7 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; Hardware stack levels required when called: 2
  2885 ;; This function calls:
  2886 ;;		_fputc
  2887 ;; This function is called by:
  2888 ;;		_pad
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text8
  2893  00360C                     __ptext8:
  2894                           	callstack 0
  2895  00360C                     _fputs:
  2896                           	callstack 23
  2897  00360C  0E00               	movlw	0
  2898  00360E  6E10               	movwf	(fputs@i+1)^0,c
  2899  003610  0E00               	movlw	0
  2900  003612  6E0F               	movwf	fputs@i^0,c
  2901  003614  EF17  F01B         	goto	l3326
  2902  003618                     l3322:
  2903  003618  C00E  F001         	movff	fputs@c,fputc@c
  2904  00361C  6A02               	clrf	(fputc@c+1)^0,c
  2905  00361E  C00C  F003         	movff	fputs@fp,fputc@fp
  2906  003622  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2907  003626  EC5F  F012         	call	_fputc	;wreg free
  2908  00362A  4A0F               	infsnz	fputs@i^0,f,c
  2909  00362C  2A10               	incf	(fputs@i+1)^0,f,c
  2910  00362E                     l3326:
  2911  00362E  500F               	movf	fputs@i^0,w,c
  2912  003630  240A               	addwf	fputs@s^0,w,c
  2913  003632  6ED9               	movwf	fsr2l,c
  2914  003634  5010               	movf	(fputs@i+1)^0,w,c
  2915  003636  200B               	addwfc	(fputs@s+1)^0,w,c
  2916  003638  6EDA               	movwf	fsr2h,c
  2917  00363A  50DF               	movf	indf2,w,c
  2918  00363C  6E0E               	movwf	fputs@c^0,c
  2919  00363E  500E               	movf	fputs@c^0,w,c
  2920  003640  A4D8               	btfss	status,2,c
  2921  003642  EF25  F01B         	goto	u2691
  2922  003646  EF27  F01B         	goto	u2690
  2923  00364A                     u2691:
  2924  00364A  EF0C  F01B         	goto	l3322
  2925  00364E                     u2690:
  2926  00364E  0012               	return		;funcret
  2927  003650                     __end_of_fputs:
  2928                           	callstack 0
  2929                           
  2930 ;; *************** function _fputc *****************
  2931 ;; Defined at:
  2932 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  c               2    0[COMRAM] int 
  2935 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2936 ;;		 -> sprintf@f(11), 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  2    0[COMRAM] int 
  2941 ;; Registers used:
  2942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2948 ;;      Params:         4       0       0       0       0       0       0       0       0
  2949 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2950 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2951 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2952 ;;Total ram usage:        9 bytes
  2953 ;; Hardware stack levels used: 1
  2954 ;; Hardware stack levels required when called: 1
  2955 ;; This function calls:
  2956 ;;		_putch
  2957 ;; This function is called by:
  2958 ;;		_pad
  2959 ;;		_vfpfcnvrt
  2960 ;;		_fputs
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text9
  2965  0024BE                     __ptext9:
  2966                           	callstack 0
  2967  0024BE                     _fputc:
  2968                           	callstack 23
  2969  0024BE  5003               	movf	fputc@fp^0,w,c
  2970  0024C0  1004               	iorwf	(fputc@fp+1)^0,w,c
  2971  0024C2  B4D8               	btfsc	status,2,c
  2972  0024C4  EF66  F012         	goto	u2631
  2973  0024C8  EF68  F012         	goto	u2630
  2974  0024CC                     u2631:
  2975  0024CC  EF71  F012         	goto	l3300
  2976  0024D0                     u2630:
  2977  0024D0  5003               	movf	fputc@fp^0,w,c
  2978  0024D2  1004               	iorwf	(fputc@fp+1)^0,w,c
  2979  0024D4  A4D8               	btfss	status,2,c
  2980  0024D6  EF6F  F012         	goto	u2641
  2981  0024DA  EF71  F012         	goto	u2640
  2982  0024DE                     u2641:
  2983  0024DE  EF76  F012         	goto	l3302
  2984  0024E2                     u2640:
  2985  0024E2                     l3300:
  2986  0024E2  5001               	movf	fputc@c^0,w,c
  2987  0024E4  ECAE  F01C         	call	_putch
  2988  0024E8  EFC3  F012         	goto	l1354
  2989  0024EC                     l3302:
  2990  0024EC  EE20 F009          	lfsr	2,9
  2991  0024F0  5003               	movf	fputc@fp^0,w,c
  2992  0024F2  26D9               	addwf	fsr2l,f,c
  2993  0024F4  5004               	movf	(fputc@fp+1)^0,w,c
  2994  0024F6  22DA               	addwfc	fsr2h,f,c
  2995  0024F8  50DE               	movf	postinc2,w,c
  2996  0024FA  10DE               	iorwf	postinc2,w,c
  2997  0024FC  B4D8               	btfsc	status,2,c
  2998  0024FE  EF83  F012         	goto	u2651
  2999  002502  EF85  F012         	goto	u2650
  3000  002506                     u2651:
  3001  002506  EFA0  F012         	goto	l3306
  3002  00250A                     u2650:
  3003  00250A  EE20 F009          	lfsr	2,9
  3004  00250E  5003               	movf	fputc@fp^0,w,c
  3005  002510  26D9               	addwf	fsr2l,f,c
  3006  002512  5004               	movf	(fputc@fp+1)^0,w,c
  3007  002514  22DA               	addwfc	fsr2h,f,c
  3008  002516  EE10 F003          	lfsr	1,3
  3009  00251A  5003               	movf	fputc@fp^0,w,c
  3010  00251C  26E1               	addwf	fsr1l,f,c
  3011  00251E  5004               	movf	(fputc@fp+1)^0,w,c
  3012  002520  22E2               	addwfc	fsr1h,f,c
  3013  002522  50DE               	movf	postinc2,w,c
  3014  002524  5CE6               	subwf	postinc1,w,c
  3015  002526  50E6               	movf	postinc1,w,c
  3016  002528  0A80               	xorlw	128
  3017  00252A  6E09               	movwf	(??_fputc+4)^0,c
  3018  00252C  50DE               	movf	postinc2,w,c
  3019  00252E  0A80               	xorlw	128
  3020  002530  5809               	subwfb	(??_fputc+4)^0,w,c
  3021  002532  B0D8               	btfsc	status,0,c
  3022  002534  EF9E  F012         	goto	u2661
  3023  002538  EFA0  F012         	goto	u2660
  3024  00253C                     u2661:
  3025  00253C  EFC3  F012         	goto	l1354
  3026  002540                     u2660:
  3027  002540                     l3306:
  3028  002540  EE20 F003          	lfsr	2,3
  3029  002544  5003               	movf	fputc@fp^0,w,c
  3030  002546  26D9               	addwf	fsr2l,f,c
  3031  002548  5004               	movf	(fputc@fp+1)^0,w,c
  3032  00254A  22DA               	addwfc	fsr2h,f,c
  3033  00254C  CFDE F005          	movff	postinc2,??_fputc
  3034  002550  CFDD F006          	movff	postdec2,??_fputc+1
  3035  002554  C003  FFD9         	movff	fputc@fp,fsr2l
  3036  002558  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3037  00255C  CFDE F007          	movff	postinc2,??_fputc+2
  3038  002560  CFDD F008          	movff	postdec2,??_fputc+3
  3039  002564  5005               	movf	??_fputc^0,w,c
  3040  002566  2407               	addwf	(??_fputc+2)^0,w,c
  3041  002568  6ED9               	movwf	fsr2l,c
  3042  00256A  5006               	movf	(??_fputc+1)^0,w,c
  3043  00256C  2008               	addwfc	(??_fputc+3)^0,w,c
  3044  00256E  6EDA               	movwf	fsr2h,c
  3045  002570  C001  FFDF         	movff	fputc@c,indf2
  3046  002574  EE20 F003          	lfsr	2,3
  3047  002578  5003               	movf	fputc@fp^0,w,c
  3048  00257A  26D9               	addwf	fsr2l,f,c
  3049  00257C  5004               	movf	(fputc@fp+1)^0,w,c
  3050  00257E  22DA               	addwfc	fsr2h,f,c
  3051  002580  2ADE               	incf	postinc2,f,c
  3052  002582  0E00               	movlw	0
  3053  002584  22DD               	addwfc	postdec2,f,c
  3054  002586                     l1354:
  3055  002586  0012               	return		;funcret
  3056  002588                     __end_of_fputc:
  3057                           	callstack 0
  3058                           
  3059 ;; *************** function _putch *****************
  3060 ;; Defined at:
  3061 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  c               1    wreg     unsigned char 
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  c               1    0[COMRAM] unsigned char 
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  1    wreg      void 
  3068 ;; Registers used:
  3069 ;;		wreg
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3075 ;;      Params:         0       0       0       0       0       0       0       0       0
  3076 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3077 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3078 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3079 ;;Total ram usage:        0 bytes
  3080 ;; Hardware stack levels used: 1
  3081 ;; This function calls:
  3082 ;;		Nothing
  3083 ;; This function is called by:
  3084 ;;		_fputc
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           	psect	text10
  3089  00395C                     __ptext10:
  3090                           	callstack 0
  3091  00395C                     _putch:
  3092                           	callstack 23
  3093  00395C  0012               	return		;funcret
  3094  00395E                     __end_of_putch:
  3095                           	callstack 0
  3096                           
  3097 ;; *************** function _isupper *****************
  3098 ;; Defined at:
  3099 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  c               2    0[COMRAM] int 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;		None
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  2    0[COMRAM] int 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3113 ;;      Params:         2       0       0       0       0       0       0       0       0
  3114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3115 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3116 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3117 ;;Total ram usage:        6 bytes
  3118 ;; Hardware stack levels used: 1
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_xtoa
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           	psect	text11
  3127  0036C4                     __ptext11:
  3128                           	callstack 0
  3129  0036C4                     _isupper:
  3130                           	callstack 26
  3131  0036C4  0EBF               	movlw	191
  3132  0036C6  6E03               	movwf	??_isupper^0,c
  3133  0036C8  0EFF               	movlw	255
  3134  0036CA  6E04               	movwf	(??_isupper+1)^0,c
  3135  0036CC  C001  F005         	movff	isupper@c,??_isupper+2
  3136  0036D0  C002  F006         	movff	isupper@c+1,??_isupper+3
  3137  0036D4  5003               	movf	??_isupper^0,w,c
  3138  0036D6  2605               	addwf	(??_isupper+2)^0,f,c
  3139  0036D8  5004               	movf	(??_isupper+1)^0,w,c
  3140  0036DA  2206               	addwfc	(??_isupper+3)^0,f,c
  3141  0036DC  5006               	movf	(??_isupper+3)^0,w,c
  3142  0036DE  E10A               	bnz	u3150
  3143  0036E0  0E1A               	movlw	26
  3144  0036E2  5C05               	subwf	(??_isupper+2)^0,w,c
  3145  0036E4  A0D8               	btfss	status,0,c
  3146  0036E6  EF77  F01B         	goto	u3151
  3147  0036EA  EF7A  F01B         	goto	u3150
  3148  0036EE                     u3151:
  3149  0036EE  0E01               	movlw	1
  3150  0036F0  EF7B  F01B         	goto	u3160
  3151  0036F4                     u3150:
  3152  0036F4  0E00               	movlw	0
  3153  0036F6                     u3160:
  3154  0036F6  6E01               	movwf	?_isupper^0,c
  3155  0036F8  6A02               	clrf	(?_isupper+1)^0,c
  3156  0036FA  0012               	return		;funcret
  3157  0036FC                     __end_of_isupper:
  3158                           	callstack 0
  3159                           
  3160 ;; *************** function _isalpha *****************
  3161 ;; Defined at:
  3162 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isalpha.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  c               2    0[COMRAM] int 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  2    0[COMRAM] int 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3176 ;;      Params:         2       0       0       0       0       0       0       0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3178 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3179 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3180 ;;Total ram usage:        6 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_xtoa
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text12
  3190  003650                     __ptext12:
  3191                           	callstack 0
  3192  003650                     _isalpha:
  3193                           	callstack 26
  3194  003650  0E9F               	movlw	159
  3195  003652  6E03               	movwf	??_isalpha^0,c
  3196  003654  0EFF               	movlw	255
  3197  003656  6E04               	movwf	(??_isalpha+1)^0,c
  3198  003658  0E20               	movlw	32
  3199  00365A  1001               	iorwf	isalpha@c^0,w,c
  3200  00365C  6E05               	movwf	(??_isalpha+2)^0,c
  3201  00365E  0E00               	movlw	0
  3202  003660  1002               	iorwf	(isalpha@c+1)^0,w,c
  3203  003662  6E06               	movwf	(??_isalpha+3)^0,c
  3204  003664  5003               	movf	??_isalpha^0,w,c
  3205  003666  2605               	addwf	(??_isalpha+2)^0,f,c
  3206  003668  5004               	movf	(??_isalpha+1)^0,w,c
  3207  00366A  2206               	addwfc	(??_isalpha+3)^0,f,c
  3208  00366C  5006               	movf	(??_isalpha+3)^0,w,c
  3209  00366E  E10A               	bnz	u3170
  3210  003670  0E1A               	movlw	26
  3211  003672  5C05               	subwf	(??_isalpha+2)^0,w,c
  3212  003674  A0D8               	btfss	status,0,c
  3213  003676  EF3F  F01B         	goto	u3171
  3214  00367A  EF42  F01B         	goto	u3170
  3215  00367E                     u3171:
  3216  00367E  0E01               	movlw	1
  3217  003680  EF43  F01B         	goto	u3180
  3218  003684                     u3170:
  3219  003684  0E00               	movlw	0
  3220  003686                     u3180:
  3221  003686  6E01               	movwf	?_isalpha^0,c
  3222  003688  6A02               	clrf	(?_isalpha+1)^0,c
  3223  00368A  0012               	return		;funcret
  3224  00368C                     __end_of_isalpha:
  3225                           	callstack 0
  3226                           
  3227 ;; *************** function _USART_TxChar *****************
  3228 ;; Defined at:
  3229 ;;		line 137 in file "main.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  out             2    4[COMRAM] PTR unsigned char 
  3232 ;;		 -> STR_7(3), STR_4(3), data_buffer(20), STR_1(3), 
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;  i               1    8[COMRAM] unsigned char 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3244 ;;      Params:         2       0       0       0       0       0       0       0       0
  3245 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3246 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3247 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3248 ;;Total ram usage:        5 bytes
  3249 ;; Hardware stack levels used: 1
  3250 ;; Hardware stack levels required when called: 1
  3251 ;; This function calls:
  3252 ;;		_strlen
  3253 ;; This function is called by:
  3254 ;;		_main
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text13
  3259  0030B0                     __ptext13:
  3260                           	callstack 0
  3261  0030B0                     _USART_TxChar:
  3262                           	callstack 29
  3263  0030B0                     l137:
  3264  0030B0  A89E               	btfss	3998,4,c	;volatile
  3265  0030B2  EF5D  F018         	goto	u4861
  3266  0030B6  EF5F  F018         	goto	u4860
  3267  0030BA                     u4861:
  3268  0030BA  EF58  F018         	goto	l137
  3269  0030BE                     u4860:
  3270  0030BE                     
  3271                           ;main.c: 139:         for (uint8_t i = 0; i < strlen(out); i++) {
  3272  0030BE  0E00               	movlw	0
  3273  0030C0  6E09               	movwf	USART_TxChar@i^0,c
  3274  0030C2  EF7B  F018         	goto	l4872
  3275  0030C6                     l4868:
  3276                           
  3277                           ;main.c: 140:             TXREG = out[i];
  3278  0030C6  5009               	movf	USART_TxChar@i^0,w,c
  3279  0030C8  2405               	addwf	USART_TxChar@out^0,w,c
  3280  0030CA  6E07               	movwf	??_USART_TxChar^0,c
  3281  0030CC  0E00               	movlw	0
  3282  0030CE  2006               	addwfc	(USART_TxChar@out+1)^0,w,c
  3283  0030D0  6E08               	movwf	(??_USART_TxChar+1)^0,c
  3284  0030D2  C007  FFF6         	movff	??_USART_TxChar,tblptrl
  3285  0030D6  C008  FFF7         	movff	??_USART_TxChar+1,tblptrh
  3286  0030DA  6AF8               	clrf	tblptru,c
  3287  0030DC  0E07               	movlw	(high __ramtop+-1)
  3288  0030DE  64F7               	cpfsgt	tblptrh,c
  3289  0030E0  D003               	bra	u4877
  3290  0030E2  0008               	tblrd		*
  3291  0030E4  50F5               	movf	tablat,w,c
  3292  0030E6  D005               	bra	u4870
  3293  0030E8                     u4877:
  3294  0030E8  CFF6 FFE1          	movff	tblptrl,fsr1l
  3295  0030EC  CFF7 FFE2          	movff	tblptrh,fsr1h
  3296  0030F0  50E7               	movf	indf1,w,c
  3297  0030F2                     u4870:
  3298  0030F2  6EAD               	movwf	173,c	;volatile
  3299  0030F4                     
  3300                           ;main.c: 141:         }
  3301  0030F4  2A09               	incf	USART_TxChar@i^0,f,c
  3302  0030F6                     l4872:
  3303  0030F6  C005  F001         	movff	USART_TxChar@out,strlen@s
  3304  0030FA  C006  F002         	movff	USART_TxChar@out+1,strlen@s+1
  3305  0030FE  EC97  F01A         	call	_strlen	;wreg free
  3306  003102  5009               	movf	USART_TxChar@i^0,w,c
  3307  003104  6E07               	movwf	??_USART_TxChar^0,c
  3308  003106  6A08               	clrf	(??_USART_TxChar+1)^0,c
  3309  003108  5001               	movf	?_strlen^0,w,c
  3310  00310A  5C07               	subwf	??_USART_TxChar^0,w,c
  3311  00310C  5002               	movf	(?_strlen+1)^0,w,c
  3312  00310E  5808               	subwfb	(??_USART_TxChar+1)^0,w,c
  3313  003110  A0D8               	btfss	status,0,c
  3314  003112  EF8D  F018         	goto	u4881
  3315  003116  EF8F  F018         	goto	u4880
  3316  00311A                     u4881:
  3317  00311A  EF63  F018         	goto	l4868
  3318  00311E                     u4880:
  3319  00311E  0012               	return		;funcret
  3320  003120                     __end_of_USART_TxChar:
  3321                           	callstack 0
  3322                           
  3323 ;; *************** function _strlen *****************
  3324 ;; Defined at:
  3325 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3328 ;;		 -> dbuf(32), STR_7(3), STR_4(3), data_buffer(20), 
  3329 ;;		 -> STR_1(3), UID_3(20), UID_2(20), UID_1(20), 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3332 ;;		 -> dbuf(32), STR_7(3), STR_4(3), data_buffer(20), 
  3333 ;;		 -> STR_1(3), UID_3(20), UID_2(20), UID_1(20), 
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  2    0[COMRAM] unsigned int 
  3336 ;; Registers used:
  3337 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3343 ;;      Params:         2       0       0       0       0       0       0       0       0
  3344 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3346 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3347 ;;Total ram usage:        4 bytes
  3348 ;; Hardware stack levels used: 1
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_main
  3353 ;;		_USART_TxChar
  3354 ;;		_pad
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text14
  3359  00352E                     __ptext14:
  3360                           	callstack 0
  3361  00352E                     _strlen:
  3362                           	callstack 30
  3363  00352E  C001  F003         	movff	strlen@s,strlen@a
  3364  003532  C002  F004         	movff	strlen@s+1,strlen@a+1
  3365  003536  EF9F  F01A         	goto	l3314
  3366  00353A                     l3312:
  3367  00353A  4A01               	infsnz	strlen@s^0,f,c
  3368  00353C  2A02               	incf	(strlen@s+1)^0,f,c
  3369  00353E                     l3314:
  3370  00353E  C001  FFF6         	movff	strlen@s,tblptrl
  3371  003542  C002  FFF7         	movff	strlen@s+1,tblptrh
  3372  003546  6AF8               	clrf	tblptru,c
  3373  003548  0E07               	movlw	(high __ramtop+-1)
  3374  00354A  64F7               	cpfsgt	tblptrh,c
  3375  00354C  D003               	bra	u2677
  3376  00354E  0008               	tblrd		*
  3377  003550  50F5               	movf	tablat,w,c
  3378  003552  D005               	bra	u2670
  3379  003554                     u2677:
  3380  003554  CFF6 FFE1          	movff	tblptrl,fsr1l
  3381  003558  CFF7 FFE2          	movff	tblptrh,fsr1h
  3382  00355C  50E7               	movf	indf1,w,c
  3383  00355E                     u2670:
  3384  00355E  0900               	iorlw	0
  3385  003560  A4D8               	btfss	status,2,c
  3386  003562  EFB5  F01A         	goto	u2681
  3387  003566  EFB7  F01A         	goto	u2680
  3388  00356A                     u2681:
  3389  00356A  EF9D  F01A         	goto	l3312
  3390  00356E                     u2680:
  3391  00356E  5003               	movf	strlen@a^0,w,c
  3392  003570  5C01               	subwf	strlen@s^0,w,c
  3393  003572  6E01               	movwf	?_strlen^0,c
  3394  003574  5004               	movf	(strlen@a+1)^0,w,c
  3395  003576  5802               	subwfb	(strlen@s+1)^0,w,c
  3396  003578  6E02               	movwf	(?_strlen+1)^0,c
  3397  00357A  0012               	return		;funcret
  3398  00357C                     __end_of_strlen:
  3399                           	callstack 0
  3400                           
  3401 ;; *************** function _USART_Init *****************
  3402 ;; Defined at:
  3403 ;;		line 123 in file "main.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  baud_rate       4   55[COMRAM] long 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;  temp            4   59[COMRAM] float 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3417 ;;      Params:         4       0       0       0       0       0       0       0       0
  3418 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3420 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3421 ;;Total ram usage:        8 bytes
  3422 ;; Hardware stack levels used: 1
  3423 ;; Hardware stack levels required when called: 1
  3424 ;; This function calls:
  3425 ;;		___fladd
  3426 ;;		___fldiv
  3427 ;;		___fltol
  3428 ;;		___xxtofl
  3429 ;; This function is called by:
  3430 ;;		_main
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text15
  3435  002DD2                     __ptext15:
  3436                           	callstack 0
  3437  002DD2                     _USART_Init:
  3438                           	callstack 29
  3439  002DD2                     
  3440                           ;main.c: 124:     float temp;;main.c: 125:     TRISC6 = 0;
  3441  002DD2  9C94               	bcf	3988,6,c	;volatile
  3442                           
  3443                           ;main.c: 126:     TRISC7 = 1;
  3444  002DD4  8E94               	bsf	3988,7,c	;volatile
  3445  002DD6                     
  3446                           ;main.c: 127:     temp = (((float)(27000000/64)/(float)baud_rate)-1);
  3447  002DD6  C038  F001         	movff	USART_Init@baud_rate,___xxtofl@val
  3448  002DDA  C039  F002         	movff	USART_Init@baud_rate+1,___xxtofl@val+1
  3449  002DDE  C03A  F003         	movff	USART_Init@baud_rate+2,___xxtofl@val+2
  3450  002DE2  C03B  F004         	movff	USART_Init@baud_rate+3,___xxtofl@val+3
  3451  002DE6  0E01               	movlw	1
  3452  002DE8  EC15  F010         	call	___xxtofl
  3453  002DEC  C001  F013         	movff	?___xxtofl,___fldiv@a
  3454  002DF0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3455  002DF4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3456  002DF8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3457  002DFC  0E60               	movlw	96
  3458  002DFE  6E0F               	movwf	___fldiv@b^0,c
  3459  002E00  0EFE               	movlw	254
  3460  002E02  6E10               	movwf	(___fldiv@b+1)^0,c
  3461  002E04  0ECD               	movlw	205
  3462  002E06  6E11               	movwf	(___fldiv@b+2)^0,c
  3463  002E08  0E48               	movlw	72
  3464  002E0A  6E12               	movwf	(___fldiv@b+3)^0,c
  3465  002E0C  EC6F  F006         	call	___fldiv	;wreg free
  3466  002E10  C00F  F028         	movff	?___fldiv,___fladd@b
  3467  002E14  C010  F029         	movff	?___fldiv+1,___fladd@b+1
  3468  002E18  C011  F02A         	movff	?___fldiv+2,___fladd@b+2
  3469  002E1C  C012  F02B         	movff	?___fldiv+3,___fladd@b+3
  3470  002E20  0E00               	movlw	0
  3471  002E22  6E2C               	movwf	___fladd@a^0,c
  3472  002E24  0E00               	movlw	0
  3473  002E26  6E2D               	movwf	(___fladd@a+1)^0,c
  3474  002E28  0E80               	movlw	128
  3475  002E2A  6E2E               	movwf	(___fladd@a+2)^0,c
  3476  002E2C  0EBF               	movlw	191
  3477  002E2E  6E2F               	movwf	(___fladd@a+3)^0,c
  3478  002E30  EC0F  F004         	call	___fladd	;wreg free
  3479  002E34  C028  F03C         	movff	?___fladd,USART_Init@temp
  3480  002E38  C029  F03D         	movff	?___fladd+1,USART_Init@temp+1
  3481  002E3C  C02A  F03E         	movff	?___fladd+2,USART_Init@temp+2
  3482  002E40  C02B  F03F         	movff	?___fladd+3,USART_Init@temp+3
  3483                           
  3484                           ;main.c: 128:     SPBRG=(int)temp;
  3485  002E44  C03C  F001         	movff	USART_Init@temp,___fltol@f1
  3486  002E48  C03D  F002         	movff	USART_Init@temp+1,___fltol@f1+1
  3487  002E4C  C03E  F003         	movff	USART_Init@temp+2,___fltol@f1+2
  3488  002E50  C03F  F004         	movff	USART_Init@temp+3,___fltol@f1+3
  3489  002E54  ECEF  F010         	call	___fltol	;wreg free
  3490  002E58  5001               	movf	?___fltol^0,w,c
  3491  002E5A  6EAF               	movwf	175,c	;volatile
  3492  002E5C                     
  3493                           ;main.c: 129:     TXSTA = 0x20;
  3494  002E5C  0E20               	movlw	32
  3495  002E5E  6EAC               	movwf	172,c	;volatile
  3496  002E60                     
  3497                           ;main.c: 130:     RCSTA = 0x90;
  3498  002E60  0E90               	movlw	144
  3499  002E62  6EAB               	movwf	171,c	;volatile
  3500  002E64                     
  3501                           ;main.c: 131:     INTCONbits.GIE = 1;
  3502  002E64  8EF2               	bsf	242,7,c	;volatile
  3503  002E66                     
  3504                           ;main.c: 132:     INTCONbits.PEIE = 1;
  3505  002E66  8CF2               	bsf	242,6,c	;volatile
  3506  002E68                     
  3507                           ;main.c: 133:     PIE1bits.RCIE = 1;
  3508  002E68  8A9D               	bsf	157,5,c	;volatile
  3509  002E6A                     
  3510                           ;main.c: 134:     PIE1bits.TXIE = 1;
  3511  002E6A  889D               	bsf	157,4,c	;volatile
  3512  002E6C  0012               	return		;funcret
  3513  002E6E                     __end_of_USART_Init:
  3514                           	callstack 0
  3515                           
  3516 ;; *************** function ___xxtofl *****************
  3517 ;; Defined at:
  3518 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  sign            1    wreg     unsigned char 
  3521 ;;  val             4    0[COMRAM] long 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  sign            1    8[COMRAM] unsigned char 
  3524 ;;  arg             4   10[COMRAM] unsigned long 
  3525 ;;  exp             1    9[COMRAM] unsigned char 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  4    0[COMRAM] unsigned char 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3535 ;;      Params:         4       0       0       0       0       0       0       0       0
  3536 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3537 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3538 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3539 ;;Total ram usage:       14 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_USART_Init
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           	psect	text16
  3549  00202A                     __ptext16:
  3550                           	callstack 0
  3551  00202A                     ___xxtofl:
  3552                           	callstack 29
  3553                           
  3554                           ;incstack = 0
  3555                           ;___xxtofl@sign stored from wreg
  3556  00202A  6E09               	movwf	___xxtofl@sign^0,c
  3557  00202C  5009               	movf	___xxtofl@sign^0,w,c
  3558  00202E  B4D8               	btfsc	status,2,c
  3559  002030  EF1C  F010         	goto	u4741
  3560  002034  EF1E  F010         	goto	u4740
  3561  002038                     u4741:
  3562  002038  EF40  F010         	goto	l1231
  3563  00203C                     u4740:
  3564  00203C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3565  00203E  EF25  F010         	goto	u4750
  3566  002042  EF23  F010         	goto	u4751
  3567  002046                     u4751:
  3568  002046  EF40  F010         	goto	l1231
  3569  00204A                     u4750:
  3570  00204A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3571  00204E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3572  002052  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3573  002056  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3574  00205A  1E05               	comf	??___xxtofl^0,f,c
  3575  00205C  1E06               	comf	(??___xxtofl+1)^0,f,c
  3576  00205E  1E07               	comf	(??___xxtofl+2)^0,f,c
  3577  002060  1E08               	comf	(??___xxtofl+3)^0,f,c
  3578  002062  2A05               	incf	??___xxtofl^0,f,c
  3579  002064  0E00               	movlw	0
  3580  002066  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3581  002068  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3582  00206A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3583  00206C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3584  002070  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3585  002074  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3586  002078  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3587  00207C  EF48  F010         	goto	l4700
  3588  002080                     l1231:
  3589  002080  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3590  002084  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3591  002088  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3592  00208C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3593  002090                     l4700:
  3594  002090  5001               	movf	___xxtofl@val^0,w,c
  3595  002092  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3596  002094  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3597  002096  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3598  002098  A4D8               	btfss	status,2,c
  3599  00209A  EF51  F010         	goto	u4761
  3600  00209E  EF53  F010         	goto	u4760
  3601  0020A2                     u4761:
  3602  0020A2  EF5D  F010         	goto	l4706
  3603  0020A6                     u4760:
  3604  0020A6  0E00               	movlw	0
  3605  0020A8  6E01               	movwf	?___xxtofl^0,c
  3606  0020AA  0E00               	movlw	0
  3607  0020AC  6E02               	movwf	(?___xxtofl+1)^0,c
  3608  0020AE  0E00               	movlw	0
  3609  0020B0  6E03               	movwf	(?___xxtofl+2)^0,c
  3610  0020B2  0E00               	movlw	0
  3611  0020B4  6E04               	movwf	(?___xxtofl+3)^0,c
  3612  0020B6  EFEE  F010         	goto	l1234
  3613  0020BA                     l4706:
  3614  0020BA  0E96               	movlw	150
  3615  0020BC  6E0A               	movwf	___xxtofl@exp^0,c
  3616  0020BE  EF67  F010         	goto	l4710
  3617  0020C2                     l4708:
  3618  0020C2  2A0A               	incf	___xxtofl@exp^0,f,c
  3619  0020C4  90D8               	bcf	status,0,c
  3620  0020C6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3621  0020C8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3622  0020CA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3623  0020CC  320B               	rrcf	___xxtofl@arg^0,f,c
  3624  0020CE                     l4710:
  3625  0020CE  0E00               	movlw	0
  3626  0020D0  140B               	andwf	___xxtofl@arg^0,w,c
  3627  0020D2  6E05               	movwf	??___xxtofl^0,c
  3628  0020D4  0E00               	movlw	0
  3629  0020D6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3630  0020D8  6E06               	movwf	(??___xxtofl+1)^0,c
  3631  0020DA  0E00               	movlw	0
  3632  0020DC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3633  0020DE  6E07               	movwf	(??___xxtofl+2)^0,c
  3634  0020E0  0EFE               	movlw	254
  3635  0020E2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3636  0020E4  6E08               	movwf	(??___xxtofl+3)^0,c
  3637  0020E6  5005               	movf	??___xxtofl^0,w,c
  3638  0020E8  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3639  0020EA  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3640  0020EC  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3641  0020EE  A4D8               	btfss	status,2,c
  3642  0020F0  EF7C  F010         	goto	u4771
  3643  0020F4  EF7E  F010         	goto	u4770
  3644  0020F8                     u4771:
  3645  0020F8  EF61  F010         	goto	l4708
  3646  0020FC                     u4770:
  3647  0020FC  EF8C  F010         	goto	l1238
  3648  002100                     l4712:
  3649  002100  2A0A               	incf	___xxtofl@exp^0,f,c
  3650  002102  0E01               	movlw	1
  3651  002104  260B               	addwf	___xxtofl@arg^0,f,c
  3652  002106  0E00               	movlw	0
  3653  002108  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3654  00210A  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3655  00210C  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3656  00210E  90D8               	bcf	status,0,c
  3657  002110  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3658  002112  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3659  002114  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3660  002116  320B               	rrcf	___xxtofl@arg^0,f,c
  3661  002118                     l1238:
  3662  002118  0E00               	movlw	0
  3663  00211A  140B               	andwf	___xxtofl@arg^0,w,c
  3664  00211C  6E05               	movwf	??___xxtofl^0,c
  3665  00211E  0E00               	movlw	0
  3666  002120  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3667  002122  6E06               	movwf	(??___xxtofl+1)^0,c
  3668  002124  0E00               	movlw	0
  3669  002126  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3670  002128  6E07               	movwf	(??___xxtofl+2)^0,c
  3671  00212A  0EFF               	movlw	255
  3672  00212C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3673  00212E  6E08               	movwf	(??___xxtofl+3)^0,c
  3674  002130  5005               	movf	??___xxtofl^0,w,c
  3675  002132  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3676  002134  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3677  002136  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3678  002138  A4D8               	btfss	status,2,c
  3679  00213A  EFA1  F010         	goto	u4781
  3680  00213E  EFA3  F010         	goto	u4780
  3681  002142                     u4781:
  3682  002142  EF80  F010         	goto	l4712
  3683  002146                     u4780:
  3684  002146  EFAB  F010         	goto	l4720
  3685  00214A                     l4718:
  3686  00214A  060A               	decf	___xxtofl@exp^0,f,c
  3687  00214C  90D8               	bcf	status,0,c
  3688  00214E  360B               	rlcf	___xxtofl@arg^0,f,c
  3689  002150  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3690  002152  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3691  002154  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3692  002156                     l4720:
  3693  002156  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3694  002158  EFB0  F010         	goto	u4791
  3695  00215C  EFB2  F010         	goto	u4790
  3696  002160                     u4791:
  3697  002160  EFBA  F010         	goto	l1245
  3698  002164                     u4790:
  3699  002164  0E02               	movlw	2
  3700  002166  600A               	cpfslt	___xxtofl@exp^0,c
  3701  002168  EFB8  F010         	goto	u4801
  3702  00216C  EFBA  F010         	goto	u4800
  3703  002170                     u4801:
  3704  002170  EFA5  F010         	goto	l4718
  3705  002174                     u4800:
  3706  002174                     l1245:
  3707  002174  B00A               	btfsc	___xxtofl@exp^0,0,c
  3708  002176  EFBF  F010         	goto	u4811
  3709  00217A  EFC1  F010         	goto	u4810
  3710  00217E                     u4811:
  3711  00217E  EFC2  F010         	goto	l4726
  3712  002182                     u4810:
  3713  002182  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3714  002184                     l4726:
  3715  002184  90D8               	bcf	status,0,c
  3716  002186  320A               	rrcf	___xxtofl@exp^0,f,c
  3717  002188  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3718  00218C  6A06               	clrf	(??___xxtofl+1)^0,c
  3719  00218E  6A07               	clrf	(??___xxtofl+2)^0,c
  3720  002190  6A08               	clrf	(??___xxtofl+3)^0,c
  3721  002192  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3722  002196  6A07               	clrf	(??___xxtofl+2)^0,c
  3723  002198  6A06               	clrf	(??___xxtofl+1)^0,c
  3724  00219A  6A05               	clrf	??___xxtofl^0,c
  3725  00219C  5005               	movf	??___xxtofl^0,w,c
  3726  00219E  120B               	iorwf	___xxtofl@arg^0,f,c
  3727  0021A0  5006               	movf	(??___xxtofl+1)^0,w,c
  3728  0021A2  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3729  0021A4  5007               	movf	(??___xxtofl+2)^0,w,c
  3730  0021A6  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3731  0021A8  5008               	movf	(??___xxtofl+3)^0,w,c
  3732  0021AA  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3733  0021AC  5009               	movf	___xxtofl@sign^0,w,c
  3734  0021AE  B4D8               	btfsc	status,2,c
  3735  0021B0  EFDC  F010         	goto	u4821
  3736  0021B4  EFDE  F010         	goto	u4820
  3737  0021B8                     u4821:
  3738  0021B8  EFE6  F010         	goto	l4736
  3739  0021BC                     u4820:
  3740  0021BC  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3741  0021BE  EFE5  F010         	goto	u4830
  3742  0021C2  EFE3  F010         	goto	u4831
  3743  0021C6                     u4831:
  3744  0021C6  EFE6  F010         	goto	l4736
  3745  0021CA                     u4830:
  3746  0021CA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3747  0021CC                     l4736:
  3748  0021CC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3749  0021D0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3750  0021D4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3751  0021D8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3752  0021DC                     l1234:
  3753  0021DC  0012               	return		;funcret
  3754  0021DE                     __end_of___xxtofl:
  3755                           	callstack 0
  3756                           
  3757 ;; *************** function ___fltol *****************
  3758 ;; Defined at:
  3759 ;;		line 43 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  f1              4    0[COMRAM] unsigned char 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  exp1            1    9[COMRAM] unsigned char 
  3764 ;;  sign1           1    8[COMRAM] unsigned char 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  4    0[COMRAM] long 
  3767 ;; Registers used:
  3768 ;;		wreg, status,2, status,0
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3774 ;;      Params:         4       0       0       0       0       0       0       0       0
  3775 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3776 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3777 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3778 ;;Total ram usage:       10 bytes
  3779 ;; Hardware stack levels used: 1
  3780 ;; This function calls:
  3781 ;;		Nothing
  3782 ;; This function is called by:
  3783 ;;		_USART_Init
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text17
  3788  0021DE                     __ptext17:
  3789                           	callstack 0
  3790  0021DE                     ___fltol:
  3791                           	callstack 29
  3792  0021DE  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3793  0021E0  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3794  0021E2  6E0A               	movwf	___fltol@exp1^0,c
  3795  0021E4  500A               	movf	___fltol@exp1^0,w,c
  3796  0021E6  A4D8               	btfss	status,2,c
  3797  0021E8  EFF8  F010         	goto	u4671
  3798  0021EC  EFFA  F010         	goto	u4670
  3799  0021F0                     u4671:
  3800  0021F0  EF04  F011         	goto	l4656
  3801  0021F4                     u4670:
  3802  0021F4                     l4652:
  3803  0021F4  0E00               	movlw	0
  3804  0021F6  6E01               	movwf	?___fltol^0,c
  3805  0021F8  0E00               	movlw	0
  3806  0021FA  6E02               	movwf	(?___fltol+1)^0,c
  3807  0021FC  0E00               	movlw	0
  3808  0021FE  6E03               	movwf	(?___fltol+2)^0,c
  3809  002200  0E00               	movlw	0
  3810  002202  6E04               	movwf	(?___fltol+3)^0,c
  3811  002204  EF71  F011         	goto	l873
  3812  002208                     l4656:
  3813  002208  C001  F005         	movff	___fltol@f1,??___fltol
  3814  00220C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3815  002210  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3816  002214  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3817  002218  0E20               	movlw	32
  3818  00221A  EF14  F011         	goto	u4680
  3819  00221E                     u4685:
  3820  00221E  90D8               	bcf	status,0,c
  3821  002220  3208               	rrcf	(??___fltol+3)^0,f,c
  3822  002222  3207               	rrcf	(??___fltol+2)^0,f,c
  3823  002224  3206               	rrcf	(??___fltol+1)^0,f,c
  3824  002226  3205               	rrcf	??___fltol^0,f,c
  3825  002228                     u4680:
  3826  002228  2EE8               	decfsz	wreg,f,c
  3827  00222A  EF0F  F011         	goto	u4685
  3828  00222E  5005               	movf	??___fltol^0,w,c
  3829  002230  6E09               	movwf	___fltol@sign1^0,c
  3830  002232  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3831  002234  0EFF               	movlw	255
  3832  002236  1601               	andwf	___fltol@f1^0,f,c
  3833  002238  0EFF               	movlw	255
  3834  00223A  1602               	andwf	(___fltol@f1+1)^0,f,c
  3835  00223C  0EFF               	movlw	255
  3836  00223E  1603               	andwf	(___fltol@f1+2)^0,f,c
  3837  002240  0E00               	movlw	0
  3838  002242  1604               	andwf	(___fltol@f1+3)^0,f,c
  3839  002244  0E96               	movlw	150
  3840  002246  5E0A               	subwf	___fltol@exp1^0,f,c
  3841  002248  BE0A               	btfsc	___fltol@exp1^0,7,c
  3842  00224A  EF2B  F011         	goto	u4690
  3843  00224E  EF29  F011         	goto	u4691
  3844  002252                     u4691:
  3845  002252  EF41  F011         	goto	l4676
  3846  002256                     u4690:
  3847  002256  500A               	movf	___fltol@exp1^0,w,c
  3848  002258  0A80               	xorlw	128
  3849  00225A  0F97               	addlw	151
  3850  00225C  B0D8               	btfsc	status,0,c
  3851  00225E  EF33  F011         	goto	u4701
  3852  002262  EF35  F011         	goto	u4700
  3853  002266                     u4701:
  3854  002266  EF37  F011         	goto	l4672
  3855  00226A                     u4700:
  3856  00226A  EFFA  F010         	goto	l4652
  3857  00226E                     l4672:
  3858  00226E  90D8               	bcf	status,0,c
  3859  002270  3204               	rrcf	(___fltol@f1+3)^0,f,c
  3860  002272  3203               	rrcf	(___fltol@f1+2)^0,f,c
  3861  002274  3202               	rrcf	(___fltol@f1+1)^0,f,c
  3862  002276  3201               	rrcf	___fltol@f1^0,f,c
  3863  002278  3E0A               	incfsz	___fltol@exp1^0,f,c
  3864  00227A  EF37  F011         	goto	l4672
  3865  00227E  EF59  F011         	goto	l4686
  3866  002282                     l4676:
  3867  002282  0E1F               	movlw	31
  3868  002284  640A               	cpfsgt	___fltol@exp1^0,c
  3869  002286  EF47  F011         	goto	u4711
  3870  00228A  EF49  F011         	goto	u4710
  3871  00228E                     u4711:
  3872  00228E  EF51  F011         	goto	l4684
  3873  002292                     u4710:
  3874  002292  EFFA  F010         	goto	l4652
  3875  002296                     l4682:
  3876  002296  90D8               	bcf	status,0,c
  3877  002298  3601               	rlcf	___fltol@f1^0,f,c
  3878  00229A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  3879  00229C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  3880  00229E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  3881  0022A0  060A               	decf	___fltol@exp1^0,f,c
  3882  0022A2                     l4684:
  3883  0022A2  500A               	movf	___fltol@exp1^0,w,c
  3884  0022A4  A4D8               	btfss	status,2,c
  3885  0022A6  EF57  F011         	goto	u4721
  3886  0022AA  EF59  F011         	goto	u4720
  3887  0022AE                     u4721:
  3888  0022AE  EF4B  F011         	goto	l4682
  3889  0022B2                     u4720:
  3890  0022B2                     l4686:
  3891  0022B2  5009               	movf	___fltol@sign1^0,w,c
  3892  0022B4  B4D8               	btfsc	status,2,c
  3893  0022B6  EF5F  F011         	goto	u4731
  3894  0022BA  EF61  F011         	goto	u4730
  3895  0022BE                     u4731:
  3896  0022BE  EF69  F011         	goto	l4690
  3897  0022C2                     u4730:
  3898  0022C2  1E04               	comf	(___fltol@f1+3)^0,f,c
  3899  0022C4  1E03               	comf	(___fltol@f1+2)^0,f,c
  3900  0022C6  1E02               	comf	(___fltol@f1+1)^0,f,c
  3901  0022C8  6C01               	negf	___fltol@f1^0,c
  3902  0022CA  0E00               	movlw	0
  3903  0022CC  2202               	addwfc	(___fltol@f1+1)^0,f,c
  3904  0022CE  2203               	addwfc	(___fltol@f1+2)^0,f,c
  3905  0022D0  2204               	addwfc	(___fltol@f1+3)^0,f,c
  3906  0022D2                     l4690:
  3907  0022D2  C001  F001         	movff	___fltol@f1,?___fltol
  3908  0022D6  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  3909  0022DA  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  3910  0022DE  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  3911  0022E2                     l873:
  3912  0022E2  0012               	return		;funcret
  3913  0022E4                     __end_of___fltol:
  3914                           	callstack 0
  3915                           
  3916 ;; *************** function ___fldiv *****************
  3917 ;; Defined at:
  3918 ;;		line 11 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  b               4   14[COMRAM] long 
  3921 ;;  a               4   18[COMRAM] long 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  grs             4   33[COMRAM] unsigned long 
  3924 ;;  rem             4   26[COMRAM] unsigned long 
  3925 ;;  new_exp         2   31[COMRAM] short 
  3926 ;;  aexp            1   38[COMRAM] unsigned char 
  3927 ;;  bexp            1   37[COMRAM] unsigned char 
  3928 ;;  sign            1   30[COMRAM] unsigned char 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  4   14[COMRAM] unsigned char 
  3931 ;; Registers used:
  3932 ;;		wreg, status,2, status,0
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3938 ;;      Params:         8       0       0       0       0       0       0       0       0
  3939 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3940 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3941 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3942 ;;Total ram usage:       25 bytes
  3943 ;; Hardware stack levels used: 1
  3944 ;; This function calls:
  3945 ;;		Nothing
  3946 ;; This function is called by:
  3947 ;;		_USART_Init
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text18
  3952  000CDE                     __ptext18:
  3953                           	callstack 0
  3954  000CDE                     ___fldiv:
  3955                           	callstack 29
  3956  000CDE  5012               	movf	(___fldiv@b+3)^0,w,c
  3957  000CE0  0B80               	andlw	128
  3958  000CE2  6E1F               	movwf	___fldiv@sign^0,c
  3959  000CE4  5012               	movf	(___fldiv@b+3)^0,w,c
  3960  000CE6  2412               	addwf	(___fldiv@b+3)^0,w,c
  3961  000CE8  6E26               	movwf	___fldiv@bexp^0,c
  3962  000CEA  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3963  000CEC  EF7A  F006         	goto	u4441
  3964  000CF0  EF7C  F006         	goto	u4440
  3965  000CF4                     u4441:
  3966  000CF4  EF7D  F006         	goto	l4518
  3967  000CF8                     u4440:
  3968  000CF8  8026               	bsf	___fldiv@bexp^0,0,c
  3969  000CFA                     l4518:
  3970  000CFA  5026               	movf	___fldiv@bexp^0,w,c
  3971  000CFC  B4D8               	btfsc	status,2,c
  3972  000CFE  EF83  F006         	goto	u4451
  3973  000D02  EF85  F006         	goto	u4450
  3974  000D06                     u4451:
  3975  000D06  EF9A  F006         	goto	l4528
  3976  000D0A                     u4450:
  3977  000D0A  2826               	incf	___fldiv@bexp^0,w,c
  3978  000D0C  A4D8               	btfss	status,2,c
  3979  000D0E  EF8B  F006         	goto	u4461
  3980  000D12  EF8D  F006         	goto	u4460
  3981  000D16                     u4461:
  3982  000D16  EF95  F006         	goto	l4524
  3983  000D1A                     u4460:
  3984  000D1A  0E00               	movlw	0
  3985  000D1C  6E0F               	movwf	___fldiv@b^0,c
  3986  000D1E  0E00               	movlw	0
  3987  000D20  6E10               	movwf	(___fldiv@b+1)^0,c
  3988  000D22  0E00               	movlw	0
  3989  000D24  6E11               	movwf	(___fldiv@b+2)^0,c
  3990  000D26  0E00               	movlw	0
  3991  000D28  6E12               	movwf	(___fldiv@b+3)^0,c
  3992  000D2A                     l4524:
  3993  000D2A  8E11               	bsf	(___fldiv@b+2)^0,7,c
  3994  000D2C  0E00               	movlw	0
  3995  000D2E  6E12               	movwf	(___fldiv@b+3)^0,c
  3996  000D30  EFA2  F006         	goto	l4530
  3997  000D34                     l4528:
  3998  000D34  0E00               	movlw	0
  3999  000D36  6E0F               	movwf	___fldiv@b^0,c
  4000  000D38  0E00               	movlw	0
  4001  000D3A  6E10               	movwf	(___fldiv@b+1)^0,c
  4002  000D3C  0E00               	movlw	0
  4003  000D3E  6E11               	movwf	(___fldiv@b+2)^0,c
  4004  000D40  0E00               	movlw	0
  4005  000D42  6E12               	movwf	(___fldiv@b+3)^0,c
  4006  000D44                     l4530:
  4007  000D44  5016               	movf	(___fldiv@a+3)^0,w,c
  4008  000D46  0B80               	andlw	128
  4009  000D48  1A1F               	xorwf	___fldiv@sign^0,f,c
  4010  000D4A  5016               	movf	(___fldiv@a+3)^0,w,c
  4011  000D4C  2416               	addwf	(___fldiv@a+3)^0,w,c
  4012  000D4E  6E27               	movwf	___fldiv@aexp^0,c
  4013  000D50  AE15               	btfss	(___fldiv@a+2)^0,7,c
  4014  000D52  EFAD  F006         	goto	u4471
  4015  000D56  EFAF  F006         	goto	u4470
  4016  000D5A                     u4471:
  4017  000D5A  EFB0  F006         	goto	l4538
  4018  000D5E                     u4470:
  4019  000D5E  8027               	bsf	___fldiv@aexp^0,0,c
  4020  000D60                     l4538:
  4021  000D60  5027               	movf	___fldiv@aexp^0,w,c
  4022  000D62  B4D8               	btfsc	status,2,c
  4023  000D64  EFB6  F006         	goto	u4481
  4024  000D68  EFB8  F006         	goto	u4480
  4025  000D6C                     u4481:
  4026  000D6C  EFCD  F006         	goto	l4548
  4027  000D70                     u4480:
  4028  000D70  2827               	incf	___fldiv@aexp^0,w,c
  4029  000D72  A4D8               	btfss	status,2,c
  4030  000D74  EFBE  F006         	goto	u4491
  4031  000D78  EFC0  F006         	goto	u4490
  4032  000D7C                     u4491:
  4033  000D7C  EFC8  F006         	goto	l4544
  4034  000D80                     u4490:
  4035  000D80  0E00               	movlw	0
  4036  000D82  6E13               	movwf	___fldiv@a^0,c
  4037  000D84  0E00               	movlw	0
  4038  000D86  6E14               	movwf	(___fldiv@a+1)^0,c
  4039  000D88  0E00               	movlw	0
  4040  000D8A  6E15               	movwf	(___fldiv@a+2)^0,c
  4041  000D8C  0E00               	movlw	0
  4042  000D8E  6E16               	movwf	(___fldiv@a+3)^0,c
  4043  000D90                     l4544:
  4044  000D90  8E15               	bsf	(___fldiv@a+2)^0,7,c
  4045  000D92  0E00               	movlw	0
  4046  000D94  6E16               	movwf	(___fldiv@a+3)^0,c
  4047  000D96  EFD5  F006         	goto	l4550
  4048  000D9A                     l4548:
  4049  000D9A  0E00               	movlw	0
  4050  000D9C  6E13               	movwf	___fldiv@a^0,c
  4051  000D9E  0E00               	movlw	0
  4052  000DA0  6E14               	movwf	(___fldiv@a+1)^0,c
  4053  000DA2  0E00               	movlw	0
  4054  000DA4  6E15               	movwf	(___fldiv@a+2)^0,c
  4055  000DA6  0E00               	movlw	0
  4056  000DA8  6E16               	movwf	(___fldiv@a+3)^0,c
  4057  000DAA                     l4550:
  4058  000DAA  5013               	movf	___fldiv@a^0,w,c
  4059  000DAC  1014               	iorwf	(___fldiv@a+1)^0,w,c
  4060  000DAE  1015               	iorwf	(___fldiv@a+2)^0,w,c
  4061  000DB0  1016               	iorwf	(___fldiv@a+3)^0,w,c
  4062  000DB2  A4D8               	btfss	status,2,c
  4063  000DB4  EFDE  F006         	goto	u4501
  4064  000DB8  EFE0  F006         	goto	u4500
  4065  000DBC                     u4501:
  4066  000DBC  EFF8  F006         	goto	l4562
  4067  000DC0                     u4500:
  4068  000DC0  0E00               	movlw	0
  4069  000DC2  6E0F               	movwf	___fldiv@b^0,c
  4070  000DC4  0E00               	movlw	0
  4071  000DC6  6E10               	movwf	(___fldiv@b+1)^0,c
  4072  000DC8  0E00               	movlw	0
  4073  000DCA  6E11               	movwf	(___fldiv@b+2)^0,c
  4074  000DCC  0E00               	movlw	0
  4075  000DCE  6E12               	movwf	(___fldiv@b+3)^0,c
  4076  000DD0  0E80               	movlw	128
  4077  000DD2  1211               	iorwf	(___fldiv@b+2)^0,f,c
  4078  000DD4  0E7F               	movlw	127
  4079  000DD6  1212               	iorwf	(___fldiv@b+3)^0,f,c
  4080  000DD8                     l4556:
  4081  000DD8  501F               	movf	___fldiv@sign^0,w,c
  4082  000DDA  1212               	iorwf	(___fldiv@b+3)^0,f,c
  4083  000DDC  C00F  F00F         	movff	___fldiv@b,?___fldiv
  4084  000DE0  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  4085  000DE4  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  4086  000DE8  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  4087  000DEC  EF3B  F008         	goto	l1158
  4088  000DF0                     l4562:
  4089  000DF0  5026               	movf	___fldiv@bexp^0,w,c
  4090  000DF2  A4D8               	btfss	status,2,c
  4091  000DF4  EFFE  F006         	goto	u4511
  4092  000DF8  EF00  F007         	goto	u4510
  4093  000DFC                     u4511:
  4094  000DFC  EF0A  F007         	goto	l4570
  4095  000E00                     u4510:
  4096  000E00  0E00               	movlw	0
  4097  000E02  6E0F               	movwf	?___fldiv^0,c
  4098  000E04  0E00               	movlw	0
  4099  000E06  6E10               	movwf	(?___fldiv+1)^0,c
  4100  000E08  0E00               	movlw	0
  4101  000E0A  6E11               	movwf	(?___fldiv+2)^0,c
  4102  000E0C  0E00               	movlw	0
  4103  000E0E  6E12               	movwf	(?___fldiv+3)^0,c
  4104  000E10  EF3B  F008         	goto	l1158
  4105  000E14                     l4570:
  4106  000E14  5027               	movf	___fldiv@aexp^0,w,c
  4107  000E16  C026  F017         	movff	___fldiv@bexp,??___fldiv
  4108  000E1A  6A18               	clrf	(??___fldiv+1)^0,c
  4109  000E1C  5E17               	subwf	??___fldiv^0,f,c
  4110  000E1E  0E00               	movlw	0
  4111  000E20  5A18               	subwfb	(??___fldiv+1)^0,f,c
  4112  000E22  0E7F               	movlw	127
  4113  000E24  2417               	addwf	??___fldiv^0,w,c
  4114  000E26  6E20               	movwf	___fldiv@new_exp^0,c
  4115  000E28  0E00               	movlw	0
  4116  000E2A  2018               	addwfc	(??___fldiv+1)^0,w,c
  4117  000E2C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  4118  000E2E  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  4119  000E32  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  4120  000E36  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  4121  000E3A  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  4122  000E3E  0E00               	movlw	0
  4123  000E40  6E0F               	movwf	___fldiv@b^0,c
  4124  000E42  0E00               	movlw	0
  4125  000E44  6E10               	movwf	(___fldiv@b+1)^0,c
  4126  000E46  0E00               	movlw	0
  4127  000E48  6E11               	movwf	(___fldiv@b+2)^0,c
  4128  000E4A  0E00               	movlw	0
  4129  000E4C  6E12               	movwf	(___fldiv@b+3)^0,c
  4130  000E4E  0E00               	movlw	0
  4131  000E50  6E22               	movwf	___fldiv@grs^0,c
  4132  000E52  0E00               	movlw	0
  4133  000E54  6E23               	movwf	(___fldiv@grs+1)^0,c
  4134  000E56  0E00               	movlw	0
  4135  000E58  6E24               	movwf	(___fldiv@grs+2)^0,c
  4136  000E5A  0E00               	movlw	0
  4137  000E5C  6E25               	movwf	(___fldiv@grs+3)^0,c
  4138  000E5E  0E00               	movlw	0
  4139  000E60  6E27               	movwf	___fldiv@aexp^0,c
  4140  000E62  EF6B  F007         	goto	l1160
  4141  000E66                     l4580:
  4142  000E66  5027               	movf	___fldiv@aexp^0,w,c
  4143  000E68  B4D8               	btfsc	status,2,c
  4144  000E6A  EF39  F007         	goto	u4521
  4145  000E6E  EF3B  F007         	goto	u4520
  4146  000E72                     u4521:
  4147  000E72  EF52  F007         	goto	l4588
  4148  000E76                     u4520:
  4149  000E76  90D8               	bcf	status,0,c
  4150  000E78  361B               	rlcf	___fldiv@rem^0,f,c
  4151  000E7A  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  4152  000E7C  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  4153  000E7E  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  4154  000E80  90D8               	bcf	status,0,c
  4155  000E82  360F               	rlcf	___fldiv@b^0,f,c
  4156  000E84  3610               	rlcf	(___fldiv@b+1)^0,f,c
  4157  000E86  3611               	rlcf	(___fldiv@b+2)^0,f,c
  4158  000E88  3612               	rlcf	(___fldiv@b+3)^0,f,c
  4159  000E8A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  4160  000E8C  EF4A  F007         	goto	u4531
  4161  000E90  EF4C  F007         	goto	u4530
  4162  000E94                     u4531:
  4163  000E94  EF4D  F007         	goto	l1163
  4164  000E98                     u4530:
  4165  000E98  800F               	bsf	___fldiv@b^0,0,c
  4166  000E9A                     l1163:
  4167  000E9A  90D8               	bcf	status,0,c
  4168  000E9C  3622               	rlcf	___fldiv@grs^0,f,c
  4169  000E9E  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  4170  000EA0  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  4171  000EA2  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  4172  000EA4                     l4588:
  4173  000EA4  5013               	movf	___fldiv@a^0,w,c
  4174  000EA6  5C1B               	subwf	___fldiv@rem^0,w,c
  4175  000EA8  5014               	movf	(___fldiv@a+1)^0,w,c
  4176  000EAA  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  4177  000EAC  5015               	movf	(___fldiv@a+2)^0,w,c
  4178  000EAE  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  4179  000EB0  5016               	movf	(___fldiv@a+3)^0,w,c
  4180  000EB2  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  4181  000EB4  A0D8               	btfss	status,0,c
  4182  000EB6  EF5F  F007         	goto	u4541
  4183  000EBA  EF61  F007         	goto	u4540
  4184  000EBE                     u4541:
  4185  000EBE  EF6A  F007         	goto	l4594
  4186  000EC2                     u4540:
  4187  000EC2  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  4188  000EC4  5013               	movf	___fldiv@a^0,w,c
  4189  000EC6  5E1B               	subwf	___fldiv@rem^0,f,c
  4190  000EC8  5014               	movf	(___fldiv@a+1)^0,w,c
  4191  000ECA  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  4192  000ECC  5015               	movf	(___fldiv@a+2)^0,w,c
  4193  000ECE  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  4194  000ED0  5016               	movf	(___fldiv@a+3)^0,w,c
  4195  000ED2  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  4196  000ED4                     l4594:
  4197  000ED4  2A27               	incf	___fldiv@aexp^0,f,c
  4198  000ED6                     l1160:
  4199  000ED6  0E19               	movlw	25
  4200  000ED8  6427               	cpfsgt	___fldiv@aexp^0,c
  4201  000EDA  EF71  F007         	goto	u4551
  4202  000EDE  EF73  F007         	goto	u4550
  4203  000EE2                     u4551:
  4204  000EE2  EF33  F007         	goto	l4580
  4205  000EE6                     u4550:
  4206  000EE6  501B               	movf	___fldiv@rem^0,w,c
  4207  000EE8  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  4208  000EEA  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  4209  000EEC  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  4210  000EEE  B4D8               	btfsc	status,2,c
  4211  000EF0  EF7C  F007         	goto	u4561
  4212  000EF4  EF7E  F007         	goto	u4560
  4213  000EF8                     u4561:
  4214  000EF8  EF96  F007         	goto	l4606
  4215  000EFC                     u4560:
  4216  000EFC  8022               	bsf	___fldiv@grs^0,0,c
  4217  000EFE  EF96  F007         	goto	l4606
  4218  000F02                     l4600:
  4219  000F02  90D8               	bcf	status,0,c
  4220  000F04  360F               	rlcf	___fldiv@b^0,f,c
  4221  000F06  3610               	rlcf	(___fldiv@b+1)^0,f,c
  4222  000F08  3611               	rlcf	(___fldiv@b+2)^0,f,c
  4223  000F0A  3612               	rlcf	(___fldiv@b+3)^0,f,c
  4224  000F0C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  4225  000F0E  EF8B  F007         	goto	u4571
  4226  000F12  EF8D  F007         	goto	u4570
  4227  000F16                     u4571:
  4228  000F16  EF8E  F007         	goto	l1169
  4229  000F1A                     u4570:
  4230  000F1A  800F               	bsf	___fldiv@b^0,0,c
  4231  000F1C                     l1169:
  4232  000F1C  90D8               	bcf	status,0,c
  4233  000F1E  3622               	rlcf	___fldiv@grs^0,f,c
  4234  000F20  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  4235  000F22  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  4236  000F24  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  4237  000F26  0620               	decf	___fldiv@new_exp^0,f,c
  4238  000F28  A0D8               	btfss	status,0,c
  4239  000F2A  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  4240  000F2C                     l4606:
  4241  000F2C  AE11               	btfss	(___fldiv@b+2)^0,7,c
  4242  000F2E  EF9B  F007         	goto	u4581
  4243  000F32  EF9D  F007         	goto	u4580
  4244  000F36                     u4581:
  4245  000F36  EF81  F007         	goto	l4600
  4246  000F3A                     u4580:
  4247  000F3A  0E00               	movlw	0
  4248  000F3C  6E27               	movwf	___fldiv@aexp^0,c
  4249  000F3E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  4250  000F40  EFA4  F007         	goto	u4591
  4251  000F44  EFA6  F007         	goto	u4590
  4252  000F48                     u4591:
  4253  000F48  EFCA  F007         	goto	l1171
  4254  000F4C                     u4590:
  4255  000F4C  0EFF               	movlw	255
  4256  000F4E  1422               	andwf	___fldiv@grs^0,w,c
  4257  000F50  6E17               	movwf	??___fldiv^0,c
  4258  000F52  0EFF               	movlw	255
  4259  000F54  1423               	andwf	(___fldiv@grs+1)^0,w,c
  4260  000F56  6E18               	movwf	(??___fldiv+1)^0,c
  4261  000F58  0EFF               	movlw	255
  4262  000F5A  1424               	andwf	(___fldiv@grs+2)^0,w,c
  4263  000F5C  6E19               	movwf	(??___fldiv+2)^0,c
  4264  000F5E  0E7F               	movlw	127
  4265  000F60  1425               	andwf	(___fldiv@grs+3)^0,w,c
  4266  000F62  6E1A               	movwf	(??___fldiv+3)^0,c
  4267  000F64  5017               	movf	??___fldiv^0,w,c
  4268  000F66  1018               	iorwf	(??___fldiv+1)^0,w,c
  4269  000F68  1019               	iorwf	(??___fldiv+2)^0,w,c
  4270  000F6A  101A               	iorwf	(??___fldiv+3)^0,w,c
  4271  000F6C  B4D8               	btfsc	status,2,c
  4272  000F6E  EFBB  F007         	goto	u4601
  4273  000F72  EFBD  F007         	goto	u4600
  4274  000F76                     u4601:
  4275  000F76  EFC1  F007         	goto	l1172
  4276  000F7A                     u4600:
  4277  000F7A                     l4614:
  4278  000F7A  0E01               	movlw	1
  4279  000F7C  6E27               	movwf	___fldiv@aexp^0,c
  4280  000F7E  EFCA  F007         	goto	l1171
  4281  000F82                     l1172:
  4282  000F82  A00F               	btfss	___fldiv@b^0,0,c
  4283  000F84  EFC6  F007         	goto	u4611
  4284  000F88  EFC8  F007         	goto	u4610
  4285  000F8C                     u4611:
  4286  000F8C  EFCA  F007         	goto	l1171
  4287  000F90                     u4610:
  4288  000F90  EFBD  F007         	goto	l4614
  4289  000F94                     l1171:
  4290  000F94  5027               	movf	___fldiv@aexp^0,w,c
  4291  000F96  B4D8               	btfsc	status,2,c
  4292  000F98  EFD0  F007         	goto	u4621
  4293  000F9C  EFD2  F007         	goto	u4620
  4294  000FA0                     u4621:
  4295  000FA0  EFF6  F007         	goto	l4626
  4296  000FA4                     u4620:
  4297  000FA4  0E01               	movlw	1
  4298  000FA6  260F               	addwf	___fldiv@b^0,f,c
  4299  000FA8  0E00               	movlw	0
  4300  000FAA  2210               	addwfc	(___fldiv@b+1)^0,f,c
  4301  000FAC  2211               	addwfc	(___fldiv@b+2)^0,f,c
  4302  000FAE  2212               	addwfc	(___fldiv@b+3)^0,f,c
  4303  000FB0  A012               	btfss	(___fldiv@b+3)^0,0,c
  4304  000FB2  EFDD  F007         	goto	u4631
  4305  000FB6  EFDF  F007         	goto	u4630
  4306  000FBA                     u4631:
  4307  000FBA  EFF6  F007         	goto	l4626
  4308  000FBE                     u4630:
  4309  000FBE  C00F  F017         	movff	___fldiv@b,??___fldiv
  4310  000FC2  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  4311  000FC6  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  4312  000FCA  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  4313  000FCE  341A               	rlcf	(??___fldiv+3)^0,w,c
  4314  000FD0  321A               	rrcf	(??___fldiv+3)^0,f,c
  4315  000FD2  3219               	rrcf	(??___fldiv+2)^0,f,c
  4316  000FD4  3218               	rrcf	(??___fldiv+1)^0,f,c
  4317  000FD6  3217               	rrcf	??___fldiv^0,f,c
  4318  000FD8  C017  F00F         	movff	??___fldiv,___fldiv@b
  4319  000FDC  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  4320  000FE0  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  4321  000FE4  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  4322  000FE8  4A20               	infsnz	___fldiv@new_exp^0,f,c
  4323  000FEA  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  4324  000FEC                     l4626:
  4325  000FEC  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4326  000FEE  EF01  F008         	goto	u4641
  4327  000FF2  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  4328  000FF4  E108               	bnz	u4640
  4329  000FF6  2820               	incf	___fldiv@new_exp^0,w,c
  4330  000FF8  A0D8               	btfss	status,0,c
  4331  000FFA  EF01  F008         	goto	u4641
  4332  000FFE  EF03  F008         	goto	u4640
  4333  001002                     u4641:
  4334  001002  EF0E  F008         	goto	l4630
  4335  001006                     u4640:
  4336  001006  0E00               	movlw	0
  4337  001008  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  4338  00100A  6820               	setf	___fldiv@new_exp^0,c
  4339  00100C  0E00               	movlw	0
  4340  00100E  6E0F               	movwf	___fldiv@b^0,c
  4341  001010  0E00               	movlw	0
  4342  001012  6E10               	movwf	(___fldiv@b+1)^0,c
  4343  001014  0E00               	movlw	0
  4344  001016  6E11               	movwf	(___fldiv@b+2)^0,c
  4345  001018  0E00               	movlw	0
  4346  00101A  6E12               	movwf	(___fldiv@b+3)^0,c
  4347  00101C                     l4630:
  4348  00101C  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4349  00101E  EF1B  F008         	goto	u4650
  4350  001022  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  4351  001024  E106               	bnz	u4651
  4352  001026  0420               	decf	___fldiv@new_exp^0,w,c
  4353  001028  B0D8               	btfsc	status,0,c
  4354  00102A  EF19  F008         	goto	u4651
  4355  00102E  EF1B  F008         	goto	u4650
  4356  001032                     u4651:
  4357  001032  EF29  F008         	goto	l4634
  4358  001036                     u4650:
  4359  001036  0E00               	movlw	0
  4360  001038  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  4361  00103A  0E00               	movlw	0
  4362  00103C  6E20               	movwf	___fldiv@new_exp^0,c
  4363  00103E  0E00               	movlw	0
  4364  001040  6E0F               	movwf	___fldiv@b^0,c
  4365  001042  0E00               	movlw	0
  4366  001044  6E10               	movwf	(___fldiv@b+1)^0,c
  4367  001046  0E00               	movlw	0
  4368  001048  6E11               	movwf	(___fldiv@b+2)^0,c
  4369  00104A  0E00               	movlw	0
  4370  00104C  6E12               	movwf	(___fldiv@b+3)^0,c
  4371  00104E  0E00               	movlw	0
  4372  001050  6E1F               	movwf	___fldiv@sign^0,c
  4373  001052                     l4634:
  4374  001052  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  4375  001056  A026               	btfss	___fldiv@bexp^0,0,c
  4376  001058  EF30  F008         	goto	u4661
  4377  00105C  EF32  F008         	goto	u4660
  4378  001060                     u4661:
  4379  001060  EF35  F008         	goto	l4640
  4380  001064                     u4660:
  4381  001064  8E11               	bsf	(___fldiv@b+2)^0,7,c
  4382  001066  EF36  F008         	goto	l4642
  4383  00106A                     l4640:
  4384  00106A  9E11               	bcf	(___fldiv@b+2)^0,7,c
  4385  00106C                     l4642:
  4386  00106C  90D8               	bcf	status,0,c
  4387  00106E  3026               	rrcf	___fldiv@bexp^0,w,c
  4388  001070  6E12               	movwf	(___fldiv@b+3)^0,c
  4389  001072  EFEC  F006         	goto	l4556
  4390  001076                     l1158:
  4391  001076  0012               	return		;funcret
  4392  001078                     __end_of___fldiv:
  4393                           	callstack 0
  4394                           
  4395 ;; *************** function ___fladd *****************
  4396 ;; Defined at:
  4397 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  b               4   39[COMRAM] unsigned char 
  4400 ;;  a               4   43[COMRAM] unsigned char 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  grs             1   54[COMRAM] unsigned char 
  4403 ;;  bexp            1   53[COMRAM] unsigned char 
  4404 ;;  aexp            1   52[COMRAM] unsigned char 
  4405 ;;  signs           1   51[COMRAM] unsigned char 
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  4   39[COMRAM] unsigned char 
  4408 ;; Registers used:
  4409 ;;		wreg, status,2, status,0
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4415 ;;      Params:         8       0       0       0       0       0       0       0       0
  4416 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4417 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4418 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4419 ;;Total ram usage:       16 bytes
  4420 ;; Hardware stack levels used: 1
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_USART_Init
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text19
  4429  00081E                     __ptext19:
  4430                           	callstack 0
  4431  00081E                     ___fladd:
  4432                           	callstack 29
  4433  00081E  502B               	movf	(___fladd@b+3)^0,w,c
  4434  000820  0B80               	andlw	128
  4435  000822  6E34               	movwf	___fladd@signs^0,c
  4436  000824  502B               	movf	(___fladd@b+3)^0,w,c
  4437  000826  242B               	addwf	(___fladd@b+3)^0,w,c
  4438  000828  6E36               	movwf	___fladd@bexp^0,c
  4439  00082A  AE2A               	btfss	(___fladd@b+2)^0,7,c
  4440  00082C  EF1A  F004         	goto	u4051
  4441  000830  EF1C  F004         	goto	u4050
  4442  000834                     u4051:
  4443  000834  EF1D  F004         	goto	l4316
  4444  000838                     u4050:
  4445  000838  8036               	bsf	___fladd@bexp^0,0,c
  4446  00083A                     l4316:
  4447  00083A  5036               	movf	___fladd@bexp^0,w,c
  4448  00083C  B4D8               	btfsc	status,2,c
  4449  00083E  EF23  F004         	goto	u4061
  4450  000842  EF25  F004         	goto	u4060
  4451  000846                     u4061:
  4452  000846  EF3A  F004         	goto	l4326
  4453  00084A                     u4060:
  4454  00084A  2836               	incf	___fladd@bexp^0,w,c
  4455  00084C  A4D8               	btfss	status,2,c
  4456  00084E  EF2B  F004         	goto	u4071
  4457  000852  EF2D  F004         	goto	u4070
  4458  000856                     u4071:
  4459  000856  EF35  F004         	goto	l4322
  4460  00085A                     u4070:
  4461  00085A  0E00               	movlw	0
  4462  00085C  6E28               	movwf	___fladd@b^0,c
  4463  00085E  0E00               	movlw	0
  4464  000860  6E29               	movwf	(___fladd@b+1)^0,c
  4465  000862  0E00               	movlw	0
  4466  000864  6E2A               	movwf	(___fladd@b+2)^0,c
  4467  000866  0E00               	movlw	0
  4468  000868  6E2B               	movwf	(___fladd@b+3)^0,c
  4469  00086A                     l4322:
  4470  00086A  8E2A               	bsf	(___fladd@b+2)^0,7,c
  4471  00086C  0E00               	movlw	0
  4472  00086E  6E2B               	movwf	(___fladd@b+3)^0,c
  4473  000870  EF42  F004         	goto	l4328
  4474  000874                     l4326:
  4475  000874  0E00               	movlw	0
  4476  000876  6E28               	movwf	___fladd@b^0,c
  4477  000878  0E00               	movlw	0
  4478  00087A  6E29               	movwf	(___fladd@b+1)^0,c
  4479  00087C  0E00               	movlw	0
  4480  00087E  6E2A               	movwf	(___fladd@b+2)^0,c
  4481  000880  0E00               	movlw	0
  4482  000882  6E2B               	movwf	(___fladd@b+3)^0,c
  4483  000884                     l4328:
  4484  000884  502F               	movf	(___fladd@a+3)^0,w,c
  4485  000886  0B80               	andlw	128
  4486  000888  6E35               	movwf	___fladd@aexp^0,c
  4487  00088A  5034               	movf	___fladd@signs^0,w,c
  4488  00088C  1835               	xorwf	___fladd@aexp^0,w,c
  4489  00088E  B4D8               	btfsc	status,2,c
  4490  000890  EF4C  F004         	goto	u4081
  4491  000894  EF4E  F004         	goto	u4080
  4492  000898                     u4081:
  4493  000898  EF4F  F004         	goto	l4334
  4494  00089C                     u4080:
  4495  00089C  8C34               	bsf	___fladd@signs^0,6,c
  4496  00089E                     l4334:
  4497  00089E  502F               	movf	(___fladd@a+3)^0,w,c
  4498  0008A0  242F               	addwf	(___fladd@a+3)^0,w,c
  4499  0008A2  6E35               	movwf	___fladd@aexp^0,c
  4500  0008A4  AE2E               	btfss	(___fladd@a+2)^0,7,c
  4501  0008A6  EF57  F004         	goto	u4091
  4502  0008AA  EF59  F004         	goto	u4090
  4503  0008AE                     u4091:
  4504  0008AE  EF5A  F004         	goto	l4340
  4505  0008B2                     u4090:
  4506  0008B2  8035               	bsf	___fladd@aexp^0,0,c
  4507  0008B4                     l4340:
  4508  0008B4  5035               	movf	___fladd@aexp^0,w,c
  4509  0008B6  B4D8               	btfsc	status,2,c
  4510  0008B8  EF60  F004         	goto	u4101
  4511  0008BC  EF62  F004         	goto	u4100
  4512  0008C0                     u4101:
  4513  0008C0  EF77  F004         	goto	l4350
  4514  0008C4                     u4100:
  4515  0008C4  2835               	incf	___fladd@aexp^0,w,c
  4516  0008C6  A4D8               	btfss	status,2,c
  4517  0008C8  EF68  F004         	goto	u4111
  4518  0008CC  EF6A  F004         	goto	u4110
  4519  0008D0                     u4111:
  4520  0008D0  EF72  F004         	goto	l4346
  4521  0008D4                     u4110:
  4522  0008D4  0E00               	movlw	0
  4523  0008D6  6E2C               	movwf	___fladd@a^0,c
  4524  0008D8  0E00               	movlw	0
  4525  0008DA  6E2D               	movwf	(___fladd@a+1)^0,c
  4526  0008DC  0E00               	movlw	0
  4527  0008DE  6E2E               	movwf	(___fladd@a+2)^0,c
  4528  0008E0  0E00               	movlw	0
  4529  0008E2  6E2F               	movwf	(___fladd@a+3)^0,c
  4530  0008E4                     l4346:
  4531  0008E4  8E2E               	bsf	(___fladd@a+2)^0,7,c
  4532  0008E6  0E00               	movlw	0
  4533  0008E8  6E2F               	movwf	(___fladd@a+3)^0,c
  4534  0008EA  EF7F  F004         	goto	l4352
  4535  0008EE                     l4350:
  4536  0008EE  0E00               	movlw	0
  4537  0008F0  6E2C               	movwf	___fladd@a^0,c
  4538  0008F2  0E00               	movlw	0
  4539  0008F4  6E2D               	movwf	(___fladd@a+1)^0,c
  4540  0008F6  0E00               	movlw	0
  4541  0008F8  6E2E               	movwf	(___fladd@a+2)^0,c
  4542  0008FA  0E00               	movlw	0
  4543  0008FC  6E2F               	movwf	(___fladd@a+3)^0,c
  4544  0008FE                     l4352:
  4545  0008FE  5036               	movf	___fladd@bexp^0,w,c
  4546  000900  5C35               	subwf	___fladd@aexp^0,w,c
  4547  000902  B0D8               	btfsc	status,0,c
  4548  000904  EF86  F004         	goto	u4121
  4549  000908  EF88  F004         	goto	u4120
  4550  00090C                     u4121:
  4551  00090C  EFAF  F004         	goto	l4388
  4552  000910                     u4120:
  4553  000910  AC34               	btfss	___fladd@signs^0,6,c
  4554  000912  EF8D  F004         	goto	u4131
  4555  000916  EF8F  F004         	goto	u4130
  4556  00091A                     u4131:
  4557  00091A  EF91  F004         	goto	l4358
  4558  00091E                     u4130:
  4559  00091E  0E80               	movlw	128
  4560  000920  1A34               	xorwf	___fladd@signs^0,f,c
  4561  000922                     l4358:
  4562  000922  C036  F037         	movff	___fladd@bexp,___fladd@grs
  4563  000926  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  4564  00092A  C037  F035         	movff	___fladd@grs,___fladd@aexp
  4565  00092E  C028  F037         	movff	___fladd@b,___fladd@grs
  4566  000932  C02C  F028         	movff	___fladd@a,___fladd@b
  4567  000936  C037  F02C         	movff	___fladd@grs,___fladd@a
  4568  00093A  C029  F037         	movff	___fladd@b+1,___fladd@grs
  4569  00093E  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  4570  000942  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  4571  000946  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  4572  00094A  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  4573  00094E  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  4574  000952  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  4575  000956  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  4576  00095A  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  4577  00095E                     l4388:
  4578  00095E  0E00               	movlw	0
  4579  000960  6E37               	movwf	___fladd@grs^0,c
  4580  000962  5036               	movf	___fladd@bexp^0,w,c
  4581  000964  C035  F030         	movff	___fladd@aexp,??___fladd
  4582  000968  6A31               	clrf	(??___fladd+1)^0,c
  4583  00096A  5E30               	subwf	??___fladd^0,f,c
  4584  00096C  0E00               	movlw	0
  4585  00096E  5A31               	subwfb	(??___fladd+1)^0,f,c
  4586  000970  BE31               	btfsc	(??___fladd+1)^0,7,c
  4587  000972  EFC4  F004         	goto	u4141
  4588  000976  5031               	movf	(??___fladd+1)^0,w,c
  4589  000978  E109               	bnz	u4140
  4590  00097A  0E1A               	movlw	26
  4591  00097C  5C30               	subwf	??___fladd^0,w,c
  4592  00097E  A0D8               	btfss	status,0,c
  4593  000980  EFC4  F004         	goto	u4141
  4594  000984  EFC6  F004         	goto	u4140
  4595  000988                     u4141:
  4596  000988  EFFD  F004         	goto	l1105
  4597  00098C                     u4140:
  4598  00098C  5028               	movf	___fladd@b^0,w,c
  4599  00098E  1029               	iorwf	(___fladd@b+1)^0,w,c
  4600  000990  102A               	iorwf	(___fladd@b+2)^0,w,c
  4601  000992  102B               	iorwf	(___fladd@b+3)^0,w,c
  4602  000994  A4D8               	btfss	status,2,c
  4603  000996  EFCF  F004         	goto	u4151
  4604  00099A  EFD2  F004         	goto	u4150
  4605  00099E                     u4151:
  4606  00099E  0E01               	movlw	1
  4607  0009A0  EFD3  F004         	goto	u4160
  4608  0009A4                     u4150:
  4609  0009A4  0E00               	movlw	0
  4610  0009A6                     u4160:
  4611  0009A6  6E37               	movwf	___fladd@grs^0,c
  4612  0009A8  0E00               	movlw	0
  4613  0009AA  6E28               	movwf	___fladd@b^0,c
  4614  0009AC  0E00               	movlw	0
  4615  0009AE  6E29               	movwf	(___fladd@b+1)^0,c
  4616  0009B0  0E00               	movlw	0
  4617  0009B2  6E2A               	movwf	(___fladd@b+2)^0,c
  4618  0009B4  0E00               	movlw	0
  4619  0009B6  6E2B               	movwf	(___fladd@b+3)^0,c
  4620  0009B8  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  4621  0009BC  EF06  F005         	goto	l1104
  4622  0009C0                     l1106:
  4623  0009C0  A037               	btfss	___fladd@grs^0,0,c
  4624  0009C2  EFE5  F004         	goto	u4171
  4625  0009C6  EFE7  F004         	goto	u4170
  4626  0009CA                     u4171:
  4627  0009CA  EFED  F004         	goto	l4400
  4628  0009CE                     u4170:
  4629  0009CE  90D8               	bcf	status,0,c
  4630  0009D0  3037               	rrcf	___fladd@grs^0,w,c
  4631  0009D2  0901               	iorlw	1
  4632  0009D4  6E37               	movwf	___fladd@grs^0,c
  4633  0009D6  EFEF  F004         	goto	l4402
  4634  0009DA                     l4400:
  4635  0009DA  90D8               	bcf	status,0,c
  4636  0009DC  3237               	rrcf	___fladd@grs^0,f,c
  4637  0009DE                     l4402:
  4638  0009DE  A028               	btfss	___fladd@b^0,0,c
  4639  0009E0  EFF4  F004         	goto	u4181
  4640  0009E4  EFF6  F004         	goto	u4180
  4641  0009E8                     u4181:
  4642  0009E8  EFF7  F004         	goto	l4406
  4643  0009EC                     u4180:
  4644  0009EC  8E37               	bsf	___fladd@grs^0,7,c
  4645  0009EE                     l4406:
  4646  0009EE  342B               	rlcf	(___fladd@b+3)^0,w,c
  4647  0009F0  322B               	rrcf	(___fladd@b+3)^0,f,c
  4648  0009F2  322A               	rrcf	(___fladd@b+2)^0,f,c
  4649  0009F4  3229               	rrcf	(___fladd@b+1)^0,f,c
  4650  0009F6  3228               	rrcf	___fladd@b^0,f,c
  4651  0009F8  2A36               	incf	___fladd@bexp^0,f,c
  4652  0009FA                     l1105:
  4653  0009FA  5035               	movf	___fladd@aexp^0,w,c
  4654  0009FC  5C36               	subwf	___fladd@bexp^0,w,c
  4655  0009FE  A0D8               	btfss	status,0,c
  4656  000A00  EF04  F005         	goto	u4191
  4657  000A04  EF06  F005         	goto	u4190
  4658  000A08                     u4191:
  4659  000A08  EFE0  F004         	goto	l1106
  4660  000A0C                     u4190:
  4661  000A0C                     l1104:
  4662  000A0C  BC34               	btfsc	___fladd@signs^0,6,c
  4663  000A0E  EF0B  F005         	goto	u4201
  4664  000A12  EF0D  F005         	goto	u4200
  4665  000A16                     u4201:
  4666  000A16  EF4D  F005         	goto	l4434
  4667  000A1A                     u4200:
  4668  000A1A  5036               	movf	___fladd@bexp^0,w,c
  4669  000A1C  A4D8               	btfss	status,2,c
  4670  000A1E  EF13  F005         	goto	u4211
  4671  000A22  EF15  F005         	goto	u4210
  4672  000A26                     u4211:
  4673  000A26  EF1F  F005         	goto	l4416
  4674  000A2A                     u4210:
  4675  000A2A  0E00               	movlw	0
  4676  000A2C  6E28               	movwf	?___fladd^0,c
  4677  000A2E  0E00               	movlw	0
  4678  000A30  6E29               	movwf	(?___fladd+1)^0,c
  4679  000A32  0E00               	movlw	0
  4680  000A34  6E2A               	movwf	(?___fladd+2)^0,c
  4681  000A36  0E00               	movlw	0
  4682  000A38  6E2B               	movwf	(?___fladd+3)^0,c
  4683  000A3A  EF6E  F006         	goto	l1113
  4684  000A3E                     l4416:
  4685  000A3E  502C               	movf	___fladd@a^0,w,c
  4686  000A40  2628               	addwf	___fladd@b^0,f,c
  4687  000A42  502D               	movf	(___fladd@a+1)^0,w,c
  4688  000A44  2229               	addwfc	(___fladd@b+1)^0,f,c
  4689  000A46  502E               	movf	(___fladd@a+2)^0,w,c
  4690  000A48  222A               	addwfc	(___fladd@b+2)^0,f,c
  4691  000A4A  502F               	movf	(___fladd@a+3)^0,w,c
  4692  000A4C  222B               	addwfc	(___fladd@b+3)^0,f,c
  4693  000A4E  A02B               	btfss	(___fladd@b+3)^0,0,c
  4694  000A50  EF2C  F005         	goto	u4221
  4695  000A54  EF2E  F005         	goto	u4220
  4696  000A58                     u4221:
  4697  000A58  EFDA  F005         	goto	l4470
  4698  000A5C                     u4220:
  4699  000A5C  A037               	btfss	___fladd@grs^0,0,c
  4700  000A5E  EF33  F005         	goto	u4231
  4701  000A62  EF35  F005         	goto	u4230
  4702  000A66                     u4231:
  4703  000A66  EF3B  F005         	goto	l4424
  4704  000A6A                     u4230:
  4705  000A6A  90D8               	bcf	status,0,c
  4706  000A6C  3037               	rrcf	___fladd@grs^0,w,c
  4707  000A6E  0901               	iorlw	1
  4708  000A70  6E37               	movwf	___fladd@grs^0,c
  4709  000A72  EF3D  F005         	goto	l4426
  4710  000A76                     l4424:
  4711  000A76  90D8               	bcf	status,0,c
  4712  000A78  3237               	rrcf	___fladd@grs^0,f,c
  4713  000A7A                     l4426:
  4714  000A7A  A028               	btfss	___fladd@b^0,0,c
  4715  000A7C  EF42  F005         	goto	u4241
  4716  000A80  EF44  F005         	goto	u4240
  4717  000A84                     u4241:
  4718  000A84  EF45  F005         	goto	l4430
  4719  000A88                     u4240:
  4720  000A88  8E37               	bsf	___fladd@grs^0,7,c
  4721  000A8A                     l4430:
  4722  000A8A  342B               	rlcf	(___fladd@b+3)^0,w,c
  4723  000A8C  322B               	rrcf	(___fladd@b+3)^0,f,c
  4724  000A8E  322A               	rrcf	(___fladd@b+2)^0,f,c
  4725  000A90  3229               	rrcf	(___fladd@b+1)^0,f,c
  4726  000A92  3228               	rrcf	___fladd@b^0,f,c
  4727  000A94  2A36               	incf	___fladd@bexp^0,f,c
  4728  000A96  EFDA  F005         	goto	l4470
  4729  000A9A                     l4434:
  4730  000A9A  502C               	movf	___fladd@a^0,w,c
  4731  000A9C  5C28               	subwf	___fladd@b^0,w,c
  4732  000A9E  502D               	movf	(___fladd@a+1)^0,w,c
  4733  000AA0  5829               	subwfb	(___fladd@b+1)^0,w,c
  4734  000AA2  502E               	movf	(___fladd@a+2)^0,w,c
  4735  000AA4  582A               	subwfb	(___fladd@b+2)^0,w,c
  4736  000AA6  502B               	movf	(___fladd@b+3)^0,w,c
  4737  000AA8  0A80               	xorlw	128
  4738  000AAA  6E30               	movwf	??___fladd^0,c
  4739  000AAC  502F               	movf	(___fladd@a+3)^0,w,c
  4740  000AAE  0A80               	xorlw	128
  4741  000AB0  5830               	subwfb	??___fladd^0,w,c
  4742  000AB2  B0D8               	btfsc	status,0,c
  4743  000AB4  EF5E  F005         	goto	u4251
  4744  000AB8  EF60  F005         	goto	u4250
  4745  000ABC                     u4251:
  4746  000ABC  EF8B  F005         	goto	l4444
  4747  000AC0                     u4250:
  4748  000AC0  5028               	movf	___fladd@b^0,w,c
  4749  000AC2  5C2C               	subwf	___fladd@a^0,w,c
  4750  000AC4  6E30               	movwf	??___fladd^0,c
  4751  000AC6  5029               	movf	(___fladd@b+1)^0,w,c
  4752  000AC8  582D               	subwfb	(___fladd@a+1)^0,w,c
  4753  000ACA  6E31               	movwf	(??___fladd+1)^0,c
  4754  000ACC  502A               	movf	(___fladd@b+2)^0,w,c
  4755  000ACE  582E               	subwfb	(___fladd@a+2)^0,w,c
  4756  000AD0  6E32               	movwf	(??___fladd+2)^0,c
  4757  000AD2  502B               	movf	(___fladd@b+3)^0,w,c
  4758  000AD4  582F               	subwfb	(___fladd@a+3)^0,w,c
  4759  000AD6  6E33               	movwf	(??___fladd+3)^0,c
  4760  000AD8  0EFF               	movlw	255
  4761  000ADA  2430               	addwf	??___fladd^0,w,c
  4762  000ADC  6E28               	movwf	___fladd@b^0,c
  4763  000ADE  0EFF               	movlw	255
  4764  000AE0  2031               	addwfc	(??___fladd+1)^0,w,c
  4765  000AE2  6E29               	movwf	(___fladd@b+1)^0,c
  4766  000AE4  0EFF               	movlw	255
  4767  000AE6  2032               	addwfc	(??___fladd+2)^0,w,c
  4768  000AE8  6E2A               	movwf	(___fladd@b+2)^0,c
  4769  000AEA  0EFF               	movlw	255
  4770  000AEC  2033               	addwfc	(??___fladd+3)^0,w,c
  4771  000AEE  6E2B               	movwf	(___fladd@b+3)^0,c
  4772  000AF0  0E80               	movlw	128
  4773  000AF2  1A34               	xorwf	___fladd@signs^0,f,c
  4774  000AF4  6C37               	negf	___fladd@grs^0,c
  4775  000AF6  5037               	movf	___fladd@grs^0,w,c
  4776  000AF8  A4D8               	btfss	status,2,c
  4777  000AFA  EF81  F005         	goto	u4261
  4778  000AFE  EF83  F005         	goto	u4260
  4779  000B02                     u4261:
  4780  000B02  EF93  F005         	goto	l1121
  4781  000B06                     u4260:
  4782  000B06  0E01               	movlw	1
  4783  000B08  2628               	addwf	___fladd@b^0,f,c
  4784  000B0A  0E00               	movlw	0
  4785  000B0C  2229               	addwfc	(___fladd@b+1)^0,f,c
  4786  000B0E  222A               	addwfc	(___fladd@b+2)^0,f,c
  4787  000B10  222B               	addwfc	(___fladd@b+3)^0,f,c
  4788  000B12  EF93  F005         	goto	l1121
  4789  000B16                     l4444:
  4790  000B16  502C               	movf	___fladd@a^0,w,c
  4791  000B18  5E28               	subwf	___fladd@b^0,f,c
  4792  000B1A  502D               	movf	(___fladd@a+1)^0,w,c
  4793  000B1C  5A29               	subwfb	(___fladd@b+1)^0,f,c
  4794  000B1E  502E               	movf	(___fladd@a+2)^0,w,c
  4795  000B20  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  4796  000B22  502F               	movf	(___fladd@a+3)^0,w,c
  4797  000B24  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  4798  000B26                     l1121:
  4799  000B26  5028               	movf	___fladd@b^0,w,c
  4800  000B28  1029               	iorwf	(___fladd@b+1)^0,w,c
  4801  000B2A  102A               	iorwf	(___fladd@b+2)^0,w,c
  4802  000B2C  102B               	iorwf	(___fladd@b+3)^0,w,c
  4803  000B2E  A4D8               	btfss	status,2,c
  4804  000B30  EF9C  F005         	goto	u4271
  4805  000B34  EF9E  F005         	goto	u4270
  4806  000B38                     u4271:
  4807  000B38  EFD3  F005         	goto	l4468
  4808  000B3C                     u4270:
  4809  000B3C  5037               	movf	___fladd@grs^0,w,c
  4810  000B3E  A4D8               	btfss	status,2,c
  4811  000B40  EFA4  F005         	goto	u4281
  4812  000B44  EFA6  F005         	goto	u4280
  4813  000B48                     u4281:
  4814  000B48  EFD3  F005         	goto	l4468
  4815  000B4C                     u4280:
  4816  000B4C  0E00               	movlw	0
  4817  000B4E  6E28               	movwf	?___fladd^0,c
  4818  000B50  0E00               	movlw	0
  4819  000B52  6E29               	movwf	(?___fladd+1)^0,c
  4820  000B54  0E00               	movlw	0
  4821  000B56  6E2A               	movwf	(?___fladd+2)^0,c
  4822  000B58  0E00               	movlw	0
  4823  000B5A  6E2B               	movwf	(?___fladd+3)^0,c
  4824  000B5C  EF6E  F006         	goto	l1113
  4825  000B60                     l4452:
  4826  000B60  90D8               	bcf	status,0,c
  4827  000B62  3628               	rlcf	___fladd@b^0,f,c
  4828  000B64  3629               	rlcf	(___fladd@b+1)^0,f,c
  4829  000B66  362A               	rlcf	(___fladd@b+2)^0,f,c
  4830  000B68  362B               	rlcf	(___fladd@b+3)^0,f,c
  4831  000B6A  AE37               	btfss	___fladd@grs^0,7,c
  4832  000B6C  EFBA  F005         	goto	u4291
  4833  000B70  EFBC  F005         	goto	u4290
  4834  000B74                     u4291:
  4835  000B74  EFBD  F005         	goto	l4458
  4836  000B78                     u4290:
  4837  000B78  8028               	bsf	___fladd@b^0,0,c
  4838  000B7A                     l4458:
  4839  000B7A  A037               	btfss	___fladd@grs^0,0,c
  4840  000B7C  EFC2  F005         	goto	u4301
  4841  000B80  EFC4  F005         	goto	u4300
  4842  000B84                     u4301:
  4843  000B84  EFC8  F005         	goto	l4462
  4844  000B88                     u4300:
  4845  000B88  80D8               	bsf	status,0,c
  4846  000B8A  3637               	rlcf	___fladd@grs^0,f,c
  4847  000B8C  EFCA  F005         	goto	l4464
  4848  000B90                     l4462:
  4849  000B90  90D8               	bcf	status,0,c
  4850  000B92  3637               	rlcf	___fladd@grs^0,f,c
  4851  000B94                     l4464:
  4852  000B94  5036               	movf	___fladd@bexp^0,w,c
  4853  000B96  B4D8               	btfsc	status,2,c
  4854  000B98  EFD0  F005         	goto	u4311
  4855  000B9C  EFD2  F005         	goto	u4310
  4856  000BA0                     u4311:
  4857  000BA0  EFD3  F005         	goto	l4468
  4858  000BA4                     u4310:
  4859  000BA4  0636               	decf	___fladd@bexp^0,f,c
  4860  000BA6                     l4468:
  4861  000BA6  AE2A               	btfss	(___fladd@b+2)^0,7,c
  4862  000BA8  EFD8  F005         	goto	u4321
  4863  000BAC  EFDA  F005         	goto	u4320
  4864  000BB0                     u4321:
  4865  000BB0  EFB0  F005         	goto	l4452
  4866  000BB4                     u4320:
  4867  000BB4                     l4470:
  4868  000BB4  0E00               	movlw	0
  4869  000BB6  6E35               	movwf	___fladd@aexp^0,c
  4870  000BB8  AE37               	btfss	___fladd@grs^0,7,c
  4871  000BBA  EFE1  F005         	goto	u4331
  4872  000BBE  EFE3  F005         	goto	u4330
  4873  000BC2                     u4331:
  4874  000BC2  EFFB  F005         	goto	l1130
  4875  000BC6                     u4330:
  4876  000BC6  C037  F030         	movff	___fladd@grs,??___fladd
  4877  000BCA  0E7F               	movlw	127
  4878  000BCC  1630               	andwf	??___fladd^0,f,c
  4879  000BCE  B4D8               	btfsc	status,2,c
  4880  000BD0  EFEC  F005         	goto	u4341
  4881  000BD4  EFEE  F005         	goto	u4340
  4882  000BD8                     u4341:
  4883  000BD8  EFF2  F005         	goto	l1131
  4884  000BDC                     u4340:
  4885  000BDC                     l4476:
  4886  000BDC  0E01               	movlw	1
  4887  000BDE  6E35               	movwf	___fladd@aexp^0,c
  4888  000BE0  EFFB  F005         	goto	l1130
  4889  000BE4                     l1131:
  4890  000BE4  A028               	btfss	___fladd@b^0,0,c
  4891  000BE6  EFF7  F005         	goto	u4351
  4892  000BEA  EFF9  F005         	goto	u4350
  4893  000BEE                     u4351:
  4894  000BEE  EFFB  F005         	goto	l1130
  4895  000BF2                     u4350:
  4896  000BF2  EFEE  F005         	goto	l4476
  4897  000BF6                     l1130:
  4898  000BF6  5035               	movf	___fladd@aexp^0,w,c
  4899  000BF8  B4D8               	btfsc	status,2,c
  4900  000BFA  EF01  F006         	goto	u4361
  4901  000BFE  EF03  F006         	goto	u4360
  4902  000C02                     u4361:
  4903  000C02  EF2E  F006         	goto	l4488
  4904  000C06                     u4360:
  4905  000C06  0E01               	movlw	1
  4906  000C08  2628               	addwf	___fladd@b^0,f,c
  4907  000C0A  0E00               	movlw	0
  4908  000C0C  2229               	addwfc	(___fladd@b+1)^0,f,c
  4909  000C0E  222A               	addwfc	(___fladd@b+2)^0,f,c
  4910  000C10  222B               	addwfc	(___fladd@b+3)^0,f,c
  4911  000C12  A02B               	btfss	(___fladd@b+3)^0,0,c
  4912  000C14  EF0E  F006         	goto	u4371
  4913  000C18  EF10  F006         	goto	u4370
  4914  000C1C                     u4371:
  4915  000C1C  EF2E  F006         	goto	l4488
  4916  000C20                     u4370:
  4917  000C20  C028  F030         	movff	___fladd@b,??___fladd
  4918  000C24  C029  F031         	movff	___fladd@b+1,??___fladd+1
  4919  000C28  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  4920  000C2C  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  4921  000C30  3433               	rlcf	(??___fladd+3)^0,w,c
  4922  000C32  3233               	rrcf	(??___fladd+3)^0,f,c
  4923  000C34  3232               	rrcf	(??___fladd+2)^0,f,c
  4924  000C36  3231               	rrcf	(??___fladd+1)^0,f,c
  4925  000C38  3230               	rrcf	??___fladd^0,f,c
  4926  000C3A  C030  F028         	movff	??___fladd,___fladd@b
  4927  000C3E  C031  F029         	movff	??___fladd+1,___fladd@b+1
  4928  000C42  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  4929  000C46  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  4930  000C4A  2836               	incf	___fladd@bexp^0,w,c
  4931  000C4C  B4D8               	btfsc	status,2,c
  4932  000C4E  EF2B  F006         	goto	u4381
  4933  000C52  EF2D  F006         	goto	u4380
  4934  000C56                     u4381:
  4935  000C56  EF2E  F006         	goto	l4488
  4936  000C5A                     u4380:
  4937  000C5A  2A36               	incf	___fladd@bexp^0,f,c
  4938  000C5C                     l4488:
  4939  000C5C  2836               	incf	___fladd@bexp^0,w,c
  4940  000C5E  B4D8               	btfsc	status,2,c
  4941  000C60  EF34  F006         	goto	u4391
  4942  000C64  EF36  F006         	goto	u4390
  4943  000C68                     u4391:
  4944  000C68  EF3E  F006         	goto	l4492
  4945  000C6C                     u4390:
  4946  000C6C  5036               	movf	___fladd@bexp^0,w,c
  4947  000C6E  A4D8               	btfss	status,2,c
  4948  000C70  EF3C  F006         	goto	u4401
  4949  000C74  EF3E  F006         	goto	u4400
  4950  000C78                     u4401:
  4951  000C78  EF50  F006         	goto	l4496
  4952  000C7C                     u4400:
  4953  000C7C                     l4492:
  4954  000C7C  0E00               	movlw	0
  4955  000C7E  6E28               	movwf	___fladd@b^0,c
  4956  000C80  0E00               	movlw	0
  4957  000C82  6E29               	movwf	(___fladd@b+1)^0,c
  4958  000C84  0E00               	movlw	0
  4959  000C86  6E2A               	movwf	(___fladd@b+2)^0,c
  4960  000C88  0E00               	movlw	0
  4961  000C8A  6E2B               	movwf	(___fladd@b+3)^0,c
  4962  000C8C  5036               	movf	___fladd@bexp^0,w,c
  4963  000C8E  A4D8               	btfss	status,2,c
  4964  000C90  EF4C  F006         	goto	u4411
  4965  000C94  EF4E  F006         	goto	u4410
  4966  000C98                     u4411:
  4967  000C98  EF50  F006         	goto	l4496
  4968  000C9C                     u4410:
  4969  000C9C  0E00               	movlw	0
  4970  000C9E  6E34               	movwf	___fladd@signs^0,c
  4971  000CA0                     l4496:
  4972  000CA0  A036               	btfss	___fladd@bexp^0,0,c
  4973  000CA2  EF55  F006         	goto	u4421
  4974  000CA6  EF57  F006         	goto	u4420
  4975  000CAA                     u4421:
  4976  000CAA  EF5A  F006         	goto	l4500
  4977  000CAE                     u4420:
  4978  000CAE  8E2A               	bsf	(___fladd@b+2)^0,7,c
  4979  000CB0  EF5B  F006         	goto	l4502
  4980  000CB4                     l4500:
  4981  000CB4  9E2A               	bcf	(___fladd@b+2)^0,7,c
  4982  000CB6                     l4502:
  4983  000CB6  90D8               	bcf	status,0,c
  4984  000CB8  3036               	rrcf	___fladd@bexp^0,w,c
  4985  000CBA  6E2B               	movwf	(___fladd@b+3)^0,c
  4986  000CBC  AE34               	btfss	___fladd@signs^0,7,c
  4987  000CBE  EF63  F006         	goto	u4431
  4988  000CC2  EF65  F006         	goto	u4430
  4989  000CC6                     u4431:
  4990  000CC6  EF66  F006         	goto	l4508
  4991  000CCA                     u4430:
  4992  000CCA  8E2B               	bsf	(___fladd@b+3)^0,7,c
  4993  000CCC                     l4508:
  4994  000CCC  C028  F028         	movff	___fladd@b,?___fladd
  4995  000CD0  C029  F029         	movff	___fladd@b+1,?___fladd+1
  4996  000CD4  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  4997  000CD8  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  4998  000CDC                     l1113:
  4999  000CDC  0012               	return		;funcret
  5000  000CDE                     __end_of___fladd:
  5001                           	callstack 0
  5002                           
  5003 ;; *************** function _MFRC522_ReadCardSerial3 *****************
  5004 ;; Defined at:
  5005 ;;		line 927 in file "rc522.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  str             2   39[COMRAM] PTR unsigned char 
  5008 ;;		 -> UID_3(20), 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  _status         1    0        unsigned char 
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      unsigned char 
  5013 ;; Registers used:
  5014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5020 ;;      Params:         2       0       0       0       0       0       0       0       0
  5021 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5023 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5024 ;;Total ram usage:        2 bytes
  5025 ;; Hardware stack levels used: 1
  5026 ;; Hardware stack levels required when called: 4
  5027 ;; This function calls:
  5028 ;;		_MFRC522_AntiColl3
  5029 ;; This function is called by:
  5030 ;;		_main
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text20
  5035  0037B0                     __ptext20:
  5036                           	callstack 0
  5037  0037B0                     _MFRC522_ReadCardSerial3:
  5038                           	callstack 26
  5039  0037B0  C028  F020         	movff	MFRC522_ReadCardSerial3@str,MFRC522_AntiColl3@serNum
  5040  0037B4  C029  F021         	movff	MFRC522_ReadCardSerial3@str+1,MFRC522_AntiColl3@serNum+1
  5041  0037B8  EC99  F014         	call	_MFRC522_AntiColl3	;wreg free
  5042  0037BC                     
  5043                           ;rc522.c: 931:     str[5] = 0;
  5044  0037BC  EE20 F005          	lfsr	2,5
  5045  0037C0  5028               	movf	MFRC522_ReadCardSerial3@str^0,w,c
  5046  0037C2  26D9               	addwf	fsr2l,f,c
  5047  0037C4  5029               	movf	(MFRC522_ReadCardSerial3@str+1)^0,w,c
  5048  0037C6  22DA               	addwfc	fsr2h,f,c
  5049  0037C8  0E00               	movlw	0
  5050  0037CA  6EDF               	movwf	indf2,c
  5051  0037CC  0012               	return		;funcret
  5052  0037CE                     __end_of_MFRC522_ReadCardSerial3:
  5053                           	callstack 0
  5054                           
  5055 ;; *************** function _MFRC522_AntiColl3 *****************
  5056 ;; Defined at:
  5057 ;;		line 856 in file "rc522.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  serNum          2   31[COMRAM] PTR unsigned char 
  5060 ;;		 -> UID_3(20), 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;  unLen           2   35[COMRAM] unsigned int 
  5063 ;;  i               1   38[COMRAM] unsigned char 
  5064 ;;  _status         1   37[COMRAM] unsigned char 
  5065 ;;  serNumCheck     1   34[COMRAM] unsigned char 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  1    wreg      unsigned char 
  5068 ;; Registers used:
  5069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5075 ;;      Params:         2       0       0       0       0       0       0       0       0
  5076 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5077 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5078 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5079 ;;Total ram usage:        8 bytes
  5080 ;; Hardware stack levels used: 1
  5081 ;; Hardware stack levels required when called: 3
  5082 ;; This function calls:
  5083 ;;		_MFRC522_Clear_Bit3
  5084 ;;		_MFRC522_ToCard3
  5085 ;;		_MFRC522_Wr3
  5086 ;; This function is called by:
  5087 ;;		_main
  5088 ;;		_MFRC522_ReadCardSerial3
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           	psect	text21
  5093  002932                     __ptext21:
  5094                           	callstack 0
  5095  002932                     _MFRC522_AntiColl3:
  5096                           	callstack 26
  5097  002932                     
  5098                           ;rc522.c: 856: char MFRC522_AntiColl3(char *serNum);rc522.c: 857: {;rc522.c: 858:     ch
      +                          ar _status;;rc522.c: 859:     char i;;rc522.c: 860:     char serNumCheck = 0;
  5099  002932  0E00               	movlw	0
  5100  002934  6E23               	movwf	MFRC522_AntiColl3@serNumCheck^0,c
  5101  002936                     
  5102                           ;rc522.c: 861:     unsigned unLen;;rc522.c: 862:     MFRC522_Wr3(0x0D, 0x00);
  5103  002936  0E00               	movlw	0
  5104  002938  6E01               	movwf	MFRC522_Wr3@value^0,c
  5105  00293A  0E0D               	movlw	13
  5106  00293C  EC37  F017         	call	_MFRC522_Wr3
  5107  002940                     
  5108                           ;rc522.c: 863:     serNum[0] = 0x93;
  5109  002940  C020  FFD9         	movff	MFRC522_AntiColl3@serNum,fsr2l
  5110  002944  C021  FFDA         	movff	MFRC522_AntiColl3@serNum+1,fsr2h
  5111  002948  0E93               	movlw	147
  5112  00294A  6EDF               	movwf	indf2,c
  5113  00294C                     
  5114                           ;rc522.c: 864:     serNum[1] = 0x20;
  5115  00294C  EE20 F001          	lfsr	2,1
  5116  002950  5020               	movf	MFRC522_AntiColl3@serNum^0,w,c
  5117  002952  26D9               	addwf	fsr2l,f,c
  5118  002954  5021               	movf	(MFRC522_AntiColl3@serNum+1)^0,w,c
  5119  002956  22DA               	addwfc	fsr2h,f,c
  5120  002958  0E20               	movlw	32
  5121  00295A  6EDF               	movwf	indf2,c
  5122  00295C                     
  5123                           ;rc522.c: 865:     MFRC522_Clear_Bit3(0x08, 0x08);
  5124  00295C  0E08               	movlw	8
  5125  00295E  6E0A               	movwf	MFRC522_Clear_Bit3@mask^0,c
  5126  002960  0E08               	movlw	8
  5127  002962  EC14  F01C         	call	_MFRC522_Clear_Bit3
  5128  002966                     
  5129                           ;rc522.c: 866:     _status = MFRC522_ToCard3(0x0C, serNum, 2, serNum, &unLen);
  5130  002966  C020  F00D         	movff	MFRC522_AntiColl3@serNum,MFRC522_ToCard3@sendData
  5131  00296A  C021  F00E         	movff	MFRC522_AntiColl3@serNum+1,MFRC522_ToCard3@sendData+1
  5132  00296E  0E02               	movlw	2
  5133  002970  6E0F               	movwf	MFRC522_ToCard3@sendLen^0,c
  5134  002972  C020  F010         	movff	MFRC522_AntiColl3@serNum,MFRC522_ToCard3@backData
  5135  002976  C021  F011         	movff	MFRC522_AntiColl3@serNum+1,MFRC522_ToCard3@backData+1
  5136  00297A  0E24               	movlw	low MFRC522_AntiColl3@unLen
  5137  00297C  6E12               	movwf	MFRC522_ToCard3@backLen^0,c
  5138  00297E  0E00               	movlw	high MFRC522_AntiColl3@unLen
  5139  002980  6E13               	movwf	(MFRC522_ToCard3@backLen+1)^0,c
  5140  002982  0E0C               	movlw	12
  5141  002984  EC58  F00B         	call	_MFRC522_ToCard3
  5142  002988  6E26               	movwf	MFRC522_AntiColl3@_status^0,c
  5143  00298A                     
  5144                           ;rc522.c: 867:     if(_status == 0)
  5145  00298A  5026               	movf	MFRC522_AntiColl3@_status^0,w,c
  5146  00298C  A4D8               	btfss	status,2,c
  5147  00298E  EFCB  F014         	goto	u3821
  5148  002992  EFCD  F014         	goto	u3820
  5149  002996                     u3821:
  5150  002996  EFF1  F014         	goto	l533
  5151  00299A                     u3820:
  5152  00299A                     
  5153                           ;rc522.c: 868:     {;rc522.c: 869:         for(i=0; i<5; i++)
  5154  00299A  0E00               	movlw	0
  5155  00299C  6E27               	movwf	MFRC522_AntiColl3@i^0,c
  5156  00299E                     l4106:
  5157                           
  5158                           ;rc522.c: 870:         {;rc522.c: 871:             serNumCheck ^= serNum[i];
  5159  00299E  5027               	movf	MFRC522_AntiColl3@i^0,w,c
  5160  0029A0  2420               	addwf	MFRC522_AntiColl3@serNum^0,w,c
  5161  0029A2  6ED9               	movwf	fsr2l,c
  5162  0029A4  0E00               	movlw	0
  5163  0029A6  2021               	addwfc	(MFRC522_AntiColl3@serNum+1)^0,w,c
  5164  0029A8  6EDA               	movwf	fsr2h,c
  5165  0029AA  50DF               	movf	indf2,w,c
  5166  0029AC  1A23               	xorwf	MFRC522_AntiColl3@serNumCheck^0,f,c
  5167  0029AE                     
  5168                           ;rc522.c: 872:         }
  5169  0029AE  2A27               	incf	MFRC522_AntiColl3@i^0,f,c
  5170  0029B0  0E04               	movlw	4
  5171  0029B2  6427               	cpfsgt	MFRC522_AntiColl3@i^0,c
  5172  0029B4  EFDE  F014         	goto	u3831
  5173  0029B8  EFE0  F014         	goto	u3830
  5174  0029BC                     u3831:
  5175  0029BC  EFCF  F014         	goto	l4106
  5176  0029C0                     u3830:
  5177  0029C0                     
  5178                           ;rc522.c: 873:         if(serNumCheck != serNum[5])
  5179  0029C0  EE20 F005          	lfsr	2,5
  5180  0029C4  5020               	movf	MFRC522_AntiColl3@serNum^0,w,c
  5181  0029C6  26D9               	addwf	fsr2l,f,c
  5182  0029C8  5021               	movf	(MFRC522_AntiColl3@serNum+1)^0,w,c
  5183  0029CA  22DA               	addwfc	fsr2h,f,c
  5184  0029CC  5023               	movf	MFRC522_AntiColl3@serNumCheck^0,w,c
  5185  0029CE  18DE               	xorwf	postinc2,w,c
  5186  0029D0  B4D8               	btfsc	status,2,c
  5187  0029D2  EFED  F014         	goto	u3841
  5188  0029D6  EFEF  F014         	goto	u3840
  5189  0029DA                     u3841:
  5190  0029DA  EFF1  F014         	goto	l533
  5191  0029DE                     u3840:
  5192  0029DE                     
  5193                           ;rc522.c: 874:         {;rc522.c: 875:             _status = 2;
  5194  0029DE  0E02               	movlw	2
  5195  0029E0  6E26               	movwf	MFRC522_AntiColl3@_status^0,c
  5196  0029E2                     l533:
  5197                           
  5198                           ;rc522.c: 878:     return _status;
  5199  0029E2  5026               	movf	MFRC522_AntiColl3@_status^0,w,c
  5200  0029E4  0012               	return		;funcret
  5201  0029E6                     __end_of_MFRC522_AntiColl3:
  5202                           	callstack 0
  5203                           
  5204 ;; *************** function _MFRC522_ReadCardSerial2 *****************
  5205 ;; Defined at:
  5206 ;;		line 916 in file "rc522.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  str             2   39[COMRAM] PTR unsigned char 
  5209 ;;		 -> UID_2(20), 
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;  _status         1    0        unsigned char 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  1    wreg      unsigned char 
  5214 ;; Registers used:
  5215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5221 ;;      Params:         2       0       0       0       0       0       0       0       0
  5222 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5224 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5225 ;;Total ram usage:        2 bytes
  5226 ;; Hardware stack levels used: 1
  5227 ;; Hardware stack levels required when called: 4
  5228 ;; This function calls:
  5229 ;;		_MFRC522_AntiColl2
  5230 ;; This function is called by:
  5231 ;;		_main
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	text22
  5236  0037CE                     __ptext22:
  5237                           	callstack 0
  5238  0037CE                     _MFRC522_ReadCardSerial2:
  5239                           	callstack 26
  5240  0037CE  C028  F020         	movff	MFRC522_ReadCardSerial2@str,MFRC522_AntiColl2@serNum
  5241  0037D2  C029  F021         	movff	MFRC522_ReadCardSerial2@str+1,MFRC522_AntiColl2@serNum+1
  5242  0037D6  ECF3  F014         	call	_MFRC522_AntiColl2	;wreg free
  5243  0037DA                     
  5244                           ;rc522.c: 920:     str[5] = 0;
  5245  0037DA  EE20 F005          	lfsr	2,5
  5246  0037DE  5028               	movf	MFRC522_ReadCardSerial2@str^0,w,c
  5247  0037E0  26D9               	addwf	fsr2l,f,c
  5248  0037E2  5029               	movf	(MFRC522_ReadCardSerial2@str+1)^0,w,c
  5249  0037E4  22DA               	addwfc	fsr2h,f,c
  5250  0037E6  0E00               	movlw	0
  5251  0037E8  6EDF               	movwf	indf2,c
  5252  0037EA  0012               	return		;funcret
  5253  0037EC                     __end_of_MFRC522_ReadCardSerial2:
  5254                           	callstack 0
  5255                           
  5256 ;; *************** function _MFRC522_AntiColl2 *****************
  5257 ;; Defined at:
  5258 ;;		line 831 in file "rc522.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;  serNum          2   31[COMRAM] PTR unsigned char 
  5261 ;;		 -> UID_2(20), 
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;  unLen           2   35[COMRAM] unsigned int 
  5264 ;;  i               1   38[COMRAM] unsigned char 
  5265 ;;  _status         1   37[COMRAM] unsigned char 
  5266 ;;  serNumCheck     1   34[COMRAM] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      unsigned char 
  5269 ;; Registers used:
  5270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5276 ;;      Params:         2       0       0       0       0       0       0       0       0
  5277 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5278 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5279 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5280 ;;Total ram usage:        8 bytes
  5281 ;; Hardware stack levels used: 1
  5282 ;; Hardware stack levels required when called: 3
  5283 ;; This function calls:
  5284 ;;		_MFRC522_Clear_Bit2
  5285 ;;		_MFRC522_ToCard2
  5286 ;;		_MFRC522_Wr2
  5287 ;; This function is called by:
  5288 ;;		_main
  5289 ;;		_MFRC522_ReadCardSerial2
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text23
  5294  0029E6                     __ptext23:
  5295                           	callstack 0
  5296  0029E6                     _MFRC522_AntiColl2:
  5297                           	callstack 26
  5298  0029E6                     
  5299                           ;rc522.c: 831: char MFRC522_AntiColl2(char *serNum);rc522.c: 832: {;rc522.c: 833:     ch
      +                          ar _status;;rc522.c: 834:     char i;;rc522.c: 835:     char serNumCheck = 0;
  5300  0029E6  0E00               	movlw	0
  5301  0029E8  6E23               	movwf	MFRC522_AntiColl2@serNumCheck^0,c
  5302  0029EA                     
  5303                           ;rc522.c: 836:     unsigned unLen;;rc522.c: 837:     MFRC522_Wr2(0x0D, 0x00);
  5304  0029EA  0E00               	movlw	0
  5305  0029EC  6E01               	movwf	MFRC522_Wr2@value^0,c
  5306  0029EE  0E0D               	movlw	13
  5307  0029F0  EC83  F017         	call	_MFRC522_Wr2
  5308  0029F4                     
  5309                           ;rc522.c: 838:     serNum[0] = 0x93;
  5310  0029F4  C020  FFD9         	movff	MFRC522_AntiColl2@serNum,fsr2l
  5311  0029F8  C021  FFDA         	movff	MFRC522_AntiColl2@serNum+1,fsr2h
  5312  0029FC  0E93               	movlw	147
  5313  0029FE  6EDF               	movwf	indf2,c
  5314  002A00                     
  5315                           ;rc522.c: 839:     serNum[1] = 0x20;
  5316  002A00  EE20 F001          	lfsr	2,1
  5317  002A04  5020               	movf	MFRC522_AntiColl2@serNum^0,w,c
  5318  002A06  26D9               	addwf	fsr2l,f,c
  5319  002A08  5021               	movf	(MFRC522_AntiColl2@serNum+1)^0,w,c
  5320  002A0A  22DA               	addwfc	fsr2h,f,c
  5321  002A0C  0E20               	movlw	32
  5322  002A0E  6EDF               	movwf	indf2,c
  5323  002A10                     
  5324                           ;rc522.c: 840:     MFRC522_Clear_Bit2(0x08, 0x08);
  5325  002A10  0E08               	movlw	8
  5326  002A12  6E0A               	movwf	MFRC522_Clear_Bit2@mask^0,c
  5327  002A14  0E08               	movlw	8
  5328  002A16  EC21  F01C         	call	_MFRC522_Clear_Bit2
  5329  002A1A                     
  5330                           ;rc522.c: 841:     _status = MFRC522_ToCard2(0x0C, serNum, 2, serNum, &unLen);
  5331  002A1A  C020  F00D         	movff	MFRC522_AntiColl2@serNum,MFRC522_ToCard2@sendData
  5332  002A1E  C021  F00E         	movff	MFRC522_AntiColl2@serNum+1,MFRC522_ToCard2@sendData+1
  5333  002A22  0E02               	movlw	2
  5334  002A24  6E0F               	movwf	MFRC522_ToCard2@sendLen^0,c
  5335  002A26  C020  F010         	movff	MFRC522_AntiColl2@serNum,MFRC522_ToCard2@backData
  5336  002A2A  C021  F011         	movff	MFRC522_AntiColl2@serNum+1,MFRC522_ToCard2@backData+1
  5337  002A2E  0E24               	movlw	low MFRC522_AntiColl2@unLen
  5338  002A30  6E12               	movwf	MFRC522_ToCard2@backLen^0,c
  5339  002A32  0E00               	movlw	high MFRC522_AntiColl2@unLen
  5340  002A34  6E13               	movwf	(MFRC522_ToCard2@backLen+1)^0,c
  5341  002A36  0E0C               	movlw	12
  5342  002A38  EC9F  F00C         	call	_MFRC522_ToCard2
  5343  002A3C  6E26               	movwf	MFRC522_AntiColl2@_status^0,c
  5344  002A3E                     
  5345                           ;rc522.c: 842:     if(_status == 0)
  5346  002A3E  5026               	movf	MFRC522_AntiColl2@_status^0,w,c
  5347  002A40  A4D8               	btfss	status,2,c
  5348  002A42  EF25  F015         	goto	u3791
  5349  002A46  EF27  F015         	goto	u3790
  5350  002A4A                     u3791:
  5351  002A4A  EF4B  F015         	goto	l526
  5352  002A4E                     u3790:
  5353  002A4E                     
  5354                           ;rc522.c: 843:     {;rc522.c: 844:         for(i=0; i<5; i++)
  5355  002A4E  0E00               	movlw	0
  5356  002A50  6E27               	movwf	MFRC522_AntiColl2@i^0,c
  5357  002A52                     l4074:
  5358                           
  5359                           ;rc522.c: 845:         {;rc522.c: 846:             serNumCheck ^= serNum[i];
  5360  002A52  5027               	movf	MFRC522_AntiColl2@i^0,w,c
  5361  002A54  2420               	addwf	MFRC522_AntiColl2@serNum^0,w,c
  5362  002A56  6ED9               	movwf	fsr2l,c
  5363  002A58  0E00               	movlw	0
  5364  002A5A  2021               	addwfc	(MFRC522_AntiColl2@serNum+1)^0,w,c
  5365  002A5C  6EDA               	movwf	fsr2h,c
  5366  002A5E  50DF               	movf	indf2,w,c
  5367  002A60  1A23               	xorwf	MFRC522_AntiColl2@serNumCheck^0,f,c
  5368  002A62                     
  5369                           ;rc522.c: 847:         }
  5370  002A62  2A27               	incf	MFRC522_AntiColl2@i^0,f,c
  5371  002A64  0E04               	movlw	4
  5372  002A66  6427               	cpfsgt	MFRC522_AntiColl2@i^0,c
  5373  002A68  EF38  F015         	goto	u3801
  5374  002A6C  EF3A  F015         	goto	u3800
  5375  002A70                     u3801:
  5376  002A70  EF29  F015         	goto	l4074
  5377  002A74                     u3800:
  5378  002A74                     
  5379                           ;rc522.c: 848:         if(serNumCheck != serNum[5])
  5380  002A74  EE20 F005          	lfsr	2,5
  5381  002A78  5020               	movf	MFRC522_AntiColl2@serNum^0,w,c
  5382  002A7A  26D9               	addwf	fsr2l,f,c
  5383  002A7C  5021               	movf	(MFRC522_AntiColl2@serNum+1)^0,w,c
  5384  002A7E  22DA               	addwfc	fsr2h,f,c
  5385  002A80  5023               	movf	MFRC522_AntiColl2@serNumCheck^0,w,c
  5386  002A82  18DE               	xorwf	postinc2,w,c
  5387  002A84  B4D8               	btfsc	status,2,c
  5388  002A86  EF47  F015         	goto	u3811
  5389  002A8A  EF49  F015         	goto	u3810
  5390  002A8E                     u3811:
  5391  002A8E  EF4B  F015         	goto	l526
  5392  002A92                     u3810:
  5393  002A92                     
  5394                           ;rc522.c: 849:         {;rc522.c: 850:             _status = 2;
  5395  002A92  0E02               	movlw	2
  5396  002A94  6E26               	movwf	MFRC522_AntiColl2@_status^0,c
  5397  002A96                     l526:
  5398                           
  5399                           ;rc522.c: 853:     return _status;
  5400  002A96  5026               	movf	MFRC522_AntiColl2@_status^0,w,c
  5401  002A98  0012               	return		;funcret
  5402  002A9A                     __end_of_MFRC522_AntiColl2:
  5403                           	callstack 0
  5404                           
  5405 ;; *************** function _MFRC522_ReadCardSerial *****************
  5406 ;; Defined at:
  5407 ;;		line 905 in file "rc522.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;  str             2   39[COMRAM] PTR unsigned char 
  5410 ;;		 -> UID_1(20), 
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;  _status         1    0        unsigned char 
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      unsigned char 
  5415 ;; Registers used:
  5416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5422 ;;      Params:         2       0       0       0       0       0       0       0       0
  5423 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5425 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5426 ;;Total ram usage:        2 bytes
  5427 ;; Hardware stack levels used: 1
  5428 ;; Hardware stack levels required when called: 4
  5429 ;; This function calls:
  5430 ;;		_MFRC522_AntiColl
  5431 ;; This function is called by:
  5432 ;;		_main
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text24
  5437  0037EC                     __ptext24:
  5438                           	callstack 0
  5439  0037EC                     _MFRC522_ReadCardSerial:
  5440                           	callstack 26
  5441  0037EC  C028  F020         	movff	MFRC522_ReadCardSerial@str,MFRC522_AntiColl@serNum
  5442  0037F0  C029  F021         	movff	MFRC522_ReadCardSerial@str+1,MFRC522_AntiColl@serNum+1
  5443  0037F4  EC4D  F015         	call	_MFRC522_AntiColl	;wreg free
  5444  0037F8                     
  5445                           ;rc522.c: 909:     str[5] = 0;
  5446  0037F8  EE20 F005          	lfsr	2,5
  5447  0037FC  5028               	movf	MFRC522_ReadCardSerial@str^0,w,c
  5448  0037FE  26D9               	addwf	fsr2l,f,c
  5449  003800  5029               	movf	(MFRC522_ReadCardSerial@str+1)^0,w,c
  5450  003802  22DA               	addwfc	fsr2h,f,c
  5451  003804  0E00               	movlw	0
  5452  003806  6EDF               	movwf	indf2,c
  5453  003808  0012               	return		;funcret
  5454  00380A                     __end_of_MFRC522_ReadCardSerial:
  5455                           	callstack 0
  5456                           
  5457 ;; *************** function _MFRC522_AntiColl *****************
  5458 ;; Defined at:
  5459 ;;		line 806 in file "rc522.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  serNum          2   31[COMRAM] PTR unsigned char 
  5462 ;;		 -> UID_1(20), 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  unLen           2   35[COMRAM] unsigned int 
  5465 ;;  i               1   38[COMRAM] unsigned char 
  5466 ;;  _status         1   37[COMRAM] unsigned char 
  5467 ;;  serNumCheck     1   34[COMRAM] unsigned char 
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  1    wreg      unsigned char 
  5470 ;; Registers used:
  5471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5477 ;;      Params:         2       0       0       0       0       0       0       0       0
  5478 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5479 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5480 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5481 ;;Total ram usage:        8 bytes
  5482 ;; Hardware stack levels used: 1
  5483 ;; Hardware stack levels required when called: 3
  5484 ;; This function calls:
  5485 ;;		_MFRC522_Clear_Bit
  5486 ;;		_MFRC522_ToCard
  5487 ;;		_MFRC522_Wr
  5488 ;; This function is called by:
  5489 ;;		_main
  5490 ;;		_MFRC522_ReadCardSerial
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           	psect	text25
  5495  002A9A                     __ptext25:
  5496                           	callstack 0
  5497  002A9A                     _MFRC522_AntiColl:
  5498                           	callstack 26
  5499  002A9A                     
  5500                           ;rc522.c: 806: char MFRC522_AntiColl(char *serNum);rc522.c: 807: {;rc522.c: 808:     cha
      +                          r _status;;rc522.c: 809:     char i;;rc522.c: 810:     char serNumCheck = 0;
  5501  002A9A  0E00               	movlw	0
  5502  002A9C  6E23               	movwf	MFRC522_AntiColl@serNumCheck^0,c
  5503  002A9E                     
  5504                           ;rc522.c: 811:     unsigned unLen;;rc522.c: 812:     MFRC522_Wr(0x0D, 0x00);
  5505  002A9E  0E00               	movlw	0
  5506  002AA0  6E01               	movwf	MFRC522_Wr@value^0,c
  5507  002AA2  0E0D               	movlw	13
  5508  002AA4  ECCF  F017         	call	_MFRC522_Wr
  5509  002AA8                     
  5510                           ;rc522.c: 813:     serNum[0] = 0x93;
  5511  002AA8  C020  FFD9         	movff	MFRC522_AntiColl@serNum,fsr2l
  5512  002AAC  C021  FFDA         	movff	MFRC522_AntiColl@serNum+1,fsr2h
  5513  002AB0  0E93               	movlw	147
  5514  002AB2  6EDF               	movwf	indf2,c
  5515  002AB4                     
  5516                           ;rc522.c: 814:     serNum[1] = 0x20;
  5517  002AB4  EE20 F001          	lfsr	2,1
  5518  002AB8  5020               	movf	MFRC522_AntiColl@serNum^0,w,c
  5519  002ABA  26D9               	addwf	fsr2l,f,c
  5520  002ABC  5021               	movf	(MFRC522_AntiColl@serNum+1)^0,w,c
  5521  002ABE  22DA               	addwfc	fsr2h,f,c
  5522  002AC0  0E20               	movlw	32
  5523  002AC2  6EDF               	movwf	indf2,c
  5524  002AC4                     
  5525                           ;rc522.c: 815:     MFRC522_Clear_Bit(0x08, 0x08);
  5526  002AC4  0E08               	movlw	8
  5527  002AC6  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  5528  002AC8  0E08               	movlw	8
  5529  002ACA  EC2E  F01C         	call	_MFRC522_Clear_Bit
  5530  002ACE                     
  5531                           ;rc522.c: 816:     _status = MFRC522_ToCard(0x0C, serNum, 2, serNum, &unLen);
  5532  002ACE  C020  F00D         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@sendData
  5533  002AD2  C021  F00E         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@sendData+1
  5534  002AD6  0E02               	movlw	2
  5535  002AD8  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
  5536  002ADA  C020  F010         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@backData
  5537  002ADE  C021  F011         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@backData+1
  5538  002AE2  0E24               	movlw	low MFRC522_AntiColl@unLen
  5539  002AE4  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  5540  002AE6  0E00               	movlw	high MFRC522_AntiColl@unLen
  5541  002AE8  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  5542  002AEA  0E0C               	movlw	12
  5543  002AEC  ECE6  F00D         	call	_MFRC522_ToCard
  5544  002AF0  6E26               	movwf	MFRC522_AntiColl@_status^0,c
  5545  002AF2                     
  5546                           ;rc522.c: 817:     if(_status == 0)
  5547  002AF2  5026               	movf	MFRC522_AntiColl@_status^0,w,c
  5548  002AF4  A4D8               	btfss	status,2,c
  5549  002AF6  EF7F  F015         	goto	u3761
  5550  002AFA  EF81  F015         	goto	u3760
  5551  002AFE                     u3761:
  5552  002AFE  EFA5  F015         	goto	l519
  5553  002B02                     u3760:
  5554  002B02                     
  5555                           ;rc522.c: 818:     {;rc522.c: 819:         for(i=0; i<5; i++)
  5556  002B02  0E00               	movlw	0
  5557  002B04  6E27               	movwf	MFRC522_AntiColl@i^0,c
  5558  002B06                     l4042:
  5559                           
  5560                           ;rc522.c: 820:         {;rc522.c: 821:             serNumCheck ^= serNum[i];
  5561  002B06  5027               	movf	MFRC522_AntiColl@i^0,w,c
  5562  002B08  2420               	addwf	MFRC522_AntiColl@serNum^0,w,c
  5563  002B0A  6ED9               	movwf	fsr2l,c
  5564  002B0C  0E00               	movlw	0
  5565  002B0E  2021               	addwfc	(MFRC522_AntiColl@serNum+1)^0,w,c
  5566  002B10  6EDA               	movwf	fsr2h,c
  5567  002B12  50DF               	movf	indf2,w,c
  5568  002B14  1A23               	xorwf	MFRC522_AntiColl@serNumCheck^0,f,c
  5569  002B16                     
  5570                           ;rc522.c: 822:         }
  5571  002B16  2A27               	incf	MFRC522_AntiColl@i^0,f,c
  5572  002B18  0E04               	movlw	4
  5573  002B1A  6427               	cpfsgt	MFRC522_AntiColl@i^0,c
  5574  002B1C  EF92  F015         	goto	u3771
  5575  002B20  EF94  F015         	goto	u3770
  5576  002B24                     u3771:
  5577  002B24  EF83  F015         	goto	l4042
  5578  002B28                     u3770:
  5579  002B28                     
  5580                           ;rc522.c: 823:         if(serNumCheck != serNum[5])
  5581  002B28  EE20 F005          	lfsr	2,5
  5582  002B2C  5020               	movf	MFRC522_AntiColl@serNum^0,w,c
  5583  002B2E  26D9               	addwf	fsr2l,f,c
  5584  002B30  5021               	movf	(MFRC522_AntiColl@serNum+1)^0,w,c
  5585  002B32  22DA               	addwfc	fsr2h,f,c
  5586  002B34  5023               	movf	MFRC522_AntiColl@serNumCheck^0,w,c
  5587  002B36  18DE               	xorwf	postinc2,w,c
  5588  002B38  B4D8               	btfsc	status,2,c
  5589  002B3A  EFA1  F015         	goto	u3781
  5590  002B3E  EFA3  F015         	goto	u3780
  5591  002B42                     u3781:
  5592  002B42  EFA5  F015         	goto	l519
  5593  002B46                     u3780:
  5594  002B46                     
  5595                           ;rc522.c: 824:         {;rc522.c: 825:             _status = 2;
  5596  002B46  0E02               	movlw	2
  5597  002B48  6E26               	movwf	MFRC522_AntiColl@_status^0,c
  5598  002B4A                     l519:
  5599                           
  5600                           ;rc522.c: 828:     return _status;
  5601  002B4A  5026               	movf	MFRC522_AntiColl@_status^0,w,c
  5602  002B4C  0012               	return		;funcret
  5603  002B4E                     __end_of_MFRC522_AntiColl:
  5604                           	callstack 0
  5605                           
  5606 ;; *************** function _MFRC522_IsCard3 *****************
  5607 ;; Defined at:
  5608 ;;		line 897 in file "rc522.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  TagType         2   37[COMRAM] PTR unsigned char 
  5611 ;;		 -> TagType3(1), 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;		None
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  1    wreg      unsigned char 
  5616 ;; Registers used:
  5617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5623 ;;      Params:         2       0       0       0       0       0       0       0       0
  5624 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5626 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5627 ;;Total ram usage:        2 bytes
  5628 ;; Hardware stack levels used: 1
  5629 ;; Hardware stack levels required when called: 4
  5630 ;; This function calls:
  5631 ;;		_MFRC522_Request3
  5632 ;; This function is called by:
  5633 ;;		_main
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text26
  5638  003908                     __ptext26:
  5639                           	callstack 0
  5640  003908                     _MFRC522_IsCard3:
  5641                           	callstack 26
  5642  003908                     
  5643                           ;rc522.c: 897: char MFRC522_IsCard3(char *TagType);rc522.c: 898: {;rc522.c: 899:     if(
      +                          MFRC522_Request3(0x26, TagType) == 0)
  5644  003908  C026  F020         	movff	MFRC522_IsCard3@TagType,MFRC522_Request3@TagType
  5645  00390C  C027  F021         	movff	MFRC522_IsCard3@TagType+1,MFRC522_Request3@TagType+1
  5646  003910  0E26               	movlw	38
  5647  003912  ECC5  F018         	call	_MFRC522_Request3
  5648  003916  0012               	return		;funcret
  5649  003918                     __end_of_MFRC522_IsCard3:
  5650                           	callstack 0
  5651                           
  5652 ;; *************** function _MFRC522_Request3 *****************
  5653 ;; Defined at:
  5654 ;;		line 612 in file "rc522.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  reqMode         1    wreg     unsigned char 
  5657 ;;  TagType         2   31[COMRAM] PTR unsigned char 
  5658 ;;		 -> TagType3(1), 
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;  reqMode         1   33[COMRAM] unsigned char 
  5661 ;;  backBits        2   35[COMRAM] unsigned int 
  5662 ;;  _status         1   34[COMRAM] unsigned char 
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  1    wreg      unsigned char 
  5665 ;; Registers used:
  5666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5672 ;;      Params:         2       0       0       0       0       0       0       0       0
  5673 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5674 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5675 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5676 ;;Total ram usage:        6 bytes
  5677 ;; Hardware stack levels used: 1
  5678 ;; Hardware stack levels required when called: 3
  5679 ;; This function calls:
  5680 ;;		_MFRC522_ToCard3
  5681 ;;		_MFRC522_Wr3
  5682 ;; This function is called by:
  5683 ;;		_MFRC522_IsCard3
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           	psect	text27
  5688  00318A                     __ptext27:
  5689                           	callstack 0
  5690  00318A                     _MFRC522_Request3:
  5691                           	callstack 26
  5692                           
  5693                           ;incstack = 0
  5694                           ;MFRC522_Request3@reqMode stored from wreg
  5695  00318A  6E22               	movwf	MFRC522_Request3@reqMode^0,c
  5696  00318C                     
  5697                           ;rc522.c: 612: char MFRC522_Request3(char reqMode, char *TagType);rc522.c: 613: {;rc522.
      +                          c: 614:     char _status;;rc522.c: 615:     unsigned backBits;;rc522.c: 616:     MFRC522
      +                          _Wr3(0x0D, 0x07);
  5698  00318C  0E07               	movlw	7
  5699  00318E  6E01               	movwf	MFRC522_Wr3@value^0,c
  5700  003190  0E0D               	movlw	13
  5701  003192  EC37  F017         	call	_MFRC522_Wr3
  5702  003196                     
  5703                           ;rc522.c: 617:     TagType[0] = reqMode;
  5704  003196  C020  FFD9         	movff	MFRC522_Request3@TagType,fsr2l
  5705  00319A  C021  FFDA         	movff	MFRC522_Request3@TagType+1,fsr2h
  5706  00319E  C022  FFDF         	movff	MFRC522_Request3@reqMode,indf2
  5707  0031A2                     
  5708                           ;rc522.c: 618:     _status = MFRC522_ToCard3(0x0C, TagType, 1, TagType, &backBits);
  5709  0031A2  C020  F00D         	movff	MFRC522_Request3@TagType,MFRC522_ToCard3@sendData
  5710  0031A6  C021  F00E         	movff	MFRC522_Request3@TagType+1,MFRC522_ToCard3@sendData+1
  5711  0031AA  0E01               	movlw	1
  5712  0031AC  6E0F               	movwf	MFRC522_ToCard3@sendLen^0,c
  5713  0031AE  C020  F010         	movff	MFRC522_Request3@TagType,MFRC522_ToCard3@backData
  5714  0031B2  C021  F011         	movff	MFRC522_Request3@TagType+1,MFRC522_ToCard3@backData+1
  5715  0031B6  0E24               	movlw	low MFRC522_Request3@backBits
  5716  0031B8  6E12               	movwf	MFRC522_ToCard3@backLen^0,c
  5717  0031BA  0E00               	movlw	high MFRC522_Request3@backBits
  5718  0031BC  6E13               	movwf	(MFRC522_ToCard3@backLen+1)^0,c
  5719  0031BE  0E0C               	movlw	12
  5720  0031C0  EC58  F00B         	call	_MFRC522_ToCard3
  5721  0031C4  6E23               	movwf	MFRC522_Request3@_status^0,c
  5722  0031C6                     
  5723                           ;rc522.c: 619:     if((_status != 0) || (backBits != 0x10))
  5724  0031C6  5023               	movf	MFRC522_Request3@_status^0,w,c
  5725  0031C8  A4D8               	btfss	status,2,c
  5726  0031CA  EFE9  F018         	goto	u3911
  5727  0031CE  EFEB  F018         	goto	u3910
  5728  0031D2                     u3911:
  5729  0031D2  EFF5  F018         	goto	l4212
  5730  0031D6                     u3910:
  5731  0031D6  0E10               	movlw	16
  5732  0031D8  1824               	xorwf	MFRC522_Request3@backBits^0,w,c
  5733  0031DA  1025               	iorwf	(MFRC522_Request3@backBits+1)^0,w,c
  5734  0031DC  B4D8               	btfsc	status,2,c
  5735  0031DE  EFF3  F018         	goto	u3921
  5736  0031E2  EFF5  F018         	goto	u3920
  5737  0031E6                     u3921:
  5738  0031E6  EFF7  F018         	goto	l453
  5739  0031EA                     u3920:
  5740  0031EA                     l4212:
  5741                           
  5742                           ;rc522.c: 620:     {;rc522.c: 621:         _status = 2;
  5743  0031EA  0E02               	movlw	2
  5744  0031EC  6E23               	movwf	MFRC522_Request3@_status^0,c
  5745  0031EE                     l453:
  5746                           
  5747                           ;rc522.c: 623:     return _status;
  5748  0031EE  5023               	movf	MFRC522_Request3@_status^0,w,c
  5749  0031F0  0012               	return		;funcret
  5750  0031F2                     __end_of_MFRC522_Request3:
  5751                           	callstack 0
  5752                           
  5753 ;; *************** function _MFRC522_IsCard2 *****************
  5754 ;; Defined at:
  5755 ;;		line 889 in file "rc522.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;  TagType         2   37[COMRAM] PTR unsigned char 
  5758 ;;		 -> TagType2(1), 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;		None
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      unsigned char 
  5763 ;; Registers used:
  5764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5770 ;;      Params:         2       0       0       0       0       0       0       0       0
  5771 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5773 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5774 ;;Total ram usage:        2 bytes
  5775 ;; Hardware stack levels used: 1
  5776 ;; Hardware stack levels required when called: 4
  5777 ;; This function calls:
  5778 ;;		_MFRC522_Request2
  5779 ;; This function is called by:
  5780 ;;		_main
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text28
  5785  003918                     __ptext28:
  5786                           	callstack 0
  5787  003918                     _MFRC522_IsCard2:
  5788                           	callstack 26
  5789  003918                     
  5790                           ;rc522.c: 889: char MFRC522_IsCard2(char *TagType);rc522.c: 890: {;rc522.c: 891:     if(
      +                          MFRC522_Request2(0x26, TagType) == 0)
  5791  003918  C026  F020         	movff	MFRC522_IsCard2@TagType,MFRC522_Request2@TagType
  5792  00391C  C027  F021         	movff	MFRC522_IsCard2@TagType+1,MFRC522_Request2@TagType+1
  5793  003920  0E26               	movlw	38
  5794  003922  ECF9  F018         	call	_MFRC522_Request2
  5795  003926  0012               	return		;funcret
  5796  003928                     __end_of_MFRC522_IsCard2:
  5797                           	callstack 0
  5798                           
  5799 ;; *************** function _MFRC522_Request2 *****************
  5800 ;; Defined at:
  5801 ;;		line 598 in file "rc522.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;  reqMode         1    wreg     unsigned char 
  5804 ;;  TagType         2   31[COMRAM] PTR unsigned char 
  5805 ;;		 -> TagType2(1), 
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;  reqMode         1   33[COMRAM] unsigned char 
  5808 ;;  backBits        2   35[COMRAM] unsigned int 
  5809 ;;  _status         1   34[COMRAM] unsigned char 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      unsigned char 
  5812 ;; Registers used:
  5813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5819 ;;      Params:         2       0       0       0       0       0       0       0       0
  5820 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5822 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5823 ;;Total ram usage:        6 bytes
  5824 ;; Hardware stack levels used: 1
  5825 ;; Hardware stack levels required when called: 3
  5826 ;; This function calls:
  5827 ;;		_MFRC522_ToCard2
  5828 ;;		_MFRC522_Wr2
  5829 ;; This function is called by:
  5830 ;;		_MFRC522_IsCard2
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text29
  5835  0031F2                     __ptext29:
  5836                           	callstack 0
  5837  0031F2                     _MFRC522_Request2:
  5838                           	callstack 26
  5839                           
  5840                           ;incstack = 0
  5841                           ;MFRC522_Request2@reqMode stored from wreg
  5842  0031F2  6E22               	movwf	MFRC522_Request2@reqMode^0,c
  5843  0031F4                     
  5844                           ;rc522.c: 598: char MFRC522_Request2(char reqMode, char *TagType);rc522.c: 599: {;rc522.
      +                          c: 600:     char _status;;rc522.c: 601:     unsigned backBits;;rc522.c: 602:     MFRC522
      +                          _Wr2(0x0D, 0x07);
  5845  0031F4  0E07               	movlw	7
  5846  0031F6  6E01               	movwf	MFRC522_Wr2@value^0,c
  5847  0031F8  0E0D               	movlw	13
  5848  0031FA  EC83  F017         	call	_MFRC522_Wr2
  5849  0031FE                     
  5850                           ;rc522.c: 603:     TagType[0] = reqMode;
  5851  0031FE  C020  FFD9         	movff	MFRC522_Request2@TagType,fsr2l
  5852  003202  C021  FFDA         	movff	MFRC522_Request2@TagType+1,fsr2h
  5853  003206  C022  FFDF         	movff	MFRC522_Request2@reqMode,indf2
  5854  00320A                     
  5855                           ;rc522.c: 604:     _status = MFRC522_ToCard2(0x0C, TagType, 1, TagType, &backBits);
  5856  00320A  C020  F00D         	movff	MFRC522_Request2@TagType,MFRC522_ToCard2@sendData
  5857  00320E  C021  F00E         	movff	MFRC522_Request2@TagType+1,MFRC522_ToCard2@sendData+1
  5858  003212  0E01               	movlw	1
  5859  003214  6E0F               	movwf	MFRC522_ToCard2@sendLen^0,c
  5860  003216  C020  F010         	movff	MFRC522_Request2@TagType,MFRC522_ToCard2@backData
  5861  00321A  C021  F011         	movff	MFRC522_Request2@TagType+1,MFRC522_ToCard2@backData+1
  5862  00321E  0E24               	movlw	low MFRC522_Request2@backBits
  5863  003220  6E12               	movwf	MFRC522_ToCard2@backLen^0,c
  5864  003222  0E00               	movlw	high MFRC522_Request2@backBits
  5865  003224  6E13               	movwf	(MFRC522_ToCard2@backLen+1)^0,c
  5866  003226  0E0C               	movlw	12
  5867  003228  EC9F  F00C         	call	_MFRC522_ToCard2
  5868  00322C  6E23               	movwf	MFRC522_Request2@_status^0,c
  5869  00322E                     
  5870                           ;rc522.c: 605:     if((_status != 0) || (backBits != 0x10))
  5871  00322E  5023               	movf	MFRC522_Request2@_status^0,w,c
  5872  003230  A4D8               	btfss	status,2,c
  5873  003232  EF1D  F019         	goto	u3891
  5874  003236  EF1F  F019         	goto	u3890
  5875  00323A                     u3891:
  5876  00323A  EF29  F019         	goto	l4198
  5877  00323E                     u3890:
  5878  00323E  0E10               	movlw	16
  5879  003240  1824               	xorwf	MFRC522_Request2@backBits^0,w,c
  5880  003242  1025               	iorwf	(MFRC522_Request2@backBits+1)^0,w,c
  5881  003244  B4D8               	btfsc	status,2,c
  5882  003246  EF27  F019         	goto	u3901
  5883  00324A  EF29  F019         	goto	u3900
  5884  00324E                     u3901:
  5885  00324E  EF2B  F019         	goto	l447
  5886  003252                     u3900:
  5887  003252                     l4198:
  5888                           
  5889                           ;rc522.c: 606:     {;rc522.c: 607:         _status = 2;
  5890  003252  0E02               	movlw	2
  5891  003254  6E23               	movwf	MFRC522_Request2@_status^0,c
  5892  003256                     l447:
  5893                           
  5894                           ;rc522.c: 609:     return _status;
  5895  003256  5023               	movf	MFRC522_Request2@_status^0,w,c
  5896  003258  0012               	return		;funcret
  5897  00325A                     __end_of_MFRC522_Request2:
  5898                           	callstack 0
  5899                           
  5900 ;; *************** function _MFRC522_IsCard *****************
  5901 ;; Defined at:
  5902 ;;		line 881 in file "rc522.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;  TagType         2   37[COMRAM] PTR unsigned char 
  5905 ;;		 -> TagType1(1), 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;		None
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      unsigned char 
  5910 ;; Registers used:
  5911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5917 ;;      Params:         2       0       0       0       0       0       0       0       0
  5918 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5920 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5921 ;;Total ram usage:        2 bytes
  5922 ;; Hardware stack levels used: 1
  5923 ;; Hardware stack levels required when called: 4
  5924 ;; This function calls:
  5925 ;;		_MFRC522_Request
  5926 ;; This function is called by:
  5927 ;;		_main
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           	psect	text30
  5932  003928                     __ptext30:
  5933                           	callstack 0
  5934  003928                     _MFRC522_IsCard:
  5935                           	callstack 26
  5936  003928                     
  5937                           ;rc522.c: 881: char MFRC522_IsCard(char *TagType);rc522.c: 882: {;rc522.c: 883:     if(M
      +                          FRC522_Request(0x26, TagType) == 0)
  5938  003928  C026  F020         	movff	MFRC522_IsCard@TagType,MFRC522_Request@TagType
  5939  00392C  C027  F021         	movff	MFRC522_IsCard@TagType+1,MFRC522_Request@TagType+1
  5940  003930  0E26               	movlw	38
  5941  003932  EC2D  F019         	call	_MFRC522_Request
  5942  003936  0012               	return		;funcret
  5943  003938                     __end_of_MFRC522_IsCard:
  5944                           	callstack 0
  5945                           
  5946 ;; *************** function _MFRC522_Request *****************
  5947 ;; Defined at:
  5948 ;;		line 584 in file "rc522.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;  reqMode         1    wreg     unsigned char 
  5951 ;;  TagType         2   31[COMRAM] PTR unsigned char 
  5952 ;;		 -> TagType1(1), 
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;  reqMode         1   33[COMRAM] unsigned char 
  5955 ;;  backBits        2   35[COMRAM] unsigned int 
  5956 ;;  _status         1   34[COMRAM] unsigned char 
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  1    wreg      unsigned char 
  5959 ;; Registers used:
  5960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5966 ;;      Params:         2       0       0       0       0       0       0       0       0
  5967 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5968 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5969 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5970 ;;Total ram usage:        6 bytes
  5971 ;; Hardware stack levels used: 1
  5972 ;; Hardware stack levels required when called: 3
  5973 ;; This function calls:
  5974 ;;		_MFRC522_ToCard
  5975 ;;		_MFRC522_Wr
  5976 ;; This function is called by:
  5977 ;;		_MFRC522_IsCard
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           	psect	text31
  5982  00325A                     __ptext31:
  5983                           	callstack 0
  5984  00325A                     _MFRC522_Request:
  5985                           	callstack 26
  5986                           
  5987                           ;incstack = 0
  5988                           ;MFRC522_Request@reqMode stored from wreg
  5989  00325A  6E22               	movwf	MFRC522_Request@reqMode^0,c
  5990  00325C                     
  5991                           ;rc522.c: 584: char MFRC522_Request(char reqMode, char *TagType);rc522.c: 585: {;rc522.c
      +                          : 586:     char _status;;rc522.c: 587:     unsigned backBits;;rc522.c: 588:     MFRC522_
      +                          Wr(0x0D, 0x07);
  5992  00325C  0E07               	movlw	7
  5993  00325E  6E01               	movwf	MFRC522_Wr@value^0,c
  5994  003260  0E0D               	movlw	13
  5995  003262  ECCF  F017         	call	_MFRC522_Wr
  5996  003266                     
  5997                           ;rc522.c: 589:     TagType[0] = reqMode;
  5998  003266  C020  FFD9         	movff	MFRC522_Request@TagType,fsr2l
  5999  00326A  C021  FFDA         	movff	MFRC522_Request@TagType+1,fsr2h
  6000  00326E  C022  FFDF         	movff	MFRC522_Request@reqMode,indf2
  6001  003272                     
  6002                           ;rc522.c: 590:     _status = MFRC522_ToCard(0x0C, TagType, 1, TagType, &backBits);
  6003  003272  C020  F00D         	movff	MFRC522_Request@TagType,MFRC522_ToCard@sendData
  6004  003276  C021  F00E         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@sendData+1
  6005  00327A  0E01               	movlw	1
  6006  00327C  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
  6007  00327E  C020  F010         	movff	MFRC522_Request@TagType,MFRC522_ToCard@backData
  6008  003282  C021  F011         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@backData+1
  6009  003286  0E24               	movlw	low MFRC522_Request@backBits
  6010  003288  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  6011  00328A  0E00               	movlw	high MFRC522_Request@backBits
  6012  00328C  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  6013  00328E  0E0C               	movlw	12
  6014  003290  ECE6  F00D         	call	_MFRC522_ToCard
  6015  003294  6E23               	movwf	MFRC522_Request@_status^0,c
  6016  003296                     
  6017                           ;rc522.c: 591:     if((_status != 0) || (backBits != 0x10))
  6018  003296  5023               	movf	MFRC522_Request@_status^0,w,c
  6019  003298  A4D8               	btfss	status,2,c
  6020  00329A  EF51  F019         	goto	u3871
  6021  00329E  EF53  F019         	goto	u3870
  6022  0032A2                     u3871:
  6023  0032A2  EF5D  F019         	goto	l4184
  6024  0032A6                     u3870:
  6025  0032A6  0E10               	movlw	16
  6026  0032A8  1824               	xorwf	MFRC522_Request@backBits^0,w,c
  6027  0032AA  1025               	iorwf	(MFRC522_Request@backBits+1)^0,w,c
  6028  0032AC  B4D8               	btfsc	status,2,c
  6029  0032AE  EF5B  F019         	goto	u3881
  6030  0032B2  EF5D  F019         	goto	u3880
  6031  0032B6                     u3881:
  6032  0032B6  EF5F  F019         	goto	l441
  6033  0032BA                     u3880:
  6034  0032BA                     l4184:
  6035                           
  6036                           ;rc522.c: 592:     {;rc522.c: 593:         _status = 2;
  6037  0032BA  0E02               	movlw	2
  6038  0032BC  6E23               	movwf	MFRC522_Request@_status^0,c
  6039  0032BE                     l441:
  6040                           
  6041                           ;rc522.c: 595:     return _status;
  6042  0032BE  5023               	movf	MFRC522_Request@_status^0,w,c
  6043  0032C0  0012               	return		;funcret
  6044  0032C2                     __end_of_MFRC522_Request:
  6045                           	callstack 0
  6046                           
  6047 ;; *************** function _MFRC522_Init *****************
  6048 ;; Defined at:
  6049 ;;		line 268 in file "rc522.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;		None
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;		None
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  1    wreg      void 
  6056 ;; Registers used:
  6057 ;;		wreg, status,2, status,0, cstack
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6063 ;;      Params:         0       0       0       0       0       0       0       0       0
  6064 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6066 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6067 ;;Total ram usage:        0 bytes
  6068 ;; Hardware stack levels used: 1
  6069 ;; Hardware stack levels required when called: 3
  6070 ;; This function calls:
  6071 ;;		_MFRC522_AntennaOff
  6072 ;;		_MFRC522_AntennaOff2
  6073 ;;		_MFRC522_AntennaOff3
  6074 ;;		_MFRC522_AntennaOn
  6075 ;;		_MFRC522_AntennaOn2
  6076 ;;		_MFRC522_AntennaOn3
  6077 ;;		_MFRC522_Reset
  6078 ;;		_MFRC522_Wr
  6079 ;;		_MFRC522_Wr2
  6080 ;;		_MFRC522_Wr3
  6081 ;; This function is called by:
  6082 ;;		_main
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           	psect	text32
  6087  0023D2                     __ptext32:
  6088                           	callstack 0
  6089  0023D2                     _MFRC522_Init:
  6090                           	callstack 27
  6091  0023D2                     
  6092                           ;rc522.c: 270:     TRISDbits.RD3 = 0;
  6093  0023D2  9695               	bcf	149,3,c	;volatile
  6094                           
  6095                           ;rc522.c: 271:     TRISDbits.RD1 = 0;
  6096  0023D4  9295               	bcf	149,1,c	;volatile
  6097                           
  6098                           ;rc522.c: 272:     TRISAbits.RA0 = 0;
  6099  0023D6  9092               	bcf	146,0,c	;volatile
  6100                           
  6101                           ;rc522.c: 273:     TRISAbits.RA1 = 0;
  6102  0023D8  9292               	bcf	146,1,c	;volatile
  6103                           
  6104                           ;rc522.c: 274:     TRISAbits.RA2 = 0;
  6105  0023DA  9492               	bcf	146,2,c	;volatile
  6106                           
  6107                           ;rc522.c: 275:     TRISDbits.RD2 = 1;
  6108  0023DC  8495               	bsf	149,2,c	;volatile
  6109                           
  6110                           ;rc522.c: 276:     TRISDbits.RD4 = 0;
  6111  0023DE  9895               	bcf	149,4,c	;volatile
  6112                           
  6113                           ;rc522.c: 277:     LATDbits.LD1 = 0;
  6114  0023E0  928C               	bcf	140,1,c	;volatile
  6115                           
  6116                           ;rc522.c: 278:     LATDbits.LD3 = 0;
  6117  0023E2  968C               	bcf	140,3,c	;volatile
  6118                           
  6119                           ;rc522.c: 279:     LATAbits.LA0 = 1;
  6120  0023E4  8089               	bsf	137,0,c	;volatile
  6121                           
  6122                           ;rc522.c: 280:     LATAbits.LA1 = 1;
  6123  0023E6  8289               	bsf	137,1,c	;volatile
  6124                           
  6125                           ;rc522.c: 281:     LATAbits.LA2 = 1;
  6126  0023E8  8489               	bsf	137,2,c	;volatile
  6127                           
  6128                           ;rc522.c: 283:     LATDbits.LD4 = 1;
  6129  0023EA  888C               	bsf	140,4,c	;volatile
  6130  0023EC                     
  6131                           ;rc522.c: 284:     MFRC522_Reset();
  6132  0023EC  EC1B  F018         	call	_MFRC522_Reset	;wreg free
  6133                           
  6134                           ;rc522.c: 286:     MFRC522_Wr(0x2A, 0x8D);
  6135  0023F0  0E8D               	movlw	141
  6136  0023F2  6E01               	movwf	MFRC522_Wr@value^0,c
  6137  0023F4  0E2A               	movlw	42
  6138  0023F6  ECCF  F017         	call	_MFRC522_Wr
  6139                           
  6140                           ;rc522.c: 287:     MFRC522_Wr(0x2B, 0x3E);
  6141  0023FA  0E3E               	movlw	62
  6142  0023FC  6E01               	movwf	MFRC522_Wr@value^0,c
  6143  0023FE  0E2B               	movlw	43
  6144  002400  ECCF  F017         	call	_MFRC522_Wr
  6145                           
  6146                           ;rc522.c: 288:     MFRC522_Wr(0x2D, 30);
  6147  002404  0E1E               	movlw	30
  6148  002406  6E01               	movwf	MFRC522_Wr@value^0,c
  6149  002408  0E2D               	movlw	45
  6150  00240A  ECCF  F017         	call	_MFRC522_Wr
  6151                           
  6152                           ;rc522.c: 289:     MFRC522_Wr(0x2C, 0);
  6153  00240E  0E00               	movlw	0
  6154  002410  6E01               	movwf	MFRC522_Wr@value^0,c
  6155  002412  0E2C               	movlw	44
  6156  002414  ECCF  F017         	call	_MFRC522_Wr
  6157                           
  6158                           ;rc522.c: 290:     MFRC522_Wr(0x15, 0x40);
  6159  002418  0E40               	movlw	64
  6160  00241A  6E01               	movwf	MFRC522_Wr@value^0,c
  6161  00241C  0E15               	movlw	21
  6162  00241E  ECCF  F017         	call	_MFRC522_Wr
  6163                           
  6164                           ;rc522.c: 291:     MFRC522_Wr(0x11, 0x3D);
  6165  002422  0E3D               	movlw	61
  6166  002424  6E01               	movwf	MFRC522_Wr@value^0,c
  6167  002426  0E11               	movlw	17
  6168  002428  ECCF  F017         	call	_MFRC522_Wr
  6169                           
  6170                           ;rc522.c: 292:     MFRC522_AntennaOff();
  6171  00242C  ECA8  F01C         	call	_MFRC522_AntennaOff	;wreg free
  6172                           
  6173                           ;rc522.c: 293:     MFRC522_AntennaOn();
  6174  002430  EC7B  F01C         	call	_MFRC522_AntennaOn	;wreg free
  6175                           
  6176                           ;rc522.c: 295:     MFRC522_Wr2(0x2A, 0x8D);
  6177  002434  0E8D               	movlw	141
  6178  002436  6E01               	movwf	MFRC522_Wr2@value^0,c
  6179  002438  0E2A               	movlw	42
  6180  00243A  EC83  F017         	call	_MFRC522_Wr2
  6181                           
  6182                           ;rc522.c: 296:     MFRC522_Wr2(0x2B, 0x3E);
  6183  00243E  0E3E               	movlw	62
  6184  002440  6E01               	movwf	MFRC522_Wr2@value^0,c
  6185  002442  0E2B               	movlw	43
  6186  002444  EC83  F017         	call	_MFRC522_Wr2
  6187                           
  6188                           ;rc522.c: 297:     MFRC522_Wr2(0x2D, 30);
  6189  002448  0E1E               	movlw	30
  6190  00244A  6E01               	movwf	MFRC522_Wr2@value^0,c
  6191  00244C  0E2D               	movlw	45
  6192  00244E  EC83  F017         	call	_MFRC522_Wr2
  6193                           
  6194                           ;rc522.c: 298:     MFRC522_Wr2(0x2C, 0);
  6195  002452  0E00               	movlw	0
  6196  002454  6E01               	movwf	MFRC522_Wr2@value^0,c
  6197  002456  0E2C               	movlw	44
  6198  002458  EC83  F017         	call	_MFRC522_Wr2
  6199                           
  6200                           ;rc522.c: 299:     MFRC522_Wr2(0x15, 0x40);
  6201  00245C  0E40               	movlw	64
  6202  00245E  6E01               	movwf	MFRC522_Wr2@value^0,c
  6203  002460  0E15               	movlw	21
  6204  002462  EC83  F017         	call	_MFRC522_Wr2
  6205                           
  6206                           ;rc522.c: 300:     MFRC522_Wr2(0x11, 0x3D);
  6207  002466  0E3D               	movlw	61
  6208  002468  6E01               	movwf	MFRC522_Wr2@value^0,c
  6209  00246A  0E11               	movlw	17
  6210  00246C  EC83  F017         	call	_MFRC522_Wr2
  6211                           
  6212                           ;rc522.c: 301:     MFRC522_AntennaOff2();
  6213  002470  ECA2  F01C         	call	_MFRC522_AntennaOff2	;wreg free
  6214                           
  6215                           ;rc522.c: 302:     MFRC522_AntennaOn2();
  6216  002474  EC72  F01C         	call	_MFRC522_AntennaOn2	;wreg free
  6217                           
  6218                           ;rc522.c: 304:     MFRC522_Wr3(0x2A, 0x8D);
  6219  002478  0E8D               	movlw	141
  6220  00247A  6E01               	movwf	MFRC522_Wr3@value^0,c
  6221  00247C  0E2A               	movlw	42
  6222  00247E  EC37  F017         	call	_MFRC522_Wr3
  6223                           
  6224                           ;rc522.c: 305:     MFRC522_Wr3(0x2B, 0x3E);
  6225  002482  0E3E               	movlw	62
  6226  002484  6E01               	movwf	MFRC522_Wr3@value^0,c
  6227  002486  0E2B               	movlw	43
  6228  002488  EC37  F017         	call	_MFRC522_Wr3
  6229                           
  6230                           ;rc522.c: 306:     MFRC522_Wr3(0x2D, 30);
  6231  00248C  0E1E               	movlw	30
  6232  00248E  6E01               	movwf	MFRC522_Wr3@value^0,c
  6233  002490  0E2D               	movlw	45
  6234  002492  EC37  F017         	call	_MFRC522_Wr3
  6235                           
  6236                           ;rc522.c: 307:     MFRC522_Wr3(0x2C, 0);
  6237  002496  0E00               	movlw	0
  6238  002498  6E01               	movwf	MFRC522_Wr3@value^0,c
  6239  00249A  0E2C               	movlw	44
  6240  00249C  EC37  F017         	call	_MFRC522_Wr3
  6241                           
  6242                           ;rc522.c: 308:     MFRC522_Wr3(0x15, 0x40);
  6243  0024A0  0E40               	movlw	64
  6244  0024A2  6E01               	movwf	MFRC522_Wr3@value^0,c
  6245  0024A4  0E15               	movlw	21
  6246  0024A6  EC37  F017         	call	_MFRC522_Wr3
  6247                           
  6248                           ;rc522.c: 309:     MFRC522_Wr3(0x11, 0x3D);
  6249  0024AA  0E3D               	movlw	61
  6250  0024AC  6E01               	movwf	MFRC522_Wr3@value^0,c
  6251  0024AE  0E11               	movlw	17
  6252  0024B0  EC37  F017         	call	_MFRC522_Wr3
  6253                           
  6254                           ;rc522.c: 310:     MFRC522_AntennaOff3();
  6255  0024B4  EC9C  F01C         	call	_MFRC522_AntennaOff3	;wreg free
  6256                           
  6257                           ;rc522.c: 311:     MFRC522_AntennaOn3();
  6258  0024B8  EC69  F01C         	call	_MFRC522_AntennaOn3	;wreg free
  6259  0024BC  0012               	return		;funcret
  6260  0024BE                     __end_of_MFRC522_Init:
  6261                           	callstack 0
  6262                           
  6263 ;; *************** function _MFRC522_Reset *****************
  6264 ;; Defined at:
  6265 ;;		line 201 in file "rc522.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;		None
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, status,2, status,0, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0
  6280 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6282 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6283 ;;Total ram usage:        0 bytes
  6284 ;; Hardware stack levels used: 1
  6285 ;; Hardware stack levels required when called: 1
  6286 ;; This function calls:
  6287 ;;		_MFRC522_Wr
  6288 ;;		_MFRC522_Wr2
  6289 ;;		_MFRC522_Wr3
  6290 ;; This function is called by:
  6291 ;;		_MFRC522_Init
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           	psect	text33
  6296  003036                     __ptext33:
  6297                           	callstack 0
  6298  003036                     _MFRC522_Reset:
  6299                           	callstack 28
  6300  003036                     
  6301                           ;rc522.c: 204:     LATDbits.LD4 = 1;
  6302  003036  888C               	bsf	140,4,c	;volatile
  6303                           
  6304                           ;rc522.c: 205:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  6305  003038  D000               	nop2		;2 cycle nop
  6306  00303A  D000               	nop2		;2 cycle nop
  6307  00303C  D000               	nop2		;2 cycle nop
  6308                           
  6309                           ;rc522.c: 206:     LATDbits.LD4 = 0;
  6310  00303E  988C               	bcf	140,4,c	;volatile
  6311                           
  6312                           ;rc522.c: 207:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  6313  003040  D000               	nop2		;2 cycle nop
  6314  003042  D000               	nop2		;2 cycle nop
  6315  003044  D000               	nop2		;2 cycle nop
  6316                           
  6317                           ;rc522.c: 208:     LATDbits.LD4 = 1;
  6318  003046  888C               	bsf	140,4,c	;volatile
  6319                           
  6320                           ;rc522.c: 209:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  6321  003048  D000               	nop2		;2 cycle nop
  6322  00304A  D000               	nop2		;2 cycle nop
  6323  00304C  D000               	nop2		;2 cycle nop
  6324  00304E                     
  6325                           ;rc522.c: 210:     MFRC522_Wr(0x01, 0x0F);
  6326  00304E  0E0F               	movlw	15
  6327  003050  6E01               	movwf	MFRC522_Wr@value^0,c
  6328  003052  0E01               	movlw	1
  6329  003054  ECCF  F017         	call	_MFRC522_Wr
  6330  003058                     
  6331                           ;rc522.c: 211:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  6332  003058  D000               	nop2		;2 cycle nop
  6333  00305A  D000               	nop2		;2 cycle nop
  6334  00305C  D000               	nop2		;2 cycle nop
  6335  00305E                     
  6336                           ;rc522.c: 213:     LATDbits.LD4 = 1;
  6337  00305E  888C               	bsf	140,4,c	;volatile
  6338  003060                     
  6339                           ;rc522.c: 214:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  6340  003060  D000               	nop2		;2 cycle nop
  6341  003062  D000               	nop2		;2 cycle nop
  6342  003064  D000               	nop2		;2 cycle nop
  6343  003066                     
  6344                           ;rc522.c: 215:     LATDbits.LD4 = 0;
  6345  003066  988C               	bcf	140,4,c	;volatile
  6346  003068                     
  6347                           ;rc522.c: 216:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  6348  003068  D000               	nop2		;2 cycle nop
  6349  00306A  D000               	nop2		;2 cycle nop
  6350  00306C  D000               	nop2		;2 cycle nop
  6351  00306E                     
  6352                           ;rc522.c: 217:     LATDbits.LD4 = 1;
  6353  00306E  888C               	bsf	140,4,c	;volatile
  6354  003070                     
  6355                           ;rc522.c: 218:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  6356  003070  D000               	nop2		;2 cycle nop
  6357  003072  D000               	nop2		;2 cycle nop
  6358  003074  D000               	nop2		;2 cycle nop
  6359                           
  6360                           ;rc522.c: 219:     MFRC522_Wr2(0x01, 0x0F);
  6361  003076  0E0F               	movlw	15
  6362  003078  6E01               	movwf	MFRC522_Wr2@value^0,c
  6363  00307A  0E01               	movlw	1
  6364  00307C  EC83  F017         	call	_MFRC522_Wr2
  6365  003080                     
  6366                           ;rc522.c: 220:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  6367  003080  D000               	nop2		;2 cycle nop
  6368  003082  D000               	nop2		;2 cycle nop
  6369  003084  D000               	nop2		;2 cycle nop
  6370  003086                     
  6371                           ;rc522.c: 222:     LATDbits.LD4 = 1;
  6372  003086  888C               	bsf	140,4,c	;volatile
  6373  003088                     
  6374                           ;rc522.c: 223:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  6375  003088  D000               	nop2		;2 cycle nop
  6376  00308A  D000               	nop2		;2 cycle nop
  6377  00308C  D000               	nop2		;2 cycle nop
  6378  00308E                     
  6379                           ;rc522.c: 224:     LATDbits.LD4 = 0;
  6380  00308E  988C               	bcf	140,4,c	;volatile
  6381  003090                     
  6382                           ;rc522.c: 225:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  6383  003090  D000               	nop2		;2 cycle nop
  6384  003092  D000               	nop2		;2 cycle nop
  6385  003094  D000               	nop2		;2 cycle nop
  6386  003096                     
  6387                           ;rc522.c: 226:     LATDbits.LD4 = 1;
  6388  003096  888C               	bsf	140,4,c	;volatile
  6389  003098                     
  6390                           ;rc522.c: 227:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  6391  003098  D000               	nop2		;2 cycle nop
  6392  00309A  D000               	nop2		;2 cycle nop
  6393  00309C  D000               	nop2		;2 cycle nop
  6394                           
  6395                           ;rc522.c: 228:     MFRC522_Wr3(0x01, 0x0F);
  6396  00309E  0E0F               	movlw	15
  6397  0030A0  6E01               	movwf	MFRC522_Wr3@value^0,c
  6398  0030A2  0E01               	movlw	1
  6399  0030A4  EC37  F017         	call	_MFRC522_Wr3
  6400  0030A8                     
  6401                           ;rc522.c: 229:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  6402  0030A8  D000               	nop2		;2 cycle nop
  6403  0030AA  D000               	nop2		;2 cycle nop
  6404  0030AC  D000               	nop2		;2 cycle nop
  6405  0030AE  0012               	return		;funcret
  6406  0030B0                     __end_of_MFRC522_Reset:
  6407                           	callstack 0
  6408                           
  6409 ;; *************** function _MFRC522_AntennaOn3 *****************
  6410 ;; Defined at:
  6411 ;;		line 246 in file "rc522.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;		None
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;  stt             1    0        unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      void 
  6418 ;; Registers used:
  6419 ;;		wreg, status,2, status,0, cstack
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6425 ;;      Params:         0       0       0       0       0       0       0       0       0
  6426 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6428 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6429 ;;Total ram usage:        0 bytes
  6430 ;; Hardware stack levels used: 1
  6431 ;; Hardware stack levels required when called: 2
  6432 ;; This function calls:
  6433 ;;		_MFRC522_Rd3
  6434 ;;		_MFRC522_Set_Bit3
  6435 ;; This function is called by:
  6436 ;;		_MFRC522_Init
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           	psect	text34
  6441  0038D2                     __ptext34:
  6442                           	callstack 0
  6443  0038D2                     _MFRC522_AntennaOn3:
  6444                           	callstack 27
  6445  0038D2  0E14               	movlw	20
  6446  0038D4  EC27  F013         	call	_MFRC522_Rd3
  6447                           
  6448                           ;rc522.c: 250:     MFRC522_Set_Bit3(0x14, 0x03);
  6449  0038D8  0E03               	movlw	3
  6450  0038DA  6E0A               	movwf	MFRC522_Set_Bit3@mask^0,c
  6451  0038DC  0E14               	movlw	20
  6452  0038DE  EC3B  F01C         	call	_MFRC522_Set_Bit3
  6453  0038E2  0012               	return		;funcret
  6454  0038E4                     __end_of_MFRC522_AntennaOn3:
  6455                           	callstack 0
  6456                           
  6457 ;; *************** function _MFRC522_AntennaOn2 *****************
  6458 ;; Defined at:
  6459 ;;		line 239 in file "rc522.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;		None
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  stt             1    0        unsigned char 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		wreg, status,2, status,0, cstack
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6473 ;;      Params:         0       0       0       0       0       0       0       0       0
  6474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6476 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6477 ;;Total ram usage:        0 bytes
  6478 ;; Hardware stack levels used: 1
  6479 ;; Hardware stack levels required when called: 2
  6480 ;; This function calls:
  6481 ;;		_MFRC522_Rd2
  6482 ;;		_MFRC522_Set_Bit2
  6483 ;; This function is called by:
  6484 ;;		_MFRC522_Init
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text35
  6489  0038E4                     __ptext35:
  6490                           	callstack 0
  6491  0038E4                     _MFRC522_AntennaOn2:
  6492                           	callstack 27
  6493  0038E4  0E14               	movlw	20
  6494  0038E6  EC84  F013         	call	_MFRC522_Rd2
  6495                           
  6496                           ;rc522.c: 243:     MFRC522_Set_Bit2(0x14, 0x03);
  6497  0038EA  0E03               	movlw	3
  6498  0038EC  6E0A               	movwf	MFRC522_Set_Bit2@mask^0,c
  6499  0038EE  0E14               	movlw	20
  6500  0038F0  EC47  F01C         	call	_MFRC522_Set_Bit2
  6501  0038F4  0012               	return		;funcret
  6502  0038F6                     __end_of_MFRC522_AntennaOn2:
  6503                           	callstack 0
  6504                           
  6505 ;; *************** function _MFRC522_AntennaOn *****************
  6506 ;; Defined at:
  6507 ;;		line 232 in file "rc522.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;		None
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;  stt             1    0        unsigned char 
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      void 
  6514 ;; Registers used:
  6515 ;;		wreg, status,2, status,0, cstack
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6521 ;;      Params:         0       0       0       0       0       0       0       0       0
  6522 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6524 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6525 ;;Total ram usage:        0 bytes
  6526 ;; Hardware stack levels used: 1
  6527 ;; Hardware stack levels required when called: 2
  6528 ;; This function calls:
  6529 ;;		_MFRC522_Rd
  6530 ;;		_MFRC522_Set_Bit
  6531 ;; This function is called by:
  6532 ;;		_MFRC522_Init
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           	psect	text36
  6537  0038F6                     __ptext36:
  6538                           	callstack 0
  6539  0038F6                     _MFRC522_AntennaOn:
  6540                           	callstack 27
  6541  0038F6  0E14               	movlw	20
  6542  0038F8  ECE1  F013         	call	_MFRC522_Rd
  6543                           
  6544                           ;rc522.c: 236:     MFRC522_Set_Bit(0x14, 0x03);
  6545  0038FC  0E03               	movlw	3
  6546  0038FE  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  6547  003900  0E14               	movlw	20
  6548  003902  EC53  F01C         	call	_MFRC522_Set_Bit
  6549  003906  0012               	return		;funcret
  6550  003908                     __end_of_MFRC522_AntennaOn:
  6551                           	callstack 0
  6552                           
  6553 ;; *************** function _MFRC522_AntennaOff3 *****************
  6554 ;; Defined at:
  6555 ;;		line 263 in file "rc522.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;		None
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;		None
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1    wreg      void 
  6562 ;; Registers used:
  6563 ;;		wreg, status,2, status,0, cstack
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6569 ;;      Params:         0       0       0       0       0       0       0       0       0
  6570 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6572 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6573 ;;Total ram usage:        0 bytes
  6574 ;; Hardware stack levels used: 1
  6575 ;; Hardware stack levels required when called: 2
  6576 ;; This function calls:
  6577 ;;		_MFRC522_Clear_Bit3
  6578 ;; This function is called by:
  6579 ;;		_MFRC522_Init
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text37
  6584  003938                     __ptext37:
  6585                           	callstack 0
  6586  003938                     _MFRC522_AntennaOff3:
  6587                           	callstack 27
  6588  003938                     
  6589                           ;rc522.c: 265:     MFRC522_Clear_Bit3(0x14, 0x03);
  6590  003938  0E03               	movlw	3
  6591  00393A  6E0A               	movwf	MFRC522_Clear_Bit3@mask^0,c
  6592  00393C  0E14               	movlw	20
  6593  00393E  EC14  F01C         	call	_MFRC522_Clear_Bit3
  6594  003942  0012               	return		;funcret
  6595  003944                     __end_of_MFRC522_AntennaOff3:
  6596                           	callstack 0
  6597                           
  6598 ;; *************** function _MFRC522_AntennaOff2 *****************
  6599 ;; Defined at:
  6600 ;;		line 258 in file "rc522.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;		None
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;		None
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  1    wreg      void 
  6607 ;; Registers used:
  6608 ;;		wreg, status,2, status,0, cstack
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6614 ;;      Params:         0       0       0       0       0       0       0       0       0
  6615 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6617 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6618 ;;Total ram usage:        0 bytes
  6619 ;; Hardware stack levels used: 1
  6620 ;; Hardware stack levels required when called: 2
  6621 ;; This function calls:
  6622 ;;		_MFRC522_Clear_Bit2
  6623 ;; This function is called by:
  6624 ;;		_MFRC522_Init
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text38
  6629  003944                     __ptext38:
  6630                           	callstack 0
  6631  003944                     _MFRC522_AntennaOff2:
  6632                           	callstack 27
  6633  003944                     
  6634                           ;rc522.c: 260:     MFRC522_Clear_Bit2(0x14, 0x03);
  6635  003944  0E03               	movlw	3
  6636  003946  6E0A               	movwf	MFRC522_Clear_Bit2@mask^0,c
  6637  003948  0E14               	movlw	20
  6638  00394A  EC21  F01C         	call	_MFRC522_Clear_Bit2
  6639  00394E  0012               	return		;funcret
  6640  003950                     __end_of_MFRC522_AntennaOff2:
  6641                           	callstack 0
  6642                           
  6643 ;; *************** function _MFRC522_AntennaOff *****************
  6644 ;; Defined at:
  6645 ;;		line 253 in file "rc522.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;		None
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1    wreg      void 
  6652 ;; Registers used:
  6653 ;;		wreg, status,2, status,0, cstack
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6659 ;;      Params:         0       0       0       0       0       0       0       0       0
  6660 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6662 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6663 ;;Total ram usage:        0 bytes
  6664 ;; Hardware stack levels used: 1
  6665 ;; Hardware stack levels required when called: 2
  6666 ;; This function calls:
  6667 ;;		_MFRC522_Clear_Bit
  6668 ;; This function is called by:
  6669 ;;		_MFRC522_Init
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text39
  6674  003950                     __ptext39:
  6675                           	callstack 0
  6676  003950                     _MFRC522_AntennaOff:
  6677                           	callstack 27
  6678  003950                     
  6679                           ;rc522.c: 255:     MFRC522_Clear_Bit(0x14, 0x03);
  6680  003950  0E03               	movlw	3
  6681  003952  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  6682  003954  0E14               	movlw	20
  6683  003956  EC2E  F01C         	call	_MFRC522_Clear_Bit
  6684  00395A  0012               	return		;funcret
  6685  00395C                     __end_of_MFRC522_AntennaOff:
  6686                           	callstack 0
  6687                           
  6688 ;; *************** function _MFRC522_Halt3 *****************
  6689 ;; Defined at:
  6690 ;;		line 794 in file "rc522.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;		None
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;  buff            4   31[COMRAM] unsigned char [4]
  6695 ;;  unLen           2   35[COMRAM] unsigned int 
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  1    wreg      void 
  6698 ;; Registers used:
  6699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6705 ;;      Params:         0       0       0       0       0       0       0       0       0
  6706 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6708 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6709 ;;Total ram usage:        6 bytes
  6710 ;; Hardware stack levels used: 1
  6711 ;; Hardware stack levels required when called: 3
  6712 ;; This function calls:
  6713 ;;		_MFRC522_CRC3
  6714 ;;		_MFRC522_Clear_Bit3
  6715 ;;		_MFRC522_ToCard3
  6716 ;; This function is called by:
  6717 ;;		_main
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text40
  6722  00337C                     __ptext40:
  6723                           	callstack 0
  6724  00337C                     _MFRC522_Halt3:
  6725                           	callstack 27
  6726  00337C                     
  6727                           ;rc522.c: 796:     unsigned unLen;;rc522.c: 797:     char buff[4];;rc522.c: 798:     buf
      +                          f[0] = 0x50;
  6728  00337C  0E50               	movlw	80
  6729  00337E  6E20               	movwf	MFRC522_Halt3@buff^0,c
  6730                           
  6731                           ;rc522.c: 799:     buff[1] = 0;
  6732  003380  0E00               	movlw	0
  6733  003382  6E21               	movwf	(MFRC522_Halt3@buff+1)^0,c
  6734  003384                     
  6735                           ;rc522.c: 800:     MFRC522_CRC3(buff, 2, &buff[2]);
  6736  003384  0E20               	movlw	low MFRC522_Halt3@buff
  6737  003386  6E0D               	movwf	MFRC522_CRC3@dataIn^0,c
  6738  003388  0E00               	movlw	high MFRC522_Halt3@buff
  6739  00338A  6E0E               	movwf	(MFRC522_CRC3@dataIn+1)^0,c
  6740  00338C  0E02               	movlw	2
  6741  00338E  6E0F               	movwf	MFRC522_CRC3@length^0,c
  6742  003390  0E22               	movlw	low (MFRC522_Halt3@buff+2)
  6743  003392  6E10               	movwf	MFRC522_CRC3@dataOut^0,c
  6744  003394  0E00               	movlw	high (MFRC522_Halt3@buff+2)
  6745  003396  6E11               	movwf	(MFRC522_CRC3@dataOut+1)^0,c
  6746  003398  ECF9  F015         	call	_MFRC522_CRC3	;wreg free
  6747  00339C                     
  6748                           ;rc522.c: 801:     MFRC522_Clear_Bit3(0x08, 0x80);
  6749  00339C  0E80               	movlw	128
  6750  00339E  6E0A               	movwf	MFRC522_Clear_Bit3@mask^0,c
  6751  0033A0  0E08               	movlw	8
  6752  0033A2  EC14  F01C         	call	_MFRC522_Clear_Bit3
  6753  0033A6                     
  6754                           ;rc522.c: 802:     MFRC522_ToCard3(0x0C, buff, 4, buff, &unLen);
  6755  0033A6  0E20               	movlw	low MFRC522_Halt3@buff
  6756  0033A8  6E0D               	movwf	MFRC522_ToCard3@sendData^0,c
  6757  0033AA  0E00               	movlw	high MFRC522_Halt3@buff
  6758  0033AC  6E0E               	movwf	(MFRC522_ToCard3@sendData+1)^0,c
  6759  0033AE  0E04               	movlw	4
  6760  0033B0  6E0F               	movwf	MFRC522_ToCard3@sendLen^0,c
  6761  0033B2  0E20               	movlw	low MFRC522_Halt3@buff
  6762  0033B4  6E10               	movwf	MFRC522_ToCard3@backData^0,c
  6763  0033B6  0E00               	movlw	high MFRC522_Halt3@buff
  6764  0033B8  6E11               	movwf	(MFRC522_ToCard3@backData+1)^0,c
  6765  0033BA  0E24               	movlw	low MFRC522_Halt3@unLen
  6766  0033BC  6E12               	movwf	MFRC522_ToCard3@backLen^0,c
  6767  0033BE  0E00               	movlw	high MFRC522_Halt3@unLen
  6768  0033C0  6E13               	movwf	(MFRC522_ToCard3@backLen+1)^0,c
  6769  0033C2  0E0C               	movlw	12
  6770  0033C4  EC58  F00B         	call	_MFRC522_ToCard3
  6771  0033C8                     
  6772                           ;rc522.c: 803:     MFRC522_Clear_Bit3(0x08, 0x08);
  6773  0033C8  0E08               	movlw	8
  6774  0033CA  6E0A               	movwf	MFRC522_Clear_Bit3@mask^0,c
  6775  0033CC  0E08               	movlw	8
  6776  0033CE  EC14  F01C         	call	_MFRC522_Clear_Bit3
  6777  0033D2  0012               	return		;funcret
  6778  0033D4                     __end_of_MFRC522_Halt3:
  6779                           	callstack 0
  6780                           
  6781 ;; *************** function _MFRC522_ToCard3 *****************
  6782 ;; Defined at:
  6783 ;;		line 494 in file "rc522.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  command         1    wreg     unsigned char 
  6786 ;;  sendData        2   12[COMRAM] PTR unsigned char 
  6787 ;;		 -> MFRC522_Halt3@buff(4), MFRC522_SelectTag3@buffer(9), UID_3(20), TagType3(1), 
  6788 ;;  sendLen         1   14[COMRAM] unsigned char 
  6789 ;;  backData        2   15[COMRAM] PTR unsigned char 
  6790 ;;		 -> MFRC522_Halt3@buff(4), MFRC522_SelectTag3@buffer(9), UID_3(20), TagType3(1), 
  6791 ;;  backLen         2   17[COMRAM] PTR unsigned int 
  6792 ;;		 -> MFRC522_AntiColl3@unLen(2), MFRC522_Halt3@unLen(2), MFRC522_SelectTag3@recvBits(2), MFRC522_Request3@backBits(2)
      +, 
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;  command         1   27[COMRAM] unsigned char 
  6795 ;;  i               2   28[COMRAM] unsigned int 
  6796 ;;  n               1   30[COMRAM] unsigned char 
  6797 ;;  irqEn           1   26[COMRAM] unsigned char 
  6798 ;;  lastBits        1   25[COMRAM] unsigned char 
  6799 ;;  _status         1   24[COMRAM] unsigned char 
  6800 ;;  waitIRq         1   23[COMRAM] unsigned char 
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  1    wreg      unsigned char 
  6803 ;; Registers used:
  6804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6810 ;;      Params:         7       0       0       0       0       0       0       0       0
  6811 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6812 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6813 ;;      Totals:        19       0       0       0       0       0       0       0       0
  6814 ;;Total ram usage:       19 bytes
  6815 ;; Hardware stack levels used: 1
  6816 ;; Hardware stack levels required when called: 2
  6817 ;; This function calls:
  6818 ;;		_MFRC522_Clear_Bit3
  6819 ;;		_MFRC522_Rd3
  6820 ;;		_MFRC522_Set_Bit3
  6821 ;;		_MFRC522_Wr3
  6822 ;; This function is called by:
  6823 ;;		_MFRC522_Request3
  6824 ;;		_MFRC522_Halt3
  6825 ;;		_MFRC522_AntiColl3
  6826 ;;		_MFRC522_SelectTag3
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           	psect	text41
  6831  0016B0                     __ptext41:
  6832                           	callstack 0
  6833  0016B0                     _MFRC522_ToCard3:
  6834                           	callstack 26
  6835                           
  6836                           ;incstack = 0
  6837                           ;MFRC522_ToCard3@command stored from wreg
  6838  0016B0  6E1C               	movwf	MFRC522_ToCard3@command^0,c
  6839  0016B2                     
  6840                           ;rc522.c: 494: char MFRC522_ToCard3(char command, char *sendData, char sendLen, char *ba
      +                          ckData, unsigned *backLen);rc522.c: 495: {;rc522.c: 496:     char _status = 2;
  6841  0016B2  0E02               	movlw	2
  6842  0016B4  6E19               	movwf	MFRC522_ToCard3@_status^0,c
  6843                           
  6844                           ;rc522.c: 497:     char irqEn = 0x00;
  6845  0016B6  0E00               	movlw	0
  6846  0016B8  6E1B               	movwf	MFRC522_ToCard3@irqEn^0,c
  6847                           
  6848                           ;rc522.c: 498:     char waitIRq = 0x00;
  6849  0016BA  0E00               	movlw	0
  6850  0016BC  6E18               	movwf	MFRC522_ToCard3@waitIRq^0,c
  6851                           
  6852                           ;rc522.c: 499:     char lastBits;;rc522.c: 500:     char n;;rc522.c: 501:     unsigned i
      +                          ;;rc522.c: 503:     switch(command)
  6853  0016BE  EF6D  F00B         	goto	l3902
  6854  0016C2                     l3896:
  6855                           
  6856                           ;rc522.c: 506:             irqEn = 0x12;
  6857  0016C2  0E12               	movlw	18
  6858  0016C4  6E1B               	movwf	MFRC522_ToCard3@irqEn^0,c
  6859                           
  6860                           ;rc522.c: 507:             waitIRq = 0x10;
  6861  0016C6  0E10               	movlw	16
  6862  0016C8  6E18               	movwf	MFRC522_ToCard3@waitIRq^0,c
  6863                           
  6864                           ;rc522.c: 508:             break;
  6865  0016CA  EF82  F00B         	goto	l3904
  6866  0016CE                     l3898:
  6867                           
  6868                           ;rc522.c: 511:             irqEn = 0x77;
  6869  0016CE  0E77               	movlw	119
  6870  0016D0  6E1B               	movwf	MFRC522_ToCard3@irqEn^0,c
  6871                           
  6872                           ;rc522.c: 512:             waitIRq = 0x30;
  6873  0016D2  0E30               	movlw	48
  6874  0016D4  6E18               	movwf	MFRC522_ToCard3@waitIRq^0,c
  6875                           
  6876                           ;rc522.c: 513:             break;
  6877  0016D6  EF82  F00B         	goto	l3904
  6878  0016DA                     l3902:
  6879  0016DA  501C               	movf	MFRC522_ToCard3@command^0,w,c
  6880  0016DC  6E14               	movwf	??_MFRC522_ToCard3^0,c
  6881  0016DE  6A15               	clrf	(??_MFRC522_ToCard3+1)^0,c
  6882                           
  6883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6884                           ; Switch size 1, requested type "simple"
  6885                           ; Number of cases is 1, Range of values is 0 to 0
  6886                           ; switch strategies available:
  6887                           ; Name         Instructions Cycles
  6888                           ; simple_byte            4     3 (average)
  6889                           ;	Chosen strategy is simple_byte
  6890  0016E0  5015               	movf	(??_MFRC522_ToCard3+1)^0,w,c
  6891  0016E2  0A00               	xorlw	0	; case 0
  6892  0016E4  B4D8               	btfsc	status,2,c
  6893  0016E6  EF77  F00B         	goto	l5226
  6894  0016EA  EF82  F00B         	goto	l3904
  6895  0016EE                     l5226:
  6896                           
  6897                           ; Switch size 1, requested type "simple"
  6898                           ; Number of cases is 2, Range of values is 12 to 14
  6899                           ; switch strategies available:
  6900                           ; Name         Instructions Cycles
  6901                           ; simple_byte            7     4 (average)
  6902                           ;	Chosen strategy is simple_byte
  6903  0016EE  5014               	movf	??_MFRC522_ToCard3^0,w,c
  6904  0016F0  0A0C               	xorlw	12	; case 12
  6905  0016F2  B4D8               	btfsc	status,2,c
  6906  0016F4  EF67  F00B         	goto	l3898
  6907  0016F8  0A02               	xorlw	2	; case 14
  6908  0016FA  B4D8               	btfsc	status,2,c
  6909  0016FC  EF61  F00B         	goto	l3896
  6910  001700  EF82  F00B         	goto	l3904
  6911  001704                     l3904:
  6912                           
  6913                           ;rc522.c: 518:     MFRC522_Wr3(0x02, irqEn | 0x80);
  6914  001704  501B               	movf	MFRC522_ToCard3@irqEn^0,w,c
  6915  001706  0980               	iorlw	128
  6916  001708  6E01               	movwf	MFRC522_Wr3@value^0,c
  6917  00170A  0E02               	movlw	2
  6918  00170C  EC37  F017         	call	_MFRC522_Wr3
  6919                           
  6920                           ;rc522.c: 519:     MFRC522_Clear_Bit3(0x04, 0x80);
  6921  001710  0E80               	movlw	128
  6922  001712  6E0A               	movwf	MFRC522_Clear_Bit3@mask^0,c
  6923  001714  0E04               	movlw	4
  6924  001716  EC14  F01C         	call	_MFRC522_Clear_Bit3
  6925                           
  6926                           ;rc522.c: 520:     MFRC522_Set_Bit3(0x0A, 0x80);
  6927  00171A  0E80               	movlw	128
  6928  00171C  6E0A               	movwf	MFRC522_Set_Bit3@mask^0,c
  6929  00171E  0E0A               	movlw	10
  6930  001720  EC3B  F01C         	call	_MFRC522_Set_Bit3
  6931                           
  6932                           ;rc522.c: 521:     MFRC522_Wr3(0x01, 0x00);
  6933  001724  0E00               	movlw	0
  6934  001726  6E01               	movwf	MFRC522_Wr3@value^0,c
  6935  001728  0E01               	movlw	1
  6936  00172A  EC37  F017         	call	_MFRC522_Wr3
  6937  00172E                     
  6938                           ;rc522.c: 523:     for(i=0; i<sendLen; i++)
  6939  00172E  0E00               	movlw	0
  6940  001730  6E1E               	movwf	(MFRC522_ToCard3@i+1)^0,c
  6941  001732  0E00               	movlw	0
  6942  001734  6E1D               	movwf	MFRC522_ToCard3@i^0,c
  6943  001736  EFAA  F00B         	goto	l3912
  6944  00173A                     l3908:
  6945                           
  6946                           ;rc522.c: 524:     {;rc522.c: 525:         MFRC522_Wr3(0x09, sendData[i]);
  6947  00173A  501D               	movf	MFRC522_ToCard3@i^0,w,c
  6948  00173C  240D               	addwf	MFRC522_ToCard3@sendData^0,w,c
  6949  00173E  6ED9               	movwf	fsr2l,c
  6950  001740  501E               	movf	(MFRC522_ToCard3@i+1)^0,w,c
  6951  001742  200E               	addwfc	(MFRC522_ToCard3@sendData+1)^0,w,c
  6952  001744  6EDA               	movwf	fsr2h,c
  6953  001746  50DF               	movf	indf2,w,c
  6954  001748  6E01               	movwf	MFRC522_Wr3@value^0,c
  6955  00174A  0E09               	movlw	9
  6956  00174C  EC37  F017         	call	_MFRC522_Wr3
  6957  001750                     
  6958                           ;rc522.c: 526:     }
  6959  001750  4A1D               	infsnz	MFRC522_ToCard3@i^0,f,c
  6960  001752  2A1E               	incf	(MFRC522_ToCard3@i+1)^0,f,c
  6961  001754                     l3912:
  6962  001754  500F               	movf	MFRC522_ToCard3@sendLen^0,w,c
  6963  001756  6E14               	movwf	??_MFRC522_ToCard3^0,c
  6964  001758  6A15               	clrf	(??_MFRC522_ToCard3+1)^0,c
  6965  00175A  5014               	movf	??_MFRC522_ToCard3^0,w,c
  6966  00175C  5C1D               	subwf	MFRC522_ToCard3@i^0,w,c
  6967  00175E  5015               	movf	(??_MFRC522_ToCard3+1)^0,w,c
  6968  001760  581E               	subwfb	(MFRC522_ToCard3@i+1)^0,w,c
  6969  001762  A0D8               	btfss	status,0,c
  6970  001764  EFB6  F00B         	goto	u3591
  6971  001768  EFB8  F00B         	goto	u3590
  6972  00176C                     u3591:
  6973  00176C  EF9D  F00B         	goto	l3908
  6974  001770                     u3590:
  6975  001770                     
  6976                           ;rc522.c: 527:     MFRC522_Wr3(0x01, command);
  6977  001770  C01C  F001         	movff	MFRC522_ToCard3@command,MFRC522_Wr3@value
  6978  001774  0E01               	movlw	1
  6979  001776  EC37  F017         	call	_MFRC522_Wr3
  6980  00177A                     
  6981                           ;rc522.c: 528:     if(command == 0x0C)
  6982  00177A  0E0C               	movlw	12
  6983  00177C  181C               	xorwf	MFRC522_ToCard3@command^0,w,c
  6984  00177E  A4D8               	btfss	status,2,c
  6985  001780  EFC4  F00B         	goto	u3601
  6986  001784  EFC6  F00B         	goto	u3600
  6987  001788                     u3601:
  6988  001788  EFCB  F00B         	goto	l3920
  6989  00178C                     u3600:
  6990  00178C                     
  6991                           ;rc522.c: 529:     {;rc522.c: 530:         MFRC522_Set_Bit3(0x0D, 0x80);
  6992  00178C  0E80               	movlw	128
  6993  00178E  6E0A               	movwf	MFRC522_Set_Bit3@mask^0,c
  6994  001790  0E0D               	movlw	13
  6995  001792  EC3B  F01C         	call	_MFRC522_Set_Bit3
  6996  001796                     l3920:
  6997                           
  6998                           ;rc522.c: 532:     i = 0xFFFF;
  6999  001796  681D               	setf	MFRC522_ToCard3@i^0,c
  7000  001798  681E               	setf	(MFRC522_ToCard3@i+1)^0,c
  7001  00179A                     l422:
  7002                           
  7003                           ;rc522.c: 534:     {;rc522.c: 535:         n = MFRC522_Rd3(0x04);
  7004  00179A  0E04               	movlw	4
  7005  00179C  EC27  F013         	call	_MFRC522_Rd3
  7006  0017A0  6E1F               	movwf	MFRC522_ToCard3@n^0,c
  7007  0017A2                     
  7008                           ;rc522.c: 536:         i--;
  7009  0017A2  061D               	decf	MFRC522_ToCard3@i^0,f,c
  7010  0017A4  A0D8               	btfss	status,0,c
  7011  0017A6  061E               	decf	(MFRC522_ToCard3@i+1)^0,f,c
  7012  0017A8                     
  7013                           ;rc522.c: 537:     }while(i && !(n & 0x01) && !(n & waitIRq));
  7014  0017A8  501D               	movf	MFRC522_ToCard3@i^0,w,c
  7015  0017AA  101E               	iorwf	(MFRC522_ToCard3@i+1)^0,w,c
  7016  0017AC  B4D8               	btfsc	status,2,c
  7017  0017AE  EFDB  F00B         	goto	u3611
  7018  0017B2  EFDD  F00B         	goto	u3610
  7019  0017B6                     u3611:
  7020  0017B6  EFEE  F00B         	goto	l3930
  7021  0017BA                     u3610:
  7022  0017BA  B01F               	btfsc	MFRC522_ToCard3@n^0,0,c
  7023  0017BC  EFE2  F00B         	goto	u3621
  7024  0017C0  EFE4  F00B         	goto	u3620
  7025  0017C4                     u3621:
  7026  0017C4  EFEE  F00B         	goto	l3930
  7027  0017C8                     u3620:
  7028  0017C8  501F               	movf	MFRC522_ToCard3@n^0,w,c
  7029  0017CA  1418               	andwf	MFRC522_ToCard3@waitIRq^0,w,c
  7030  0017CC  0900               	iorlw	0
  7031  0017CE  B4D8               	btfsc	status,2,c
  7032  0017D0  EFEC  F00B         	goto	u3631
  7033  0017D4  EFEE  F00B         	goto	u3630
  7034  0017D8                     u3631:
  7035  0017D8  EFCD  F00B         	goto	l422
  7036  0017DC                     u3630:
  7037  0017DC                     l3930:
  7038                           
  7039                           ;rc522.c: 539:     MFRC522_Clear_Bit3(0x0D, 0x80);
  7040  0017DC  0E80               	movlw	128
  7041  0017DE  6E0A               	movwf	MFRC522_Clear_Bit3@mask^0,c
  7042  0017E0  0E0D               	movlw	13
  7043  0017E2  EC14  F01C         	call	_MFRC522_Clear_Bit3
  7044  0017E6                     
  7045                           ;rc522.c: 540:     if(i != 0)
  7046  0017E6  501D               	movf	MFRC522_ToCard3@i^0,w,c
  7047  0017E8  101E               	iorwf	(MFRC522_ToCard3@i+1)^0,w,c
  7048  0017EA  B4D8               	btfsc	status,2,c
  7049  0017EC  EFFA  F00B         	goto	u3641
  7050  0017F0  EFFC  F00B         	goto	u3640
  7051  0017F4                     u3641:
  7052  0017F4  EF9D  F00C         	goto	l426
  7053  0017F8                     u3640:
  7054  0017F8                     
  7055                           ;rc522.c: 541:     {;rc522.c: 542:         if(!(MFRC522_Rd3(0x06) & 0x1B))
  7056  0017F8  0E06               	movlw	6
  7057  0017FA  EC27  F013         	call	_MFRC522_Rd3
  7058  0017FE  6E14               	movwf	??_MFRC522_ToCard3^0,c
  7059  001800  0E1B               	movlw	27
  7060  001802  1614               	andwf	??_MFRC522_ToCard3^0,f,c
  7061  001804  A4D8               	btfss	status,2,c
  7062  001806  EF07  F00C         	goto	u3651
  7063  00180A  EF09  F00C         	goto	u3650
  7064  00180E                     u3651:
  7065  00180E  EF9B  F00C         	goto	l3968
  7066  001812                     u3650:
  7067  001812                     
  7068                           ;rc522.c: 543:         {;rc522.c: 544:             _status = 0;
  7069  001812  0E00               	movlw	0
  7070  001814  6E19               	movwf	MFRC522_ToCard3@_status^0,c
  7071  001816                     
  7072                           ;rc522.c: 545:             if(n & irqEn & 0x01)
  7073  001816  501F               	movf	MFRC522_ToCard3@n^0,w,c
  7074  001818  141B               	andwf	MFRC522_ToCard3@irqEn^0,w,c
  7075  00181A  6E14               	movwf	??_MFRC522_ToCard3^0,c
  7076  00181C  A014               	btfss	??_MFRC522_ToCard3^0,0,c
  7077  00181E  EF13  F00C         	goto	u3661
  7078  001822  EF15  F00C         	goto	u3660
  7079  001826                     u3661:
  7080  001826  EF17  F00C         	goto	l3942
  7081  00182A                     u3660:
  7082  00182A                     
  7083                           ;rc522.c: 546:             {;rc522.c: 547:                 _status = 1;
  7084  00182A  0E01               	movlw	1
  7085  00182C  6E19               	movwf	MFRC522_ToCard3@_status^0,c
  7086  00182E                     l3942:
  7087                           
  7088                           ;rc522.c: 549:             if(command == 0x0C)
  7089  00182E  0E0C               	movlw	12
  7090  001830  181C               	xorwf	MFRC522_ToCard3@command^0,w,c
  7091  001832  A4D8               	btfss	status,2,c
  7092  001834  EF1E  F00C         	goto	u3671
  7093  001838  EF20  F00C         	goto	u3670
  7094  00183C                     u3671:
  7095  00183C  EF9D  F00C         	goto	l426
  7096  001840                     u3670:
  7097  001840                     
  7098                           ;rc522.c: 550:             {;rc522.c: 551:                 n = MFRC522_Rd3(0x0A);
  7099  001840  0E0A               	movlw	10
  7100  001842  EC27  F013         	call	_MFRC522_Rd3
  7101  001846  6E1F               	movwf	MFRC522_ToCard3@n^0,c
  7102                           
  7103                           ;rc522.c: 552:                 lastBits = MFRC522_Rd3(0x0C) & 0x07;
  7104  001848  0E0C               	movlw	12
  7105  00184A  EC27  F013         	call	_MFRC522_Rd3
  7106  00184E  0B07               	andlw	7
  7107  001850  6E1A               	movwf	MFRC522_ToCard3@lastBits^0,c
  7108  001852                     
  7109                           ;rc522.c: 553:                 if(lastBits)
  7110  001852  501A               	movf	MFRC522_ToCard3@lastBits^0,w,c
  7111  001854  B4D8               	btfsc	status,2,c
  7112  001856  EF2F  F00C         	goto	u3681
  7113  00185A  EF31  F00C         	goto	u3680
  7114  00185E                     u3681:
  7115  00185E  EF53  F00C         	goto	l3950
  7116  001862                     u3680:
  7117  001862                     
  7118                           ;rc522.c: 554:                 {;rc522.c: 555:                     *backLen = (n-1) * 8 
      +                          + lastBits;
  7119  001862  0EF8               	movlw	248
  7120  001864  6E14               	movwf	??_MFRC522_ToCard3^0,c
  7121  001866  0EFF               	movlw	255
  7122  001868  6E15               	movwf	(??_MFRC522_ToCard3+1)^0,c
  7123  00186A  501A               	movf	MFRC522_ToCard3@lastBits^0,w,c
  7124  00186C  C01F  F016         	movff	MFRC522_ToCard3@n,??_MFRC522_ToCard3+2
  7125  001870  6A17               	clrf	(??_MFRC522_ToCard3+3)^0,c
  7126  001872  90D8               	bcf	status,0,c
  7127  001874  3616               	rlcf	(??_MFRC522_ToCard3+2)^0,f,c
  7128  001876  3617               	rlcf	(??_MFRC522_ToCard3+3)^0,f,c
  7129  001878  90D8               	bcf	status,0,c
  7130  00187A  3616               	rlcf	(??_MFRC522_ToCard3+2)^0,f,c
  7131  00187C  3617               	rlcf	(??_MFRC522_ToCard3+3)^0,f,c
  7132  00187E  90D8               	bcf	status,0,c
  7133  001880  3616               	rlcf	(??_MFRC522_ToCard3+2)^0,f,c
  7134  001882  3617               	rlcf	(??_MFRC522_ToCard3+3)^0,f,c
  7135  001884  2616               	addwf	(??_MFRC522_ToCard3+2)^0,f,c
  7136  001886  0E00               	movlw	0
  7137  001888  2217               	addwfc	(??_MFRC522_ToCard3+3)^0,f,c
  7138  00188A  5014               	movf	??_MFRC522_ToCard3^0,w,c
  7139  00188C  2616               	addwf	(??_MFRC522_ToCard3+2)^0,f,c
  7140  00188E  5015               	movf	(??_MFRC522_ToCard3+1)^0,w,c
  7141  001890  2217               	addwfc	(??_MFRC522_ToCard3+3)^0,f,c
  7142  001892  C012  FFD9         	movff	MFRC522_ToCard3@backLen,fsr2l
  7143  001896  C013  FFDA         	movff	MFRC522_ToCard3@backLen+1,fsr2h
  7144  00189A  C016  FFDE         	movff	??_MFRC522_ToCard3+2,postinc2
  7145  00189E  C017  FFDD         	movff	??_MFRC522_ToCard3+3,postdec2
  7146                           
  7147                           ;rc522.c: 556:                 }
  7148  0018A2  EF5D  F00C         	goto	l3952
  7149  0018A6                     l3950:
  7150                           
  7151                           ;rc522.c: 558:                 {;rc522.c: 559:                     *backLen = n * 8;
  7152  0018A6  501F               	movf	MFRC522_ToCard3@n^0,w,c
  7153  0018A8  0D08               	mullw	8
  7154  0018AA  C012  FFD9         	movff	MFRC522_ToCard3@backLen,fsr2l
  7155  0018AE  C013  FFDA         	movff	MFRC522_ToCard3@backLen+1,fsr2h
  7156  0018B2  CFF3 FFDE          	movff	prodl,postinc2
  7157  0018B6  CFF4 FFDD          	movff	prodh,postdec2
  7158  0018BA                     l3952:
  7159                           
  7160                           ;rc522.c: 561:                 if(n == 0)
  7161  0018BA  501F               	movf	MFRC522_ToCard3@n^0,w,c
  7162  0018BC  A4D8               	btfss	status,2,c
  7163  0018BE  EF63  F00C         	goto	u3691
  7164  0018C2  EF65  F00C         	goto	u3690
  7165  0018C6                     u3691:
  7166  0018C6  EF67  F00C         	goto	l3956
  7167  0018CA                     u3690:
  7168  0018CA                     
  7169                           ;rc522.c: 562:                 {;rc522.c: 563:                     n = 1;
  7170  0018CA  0E01               	movlw	1
  7171  0018CC  6E1F               	movwf	MFRC522_ToCard3@n^0,c
  7172  0018CE                     l3956:
  7173                           
  7174                           ;rc522.c: 565:                 if(n > 16)
  7175  0018CE  0E10               	movlw	16
  7176  0018D0  641F               	cpfsgt	MFRC522_ToCard3@n^0,c
  7177  0018D2  EF6D  F00C         	goto	u3701
  7178  0018D6  EF6F  F00C         	goto	u3700
  7179  0018DA                     u3701:
  7180  0018DA  EF71  F00C         	goto	l433
  7181  0018DE                     u3700:
  7182  0018DE                     
  7183                           ;rc522.c: 566:                 {;rc522.c: 567:                     n = 16;
  7184  0018DE  0E10               	movlw	16
  7185  0018E0  6E1F               	movwf	MFRC522_ToCard3@n^0,c
  7186  0018E2                     l433:
  7187                           
  7188                           ;rc522.c: 569:                 for(i=0; i<n; i++)
  7189  0018E2  0E00               	movlw	0
  7190  0018E4  6E1E               	movwf	(MFRC522_ToCard3@i+1)^0,c
  7191  0018E6  0E00               	movlw	0
  7192  0018E8  6E1D               	movwf	MFRC522_ToCard3@i^0,c
  7193  0018EA  EF83  F00C         	goto	l3964
  7194  0018EE                     l3960:
  7195                           
  7196                           ;rc522.c: 570:                 {;rc522.c: 571:                     backData[i] = MFRC522
      +                          _Rd3(0x09);
  7197  0018EE  501D               	movf	MFRC522_ToCard3@i^0,w,c
  7198  0018F0  2410               	addwf	MFRC522_ToCard3@backData^0,w,c
  7199  0018F2  6ED9               	movwf	fsr2l,c
  7200  0018F4  501E               	movf	(MFRC522_ToCard3@i+1)^0,w,c
  7201  0018F6  2011               	addwfc	(MFRC522_ToCard3@backData+1)^0,w,c
  7202  0018F8  6EDA               	movwf	fsr2h,c
  7203  0018FA  0E09               	movlw	9
  7204  0018FC  EC27  F013         	call	_MFRC522_Rd3
  7205  001900  6EDF               	movwf	indf2,c
  7206  001902                     
  7207                           ;rc522.c: 572:                 }
  7208  001902  4A1D               	infsnz	MFRC522_ToCard3@i^0,f,c
  7209  001904  2A1E               	incf	(MFRC522_ToCard3@i+1)^0,f,c
  7210  001906                     l3964:
  7211  001906  501F               	movf	MFRC522_ToCard3@n^0,w,c
  7212  001908  6E14               	movwf	??_MFRC522_ToCard3^0,c
  7213  00190A  6A15               	clrf	(??_MFRC522_ToCard3+1)^0,c
  7214  00190C  5014               	movf	??_MFRC522_ToCard3^0,w,c
  7215  00190E  5C1D               	subwf	MFRC522_ToCard3@i^0,w,c
  7216  001910  5015               	movf	(??_MFRC522_ToCard3+1)^0,w,c
  7217  001912  581E               	subwfb	(MFRC522_ToCard3@i+1)^0,w,c
  7218  001914  A0D8               	btfss	status,0,c
  7219  001916  EF8F  F00C         	goto	u3711
  7220  00191A  EF91  F00C         	goto	u3710
  7221  00191E                     u3711:
  7222  00191E  EF77  F00C         	goto	l3960
  7223  001922                     u3710:
  7224  001922                     
  7225                           ;rc522.c: 573:                 backData[i] = 0;
  7226  001922  501D               	movf	MFRC522_ToCard3@i^0,w,c
  7227  001924  2410               	addwf	MFRC522_ToCard3@backData^0,w,c
  7228  001926  6ED9               	movwf	fsr2l,c
  7229  001928  501E               	movf	(MFRC522_ToCard3@i+1)^0,w,c
  7230  00192A  2011               	addwfc	(MFRC522_ToCard3@backData+1)^0,w,c
  7231  00192C  6EDA               	movwf	fsr2h,c
  7232  00192E  0E00               	movlw	0
  7233  001930  6EDF               	movwf	indf2,c
  7234  001932  EF9D  F00C         	goto	l426
  7235  001936                     l3968:
  7236                           
  7237                           ;rc522.c: 577:         {;rc522.c: 578:             _status = 2;
  7238  001936  0E02               	movlw	2
  7239  001938  6E19               	movwf	MFRC522_ToCard3@_status^0,c
  7240  00193A                     l426:
  7241                           
  7242                           ;rc522.c: 581:     return _status;
  7243  00193A  5019               	movf	MFRC522_ToCard3@_status^0,w,c
  7244  00193C  0012               	return		;funcret
  7245  00193E                     __end_of_MFRC522_ToCard3:
  7246                           	callstack 0
  7247                           
  7248 ;; *************** function _MFRC522_CRC3 *****************
  7249 ;; Defined at:
  7250 ;;		line 668 in file "rc522.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;  dataIn          2   12[COMRAM] PTR unsigned char 
  7253 ;;		 -> MFRC522_Halt3@buff(4), MFRC522_SelectTag3@buffer(9), 
  7254 ;;  length          1   14[COMRAM] unsigned char 
  7255 ;;  dataOut         2   15[COMRAM] PTR unsigned char 
  7256 ;;		 -> MFRC522_Halt3@buff(4), MFRC522_SelectTag3@buffer(9), 
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;  i               1   18[COMRAM] unsigned char 
  7259 ;;  n               1   17[COMRAM] unsigned char 
  7260 ;; Return value:  Size  Location     Type
  7261 ;;                  1    wreg      void 
  7262 ;; Registers used:
  7263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7264 ;; Tracked objects:
  7265 ;;		On entry : 0/0
  7266 ;;		On exit  : 0/0
  7267 ;;		Unchanged: 0/0
  7268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7269 ;;      Params:         5       0       0       0       0       0       0       0       0
  7270 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7272 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7273 ;;Total ram usage:        7 bytes
  7274 ;; Hardware stack levels used: 1
  7275 ;; Hardware stack levels required when called: 2
  7276 ;; This function calls:
  7277 ;;		_MFRC522_Clear_Bit3
  7278 ;;		_MFRC522_Rd3
  7279 ;;		_MFRC522_Set_Bit3
  7280 ;;		_MFRC522_Wr3
  7281 ;; This function is called by:
  7282 ;;		_MFRC522_Halt3
  7283 ;;		_MFRC522_SelectTag3
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           	psect	text42
  7288  002BF2                     __ptext42:
  7289                           	callstack 0
  7290  002BF2                     _MFRC522_CRC3:
  7291                           	callstack 27
  7292  002BF2                     
  7293                           ;rc522.c: 668: void MFRC522_CRC3(char *dataIn, char length, char *dataOut);rc522.c: 669:
      +                           {;rc522.c: 670:     char i, n;;rc522.c: 671:     MFRC522_Clear_Bit3(0x05, 0x04);
  7294  002BF2  0E04               	movlw	4
  7295  002BF4  6E0A               	movwf	MFRC522_Clear_Bit3@mask^0,c
  7296  002BF6  0E05               	movlw	5
  7297  002BF8  EC14  F01C         	call	_MFRC522_Clear_Bit3
  7298                           
  7299                           ;rc522.c: 672:     MFRC522_Set_Bit3(0x0A, 0x80);
  7300  002BFC  0E80               	movlw	128
  7301  002BFE  6E0A               	movwf	MFRC522_Set_Bit3@mask^0,c
  7302  002C00  0E0A               	movlw	10
  7303  002C02  EC3B  F01C         	call	_MFRC522_Set_Bit3
  7304  002C06                     
  7305                           ;rc522.c: 673:     for(i=0; i<length; i++)
  7306  002C06  0E00               	movlw	0
  7307  002C08  6E13               	movwf	MFRC522_CRC3@i^0,c
  7308  002C0A  EF13  F016         	goto	l4274
  7309  002C0E                     l4268:
  7310                           
  7311                           ;rc522.c: 674:     {;rc522.c: 675:         MFRC522_Wr3(0x09, *dataIn++);
  7312  002C0E  C00D  FFD9         	movff	MFRC522_CRC3@dataIn,fsr2l
  7313  002C12  C00E  FFDA         	movff	MFRC522_CRC3@dataIn+1,fsr2h
  7314  002C16  50DF               	movf	indf2,w,c
  7315  002C18  6E01               	movwf	MFRC522_Wr3@value^0,c
  7316  002C1A  0E09               	movlw	9
  7317  002C1C  EC37  F017         	call	_MFRC522_Wr3
  7318  002C20  4A0D               	infsnz	MFRC522_CRC3@dataIn^0,f,c
  7319  002C22  2A0E               	incf	(MFRC522_CRC3@dataIn+1)^0,f,c
  7320  002C24                     
  7321                           ;rc522.c: 676:     }
  7322  002C24  2A13               	incf	MFRC522_CRC3@i^0,f,c
  7323  002C26                     l4274:
  7324  002C26  500F               	movf	MFRC522_CRC3@length^0,w,c
  7325  002C28  5C13               	subwf	MFRC522_CRC3@i^0,w,c
  7326  002C2A  A0D8               	btfss	status,0,c
  7327  002C2C  EF1A  F016         	goto	u3991
  7328  002C30  EF1C  F016         	goto	u3990
  7329  002C34                     u3991:
  7330  002C34  EF07  F016         	goto	l4268
  7331  002C38                     u3990:
  7332  002C38                     
  7333                           ;rc522.c: 677:     MFRC522_Wr3(0x01, 0x03);
  7334  002C38  0E03               	movlw	3
  7335  002C3A  6E01               	movwf	MFRC522_Wr3@value^0,c
  7336  002C3C  0E01               	movlw	1
  7337  002C3E  EC37  F017         	call	_MFRC522_Wr3
  7338  002C42                     
  7339                           ;rc522.c: 678:     i = 0xFF;
  7340  002C42  6813               	setf	MFRC522_CRC3@i^0,c
  7341  002C44                     l482:
  7342                           
  7343                           ;rc522.c: 680:     {;rc522.c: 681:         n = MFRC522_Rd3( 0x05 );
  7344  002C44  0E05               	movlw	5
  7345  002C46  EC27  F013         	call	_MFRC522_Rd3
  7346  002C4A  6E12               	movwf	MFRC522_CRC3@n^0,c
  7347  002C4C                     
  7348                           ;rc522.c: 682:         i--;
  7349  002C4C  0613               	decf	MFRC522_CRC3@i^0,f,c
  7350  002C4E                     
  7351                           ;rc522.c: 683:     }
  7352  002C4E  5013               	movf	MFRC522_CRC3@i^0,w,c
  7353  002C50  B4D8               	btfsc	status,2,c
  7354  002C52  EF2D  F016         	goto	u4001
  7355  002C56  EF2F  F016         	goto	u4000
  7356  002C5A                     u4001:
  7357  002C5A  EF36  F016         	goto	l4286
  7358  002C5E                     u4000:
  7359  002C5E  A412               	btfss	MFRC522_CRC3@n^0,2,c
  7360  002C60  EF34  F016         	goto	u4011
  7361  002C64  EF36  F016         	goto	u4010
  7362  002C68                     u4011:
  7363  002C68  EF22  F016         	goto	l482
  7364  002C6C                     u4010:
  7365  002C6C                     l4286:
  7366                           
  7367                           ;rc522.c: 685:     dataOut[0] = MFRC522_Rd3(0x22);
  7368  002C6C  0E22               	movlw	34
  7369  002C6E  EC27  F013         	call	_MFRC522_Rd3
  7370  002C72  C010  FFD9         	movff	MFRC522_CRC3@dataOut,fsr2l
  7371  002C76  C011  FFDA         	movff	MFRC522_CRC3@dataOut+1,fsr2h
  7372  002C7A  6EDF               	movwf	indf2,c
  7373                           
  7374                           ;rc522.c: 686:     dataOut[1] = MFRC522_Rd3(0x21);
  7375  002C7C  EE20 F001          	lfsr	2,1
  7376  002C80  5010               	movf	MFRC522_CRC3@dataOut^0,w,c
  7377  002C82  26D9               	addwf	fsr2l,f,c
  7378  002C84  5011               	movf	(MFRC522_CRC3@dataOut+1)^0,w,c
  7379  002C86  22DA               	addwfc	fsr2h,f,c
  7380  002C88  0E21               	movlw	33
  7381  002C8A  EC27  F013         	call	_MFRC522_Rd3
  7382  002C8E  6EDF               	movwf	indf2,c
  7383  002C90  0012               	return		;funcret
  7384  002C92                     __end_of_MFRC522_CRC3:
  7385                           	callstack 0
  7386                           
  7387 ;; *************** function _MFRC522_Set_Bit3 *****************
  7388 ;; Defined at:
  7389 ;;		line 194 in file "rc522.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  addr            1    wreg     unsigned char 
  7392 ;;  mask            1    9[COMRAM] unsigned char 
  7393 ;; Auto vars:     Size  Location     Type
  7394 ;;  addr            1   11[COMRAM] unsigned char 
  7395 ;;  tmp             1   10[COMRAM] unsigned char 
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  1    wreg      void 
  7398 ;; Registers used:
  7399 ;;		wreg, status,2, status,0, cstack
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7405 ;;      Params:         1       0       0       0       0       0       0       0       0
  7406 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7408 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7409 ;;Total ram usage:        3 bytes
  7410 ;; Hardware stack levels used: 1
  7411 ;; Hardware stack levels required when called: 1
  7412 ;; This function calls:
  7413 ;;		_MFRC522_Rd3
  7414 ;;		_MFRC522_Wr3
  7415 ;; This function is called by:
  7416 ;;		_MFRC522_AntennaOn3
  7417 ;;		_MFRC522_ToCard3
  7418 ;;		_MFRC522_CRC3
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           	psect	text43
  7423  003876                     __ptext43:
  7424                           	callstack 0
  7425  003876                     _MFRC522_Set_Bit3:
  7426                           	callstack 26
  7427                           
  7428                           ;incstack = 0
  7429                           ;MFRC522_Set_Bit3@addr stored from wreg
  7430  003876  6E0C               	movwf	MFRC522_Set_Bit3@addr^0,c
  7431  003878                     
  7432                           ;rc522.c: 197:     tmp = MFRC522_Rd3(addr);
  7433  003878  500C               	movf	MFRC522_Set_Bit3@addr^0,w,c
  7434  00387A  EC27  F013         	call	_MFRC522_Rd3
  7435  00387E  6E0B               	movwf	MFRC522_Set_Bit3@tmp^0,c
  7436  003880                     
  7437                           ;rc522.c: 198:     MFRC522_Wr3(addr, tmp | mask);
  7438  003880  500B               	movf	MFRC522_Set_Bit3@tmp^0,w,c
  7439  003882  100A               	iorwf	MFRC522_Set_Bit3@mask^0,w,c
  7440  003884  6E01               	movwf	MFRC522_Wr3@value^0,c
  7441  003886  500C               	movf	MFRC522_Set_Bit3@addr^0,w,c
  7442  003888  EC37  F017         	call	_MFRC522_Wr3
  7443  00388C  0012               	return		;funcret
  7444  00388E                     __end_of_MFRC522_Set_Bit3:
  7445                           	callstack 0
  7446                           
  7447 ;; *************** function _MFRC522_Clear_Bit3 *****************
  7448 ;; Defined at:
  7449 ;;		line 172 in file "rc522.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;  addr            1    wreg     unsigned char 
  7452 ;;  mask            1    9[COMRAM] unsigned char 
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;  addr            1   11[COMRAM] unsigned char 
  7455 ;;  tmp             1   10[COMRAM] unsigned char 
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  1    wreg      void 
  7458 ;; Registers used:
  7459 ;;		wreg, status,2, status,0, cstack
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7465 ;;      Params:         1       0       0       0       0       0       0       0       0
  7466 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7468 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7469 ;;Total ram usage:        3 bytes
  7470 ;; Hardware stack levels used: 1
  7471 ;; Hardware stack levels required when called: 1
  7472 ;; This function calls:
  7473 ;;		_MFRC522_Rd3
  7474 ;;		_MFRC522_Wr3
  7475 ;; This function is called by:
  7476 ;;		_MFRC522_AntennaOff3
  7477 ;;		_MFRC522_ToCard3
  7478 ;;		_MFRC522_CRC3
  7479 ;;		_MFRC522_Halt3
  7480 ;;		_MFRC522_AntiColl3
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text44
  7485  003828                     __ptext44:
  7486                           	callstack 0
  7487  003828                     _MFRC522_Clear_Bit3:
  7488                           	callstack 26
  7489                           
  7490                           ;incstack = 0
  7491                           ;MFRC522_Clear_Bit3@addr stored from wreg
  7492  003828  6E0C               	movwf	MFRC522_Clear_Bit3@addr^0,c
  7493  00382A                     
  7494                           ;rc522.c: 175:     tmp = MFRC522_Rd3(addr) ;
  7495  00382A  500C               	movf	MFRC522_Clear_Bit3@addr^0,w,c
  7496  00382C  EC27  F013         	call	_MFRC522_Rd3
  7497  003830  6E0B               	movwf	MFRC522_Clear_Bit3@tmp^0,c
  7498  003832                     
  7499                           ;rc522.c: 176:     MFRC522_Wr3(addr, tmp&~mask);
  7500  003832  500A               	movf	MFRC522_Clear_Bit3@mask^0,w,c
  7501  003834  0AFF               	xorlw	255
  7502  003836  140B               	andwf	MFRC522_Clear_Bit3@tmp^0,w,c
  7503  003838  6E01               	movwf	MFRC522_Wr3@value^0,c
  7504  00383A  500C               	movf	MFRC522_Clear_Bit3@addr^0,w,c
  7505  00383C  EC37  F017         	call	_MFRC522_Wr3
  7506  003840  0012               	return		;funcret
  7507  003842                     __end_of_MFRC522_Clear_Bit3:
  7508                           	callstack 0
  7509                           
  7510 ;; *************** function _MFRC522_Wr3 *****************
  7511 ;; Defined at:
  7512 ;;		line 133 in file "rc522.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  address         1    wreg     unsigned char 
  7515 ;;  value           1    0[COMRAM] unsigned char 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;  address         1    2[COMRAM] unsigned char 
  7518 ;;  i               1    4[COMRAM] unsigned char 
  7519 ;;  ucAddr          1    3[COMRAM] unsigned char 
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  1    wreg      void 
  7522 ;; Registers used:
  7523 ;;		wreg, status,2, status,0
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7529 ;;      Params:         1       0       0       0       0       0       0       0       0
  7530 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7531 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7532 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7533 ;;Total ram usage:        5 bytes
  7534 ;; Hardware stack levels used: 1
  7535 ;; This function calls:
  7536 ;;		Nothing
  7537 ;; This function is called by:
  7538 ;;		_MFRC522_Clear_Bit3
  7539 ;;		_MFRC522_Set_Bit3
  7540 ;;		_MFRC522_Reset
  7541 ;;		_MFRC522_Init
  7542 ;;		_MFRC522_ToCard3
  7543 ;;		_MFRC522_Request3
  7544 ;;		_MFRC522_CRC3
  7545 ;;		_MFRC522_AntiColl3
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           	psect	text45
  7550  002E6E                     __ptext45:
  7551                           	callstack 0
  7552  002E6E                     _MFRC522_Wr3:
  7553                           	callstack 28
  7554                           
  7555                           ;incstack = 0
  7556                           ;MFRC522_Wr3@address stored from wreg
  7557  002E6E  6E03               	movwf	MFRC522_Wr3@address^0,c
  7558  002E70                     
  7559                           ;rc522.c: 133: void MFRC522_Wr3(unsigned char address, unsigned char value);rc522.c: 134
      +                          : {;rc522.c: 135:     unsigned char i, ucAddr;;rc522.c: 136:     LATDbits.LD1 = 0;
  7560  002E70  928C               	bcf	140,1,c	;volatile
  7561                           
  7562                           ;rc522.c: 137:     LATAbits.LA2 = 0;
  7563  002E72  9489               	bcf	137,2,c	;volatile
  7564  002E74                     
  7565                           ;rc522.c: 138:     ucAddr = ((address << 1) & 0x7E);
  7566  002E74  5003               	movf	MFRC522_Wr3@address^0,w,c
  7567  002E76  2403               	addwf	MFRC522_Wr3@address^0,w,c
  7568  002E78  0B7E               	andlw	126
  7569  002E7A  6E04               	movwf	MFRC522_Wr3@ucAddr^0,c
  7570  002E7C                     
  7571                           ;rc522.c: 140:     for(i=8; i>0; i--)
  7572  002E7C  0E08               	movlw	8
  7573  002E7E  6E05               	movwf	MFRC522_Wr3@i^0,c
  7574  002E80                     l3548:
  7575                           
  7576                           ;rc522.c: 141:     {;rc522.c: 142:         LATDbits.LD3 = ((ucAddr&0x80) == 0x80);
  7577  002E80  BE04               	btfsc	MFRC522_Wr3@ucAddr^0,7,c
  7578  002E82  EF45  F017         	goto	u3051
  7579  002E86  EF49  F017         	goto	u3050
  7580  002E8A                     u3051:
  7581  002E8A  6A02               	clrf	??_MFRC522_Wr3^0,c
  7582  002E8C  2A02               	incf	??_MFRC522_Wr3^0,f,c
  7583  002E8E  EF4A  F017         	goto	u3068
  7584  002E92                     u3050:
  7585  002E92  6A02               	clrf	??_MFRC522_Wr3^0,c
  7586  002E94                     u3068:
  7587  002E94  4602               	rlncf	??_MFRC522_Wr3^0,f,c
  7588  002E96  4602               	rlncf	??_MFRC522_Wr3^0,f,c
  7589  002E98  4602               	rlncf	??_MFRC522_Wr3^0,f,c
  7590  002E9A  508C               	movf	140,w,c	;volatile
  7591  002E9C  1802               	xorwf	??_MFRC522_Wr3^0,w,c
  7592  002E9E  0BF7               	andlw	-9
  7593  002EA0  1802               	xorwf	??_MFRC522_Wr3^0,w,c
  7594  002EA2  6E8C               	movwf	140,c	;volatile
  7595  002EA4                     
  7596                           ;rc522.c: 143:         LATDbits.LD1 = 1;
  7597  002EA4  828C               	bsf	140,1,c	;volatile
  7598                           
  7599                           ;rc522.c: 144:         ucAddr <<= 1;
  7600  002EA6  90D8               	bcf	status,0,c
  7601  002EA8  3604               	rlcf	MFRC522_Wr3@ucAddr^0,f,c
  7602  002EAA                     
  7603                           ;rc522.c: 145:         LATDbits.LD1 = 0;
  7604  002EAA  928C               	bcf	140,1,c	;volatile
  7605  002EAC                     
  7606                           ;rc522.c: 146:     }
  7607  002EAC  0605               	decf	MFRC522_Wr3@i^0,f,c
  7608  002EAE  5005               	movf	MFRC522_Wr3@i^0,w,c
  7609  002EB0  A4D8               	btfss	status,2,c
  7610  002EB2  EF5D  F017         	goto	u3071
  7611  002EB6  EF5F  F017         	goto	u3070
  7612  002EBA                     u3071:
  7613  002EBA  EF40  F017         	goto	l3548
  7614  002EBE                     u3070:
  7615  002EBE                     
  7616                           ;rc522.c: 147:     for(i=8; i>0; i--)
  7617  002EBE  0E08               	movlw	8
  7618  002EC0  6E05               	movwf	MFRC522_Wr3@i^0,c
  7619  002EC2                     l3562:
  7620                           
  7621                           ;rc522.c: 148:     {;rc522.c: 149:         LATDbits.LD3 = ((value&0x80) == 0x80);
  7622  002EC2  BE01               	btfsc	MFRC522_Wr3@value^0,7,c
  7623  002EC4  EF66  F017         	goto	u3081
  7624  002EC8  EF6A  F017         	goto	u3080
  7625  002ECC                     u3081:
  7626  002ECC  6A02               	clrf	??_MFRC522_Wr3^0,c
  7627  002ECE  2A02               	incf	??_MFRC522_Wr3^0,f,c
  7628  002ED0  EF6B  F017         	goto	u3098
  7629  002ED4                     u3080:
  7630  002ED4  6A02               	clrf	??_MFRC522_Wr3^0,c
  7631  002ED6                     u3098:
  7632  002ED6  4602               	rlncf	??_MFRC522_Wr3^0,f,c
  7633  002ED8  4602               	rlncf	??_MFRC522_Wr3^0,f,c
  7634  002EDA  4602               	rlncf	??_MFRC522_Wr3^0,f,c
  7635  002EDC  508C               	movf	140,w,c	;volatile
  7636  002EDE  1802               	xorwf	??_MFRC522_Wr3^0,w,c
  7637  002EE0  0BF7               	andlw	-9
  7638  002EE2  1802               	xorwf	??_MFRC522_Wr3^0,w,c
  7639  002EE4  6E8C               	movwf	140,c	;volatile
  7640  002EE6                     
  7641                           ;rc522.c: 150:         LATDbits.LD1 = 1;
  7642  002EE6  828C               	bsf	140,1,c	;volatile
  7643                           
  7644                           ;rc522.c: 151:         value <<= 1;
  7645  002EE8  90D8               	bcf	status,0,c
  7646  002EEA  3601               	rlcf	MFRC522_Wr3@value^0,f,c
  7647  002EEC                     
  7648                           ;rc522.c: 152:         LATDbits.LD1 = 0;
  7649  002EEC  928C               	bcf	140,1,c	;volatile
  7650  002EEE                     
  7651                           ;rc522.c: 153:     }
  7652  002EEE  0605               	decf	MFRC522_Wr3@i^0,f,c
  7653  002EF0  5005               	movf	MFRC522_Wr3@i^0,w,c
  7654  002EF2  A4D8               	btfss	status,2,c
  7655  002EF4  EF7E  F017         	goto	u3101
  7656  002EF8  EF80  F017         	goto	u3100
  7657  002EFC                     u3101:
  7658  002EFC  EF61  F017         	goto	l3562
  7659  002F00                     u3100:
  7660  002F00                     
  7661                           ;rc522.c: 154:     LATAbits.LA2 = 1;
  7662  002F00  8489               	bsf	137,2,c	;volatile
  7663                           
  7664                           ;rc522.c: 155:     LATDbits.LD1 = 1;
  7665  002F02  828C               	bsf	140,1,c	;volatile
  7666  002F04  0012               	return		;funcret
  7667  002F06                     __end_of_MFRC522_Wr3:
  7668                           	callstack 0
  7669                           
  7670 ;; *************** function _MFRC522_Rd3 *****************
  7671 ;; Defined at:
  7672 ;;		line 56 in file "rc522.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  address         1    wreg     unsigned char 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;  address         1    2[COMRAM] unsigned char 
  7677 ;;  i               2    7[COMRAM] unsigned int 
  7678 ;;  ucResult        2    5[COMRAM] unsigned int 
  7679 ;;  ucAddr          2    3[COMRAM] unsigned int 
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  1    wreg      unsigned char 
  7682 ;; Registers used:
  7683 ;;		wreg, status,2, status,0
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7689 ;;      Params:         0       0       0       0       0       0       0       0       0
  7690 ;;      Locals:         7       0       0       0       0       0       0       0       0
  7691 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7692 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7693 ;;Total ram usage:        9 bytes
  7694 ;; Hardware stack levels used: 1
  7695 ;; This function calls:
  7696 ;;		Nothing
  7697 ;; This function is called by:
  7698 ;;		_MFRC522_Clear_Bit3
  7699 ;;		_MFRC522_Set_Bit3
  7700 ;;		_MFRC522_AntennaOn3
  7701 ;;		_MFRC522_ToCard3
  7702 ;;		_MFRC522_CRC3
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text46
  7707  00264E                     __ptext46:
  7708                           	callstack 0
  7709  00264E                     _MFRC522_Rd3:
  7710                           	callstack 26
  7711                           
  7712                           ;incstack = 0
  7713                           ;MFRC522_Rd3@address stored from wreg
  7714  00264E  6E03               	movwf	MFRC522_Rd3@address^0,c
  7715  002650                     
  7716                           ;rc522.c: 56: unsigned char MFRC522_Rd3(unsigned char address);rc522.c: 57: {;rc522.c: 5
      +                          8:     unsigned int i, ucAddr;;rc522.c: 59:     unsigned int ucResult = 0;
  7717  002650  0E00               	movlw	0
  7718  002652  6E07               	movwf	(MFRC522_Rd3@ucResult+1)^0,c
  7719  002654  0E00               	movlw	0
  7720  002656  6E06               	movwf	MFRC522_Rd3@ucResult^0,c
  7721  002658                     
  7722                           ;rc522.c: 60:     LATDbits.LD1 = 0;
  7723  002658  928C               	bcf	140,1,c	;volatile
  7724  00265A                     
  7725                           ;rc522.c: 61:     LATAbits.LA2 = 0;
  7726  00265A  9489               	bcf	137,2,c	;volatile
  7727  00265C                     
  7728                           ;rc522.c: 62:     ucAddr = ((address << 1) & 0x7E) | 0x80;
  7729  00265C  5003               	movf	MFRC522_Rd3@address^0,w,c
  7730  00265E  2403               	addwf	MFRC522_Rd3@address^0,w,c
  7731  002660  0B7E               	andlw	126
  7732  002662  6E01               	movwf	??_MFRC522_Rd3^0,c
  7733  002664  6A02               	clrf	(??_MFRC522_Rd3+1)^0,c
  7734  002666  0E80               	movlw	128
  7735  002668  1001               	iorwf	??_MFRC522_Rd3^0,w,c
  7736  00266A  6E04               	movwf	MFRC522_Rd3@ucAddr^0,c
  7737  00266C  5002               	movf	(??_MFRC522_Rd3+1)^0,w,c
  7738  00266E  6E05               	movwf	(MFRC522_Rd3@ucAddr+1)^0,c
  7739  002670                     
  7740                           ;rc522.c: 64:     for(i=8; i>0; i--)
  7741  002670  0E00               	movlw	0
  7742  002672  6E09               	movwf	(MFRC522_Rd3@i+1)^0,c
  7743  002674  0E08               	movlw	8
  7744  002676  6E08               	movwf	MFRC522_Rd3@i^0,c
  7745  002678                     l3442:
  7746                           
  7747                           ;rc522.c: 65:     {;rc522.c: 66:         LATDbits.LD3 = ((ucAddr & 0x80) == 0x80);
  7748  002678  BE04               	btfsc	MFRC522_Rd3@ucAddr^0,7,c
  7749  00267A  EF41  F013         	goto	u2881
  7750  00267E  EF45  F013         	goto	u2880
  7751  002682                     u2881:
  7752  002682  6A01               	clrf	??_MFRC522_Rd3^0,c
  7753  002684  2A01               	incf	??_MFRC522_Rd3^0,f,c
  7754  002686  EF46  F013         	goto	u2898
  7755  00268A                     u2880:
  7756  00268A  6A01               	clrf	??_MFRC522_Rd3^0,c
  7757  00268C                     u2898:
  7758  00268C  4601               	rlncf	??_MFRC522_Rd3^0,f,c
  7759  00268E  4601               	rlncf	??_MFRC522_Rd3^0,f,c
  7760  002690  4601               	rlncf	??_MFRC522_Rd3^0,f,c
  7761  002692  508C               	movf	140,w,c	;volatile
  7762  002694  1801               	xorwf	??_MFRC522_Rd3^0,w,c
  7763  002696  0BF7               	andlw	-9
  7764  002698  1801               	xorwf	??_MFRC522_Rd3^0,w,c
  7765  00269A  6E8C               	movwf	140,c	;volatile
  7766  00269C                     
  7767                           ;rc522.c: 67:         LATDbits.LD1 = 1;
  7768  00269C  828C               	bsf	140,1,c	;volatile
  7769  00269E                     
  7770                           ;rc522.c: 68:         ucAddr <<= 1;
  7771  00269E  90D8               	bcf	status,0,c
  7772  0026A0  3604               	rlcf	MFRC522_Rd3@ucAddr^0,f,c
  7773  0026A2  3605               	rlcf	(MFRC522_Rd3@ucAddr+1)^0,f,c
  7774  0026A4                     
  7775                           ;rc522.c: 69:         LATDbits.LD1 = 0;
  7776  0026A4  928C               	bcf	140,1,c	;volatile
  7777  0026A6                     
  7778                           ;rc522.c: 70:     }
  7779  0026A6  0608               	decf	MFRC522_Rd3@i^0,f,c
  7780  0026A8  A0D8               	btfss	status,0,c
  7781  0026AA  0609               	decf	(MFRC522_Rd3@i+1)^0,f,c
  7782  0026AC  5008               	movf	MFRC522_Rd3@i^0,w,c
  7783  0026AE  1009               	iorwf	(MFRC522_Rd3@i+1)^0,w,c
  7784  0026B0  A4D8               	btfss	status,2,c
  7785  0026B2  EF5D  F013         	goto	u2901
  7786  0026B6  EF5F  F013         	goto	u2900
  7787  0026BA                     u2901:
  7788  0026BA  EF3C  F013         	goto	l3442
  7789  0026BE                     u2900:
  7790  0026BE                     
  7791                           ;rc522.c: 71:     for(i=8; i>0; i--)
  7792  0026BE  0E00               	movlw	0
  7793  0026C0  6E09               	movwf	(MFRC522_Rd3@i+1)^0,c
  7794  0026C2  0E08               	movlw	8
  7795  0026C4  6E08               	movwf	MFRC522_Rd3@i^0,c
  7796  0026C6                     l289:
  7797                           
  7798                           ;rc522.c: 72:     {;rc522.c: 73:         LATDbits.LD1 = 1;
  7799  0026C6  828C               	bsf	140,1,c	;volatile
  7800  0026C8                     
  7801                           ;rc522.c: 74:         ucResult <<= 1;
  7802  0026C8  90D8               	bcf	status,0,c
  7803  0026CA  3606               	rlcf	MFRC522_Rd3@ucResult^0,f,c
  7804  0026CC  3607               	rlcf	(MFRC522_Rd3@ucResult+1)^0,f,c
  7805  0026CE                     
  7806                           ;rc522.c: 75:         ucResult |= (short)PORTDbits.RD2;
  7807  0026CE  B483               	btfsc	131,2,c	;volatile
  7808  0026D0  EF6C  F013         	goto	u2911
  7809  0026D4  EF70  F013         	goto	u2910
  7810  0026D8                     u2911:
  7811  0026D8  6A01               	clrf	??_MFRC522_Rd3^0,c
  7812  0026DA  2A01               	incf	??_MFRC522_Rd3^0,f,c
  7813  0026DC  EF71  F013         	goto	u2918
  7814  0026E0                     u2910:
  7815  0026E0  6A01               	clrf	??_MFRC522_Rd3^0,c
  7816  0026E2                     u2918:
  7817  0026E2  5001               	movf	??_MFRC522_Rd3^0,w,c
  7818  0026E4  1206               	iorwf	MFRC522_Rd3@ucResult^0,f,c
  7819  0026E6                     
  7820                           ;rc522.c: 76:         LATDbits.LD1 = 0;
  7821  0026E6  928C               	bcf	140,1,c	;volatile
  7822  0026E8                     
  7823                           ;rc522.c: 77:     }
  7824  0026E8  0608               	decf	MFRC522_Rd3@i^0,f,c
  7825  0026EA  A0D8               	btfss	status,0,c
  7826  0026EC  0609               	decf	(MFRC522_Rd3@i+1)^0,f,c
  7827  0026EE  5008               	movf	MFRC522_Rd3@i^0,w,c
  7828  0026F0  1009               	iorwf	(MFRC522_Rd3@i+1)^0,w,c
  7829  0026F2  A4D8               	btfss	status,2,c
  7830  0026F4  EF7E  F013         	goto	u2921
  7831  0026F8  EF80  F013         	goto	u2920
  7832  0026FC                     u2921:
  7833  0026FC  EF63  F013         	goto	l289
  7834  002700                     u2920:
  7835  002700                     
  7836                           ;rc522.c: 78:     LATAbits.LA2 = 1;
  7837  002700  8489               	bsf	137,2,c	;volatile
  7838                           
  7839                           ;rc522.c: 79:     LATDbits.LD1 = 1;
  7840  002702  828C               	bsf	140,1,c	;volatile
  7841  002704                     
  7842                           ;rc522.c: 80:     return ucResult;
  7843  002704  5006               	movf	MFRC522_Rd3@ucResult^0,w,c
  7844  002706  0012               	return		;funcret
  7845  002708                     __end_of_MFRC522_Rd3:
  7846                           	callstack 0
  7847                           
  7848 ;; *************** function _MFRC522_Halt2 *****************
  7849 ;; Defined at:
  7850 ;;		line 782 in file "rc522.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;		None
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;  buff            4   31[COMRAM] unsigned char [4]
  7855 ;;  unLen           2   35[COMRAM] unsigned int 
  7856 ;; Return value:  Size  Location     Type
  7857 ;;                  1    wreg      void 
  7858 ;; Registers used:
  7859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7860 ;; Tracked objects:
  7861 ;;		On entry : 0/0
  7862 ;;		On exit  : 0/0
  7863 ;;		Unchanged: 0/0
  7864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7865 ;;      Params:         0       0       0       0       0       0       0       0       0
  7866 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7868 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7869 ;;Total ram usage:        6 bytes
  7870 ;; Hardware stack levels used: 1
  7871 ;; Hardware stack levels required when called: 3
  7872 ;; This function calls:
  7873 ;;		_MFRC522_CRC2
  7874 ;;		_MFRC522_Clear_Bit2
  7875 ;;		_MFRC522_ToCard2
  7876 ;; This function is called by:
  7877 ;;		_main
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           	psect	text47
  7882  0033D4                     __ptext47:
  7883                           	callstack 0
  7884  0033D4                     _MFRC522_Halt2:
  7885                           	callstack 27
  7886  0033D4                     
  7887                           ;rc522.c: 784:     unsigned unLen;;rc522.c: 785:     char buff[4];;rc522.c: 786:     buf
      +                          f[0] = 0x50;
  7888  0033D4  0E50               	movlw	80
  7889  0033D6  6E20               	movwf	MFRC522_Halt2@buff^0,c
  7890                           
  7891                           ;rc522.c: 787:     buff[1] = 0;
  7892  0033D8  0E00               	movlw	0
  7893  0033DA  6E21               	movwf	(MFRC522_Halt2@buff+1)^0,c
  7894  0033DC                     
  7895                           ;rc522.c: 788:     MFRC522_CRC2(buff, 2, &buff[2]);
  7896  0033DC  0E20               	movlw	low MFRC522_Halt2@buff
  7897  0033DE  6E0D               	movwf	MFRC522_CRC2@dataIn^0,c
  7898  0033E0  0E00               	movlw	high MFRC522_Halt2@buff
  7899  0033E2  6E0E               	movwf	(MFRC522_CRC2@dataIn+1)^0,c
  7900  0033E4  0E02               	movlw	2
  7901  0033E6  6E0F               	movwf	MFRC522_CRC2@length^0,c
  7902  0033E8  0E22               	movlw	low (MFRC522_Halt2@buff+2)
  7903  0033EA  6E10               	movwf	MFRC522_CRC2@dataOut^0,c
  7904  0033EC  0E00               	movlw	high (MFRC522_Halt2@buff+2)
  7905  0033EE  6E11               	movwf	(MFRC522_CRC2@dataOut+1)^0,c
  7906  0033F0  EC49  F016         	call	_MFRC522_CRC2	;wreg free
  7907  0033F4                     
  7908                           ;rc522.c: 789:     MFRC522_Clear_Bit2(0x08, 0x80);
  7909  0033F4  0E80               	movlw	128
  7910  0033F6  6E0A               	movwf	MFRC522_Clear_Bit2@mask^0,c
  7911  0033F8  0E08               	movlw	8
  7912  0033FA  EC21  F01C         	call	_MFRC522_Clear_Bit2
  7913  0033FE                     
  7914                           ;rc522.c: 790:     MFRC522_ToCard2(0x0C, buff, 4, buff, &unLen);
  7915  0033FE  0E20               	movlw	low MFRC522_Halt2@buff
  7916  003400  6E0D               	movwf	MFRC522_ToCard2@sendData^0,c
  7917  003402  0E00               	movlw	high MFRC522_Halt2@buff
  7918  003404  6E0E               	movwf	(MFRC522_ToCard2@sendData+1)^0,c
  7919  003406  0E04               	movlw	4
  7920  003408  6E0F               	movwf	MFRC522_ToCard2@sendLen^0,c
  7921  00340A  0E20               	movlw	low MFRC522_Halt2@buff
  7922  00340C  6E10               	movwf	MFRC522_ToCard2@backData^0,c
  7923  00340E  0E00               	movlw	high MFRC522_Halt2@buff
  7924  003410  6E11               	movwf	(MFRC522_ToCard2@backData+1)^0,c
  7925  003412  0E24               	movlw	low MFRC522_Halt2@unLen
  7926  003414  6E12               	movwf	MFRC522_ToCard2@backLen^0,c
  7927  003416  0E00               	movlw	high MFRC522_Halt2@unLen
  7928  003418  6E13               	movwf	(MFRC522_ToCard2@backLen+1)^0,c
  7929  00341A  0E0C               	movlw	12
  7930  00341C  EC9F  F00C         	call	_MFRC522_ToCard2
  7931  003420                     
  7932                           ;rc522.c: 791:     MFRC522_Clear_Bit2(0x08, 0x08);
  7933  003420  0E08               	movlw	8
  7934  003422  6E0A               	movwf	MFRC522_Clear_Bit2@mask^0,c
  7935  003424  0E08               	movlw	8
  7936  003426  EC21  F01C         	call	_MFRC522_Clear_Bit2
  7937  00342A  0012               	return		;funcret
  7938  00342C                     __end_of_MFRC522_Halt2:
  7939                           	callstack 0
  7940                           
  7941 ;; *************** function _MFRC522_ToCard2 *****************
  7942 ;; Defined at:
  7943 ;;		line 404 in file "rc522.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;  command         1    wreg     unsigned char 
  7946 ;;  sendData        2   12[COMRAM] PTR unsigned char 
  7947 ;;		 -> MFRC522_Halt2@buff(4), MFRC522_SelectTag2@buffer(9), UID_2(20), TagType2(1), 
  7948 ;;  sendLen         1   14[COMRAM] unsigned char 
  7949 ;;  backData        2   15[COMRAM] PTR unsigned char 
  7950 ;;		 -> MFRC522_Halt2@buff(4), MFRC522_SelectTag2@buffer(9), UID_2(20), TagType2(1), 
  7951 ;;  backLen         2   17[COMRAM] PTR unsigned int 
  7952 ;;		 -> MFRC522_AntiColl2@unLen(2), MFRC522_Halt2@unLen(2), MFRC522_SelectTag2@recvBits(2), MFRC522_Request2@backBits(2)
      +, 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  command         1   27[COMRAM] unsigned char 
  7955 ;;  i               2   28[COMRAM] unsigned int 
  7956 ;;  n               1   30[COMRAM] unsigned char 
  7957 ;;  irqEn           1   26[COMRAM] unsigned char 
  7958 ;;  lastBits        1   25[COMRAM] unsigned char 
  7959 ;;  _status         1   24[COMRAM] unsigned char 
  7960 ;;  waitIRq         1   23[COMRAM] unsigned char 
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  1    wreg      unsigned char 
  7963 ;; Registers used:
  7964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7965 ;; Tracked objects:
  7966 ;;		On entry : 0/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7970 ;;      Params:         7       0       0       0       0       0       0       0       0
  7971 ;;      Locals:         8       0       0       0       0       0       0       0       0
  7972 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7973 ;;      Totals:        19       0       0       0       0       0       0       0       0
  7974 ;;Total ram usage:       19 bytes
  7975 ;; Hardware stack levels used: 1
  7976 ;; Hardware stack levels required when called: 2
  7977 ;; This function calls:
  7978 ;;		_MFRC522_Clear_Bit2
  7979 ;;		_MFRC522_Rd2
  7980 ;;		_MFRC522_Set_Bit2
  7981 ;;		_MFRC522_Wr2
  7982 ;; This function is called by:
  7983 ;;		_MFRC522_Request2
  7984 ;;		_MFRC522_Halt2
  7985 ;;		_MFRC522_AntiColl2
  7986 ;;		_MFRC522_SelectTag2
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           	psect	text48
  7991  00193E                     __ptext48:
  7992                           	callstack 0
  7993  00193E                     _MFRC522_ToCard2:
  7994                           	callstack 26
  7995                           
  7996                           ;incstack = 0
  7997                           ;MFRC522_ToCard2@command stored from wreg
  7998  00193E  6E1C               	movwf	MFRC522_ToCard2@command^0,c
  7999  001940                     
  8000                           ;rc522.c: 404: char MFRC522_ToCard2(char command, char *sendData, char sendLen, char *ba
      +                          ckData, unsigned *backLen);rc522.c: 405: {;rc522.c: 406:     char _status = 2;
  8001  001940  0E02               	movlw	2
  8002  001942  6E19               	movwf	MFRC522_ToCard2@_status^0,c
  8003                           
  8004                           ;rc522.c: 407:     char irqEn = 0x00;
  8005  001944  0E00               	movlw	0
  8006  001946  6E1B               	movwf	MFRC522_ToCard2@irqEn^0,c
  8007                           
  8008                           ;rc522.c: 408:     char waitIRq = 0x00;
  8009  001948  0E00               	movlw	0
  8010  00194A  6E18               	movwf	MFRC522_ToCard2@waitIRq^0,c
  8011                           
  8012                           ;rc522.c: 409:     char lastBits;;rc522.c: 410:     char n;;rc522.c: 411:     unsigned i
      +                          ;;rc522.c: 413:     switch(command)
  8013  00194C  EFB4  F00C         	goto	l3820
  8014  001950                     l3814:
  8015                           
  8016                           ;rc522.c: 416:             irqEn = 0x12;
  8017  001950  0E12               	movlw	18
  8018  001952  6E1B               	movwf	MFRC522_ToCard2@irqEn^0,c
  8019                           
  8020                           ;rc522.c: 417:             waitIRq = 0x10;
  8021  001954  0E10               	movlw	16
  8022  001956  6E18               	movwf	MFRC522_ToCard2@waitIRq^0,c
  8023                           
  8024                           ;rc522.c: 418:             break;
  8025  001958  EFC9  F00C         	goto	l3822
  8026  00195C                     l3816:
  8027                           
  8028                           ;rc522.c: 421:             irqEn = 0x77;
  8029  00195C  0E77               	movlw	119
  8030  00195E  6E1B               	movwf	MFRC522_ToCard2@irqEn^0,c
  8031                           
  8032                           ;rc522.c: 422:             waitIRq = 0x30;
  8033  001960  0E30               	movlw	48
  8034  001962  6E18               	movwf	MFRC522_ToCard2@waitIRq^0,c
  8035                           
  8036                           ;rc522.c: 423:             break;
  8037  001964  EFC9  F00C         	goto	l3822
  8038  001968                     l3820:
  8039  001968  501C               	movf	MFRC522_ToCard2@command^0,w,c
  8040  00196A  6E14               	movwf	??_MFRC522_ToCard2^0,c
  8041  00196C  6A15               	clrf	(??_MFRC522_ToCard2+1)^0,c
  8042                           
  8043                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8044                           ; Switch size 1, requested type "simple"
  8045                           ; Number of cases is 1, Range of values is 0 to 0
  8046                           ; switch strategies available:
  8047                           ; Name         Instructions Cycles
  8048                           ; simple_byte            4     3 (average)
  8049                           ;	Chosen strategy is simple_byte
  8050  00196E  5015               	movf	(??_MFRC522_ToCard2+1)^0,w,c
  8051  001970  0A00               	xorlw	0	; case 0
  8052  001972  B4D8               	btfsc	status,2,c
  8053  001974  EFBE  F00C         	goto	l5228
  8054  001978  EFC9  F00C         	goto	l3822
  8055  00197C                     l5228:
  8056                           
  8057                           ; Switch size 1, requested type "simple"
  8058                           ; Number of cases is 2, Range of values is 12 to 14
  8059                           ; switch strategies available:
  8060                           ; Name         Instructions Cycles
  8061                           ; simple_byte            7     4 (average)
  8062                           ;	Chosen strategy is simple_byte
  8063  00197C  5014               	movf	??_MFRC522_ToCard2^0,w,c
  8064  00197E  0A0C               	xorlw	12	; case 12
  8065  001980  B4D8               	btfsc	status,2,c
  8066  001982  EFAE  F00C         	goto	l3816
  8067  001986  0A02               	xorlw	2	; case 14
  8068  001988  B4D8               	btfsc	status,2,c
  8069  00198A  EFA8  F00C         	goto	l3814
  8070  00198E  EFC9  F00C         	goto	l3822
  8071  001992                     l3822:
  8072                           
  8073                           ;rc522.c: 428:     MFRC522_Wr2(0x02, irqEn | 0x80);
  8074  001992  501B               	movf	MFRC522_ToCard2@irqEn^0,w,c
  8075  001994  0980               	iorlw	128
  8076  001996  6E01               	movwf	MFRC522_Wr2@value^0,c
  8077  001998  0E02               	movlw	2
  8078  00199A  EC83  F017         	call	_MFRC522_Wr2
  8079                           
  8080                           ;rc522.c: 429:     MFRC522_Clear_Bit2(0x04, 0x80);
  8081  00199E  0E80               	movlw	128
  8082  0019A0  6E0A               	movwf	MFRC522_Clear_Bit2@mask^0,c
  8083  0019A2  0E04               	movlw	4
  8084  0019A4  EC21  F01C         	call	_MFRC522_Clear_Bit2
  8085                           
  8086                           ;rc522.c: 430:     MFRC522_Set_Bit2(0x0A, 0x80);
  8087  0019A8  0E80               	movlw	128
  8088  0019AA  6E0A               	movwf	MFRC522_Set_Bit2@mask^0,c
  8089  0019AC  0E0A               	movlw	10
  8090  0019AE  EC47  F01C         	call	_MFRC522_Set_Bit2
  8091                           
  8092                           ;rc522.c: 431:     MFRC522_Wr2(0x01, 0x00);
  8093  0019B2  0E00               	movlw	0
  8094  0019B4  6E01               	movwf	MFRC522_Wr2@value^0,c
  8095  0019B6  0E01               	movlw	1
  8096  0019B8  EC83  F017         	call	_MFRC522_Wr2
  8097  0019BC                     
  8098                           ;rc522.c: 433:     for(i=0; i<sendLen; i++)
  8099  0019BC  0E00               	movlw	0
  8100  0019BE  6E1E               	movwf	(MFRC522_ToCard2@i+1)^0,c
  8101  0019C0  0E00               	movlw	0
  8102  0019C2  6E1D               	movwf	MFRC522_ToCard2@i^0,c
  8103  0019C4  EFF1  F00C         	goto	l3830
  8104  0019C8                     l3826:
  8105                           
  8106                           ;rc522.c: 434:     {;rc522.c: 435:         MFRC522_Wr2(0x09, sendData[i]);
  8107  0019C8  501D               	movf	MFRC522_ToCard2@i^0,w,c
  8108  0019CA  240D               	addwf	MFRC522_ToCard2@sendData^0,w,c
  8109  0019CC  6ED9               	movwf	fsr2l,c
  8110  0019CE  501E               	movf	(MFRC522_ToCard2@i+1)^0,w,c
  8111  0019D0  200E               	addwfc	(MFRC522_ToCard2@sendData+1)^0,w,c
  8112  0019D2  6EDA               	movwf	fsr2h,c
  8113  0019D4  50DF               	movf	indf2,w,c
  8114  0019D6  6E01               	movwf	MFRC522_Wr2@value^0,c
  8115  0019D8  0E09               	movlw	9
  8116  0019DA  EC83  F017         	call	_MFRC522_Wr2
  8117  0019DE                     
  8118                           ;rc522.c: 436:     }
  8119  0019DE  4A1D               	infsnz	MFRC522_ToCard2@i^0,f,c
  8120  0019E0  2A1E               	incf	(MFRC522_ToCard2@i+1)^0,f,c
  8121  0019E2                     l3830:
  8122  0019E2  500F               	movf	MFRC522_ToCard2@sendLen^0,w,c
  8123  0019E4  6E14               	movwf	??_MFRC522_ToCard2^0,c
  8124  0019E6  6A15               	clrf	(??_MFRC522_ToCard2+1)^0,c
  8125  0019E8  5014               	movf	??_MFRC522_ToCard2^0,w,c
  8126  0019EA  5C1D               	subwf	MFRC522_ToCard2@i^0,w,c
  8127  0019EC  5015               	movf	(??_MFRC522_ToCard2+1)^0,w,c
  8128  0019EE  581E               	subwfb	(MFRC522_ToCard2@i+1)^0,w,c
  8129  0019F0  A0D8               	btfss	status,0,c
  8130  0019F2  EFFD  F00C         	goto	u3461
  8131  0019F6  EFFF  F00C         	goto	u3460
  8132  0019FA                     u3461:
  8133  0019FA  EFE4  F00C         	goto	l3826
  8134  0019FE                     u3460:
  8135  0019FE                     
  8136                           ;rc522.c: 437:     MFRC522_Wr2(0x01, command);
  8137  0019FE  C01C  F001         	movff	MFRC522_ToCard2@command,MFRC522_Wr2@value
  8138  001A02  0E01               	movlw	1
  8139  001A04  EC83  F017         	call	_MFRC522_Wr2
  8140  001A08                     
  8141                           ;rc522.c: 438:     if(command == 0x0C)
  8142  001A08  0E0C               	movlw	12
  8143  001A0A  181C               	xorwf	MFRC522_ToCard2@command^0,w,c
  8144  001A0C  A4D8               	btfss	status,2,c
  8145  001A0E  EF0B  F00D         	goto	u3471
  8146  001A12  EF0D  F00D         	goto	u3470
  8147  001A16                     u3471:
  8148  001A16  EF12  F00D         	goto	l3838
  8149  001A1A                     u3470:
  8150  001A1A                     
  8151                           ;rc522.c: 439:     {;rc522.c: 440:         MFRC522_Set_Bit2(0x0D, 0x80);
  8152  001A1A  0E80               	movlw	128
  8153  001A1C  6E0A               	movwf	MFRC522_Set_Bit2@mask^0,c
  8154  001A1E  0E0D               	movlw	13
  8155  001A20  EC47  F01C         	call	_MFRC522_Set_Bit2
  8156  001A24                     l3838:
  8157                           
  8158                           ;rc522.c: 442:     i = 0xFFFF;
  8159  001A24  681D               	setf	MFRC522_ToCard2@i^0,c
  8160  001A26  681E               	setf	(MFRC522_ToCard2@i+1)^0,c
  8161  001A28                     l394:
  8162                           
  8163                           ;rc522.c: 444:     {;rc522.c: 445:         n = MFRC522_Rd2(0x04);
  8164  001A28  0E04               	movlw	4
  8165  001A2A  EC84  F013         	call	_MFRC522_Rd2
  8166  001A2E  6E1F               	movwf	MFRC522_ToCard2@n^0,c
  8167  001A30                     
  8168                           ;rc522.c: 446:         i--;
  8169  001A30  061D               	decf	MFRC522_ToCard2@i^0,f,c
  8170  001A32  A0D8               	btfss	status,0,c
  8171  001A34  061E               	decf	(MFRC522_ToCard2@i+1)^0,f,c
  8172  001A36                     
  8173                           ;rc522.c: 447:     }while(i && !(n & 0x01) && !(n & waitIRq));
  8174  001A36  501D               	movf	MFRC522_ToCard2@i^0,w,c
  8175  001A38  101E               	iorwf	(MFRC522_ToCard2@i+1)^0,w,c
  8176  001A3A  B4D8               	btfsc	status,2,c
  8177  001A3C  EF22  F00D         	goto	u3481
  8178  001A40  EF24  F00D         	goto	u3480
  8179  001A44                     u3481:
  8180  001A44  EF35  F00D         	goto	l3848
  8181  001A48                     u3480:
  8182  001A48  B01F               	btfsc	MFRC522_ToCard2@n^0,0,c
  8183  001A4A  EF29  F00D         	goto	u3491
  8184  001A4E  EF2B  F00D         	goto	u3490
  8185  001A52                     u3491:
  8186  001A52  EF35  F00D         	goto	l3848
  8187  001A56                     u3490:
  8188  001A56  501F               	movf	MFRC522_ToCard2@n^0,w,c
  8189  001A58  1418               	andwf	MFRC522_ToCard2@waitIRq^0,w,c
  8190  001A5A  0900               	iorlw	0
  8191  001A5C  B4D8               	btfsc	status,2,c
  8192  001A5E  EF33  F00D         	goto	u3501
  8193  001A62  EF35  F00D         	goto	u3500
  8194  001A66                     u3501:
  8195  001A66  EF14  F00D         	goto	l394
  8196  001A6A                     u3500:
  8197  001A6A                     l3848:
  8198                           
  8199                           ;rc522.c: 449:     MFRC522_Clear_Bit2(0x0D, 0x80);
  8200  001A6A  0E80               	movlw	128
  8201  001A6C  6E0A               	movwf	MFRC522_Clear_Bit2@mask^0,c
  8202  001A6E  0E0D               	movlw	13
  8203  001A70  EC21  F01C         	call	_MFRC522_Clear_Bit2
  8204  001A74                     
  8205                           ;rc522.c: 450:     if(i != 0)
  8206  001A74  501D               	movf	MFRC522_ToCard2@i^0,w,c
  8207  001A76  101E               	iorwf	(MFRC522_ToCard2@i+1)^0,w,c
  8208  001A78  B4D8               	btfsc	status,2,c
  8209  001A7A  EF41  F00D         	goto	u3511
  8210  001A7E  EF43  F00D         	goto	u3510
  8211  001A82                     u3511:
  8212  001A82  EFE4  F00D         	goto	l398
  8213  001A86                     u3510:
  8214  001A86                     
  8215                           ;rc522.c: 451:     {;rc522.c: 452:         if(!(MFRC522_Rd2(0x06) & 0x1B))
  8216  001A86  0E06               	movlw	6
  8217  001A88  EC84  F013         	call	_MFRC522_Rd2
  8218  001A8C  6E14               	movwf	??_MFRC522_ToCard2^0,c
  8219  001A8E  0E1B               	movlw	27
  8220  001A90  1614               	andwf	??_MFRC522_ToCard2^0,f,c
  8221  001A92  A4D8               	btfss	status,2,c
  8222  001A94  EF4E  F00D         	goto	u3521
  8223  001A98  EF50  F00D         	goto	u3520
  8224  001A9C                     u3521:
  8225  001A9C  EFE2  F00D         	goto	l3886
  8226  001AA0                     u3520:
  8227  001AA0                     
  8228                           ;rc522.c: 453:         {;rc522.c: 454:             _status = 0;
  8229  001AA0  0E00               	movlw	0
  8230  001AA2  6E19               	movwf	MFRC522_ToCard2@_status^0,c
  8231  001AA4                     
  8232                           ;rc522.c: 455:             if(n & irqEn & 0x01)
  8233  001AA4  501F               	movf	MFRC522_ToCard2@n^0,w,c
  8234  001AA6  141B               	andwf	MFRC522_ToCard2@irqEn^0,w,c
  8235  001AA8  6E14               	movwf	??_MFRC522_ToCard2^0,c
  8236  001AAA  A014               	btfss	??_MFRC522_ToCard2^0,0,c
  8237  001AAC  EF5A  F00D         	goto	u3531
  8238  001AB0  EF5C  F00D         	goto	u3530
  8239  001AB4                     u3531:
  8240  001AB4  EF5E  F00D         	goto	l3860
  8241  001AB8                     u3530:
  8242  001AB8                     
  8243                           ;rc522.c: 456:             {;rc522.c: 457:                 _status = 1;
  8244  001AB8  0E01               	movlw	1
  8245  001ABA  6E19               	movwf	MFRC522_ToCard2@_status^0,c
  8246  001ABC                     l3860:
  8247                           
  8248                           ;rc522.c: 459:             if(command == 0x0C)
  8249  001ABC  0E0C               	movlw	12
  8250  001ABE  181C               	xorwf	MFRC522_ToCard2@command^0,w,c
  8251  001AC0  A4D8               	btfss	status,2,c
  8252  001AC2  EF65  F00D         	goto	u3541
  8253  001AC6  EF67  F00D         	goto	u3540
  8254  001ACA                     u3541:
  8255  001ACA  EFE4  F00D         	goto	l398
  8256  001ACE                     u3540:
  8257  001ACE                     
  8258                           ;rc522.c: 460:             {;rc522.c: 461:                 n = MFRC522_Rd2(0x0A);
  8259  001ACE  0E0A               	movlw	10
  8260  001AD0  EC84  F013         	call	_MFRC522_Rd2
  8261  001AD4  6E1F               	movwf	MFRC522_ToCard2@n^0,c
  8262                           
  8263                           ;rc522.c: 462:                 lastBits = MFRC522_Rd2(0x0C) & 0x07;
  8264  001AD6  0E0C               	movlw	12
  8265  001AD8  EC84  F013         	call	_MFRC522_Rd2
  8266  001ADC  0B07               	andlw	7
  8267  001ADE  6E1A               	movwf	MFRC522_ToCard2@lastBits^0,c
  8268  001AE0                     
  8269                           ;rc522.c: 463:                 if(lastBits)
  8270  001AE0  501A               	movf	MFRC522_ToCard2@lastBits^0,w,c
  8271  001AE2  B4D8               	btfsc	status,2,c
  8272  001AE4  EF76  F00D         	goto	u3551
  8273  001AE8  EF78  F00D         	goto	u3550
  8274  001AEC                     u3551:
  8275  001AEC  EF9A  F00D         	goto	l3868
  8276  001AF0                     u3550:
  8277  001AF0                     
  8278                           ;rc522.c: 464:                 {;rc522.c: 465:                     *backLen = (n-1) * 8 
      +                          + lastBits;
  8279  001AF0  0EF8               	movlw	248
  8280  001AF2  6E14               	movwf	??_MFRC522_ToCard2^0,c
  8281  001AF4  0EFF               	movlw	255
  8282  001AF6  6E15               	movwf	(??_MFRC522_ToCard2+1)^0,c
  8283  001AF8  501A               	movf	MFRC522_ToCard2@lastBits^0,w,c
  8284  001AFA  C01F  F016         	movff	MFRC522_ToCard2@n,??_MFRC522_ToCard2+2
  8285  001AFE  6A17               	clrf	(??_MFRC522_ToCard2+3)^0,c
  8286  001B00  90D8               	bcf	status,0,c
  8287  001B02  3616               	rlcf	(??_MFRC522_ToCard2+2)^0,f,c
  8288  001B04  3617               	rlcf	(??_MFRC522_ToCard2+3)^0,f,c
  8289  001B06  90D8               	bcf	status,0,c
  8290  001B08  3616               	rlcf	(??_MFRC522_ToCard2+2)^0,f,c
  8291  001B0A  3617               	rlcf	(??_MFRC522_ToCard2+3)^0,f,c
  8292  001B0C  90D8               	bcf	status,0,c
  8293  001B0E  3616               	rlcf	(??_MFRC522_ToCard2+2)^0,f,c
  8294  001B10  3617               	rlcf	(??_MFRC522_ToCard2+3)^0,f,c
  8295  001B12  2616               	addwf	(??_MFRC522_ToCard2+2)^0,f,c
  8296  001B14  0E00               	movlw	0
  8297  001B16  2217               	addwfc	(??_MFRC522_ToCard2+3)^0,f,c
  8298  001B18  5014               	movf	??_MFRC522_ToCard2^0,w,c
  8299  001B1A  2616               	addwf	(??_MFRC522_ToCard2+2)^0,f,c
  8300  001B1C  5015               	movf	(??_MFRC522_ToCard2+1)^0,w,c
  8301  001B1E  2217               	addwfc	(??_MFRC522_ToCard2+3)^0,f,c
  8302  001B20  C012  FFD9         	movff	MFRC522_ToCard2@backLen,fsr2l
  8303  001B24  C013  FFDA         	movff	MFRC522_ToCard2@backLen+1,fsr2h
  8304  001B28  C016  FFDE         	movff	??_MFRC522_ToCard2+2,postinc2
  8305  001B2C  C017  FFDD         	movff	??_MFRC522_ToCard2+3,postdec2
  8306                           
  8307                           ;rc522.c: 466:                 }
  8308  001B30  EFA4  F00D         	goto	l3870
  8309  001B34                     l3868:
  8310                           
  8311                           ;rc522.c: 468:                 {;rc522.c: 469:                     *backLen = n * 8;
  8312  001B34  501F               	movf	MFRC522_ToCard2@n^0,w,c
  8313  001B36  0D08               	mullw	8
  8314  001B38  C012  FFD9         	movff	MFRC522_ToCard2@backLen,fsr2l
  8315  001B3C  C013  FFDA         	movff	MFRC522_ToCard2@backLen+1,fsr2h
  8316  001B40  CFF3 FFDE          	movff	prodl,postinc2
  8317  001B44  CFF4 FFDD          	movff	prodh,postdec2
  8318  001B48                     l3870:
  8319                           
  8320                           ;rc522.c: 471:                 if(n == 0)
  8321  001B48  501F               	movf	MFRC522_ToCard2@n^0,w,c
  8322  001B4A  A4D8               	btfss	status,2,c
  8323  001B4C  EFAA  F00D         	goto	u3561
  8324  001B50  EFAC  F00D         	goto	u3560
  8325  001B54                     u3561:
  8326  001B54  EFAE  F00D         	goto	l3874
  8327  001B58                     u3560:
  8328  001B58                     
  8329                           ;rc522.c: 472:                 {;rc522.c: 473:                     n = 1;
  8330  001B58  0E01               	movlw	1
  8331  001B5A  6E1F               	movwf	MFRC522_ToCard2@n^0,c
  8332  001B5C                     l3874:
  8333                           
  8334                           ;rc522.c: 475:                 if(n > 16)
  8335  001B5C  0E10               	movlw	16
  8336  001B5E  641F               	cpfsgt	MFRC522_ToCard2@n^0,c
  8337  001B60  EFB4  F00D         	goto	u3571
  8338  001B64  EFB6  F00D         	goto	u3570
  8339  001B68                     u3571:
  8340  001B68  EFB8  F00D         	goto	l405
  8341  001B6C                     u3570:
  8342  001B6C                     
  8343                           ;rc522.c: 476:                 {;rc522.c: 477:                     n = 16;
  8344  001B6C  0E10               	movlw	16
  8345  001B6E  6E1F               	movwf	MFRC522_ToCard2@n^0,c
  8346  001B70                     l405:
  8347                           
  8348                           ;rc522.c: 479:                 for(i=0; i<n; i++)
  8349  001B70  0E00               	movlw	0
  8350  001B72  6E1E               	movwf	(MFRC522_ToCard2@i+1)^0,c
  8351  001B74  0E00               	movlw	0
  8352  001B76  6E1D               	movwf	MFRC522_ToCard2@i^0,c
  8353  001B78  EFCA  F00D         	goto	l3882
  8354  001B7C                     l3878:
  8355                           
  8356                           ;rc522.c: 480:                 {;rc522.c: 481:                     backData[i] = MFRC522
      +                          _Rd2(0x09);
  8357  001B7C  501D               	movf	MFRC522_ToCard2@i^0,w,c
  8358  001B7E  2410               	addwf	MFRC522_ToCard2@backData^0,w,c
  8359  001B80  6ED9               	movwf	fsr2l,c
  8360  001B82  501E               	movf	(MFRC522_ToCard2@i+1)^0,w,c
  8361  001B84  2011               	addwfc	(MFRC522_ToCard2@backData+1)^0,w,c
  8362  001B86  6EDA               	movwf	fsr2h,c
  8363  001B88  0E09               	movlw	9
  8364  001B8A  EC84  F013         	call	_MFRC522_Rd2
  8365  001B8E  6EDF               	movwf	indf2,c
  8366  001B90                     
  8367                           ;rc522.c: 482:                 }
  8368  001B90  4A1D               	infsnz	MFRC522_ToCard2@i^0,f,c
  8369  001B92  2A1E               	incf	(MFRC522_ToCard2@i+1)^0,f,c
  8370  001B94                     l3882:
  8371  001B94  501F               	movf	MFRC522_ToCard2@n^0,w,c
  8372  001B96  6E14               	movwf	??_MFRC522_ToCard2^0,c
  8373  001B98  6A15               	clrf	(??_MFRC522_ToCard2+1)^0,c
  8374  001B9A  5014               	movf	??_MFRC522_ToCard2^0,w,c
  8375  001B9C  5C1D               	subwf	MFRC522_ToCard2@i^0,w,c
  8376  001B9E  5015               	movf	(??_MFRC522_ToCard2+1)^0,w,c
  8377  001BA0  581E               	subwfb	(MFRC522_ToCard2@i+1)^0,w,c
  8378  001BA2  A0D8               	btfss	status,0,c
  8379  001BA4  EFD6  F00D         	goto	u3581
  8380  001BA8  EFD8  F00D         	goto	u3580
  8381  001BAC                     u3581:
  8382  001BAC  EFBE  F00D         	goto	l3878
  8383  001BB0                     u3580:
  8384  001BB0                     
  8385                           ;rc522.c: 483:                 backData[i] = 0;
  8386  001BB0  501D               	movf	MFRC522_ToCard2@i^0,w,c
  8387  001BB2  2410               	addwf	MFRC522_ToCard2@backData^0,w,c
  8388  001BB4  6ED9               	movwf	fsr2l,c
  8389  001BB6  501E               	movf	(MFRC522_ToCard2@i+1)^0,w,c
  8390  001BB8  2011               	addwfc	(MFRC522_ToCard2@backData+1)^0,w,c
  8391  001BBA  6EDA               	movwf	fsr2h,c
  8392  001BBC  0E00               	movlw	0
  8393  001BBE  6EDF               	movwf	indf2,c
  8394  001BC0  EFE4  F00D         	goto	l398
  8395  001BC4                     l3886:
  8396                           
  8397                           ;rc522.c: 487:         {;rc522.c: 488:             _status = 2;
  8398  001BC4  0E02               	movlw	2
  8399  001BC6  6E19               	movwf	MFRC522_ToCard2@_status^0,c
  8400  001BC8                     l398:
  8401                           
  8402                           ;rc522.c: 491:     return _status;
  8403  001BC8  5019               	movf	MFRC522_ToCard2@_status^0,w,c
  8404  001BCA  0012               	return		;funcret
  8405  001BCC                     __end_of_MFRC522_ToCard2:
  8406                           	callstack 0
  8407                           
  8408 ;; *************** function _MFRC522_CRC2 *****************
  8409 ;; Defined at:
  8410 ;;		line 647 in file "rc522.c"
  8411 ;; Parameters:    Size  Location     Type
  8412 ;;  dataIn          2   12[COMRAM] PTR unsigned char 
  8413 ;;		 -> MFRC522_Halt2@buff(4), MFRC522_SelectTag2@buffer(9), 
  8414 ;;  length          1   14[COMRAM] unsigned char 
  8415 ;;  dataOut         2   15[COMRAM] PTR unsigned char 
  8416 ;;		 -> MFRC522_Halt2@buff(4), MFRC522_SelectTag2@buffer(9), 
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;  i               1   18[COMRAM] unsigned char 
  8419 ;;  n               1   17[COMRAM] unsigned char 
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  1    wreg      void 
  8422 ;; Registers used:
  8423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8429 ;;      Params:         5       0       0       0       0       0       0       0       0
  8430 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8432 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8433 ;;Total ram usage:        7 bytes
  8434 ;; Hardware stack levels used: 1
  8435 ;; Hardware stack levels required when called: 2
  8436 ;; This function calls:
  8437 ;;		_MFRC522_Clear_Bit2
  8438 ;;		_MFRC522_Rd2
  8439 ;;		_MFRC522_Set_Bit2
  8440 ;;		_MFRC522_Wr2
  8441 ;; This function is called by:
  8442 ;;		_MFRC522_Halt2
  8443 ;;		_MFRC522_SelectTag2
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           	psect	text49
  8448  002C92                     __ptext49:
  8449                           	callstack 0
  8450  002C92                     _MFRC522_CRC2:
  8451                           	callstack 27
  8452  002C92                     
  8453                           ;rc522.c: 647: void MFRC522_CRC2(char *dataIn, char length, char *dataOut);rc522.c: 648:
      +                           {;rc522.c: 649:     char i, n;;rc522.c: 650:     MFRC522_Clear_Bit2(0x05, 0x04);
  8454  002C92  0E04               	movlw	4
  8455  002C94  6E0A               	movwf	MFRC522_Clear_Bit2@mask^0,c
  8456  002C96  0E05               	movlw	5
  8457  002C98  EC21  F01C         	call	_MFRC522_Clear_Bit2
  8458                           
  8459                           ;rc522.c: 651:     MFRC522_Set_Bit2(0x0A, 0x80);
  8460  002C9C  0E80               	movlw	128
  8461  002C9E  6E0A               	movwf	MFRC522_Set_Bit2@mask^0,c
  8462  002CA0  0E0A               	movlw	10
  8463  002CA2  EC47  F01C         	call	_MFRC522_Set_Bit2
  8464  002CA6                     
  8465                           ;rc522.c: 652:     for(i=0; i<length; i++)
  8466  002CA6  0E00               	movlw	0
  8467  002CA8  6E13               	movwf	MFRC522_CRC2@i^0,c
  8468  002CAA  EF63  F016         	goto	l4250
  8469  002CAE                     l4244:
  8470                           
  8471                           ;rc522.c: 653:     {;rc522.c: 654:         MFRC522_Wr2(0x09, *dataIn++);
  8472  002CAE  C00D  FFD9         	movff	MFRC522_CRC2@dataIn,fsr2l
  8473  002CB2  C00E  FFDA         	movff	MFRC522_CRC2@dataIn+1,fsr2h
  8474  002CB6  50DF               	movf	indf2,w,c
  8475  002CB8  6E01               	movwf	MFRC522_Wr2@value^0,c
  8476  002CBA  0E09               	movlw	9
  8477  002CBC  EC83  F017         	call	_MFRC522_Wr2
  8478  002CC0  4A0D               	infsnz	MFRC522_CRC2@dataIn^0,f,c
  8479  002CC2  2A0E               	incf	(MFRC522_CRC2@dataIn+1)^0,f,c
  8480  002CC4                     
  8481                           ;rc522.c: 655:     }
  8482  002CC4  2A13               	incf	MFRC522_CRC2@i^0,f,c
  8483  002CC6                     l4250:
  8484  002CC6  500F               	movf	MFRC522_CRC2@length^0,w,c
  8485  002CC8  5C13               	subwf	MFRC522_CRC2@i^0,w,c
  8486  002CCA  A0D8               	btfss	status,0,c
  8487  002CCC  EF6A  F016         	goto	u3961
  8488  002CD0  EF6C  F016         	goto	u3960
  8489  002CD4                     u3961:
  8490  002CD4  EF57  F016         	goto	l4244
  8491  002CD8                     u3960:
  8492  002CD8                     
  8493                           ;rc522.c: 656:     MFRC522_Wr2(0x01, 0x03);
  8494  002CD8  0E03               	movlw	3
  8495  002CDA  6E01               	movwf	MFRC522_Wr2@value^0,c
  8496  002CDC  0E01               	movlw	1
  8497  002CDE  EC83  F017         	call	_MFRC522_Wr2
  8498  002CE2                     
  8499                           ;rc522.c: 657:     i = 0xFF;
  8500  002CE2  6813               	setf	MFRC522_CRC2@i^0,c
  8501  002CE4                     l472:
  8502                           
  8503                           ;rc522.c: 659:     {;rc522.c: 660:         n = MFRC522_Rd2( 0x05 );
  8504  002CE4  0E05               	movlw	5
  8505  002CE6  EC84  F013         	call	_MFRC522_Rd2
  8506  002CEA  6E12               	movwf	MFRC522_CRC2@n^0,c
  8507  002CEC                     
  8508                           ;rc522.c: 661:         i--;
  8509  002CEC  0613               	decf	MFRC522_CRC2@i^0,f,c
  8510  002CEE                     
  8511                           ;rc522.c: 662:     }
  8512  002CEE  5013               	movf	MFRC522_CRC2@i^0,w,c
  8513  002CF0  B4D8               	btfsc	status,2,c
  8514  002CF2  EF7D  F016         	goto	u3971
  8515  002CF6  EF7F  F016         	goto	u3970
  8516  002CFA                     u3971:
  8517  002CFA  EF86  F016         	goto	l4262
  8518  002CFE                     u3970:
  8519  002CFE  A412               	btfss	MFRC522_CRC2@n^0,2,c
  8520  002D00  EF84  F016         	goto	u3981
  8521  002D04  EF86  F016         	goto	u3980
  8522  002D08                     u3981:
  8523  002D08  EF72  F016         	goto	l472
  8524  002D0C                     u3980:
  8525  002D0C                     l4262:
  8526                           
  8527                           ;rc522.c: 664:     dataOut[0] = MFRC522_Rd2(0x22);
  8528  002D0C  0E22               	movlw	34
  8529  002D0E  EC84  F013         	call	_MFRC522_Rd2
  8530  002D12  C010  FFD9         	movff	MFRC522_CRC2@dataOut,fsr2l
  8531  002D16  C011  FFDA         	movff	MFRC522_CRC2@dataOut+1,fsr2h
  8532  002D1A  6EDF               	movwf	indf2,c
  8533                           
  8534                           ;rc522.c: 665:     dataOut[1] = MFRC522_Rd2(0x21);
  8535  002D1C  EE20 F001          	lfsr	2,1
  8536  002D20  5010               	movf	MFRC522_CRC2@dataOut^0,w,c
  8537  002D22  26D9               	addwf	fsr2l,f,c
  8538  002D24  5011               	movf	(MFRC522_CRC2@dataOut+1)^0,w,c
  8539  002D26  22DA               	addwfc	fsr2h,f,c
  8540  002D28  0E21               	movlw	33
  8541  002D2A  EC84  F013         	call	_MFRC522_Rd2
  8542  002D2E  6EDF               	movwf	indf2,c
  8543  002D30  0012               	return		;funcret
  8544  002D32                     __end_of_MFRC522_CRC2:
  8545                           	callstack 0
  8546                           
  8547 ;; *************** function _MFRC522_Set_Bit2 *****************
  8548 ;; Defined at:
  8549 ;;		line 187 in file "rc522.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;  addr            1    wreg     unsigned char 
  8552 ;;  mask            1    9[COMRAM] unsigned char 
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;  addr            1   11[COMRAM] unsigned char 
  8555 ;;  tmp             1   10[COMRAM] unsigned char 
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  1    wreg      void 
  8558 ;; Registers used:
  8559 ;;		wreg, status,2, status,0, cstack
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8565 ;;      Params:         1       0       0       0       0       0       0       0       0
  8566 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8567 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8568 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8569 ;;Total ram usage:        3 bytes
  8570 ;; Hardware stack levels used: 1
  8571 ;; Hardware stack levels required when called: 1
  8572 ;; This function calls:
  8573 ;;		_MFRC522_Rd2
  8574 ;;		_MFRC522_Wr2
  8575 ;; This function is called by:
  8576 ;;		_MFRC522_AntennaOn2
  8577 ;;		_MFRC522_ToCard2
  8578 ;;		_MFRC522_CRC2
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           	psect	text50
  8583  00388E                     __ptext50:
  8584                           	callstack 0
  8585  00388E                     _MFRC522_Set_Bit2:
  8586                           	callstack 26
  8587                           
  8588                           ;incstack = 0
  8589                           ;MFRC522_Set_Bit2@addr stored from wreg
  8590  00388E  6E0C               	movwf	MFRC522_Set_Bit2@addr^0,c
  8591  003890                     
  8592                           ;rc522.c: 190:     tmp = MFRC522_Rd2(addr);
  8593  003890  500C               	movf	MFRC522_Set_Bit2@addr^0,w,c
  8594  003892  EC84  F013         	call	_MFRC522_Rd2
  8595  003896  6E0B               	movwf	MFRC522_Set_Bit2@tmp^0,c
  8596  003898                     
  8597                           ;rc522.c: 191:     MFRC522_Wr2(addr, tmp | mask);
  8598  003898  500B               	movf	MFRC522_Set_Bit2@tmp^0,w,c
  8599  00389A  100A               	iorwf	MFRC522_Set_Bit2@mask^0,w,c
  8600  00389C  6E01               	movwf	MFRC522_Wr2@value^0,c
  8601  00389E  500C               	movf	MFRC522_Set_Bit2@addr^0,w,c
  8602  0038A0  EC83  F017         	call	_MFRC522_Wr2
  8603  0038A4  0012               	return		;funcret
  8604  0038A6                     __end_of_MFRC522_Set_Bit2:
  8605                           	callstack 0
  8606                           
  8607 ;; *************** function _MFRC522_Clear_Bit2 *****************
  8608 ;; Defined at:
  8609 ;;		line 165 in file "rc522.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  addr            1    wreg     unsigned char 
  8612 ;;  mask            1    9[COMRAM] unsigned char 
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;  addr            1   11[COMRAM] unsigned char 
  8615 ;;  tmp             1   10[COMRAM] unsigned char 
  8616 ;; Return value:  Size  Location     Type
  8617 ;;                  1    wreg      void 
  8618 ;; Registers used:
  8619 ;;		wreg, status,2, status,0, cstack
  8620 ;; Tracked objects:
  8621 ;;		On entry : 0/0
  8622 ;;		On exit  : 0/0
  8623 ;;		Unchanged: 0/0
  8624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8625 ;;      Params:         1       0       0       0       0       0       0       0       0
  8626 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8627 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8628 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8629 ;;Total ram usage:        3 bytes
  8630 ;; Hardware stack levels used: 1
  8631 ;; Hardware stack levels required when called: 1
  8632 ;; This function calls:
  8633 ;;		_MFRC522_Rd2
  8634 ;;		_MFRC522_Wr2
  8635 ;; This function is called by:
  8636 ;;		_MFRC522_AntennaOff2
  8637 ;;		_MFRC522_ToCard2
  8638 ;;		_MFRC522_CRC2
  8639 ;;		_MFRC522_Halt2
  8640 ;;		_MFRC522_AntiColl2
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           	psect	text51
  8645  003842                     __ptext51:
  8646                           	callstack 0
  8647  003842                     _MFRC522_Clear_Bit2:
  8648                           	callstack 26
  8649                           
  8650                           ;incstack = 0
  8651                           ;MFRC522_Clear_Bit2@addr stored from wreg
  8652  003842  6E0C               	movwf	MFRC522_Clear_Bit2@addr^0,c
  8653  003844                     
  8654                           ;rc522.c: 168:     tmp = MFRC522_Rd2(addr) ;
  8655  003844  500C               	movf	MFRC522_Clear_Bit2@addr^0,w,c
  8656  003846  EC84  F013         	call	_MFRC522_Rd2
  8657  00384A  6E0B               	movwf	MFRC522_Clear_Bit2@tmp^0,c
  8658  00384C                     
  8659                           ;rc522.c: 169:     MFRC522_Wr2(addr, tmp&~mask);
  8660  00384C  500A               	movf	MFRC522_Clear_Bit2@mask^0,w,c
  8661  00384E  0AFF               	xorlw	255
  8662  003850  140B               	andwf	MFRC522_Clear_Bit2@tmp^0,w,c
  8663  003852  6E01               	movwf	MFRC522_Wr2@value^0,c
  8664  003854  500C               	movf	MFRC522_Clear_Bit2@addr^0,w,c
  8665  003856  EC83  F017         	call	_MFRC522_Wr2
  8666  00385A  0012               	return		;funcret
  8667  00385C                     __end_of_MFRC522_Clear_Bit2:
  8668                           	callstack 0
  8669                           
  8670 ;; *************** function _MFRC522_Wr2 *****************
  8671 ;; Defined at:
  8672 ;;		line 108 in file "rc522.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;  address         1    wreg     unsigned char 
  8675 ;;  value           1    0[COMRAM] unsigned char 
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;  address         1    2[COMRAM] unsigned char 
  8678 ;;  i               1    4[COMRAM] unsigned char 
  8679 ;;  ucAddr          1    3[COMRAM] unsigned char 
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  1    wreg      void 
  8682 ;; Registers used:
  8683 ;;		wreg, status,2, status,0
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8689 ;;      Params:         1       0       0       0       0       0       0       0       0
  8690 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8691 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8692 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8693 ;;Total ram usage:        5 bytes
  8694 ;; Hardware stack levels used: 1
  8695 ;; This function calls:
  8696 ;;		Nothing
  8697 ;; This function is called by:
  8698 ;;		_MFRC522_Clear_Bit2
  8699 ;;		_MFRC522_Set_Bit2
  8700 ;;		_MFRC522_Reset
  8701 ;;		_MFRC522_Init
  8702 ;;		_MFRC522_ToCard2
  8703 ;;		_MFRC522_Request2
  8704 ;;		_MFRC522_CRC2
  8705 ;;		_MFRC522_AntiColl2
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709                           	psect	text52
  8710  002F06                     __ptext52:
  8711                           	callstack 0
  8712  002F06                     _MFRC522_Wr2:
  8713                           	callstack 28
  8714                           
  8715                           ;incstack = 0
  8716                           ;MFRC522_Wr2@address stored from wreg
  8717  002F06  6E03               	movwf	MFRC522_Wr2@address^0,c
  8718  002F08                     
  8719                           ;rc522.c: 108: void MFRC522_Wr2(unsigned char address, unsigned char value);rc522.c: 109
      +                          : {;rc522.c: 110:     unsigned char i, ucAddr;;rc522.c: 111:     LATDbits.LD1 = 0;
  8720  002F08  928C               	bcf	140,1,c	;volatile
  8721                           
  8722                           ;rc522.c: 112:     LATAbits.LA1 = 0;
  8723  002F0A  9289               	bcf	137,1,c	;volatile
  8724  002F0C                     
  8725                           ;rc522.c: 113:     ucAddr = ((address << 1) & 0x7E);
  8726  002F0C  5003               	movf	MFRC522_Wr2@address^0,w,c
  8727  002F0E  2403               	addwf	MFRC522_Wr2@address^0,w,c
  8728  002F10  0B7E               	andlw	126
  8729  002F12  6E04               	movwf	MFRC522_Wr2@ucAddr^0,c
  8730  002F14                     
  8731                           ;rc522.c: 115:     for(i=8; i>0; i--)
  8732  002F14  0E08               	movlw	8
  8733  002F16  6E05               	movwf	MFRC522_Wr2@i^0,c
  8734  002F18                     l3514:
  8735                           
  8736                           ;rc522.c: 116:     {;rc522.c: 117:         LATDbits.LD3 = ((ucAddr&0x80) == 0x80);
  8737  002F18  BE04               	btfsc	MFRC522_Wr2@ucAddr^0,7,c
  8738  002F1A  EF91  F017         	goto	u2991
  8739  002F1E  EF95  F017         	goto	u2990
  8740  002F22                     u2991:
  8741  002F22  6A02               	clrf	??_MFRC522_Wr2^0,c
  8742  002F24  2A02               	incf	??_MFRC522_Wr2^0,f,c
  8743  002F26  EF96  F017         	goto	u3008
  8744  002F2A                     u2990:
  8745  002F2A  6A02               	clrf	??_MFRC522_Wr2^0,c
  8746  002F2C                     u3008:
  8747  002F2C  4602               	rlncf	??_MFRC522_Wr2^0,f,c
  8748  002F2E  4602               	rlncf	??_MFRC522_Wr2^0,f,c
  8749  002F30  4602               	rlncf	??_MFRC522_Wr2^0,f,c
  8750  002F32  508C               	movf	140,w,c	;volatile
  8751  002F34  1802               	xorwf	??_MFRC522_Wr2^0,w,c
  8752  002F36  0BF7               	andlw	-9
  8753  002F38  1802               	xorwf	??_MFRC522_Wr2^0,w,c
  8754  002F3A  6E8C               	movwf	140,c	;volatile
  8755  002F3C                     
  8756                           ;rc522.c: 118:         LATDbits.LD1 = 1;
  8757  002F3C  828C               	bsf	140,1,c	;volatile
  8758                           
  8759                           ;rc522.c: 119:         ucAddr <<= 1;
  8760  002F3E  90D8               	bcf	status,0,c
  8761  002F40  3604               	rlcf	MFRC522_Wr2@ucAddr^0,f,c
  8762  002F42                     
  8763                           ;rc522.c: 120:         LATDbits.LD1 = 0;
  8764  002F42  928C               	bcf	140,1,c	;volatile
  8765  002F44                     
  8766                           ;rc522.c: 121:     }
  8767  002F44  0605               	decf	MFRC522_Wr2@i^0,f,c
  8768  002F46  5005               	movf	MFRC522_Wr2@i^0,w,c
  8769  002F48  A4D8               	btfss	status,2,c
  8770  002F4A  EFA9  F017         	goto	u3011
  8771  002F4E  EFAB  F017         	goto	u3010
  8772  002F52                     u3011:
  8773  002F52  EF8C  F017         	goto	l3514
  8774  002F56                     u3010:
  8775  002F56                     
  8776                           ;rc522.c: 122:     for(i=8; i>0; i--)
  8777  002F56  0E08               	movlw	8
  8778  002F58  6E05               	movwf	MFRC522_Wr2@i^0,c
  8779  002F5A                     l3528:
  8780                           
  8781                           ;rc522.c: 123:     {;rc522.c: 124:         LATDbits.LD3 = ((value&0x80) == 0x80);
  8782  002F5A  BE01               	btfsc	MFRC522_Wr2@value^0,7,c
  8783  002F5C  EFB2  F017         	goto	u3021
  8784  002F60  EFB6  F017         	goto	u3020
  8785  002F64                     u3021:
  8786  002F64  6A02               	clrf	??_MFRC522_Wr2^0,c
  8787  002F66  2A02               	incf	??_MFRC522_Wr2^0,f,c
  8788  002F68  EFB7  F017         	goto	u3038
  8789  002F6C                     u3020:
  8790  002F6C  6A02               	clrf	??_MFRC522_Wr2^0,c
  8791  002F6E                     u3038:
  8792  002F6E  4602               	rlncf	??_MFRC522_Wr2^0,f,c
  8793  002F70  4602               	rlncf	??_MFRC522_Wr2^0,f,c
  8794  002F72  4602               	rlncf	??_MFRC522_Wr2^0,f,c
  8795  002F74  508C               	movf	140,w,c	;volatile
  8796  002F76  1802               	xorwf	??_MFRC522_Wr2^0,w,c
  8797  002F78  0BF7               	andlw	-9
  8798  002F7A  1802               	xorwf	??_MFRC522_Wr2^0,w,c
  8799  002F7C  6E8C               	movwf	140,c	;volatile
  8800  002F7E                     
  8801                           ;rc522.c: 125:         LATDbits.LD1 = 1;
  8802  002F7E  828C               	bsf	140,1,c	;volatile
  8803                           
  8804                           ;rc522.c: 126:         value <<= 1;
  8805  002F80  90D8               	bcf	status,0,c
  8806  002F82  3601               	rlcf	MFRC522_Wr2@value^0,f,c
  8807  002F84                     
  8808                           ;rc522.c: 127:         LATDbits.LD1 = 0;
  8809  002F84  928C               	bcf	140,1,c	;volatile
  8810  002F86                     
  8811                           ;rc522.c: 128:     }
  8812  002F86  0605               	decf	MFRC522_Wr2@i^0,f,c
  8813  002F88  5005               	movf	MFRC522_Wr2@i^0,w,c
  8814  002F8A  A4D8               	btfss	status,2,c
  8815  002F8C  EFCA  F017         	goto	u3041
  8816  002F90  EFCC  F017         	goto	u3040
  8817  002F94                     u3041:
  8818  002F94  EFAD  F017         	goto	l3528
  8819  002F98                     u3040:
  8820  002F98                     
  8821                           ;rc522.c: 129:     LATAbits.LA1 = 1;
  8822  002F98  8289               	bsf	137,1,c	;volatile
  8823                           
  8824                           ;rc522.c: 130:     LATDbits.LD1 = 1;
  8825  002F9A  828C               	bsf	140,1,c	;volatile
  8826  002F9C  0012               	return		;funcret
  8827  002F9E                     __end_of_MFRC522_Wr2:
  8828                           	callstack 0
  8829                           
  8830 ;; *************** function _MFRC522_Rd2 *****************
  8831 ;; Defined at:
  8832 ;;		line 29 in file "rc522.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;  address         1    wreg     unsigned char 
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;  address         1    2[COMRAM] unsigned char 
  8837 ;;  i               2    7[COMRAM] unsigned int 
  8838 ;;  ucResult        2    5[COMRAM] unsigned int 
  8839 ;;  ucAddr          2    3[COMRAM] unsigned int 
  8840 ;; Return value:  Size  Location     Type
  8841 ;;                  1    wreg      unsigned char 
  8842 ;; Registers used:
  8843 ;;		wreg, status,2, status,0
  8844 ;; Tracked objects:
  8845 ;;		On entry : 0/0
  8846 ;;		On exit  : 0/0
  8847 ;;		Unchanged: 0/0
  8848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8849 ;;      Params:         0       0       0       0       0       0       0       0       0
  8850 ;;      Locals:         7       0       0       0       0       0       0       0       0
  8851 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8852 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8853 ;;Total ram usage:        9 bytes
  8854 ;; Hardware stack levels used: 1
  8855 ;; This function calls:
  8856 ;;		Nothing
  8857 ;; This function is called by:
  8858 ;;		_MFRC522_Clear_Bit2
  8859 ;;		_MFRC522_Set_Bit2
  8860 ;;		_MFRC522_AntennaOn2
  8861 ;;		_MFRC522_ToCard2
  8862 ;;		_MFRC522_CRC2
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text53
  8867  002708                     __ptext53:
  8868                           	callstack 0
  8869  002708                     _MFRC522_Rd2:
  8870                           	callstack 26
  8871                           
  8872                           ;incstack = 0
  8873                           ;MFRC522_Rd2@address stored from wreg
  8874  002708  6E03               	movwf	MFRC522_Rd2@address^0,c
  8875  00270A                     
  8876                           ;rc522.c: 29: unsigned char MFRC522_Rd2(unsigned char address);rc522.c: 30: {;rc522.c: 3
      +                          1:     unsigned int i, ucAddr;;rc522.c: 32:     unsigned int ucResult = 0;
  8877  00270A  0E00               	movlw	0
  8878  00270C  6E07               	movwf	(MFRC522_Rd2@ucResult+1)^0,c
  8879  00270E  0E00               	movlw	0
  8880  002710  6E06               	movwf	MFRC522_Rd2@ucResult^0,c
  8881  002712                     
  8882                           ;rc522.c: 33:     LATDbits.LD1 = 0;
  8883  002712  928C               	bcf	140,1,c	;volatile
  8884  002714                     
  8885                           ;rc522.c: 34:     LATAbits.LA1 = 0;
  8886  002714  9289               	bcf	137,1,c	;volatile
  8887  002716                     
  8888                           ;rc522.c: 35:     ucAddr = ((address << 1) & 0x7E) | 0x80;
  8889  002716  5003               	movf	MFRC522_Rd2@address^0,w,c
  8890  002718  2403               	addwf	MFRC522_Rd2@address^0,w,c
  8891  00271A  0B7E               	andlw	126
  8892  00271C  6E01               	movwf	??_MFRC522_Rd2^0,c
  8893  00271E  6A02               	clrf	(??_MFRC522_Rd2+1)^0,c
  8894  002720  0E80               	movlw	128
  8895  002722  1001               	iorwf	??_MFRC522_Rd2^0,w,c
  8896  002724  6E04               	movwf	MFRC522_Rd2@ucAddr^0,c
  8897  002726  5002               	movf	(??_MFRC522_Rd2+1)^0,w,c
  8898  002728  6E05               	movwf	(MFRC522_Rd2@ucAddr+1)^0,c
  8899  00272A                     
  8900                           ;rc522.c: 37:     for(i=8; i>0; i--)
  8901  00272A  0E00               	movlw	0
  8902  00272C  6E09               	movwf	(MFRC522_Rd2@i+1)^0,c
  8903  00272E  0E08               	movlw	8
  8904  002730  6E08               	movwf	MFRC522_Rd2@i^0,c
  8905  002732                     l3400:
  8906                           
  8907                           ;rc522.c: 38:     {;rc522.c: 39:         LATDbits.LD3 = ((ucAddr & 0x80) == 0x80);
  8908  002732  BE04               	btfsc	MFRC522_Rd2@ucAddr^0,7,c
  8909  002734  EF9E  F013         	goto	u2831
  8910  002738  EFA2  F013         	goto	u2830
  8911  00273C                     u2831:
  8912  00273C  6A01               	clrf	??_MFRC522_Rd2^0,c
  8913  00273E  2A01               	incf	??_MFRC522_Rd2^0,f,c
  8914  002740  EFA3  F013         	goto	u2848
  8915  002744                     u2830:
  8916  002744  6A01               	clrf	??_MFRC522_Rd2^0,c
  8917  002746                     u2848:
  8918  002746  4601               	rlncf	??_MFRC522_Rd2^0,f,c
  8919  002748  4601               	rlncf	??_MFRC522_Rd2^0,f,c
  8920  00274A  4601               	rlncf	??_MFRC522_Rd2^0,f,c
  8921  00274C  508C               	movf	140,w,c	;volatile
  8922  00274E  1801               	xorwf	??_MFRC522_Rd2^0,w,c
  8923  002750  0BF7               	andlw	-9
  8924  002752  1801               	xorwf	??_MFRC522_Rd2^0,w,c
  8925  002754  6E8C               	movwf	140,c	;volatile
  8926  002756                     
  8927                           ;rc522.c: 40:         LATDbits.LD1 = 1;
  8928  002756  828C               	bsf	140,1,c	;volatile
  8929  002758                     
  8930                           ;rc522.c: 41:         ucAddr <<= 1;
  8931  002758  90D8               	bcf	status,0,c
  8932  00275A  3604               	rlcf	MFRC522_Rd2@ucAddr^0,f,c
  8933  00275C  3605               	rlcf	(MFRC522_Rd2@ucAddr+1)^0,f,c
  8934  00275E                     
  8935                           ;rc522.c: 42:         LATDbits.LD1 = 0;
  8936  00275E  928C               	bcf	140,1,c	;volatile
  8937  002760                     
  8938                           ;rc522.c: 43:     }
  8939  002760  0608               	decf	MFRC522_Rd2@i^0,f,c
  8940  002762  A0D8               	btfss	status,0,c
  8941  002764  0609               	decf	(MFRC522_Rd2@i+1)^0,f,c
  8942  002766  5008               	movf	MFRC522_Rd2@i^0,w,c
  8943  002768  1009               	iorwf	(MFRC522_Rd2@i+1)^0,w,c
  8944  00276A  A4D8               	btfss	status,2,c
  8945  00276C  EFBA  F013         	goto	u2851
  8946  002770  EFBC  F013         	goto	u2850
  8947  002774                     u2851:
  8948  002774  EF99  F013         	goto	l3400
  8949  002778                     u2850:
  8950  002778                     
  8951                           ;rc522.c: 44:     for(i=8; i>0; i--)
  8952  002778  0E00               	movlw	0
  8953  00277A  6E09               	movwf	(MFRC522_Rd2@i+1)^0,c
  8954  00277C  0E08               	movlw	8
  8955  00277E  6E08               	movwf	MFRC522_Rd2@i^0,c
  8956  002780                     l282:
  8957                           
  8958                           ;rc522.c: 45:     {;rc522.c: 46:         LATDbits.LD1 = 1;
  8959  002780  828C               	bsf	140,1,c	;volatile
  8960  002782                     
  8961                           ;rc522.c: 47:         ucResult <<= 1;
  8962  002782  90D8               	bcf	status,0,c
  8963  002784  3606               	rlcf	MFRC522_Rd2@ucResult^0,f,c
  8964  002786  3607               	rlcf	(MFRC522_Rd2@ucResult+1)^0,f,c
  8965  002788                     
  8966                           ;rc522.c: 48:         ucResult |= (short)PORTDbits.RD2;
  8967  002788  B483               	btfsc	131,2,c	;volatile
  8968  00278A  EFC9  F013         	goto	u2861
  8969  00278E  EFCD  F013         	goto	u2860
  8970  002792                     u2861:
  8971  002792  6A01               	clrf	??_MFRC522_Rd2^0,c
  8972  002794  2A01               	incf	??_MFRC522_Rd2^0,f,c
  8973  002796  EFCE  F013         	goto	u2868
  8974  00279A                     u2860:
  8975  00279A  6A01               	clrf	??_MFRC522_Rd2^0,c
  8976  00279C                     u2868:
  8977  00279C  5001               	movf	??_MFRC522_Rd2^0,w,c
  8978  00279E  1206               	iorwf	MFRC522_Rd2@ucResult^0,f,c
  8979  0027A0                     
  8980                           ;rc522.c: 49:         LATDbits.LD1 = 0;
  8981  0027A0  928C               	bcf	140,1,c	;volatile
  8982  0027A2                     
  8983                           ;rc522.c: 50:     }
  8984  0027A2  0608               	decf	MFRC522_Rd2@i^0,f,c
  8985  0027A4  A0D8               	btfss	status,0,c
  8986  0027A6  0609               	decf	(MFRC522_Rd2@i+1)^0,f,c
  8987  0027A8  5008               	movf	MFRC522_Rd2@i^0,w,c
  8988  0027AA  1009               	iorwf	(MFRC522_Rd2@i+1)^0,w,c
  8989  0027AC  A4D8               	btfss	status,2,c
  8990  0027AE  EFDB  F013         	goto	u2871
  8991  0027B2  EFDD  F013         	goto	u2870
  8992  0027B6                     u2871:
  8993  0027B6  EFC0  F013         	goto	l282
  8994  0027BA                     u2870:
  8995  0027BA                     
  8996                           ;rc522.c: 51:     LATAbits.LA1 = 1;
  8997  0027BA  8289               	bsf	137,1,c	;volatile
  8998                           
  8999                           ;rc522.c: 52:     LATDbits.LD1 = 1;
  9000  0027BC  828C               	bsf	140,1,c	;volatile
  9001  0027BE                     
  9002                           ;rc522.c: 53:     return ucResult;
  9003  0027BE  5006               	movf	MFRC522_Rd2@ucResult^0,w,c
  9004  0027C0  0012               	return		;funcret
  9005  0027C2                     __end_of_MFRC522_Rd2:
  9006                           	callstack 0
  9007                           
  9008 ;; *************** function _MFRC522_Halt *****************
  9009 ;; Defined at:
  9010 ;;		line 770 in file "rc522.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;		None
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;  buff            4   31[COMRAM] unsigned char [4]
  9015 ;;  unLen           2   35[COMRAM] unsigned int 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  1    wreg      void 
  9018 ;; Registers used:
  9019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9025 ;;      Params:         0       0       0       0       0       0       0       0       0
  9026 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9027 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9028 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9029 ;;Total ram usage:        6 bytes
  9030 ;; Hardware stack levels used: 1
  9031 ;; Hardware stack levels required when called: 3
  9032 ;; This function calls:
  9033 ;;		_MFRC522_CRC
  9034 ;;		_MFRC522_Clear_Bit
  9035 ;;		_MFRC522_ToCard
  9036 ;; This function is called by:
  9037 ;;		_main
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text54
  9042  00342C                     __ptext54:
  9043                           	callstack 0
  9044  00342C                     _MFRC522_Halt:
  9045                           	callstack 27
  9046  00342C                     
  9047                           ;rc522.c: 772:     unsigned unLen;;rc522.c: 773:     char buff[4];;rc522.c: 774:     buf
      +                          f[0] = 0x50;
  9048  00342C  0E50               	movlw	80
  9049  00342E  6E20               	movwf	MFRC522_Halt@buff^0,c
  9050                           
  9051                           ;rc522.c: 775:     buff[1] = 0;
  9052  003430  0E00               	movlw	0
  9053  003432  6E21               	movwf	(MFRC522_Halt@buff+1)^0,c
  9054  003434                     
  9055                           ;rc522.c: 776:     MFRC522_CRC(buff, 2, &buff[2]);
  9056  003434  0E20               	movlw	low MFRC522_Halt@buff
  9057  003436  6E0D               	movwf	MFRC522_CRC@dataIn^0,c
  9058  003438  0E00               	movlw	high MFRC522_Halt@buff
  9059  00343A  6E0E               	movwf	(MFRC522_CRC@dataIn+1)^0,c
  9060  00343C  0E02               	movlw	2
  9061  00343E  6E0F               	movwf	MFRC522_CRC@length^0,c
  9062  003440  0E22               	movlw	low (MFRC522_Halt@buff+2)
  9063  003442  6E10               	movwf	MFRC522_CRC@dataOut^0,c
  9064  003444  0E00               	movlw	high (MFRC522_Halt@buff+2)
  9065  003446  6E11               	movwf	(MFRC522_CRC@dataOut+1)^0,c
  9066  003448  EC99  F016         	call	_MFRC522_CRC	;wreg free
  9067  00344C                     
  9068                           ;rc522.c: 777:     MFRC522_Clear_Bit(0x08, 0x80);
  9069  00344C  0E80               	movlw	128
  9070  00344E  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  9071  003450  0E08               	movlw	8
  9072  003452  EC2E  F01C         	call	_MFRC522_Clear_Bit
  9073  003456                     
  9074                           ;rc522.c: 778:     MFRC522_ToCard(0x0C, buff, 4, buff, &unLen);
  9075  003456  0E20               	movlw	low MFRC522_Halt@buff
  9076  003458  6E0D               	movwf	MFRC522_ToCard@sendData^0,c
  9077  00345A  0E00               	movlw	high MFRC522_Halt@buff
  9078  00345C  6E0E               	movwf	(MFRC522_ToCard@sendData+1)^0,c
  9079  00345E  0E04               	movlw	4
  9080  003460  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
  9081  003462  0E20               	movlw	low MFRC522_Halt@buff
  9082  003464  6E10               	movwf	MFRC522_ToCard@backData^0,c
  9083  003466  0E00               	movlw	high MFRC522_Halt@buff
  9084  003468  6E11               	movwf	(MFRC522_ToCard@backData+1)^0,c
  9085  00346A  0E24               	movlw	low MFRC522_Halt@unLen
  9086  00346C  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  9087  00346E  0E00               	movlw	high MFRC522_Halt@unLen
  9088  003470  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  9089  003472  0E0C               	movlw	12
  9090  003474  ECE6  F00D         	call	_MFRC522_ToCard
  9091  003478                     
  9092                           ;rc522.c: 779:     MFRC522_Clear_Bit(0x08, 0x08);
  9093  003478  0E08               	movlw	8
  9094  00347A  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  9095  00347C  0E08               	movlw	8
  9096  00347E  EC2E  F01C         	call	_MFRC522_Clear_Bit
  9097  003482  0012               	return		;funcret
  9098  003484                     __end_of_MFRC522_Halt:
  9099                           	callstack 0
  9100                           
  9101 ;; *************** function _MFRC522_ToCard *****************
  9102 ;; Defined at:
  9103 ;;		line 314 in file "rc522.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;  command         1    wreg     unsigned char 
  9106 ;;  sendData        2   12[COMRAM] PTR unsigned char 
  9107 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), UID_1(20), TagType1(1), 
  9108 ;;  sendLen         1   14[COMRAM] unsigned char 
  9109 ;;  backData        2   15[COMRAM] PTR unsigned char 
  9110 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), UID_1(20), TagType1(1), 
  9111 ;;  backLen         2   17[COMRAM] PTR unsigned int 
  9112 ;;		 -> MFRC522_AntiColl@unLen(2), MFRC522_Halt@unLen(2), MFRC522_SelectTag@recvBits(2), MFRC522_Request@backBits(2), 
  9113 ;; Auto vars:     Size  Location     Type
  9114 ;;  command         1   27[COMRAM] unsigned char 
  9115 ;;  i               2   28[COMRAM] unsigned int 
  9116 ;;  n               1   30[COMRAM] unsigned char 
  9117 ;;  irqEn           1   26[COMRAM] unsigned char 
  9118 ;;  lastBits        1   25[COMRAM] unsigned char 
  9119 ;;  _status         1   24[COMRAM] unsigned char 
  9120 ;;  waitIRq         1   23[COMRAM] unsigned char 
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  1    wreg      unsigned char 
  9123 ;; Registers used:
  9124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/0
  9127 ;;		On exit  : 0/0
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9130 ;;      Params:         7       0       0       0       0       0       0       0       0
  9131 ;;      Locals:         8       0       0       0       0       0       0       0       0
  9132 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9133 ;;      Totals:        19       0       0       0       0       0       0       0       0
  9134 ;;Total ram usage:       19 bytes
  9135 ;; Hardware stack levels used: 1
  9136 ;; Hardware stack levels required when called: 2
  9137 ;; This function calls:
  9138 ;;		_MFRC522_Clear_Bit
  9139 ;;		_MFRC522_Rd
  9140 ;;		_MFRC522_Set_Bit
  9141 ;;		_MFRC522_Wr
  9142 ;; This function is called by:
  9143 ;;		_MFRC522_Request
  9144 ;;		_MFRC522_Halt
  9145 ;;		_MFRC522_AntiColl
  9146 ;;		_MFRC522_SelectTag
  9147 ;; This function uses a non-reentrant model
  9148 ;;
  9149                           
  9150                           	psect	text55
  9151  001BCC                     __ptext55:
  9152                           	callstack 0
  9153  001BCC                     _MFRC522_ToCard:
  9154                           	callstack 26
  9155                           
  9156                           ;incstack = 0
  9157                           ;MFRC522_ToCard@command stored from wreg
  9158  001BCC  6E1C               	movwf	MFRC522_ToCard@command^0,c
  9159  001BCE                     
  9160                           ;rc522.c: 314: char MFRC522_ToCard(char command, char *sendData, char sendLen, char *bac
      +                          kData, unsigned *backLen);rc522.c: 315: {;rc522.c: 316:     char _status = 2;
  9161  001BCE  0E02               	movlw	2
  9162  001BD0  6E19               	movwf	MFRC522_ToCard@_status^0,c
  9163                           
  9164                           ;rc522.c: 317:     char irqEn = 0x00;
  9165  001BD2  0E00               	movlw	0
  9166  001BD4  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
  9167                           
  9168                           ;rc522.c: 318:     char waitIRq = 0x00;
  9169  001BD6  0E00               	movlw	0
  9170  001BD8  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
  9171                           
  9172                           ;rc522.c: 319:     char lastBits;;rc522.c: 320:     char n;;rc522.c: 321:     unsigned i
      +                          ;;rc522.c: 323:     switch(command)
  9173  001BDA  EFFB  F00D         	goto	l3738
  9174  001BDE                     l3732:
  9175                           
  9176                           ;rc522.c: 326:             irqEn = 0x12;
  9177  001BDE  0E12               	movlw	18
  9178  001BE0  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
  9179                           
  9180                           ;rc522.c: 327:             waitIRq = 0x10;
  9181  001BE2  0E10               	movlw	16
  9182  001BE4  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
  9183                           
  9184                           ;rc522.c: 328:             break;
  9185  001BE6  EF10  F00E         	goto	l3740
  9186  001BEA                     l3734:
  9187                           
  9188                           ;rc522.c: 331:             irqEn = 0x77;
  9189  001BEA  0E77               	movlw	119
  9190  001BEC  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
  9191                           
  9192                           ;rc522.c: 332:             waitIRq = 0x30;
  9193  001BEE  0E30               	movlw	48
  9194  001BF0  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
  9195                           
  9196                           ;rc522.c: 333:             break;
  9197  001BF2  EF10  F00E         	goto	l3740
  9198  001BF6                     l3738:
  9199  001BF6  501C               	movf	MFRC522_ToCard@command^0,w,c
  9200  001BF8  6E14               	movwf	??_MFRC522_ToCard^0,c
  9201  001BFA  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
  9202                           
  9203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9204                           ; Switch size 1, requested type "simple"
  9205                           ; Number of cases is 1, Range of values is 0 to 0
  9206                           ; switch strategies available:
  9207                           ; Name         Instructions Cycles
  9208                           ; simple_byte            4     3 (average)
  9209                           ;	Chosen strategy is simple_byte
  9210  001BFC  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  9211  001BFE  0A00               	xorlw	0	; case 0
  9212  001C00  B4D8               	btfsc	status,2,c
  9213  001C02  EF05  F00E         	goto	l5230
  9214  001C06  EF10  F00E         	goto	l3740
  9215  001C0A                     l5230:
  9216                           
  9217                           ; Switch size 1, requested type "simple"
  9218                           ; Number of cases is 2, Range of values is 12 to 14
  9219                           ; switch strategies available:
  9220                           ; Name         Instructions Cycles
  9221                           ; simple_byte            7     4 (average)
  9222                           ;	Chosen strategy is simple_byte
  9223  001C0A  5014               	movf	??_MFRC522_ToCard^0,w,c
  9224  001C0C  0A0C               	xorlw	12	; case 12
  9225  001C0E  B4D8               	btfsc	status,2,c
  9226  001C10  EFF5  F00D         	goto	l3734
  9227  001C14  0A02               	xorlw	2	; case 14
  9228  001C16  B4D8               	btfsc	status,2,c
  9229  001C18  EFEF  F00D         	goto	l3732
  9230  001C1C  EF10  F00E         	goto	l3740
  9231  001C20                     l3740:
  9232                           
  9233                           ;rc522.c: 338:     MFRC522_Wr(0x02, irqEn | 0x80);
  9234  001C20  501B               	movf	MFRC522_ToCard@irqEn^0,w,c
  9235  001C22  0980               	iorlw	128
  9236  001C24  6E01               	movwf	MFRC522_Wr@value^0,c
  9237  001C26  0E02               	movlw	2
  9238  001C28  ECCF  F017         	call	_MFRC522_Wr
  9239                           
  9240                           ;rc522.c: 339:     MFRC522_Clear_Bit(0x04, 0x80);
  9241  001C2C  0E80               	movlw	128
  9242  001C2E  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  9243  001C30  0E04               	movlw	4
  9244  001C32  EC2E  F01C         	call	_MFRC522_Clear_Bit
  9245                           
  9246                           ;rc522.c: 340:     MFRC522_Set_Bit(0x0A, 0x80);
  9247  001C36  0E80               	movlw	128
  9248  001C38  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  9249  001C3A  0E0A               	movlw	10
  9250  001C3C  EC53  F01C         	call	_MFRC522_Set_Bit
  9251                           
  9252                           ;rc522.c: 341:     MFRC522_Wr(0x01, 0x00);
  9253  001C40  0E00               	movlw	0
  9254  001C42  6E01               	movwf	MFRC522_Wr@value^0,c
  9255  001C44  0E01               	movlw	1
  9256  001C46  ECCF  F017         	call	_MFRC522_Wr
  9257  001C4A                     
  9258                           ;rc522.c: 343:     for(i=0; i<sendLen; i++)
  9259  001C4A  0E00               	movlw	0
  9260  001C4C  6E1E               	movwf	(MFRC522_ToCard@i+1)^0,c
  9261  001C4E  0E00               	movlw	0
  9262  001C50  6E1D               	movwf	MFRC522_ToCard@i^0,c
  9263  001C52  EF38  F00E         	goto	l3748
  9264  001C56                     l3744:
  9265                           
  9266                           ;rc522.c: 344:     {;rc522.c: 345:         MFRC522_Wr(0x09, sendData[i]);
  9267  001C56  501D               	movf	MFRC522_ToCard@i^0,w,c
  9268  001C58  240D               	addwf	MFRC522_ToCard@sendData^0,w,c
  9269  001C5A  6ED9               	movwf	fsr2l,c
  9270  001C5C  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
  9271  001C5E  200E               	addwfc	(MFRC522_ToCard@sendData+1)^0,w,c
  9272  001C60  6EDA               	movwf	fsr2h,c
  9273  001C62  50DF               	movf	indf2,w,c
  9274  001C64  6E01               	movwf	MFRC522_Wr@value^0,c
  9275  001C66  0E09               	movlw	9
  9276  001C68  ECCF  F017         	call	_MFRC522_Wr
  9277  001C6C                     
  9278                           ;rc522.c: 346:     }
  9279  001C6C  4A1D               	infsnz	MFRC522_ToCard@i^0,f,c
  9280  001C6E  2A1E               	incf	(MFRC522_ToCard@i+1)^0,f,c
  9281  001C70                     l3748:
  9282  001C70  500F               	movf	MFRC522_ToCard@sendLen^0,w,c
  9283  001C72  6E14               	movwf	??_MFRC522_ToCard^0,c
  9284  001C74  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
  9285  001C76  5014               	movf	??_MFRC522_ToCard^0,w,c
  9286  001C78  5C1D               	subwf	MFRC522_ToCard@i^0,w,c
  9287  001C7A  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  9288  001C7C  581E               	subwfb	(MFRC522_ToCard@i+1)^0,w,c
  9289  001C7E  A0D8               	btfss	status,0,c
  9290  001C80  EF44  F00E         	goto	u3331
  9291  001C84  EF46  F00E         	goto	u3330
  9292  001C88                     u3331:
  9293  001C88  EF2B  F00E         	goto	l3744
  9294  001C8C                     u3330:
  9295  001C8C                     
  9296                           ;rc522.c: 347:     MFRC522_Wr(0x01, command);
  9297  001C8C  C01C  F001         	movff	MFRC522_ToCard@command,MFRC522_Wr@value
  9298  001C90  0E01               	movlw	1
  9299  001C92  ECCF  F017         	call	_MFRC522_Wr
  9300  001C96                     
  9301                           ;rc522.c: 348:     if(command == 0x0C)
  9302  001C96  0E0C               	movlw	12
  9303  001C98  181C               	xorwf	MFRC522_ToCard@command^0,w,c
  9304  001C9A  A4D8               	btfss	status,2,c
  9305  001C9C  EF52  F00E         	goto	u3341
  9306  001CA0  EF54  F00E         	goto	u3340
  9307  001CA4                     u3341:
  9308  001CA4  EF59  F00E         	goto	l3756
  9309  001CA8                     u3340:
  9310  001CA8                     
  9311                           ;rc522.c: 349:     {;rc522.c: 350:         MFRC522_Set_Bit(0x0D, 0x80);
  9312  001CA8  0E80               	movlw	128
  9313  001CAA  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  9314  001CAC  0E0D               	movlw	13
  9315  001CAE  EC53  F01C         	call	_MFRC522_Set_Bit
  9316  001CB2                     l3756:
  9317                           
  9318                           ;rc522.c: 352:     i = 0xFFFF;
  9319  001CB2  681D               	setf	MFRC522_ToCard@i^0,c
  9320  001CB4  681E               	setf	(MFRC522_ToCard@i+1)^0,c
  9321  001CB6                     l366:
  9322                           
  9323                           ;rc522.c: 354:     {;rc522.c: 355:         n = MFRC522_Rd(0x04);
  9324  001CB6  0E04               	movlw	4
  9325  001CB8  ECE1  F013         	call	_MFRC522_Rd
  9326  001CBC  6E1F               	movwf	MFRC522_ToCard@n^0,c
  9327  001CBE                     
  9328                           ;rc522.c: 356:         i--;
  9329  001CBE  061D               	decf	MFRC522_ToCard@i^0,f,c
  9330  001CC0  A0D8               	btfss	status,0,c
  9331  001CC2  061E               	decf	(MFRC522_ToCard@i+1)^0,f,c
  9332  001CC4                     
  9333                           ;rc522.c: 357:     }while(i && !(n & 0x01) && !(n & waitIRq));
  9334  001CC4  501D               	movf	MFRC522_ToCard@i^0,w,c
  9335  001CC6  101E               	iorwf	(MFRC522_ToCard@i+1)^0,w,c
  9336  001CC8  B4D8               	btfsc	status,2,c
  9337  001CCA  EF69  F00E         	goto	u3351
  9338  001CCE  EF6B  F00E         	goto	u3350
  9339  001CD2                     u3351:
  9340  001CD2  EF7C  F00E         	goto	l3766
  9341  001CD6                     u3350:
  9342  001CD6  B01F               	btfsc	MFRC522_ToCard@n^0,0,c
  9343  001CD8  EF70  F00E         	goto	u3361
  9344  001CDC  EF72  F00E         	goto	u3360
  9345  001CE0                     u3361:
  9346  001CE0  EF7C  F00E         	goto	l3766
  9347  001CE4                     u3360:
  9348  001CE4  501F               	movf	MFRC522_ToCard@n^0,w,c
  9349  001CE6  1418               	andwf	MFRC522_ToCard@waitIRq^0,w,c
  9350  001CE8  0900               	iorlw	0
  9351  001CEA  B4D8               	btfsc	status,2,c
  9352  001CEC  EF7A  F00E         	goto	u3371
  9353  001CF0  EF7C  F00E         	goto	u3370
  9354  001CF4                     u3371:
  9355  001CF4  EF5B  F00E         	goto	l366
  9356  001CF8                     u3370:
  9357  001CF8                     l3766:
  9358                           
  9359                           ;rc522.c: 359:     MFRC522_Clear_Bit(0x0D, 0x80);
  9360  001CF8  0E80               	movlw	128
  9361  001CFA  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  9362  001CFC  0E0D               	movlw	13
  9363  001CFE  EC2E  F01C         	call	_MFRC522_Clear_Bit
  9364  001D02                     
  9365                           ;rc522.c: 360:     if(i != 0)
  9366  001D02  501D               	movf	MFRC522_ToCard@i^0,w,c
  9367  001D04  101E               	iorwf	(MFRC522_ToCard@i+1)^0,w,c
  9368  001D06  B4D8               	btfsc	status,2,c
  9369  001D08  EF88  F00E         	goto	u3381
  9370  001D0C  EF8A  F00E         	goto	u3380
  9371  001D10                     u3381:
  9372  001D10  EF2B  F00F         	goto	l370
  9373  001D14                     u3380:
  9374  001D14                     
  9375                           ;rc522.c: 361:     {;rc522.c: 362:         if(!(MFRC522_Rd(0x06) & 0x1B))
  9376  001D14  0E06               	movlw	6
  9377  001D16  ECE1  F013         	call	_MFRC522_Rd
  9378  001D1A  6E14               	movwf	??_MFRC522_ToCard^0,c
  9379  001D1C  0E1B               	movlw	27
  9380  001D1E  1614               	andwf	??_MFRC522_ToCard^0,f,c
  9381  001D20  A4D8               	btfss	status,2,c
  9382  001D22  EF95  F00E         	goto	u3391
  9383  001D26  EF97  F00E         	goto	u3390
  9384  001D2A                     u3391:
  9385  001D2A  EF29  F00F         	goto	l3804
  9386  001D2E                     u3390:
  9387  001D2E                     
  9388                           ;rc522.c: 363:         {;rc522.c: 364:             _status = 0;
  9389  001D2E  0E00               	movlw	0
  9390  001D30  6E19               	movwf	MFRC522_ToCard@_status^0,c
  9391  001D32                     
  9392                           ;rc522.c: 365:             if(n & irqEn & 0x01)
  9393  001D32  501F               	movf	MFRC522_ToCard@n^0,w,c
  9394  001D34  141B               	andwf	MFRC522_ToCard@irqEn^0,w,c
  9395  001D36  6E14               	movwf	??_MFRC522_ToCard^0,c
  9396  001D38  A014               	btfss	??_MFRC522_ToCard^0,0,c
  9397  001D3A  EFA1  F00E         	goto	u3401
  9398  001D3E  EFA3  F00E         	goto	u3400
  9399  001D42                     u3401:
  9400  001D42  EFA5  F00E         	goto	l3778
  9401  001D46                     u3400:
  9402  001D46                     
  9403                           ;rc522.c: 366:             {;rc522.c: 367:                 _status = 1;
  9404  001D46  0E01               	movlw	1
  9405  001D48  6E19               	movwf	MFRC522_ToCard@_status^0,c
  9406  001D4A                     l3778:
  9407                           
  9408                           ;rc522.c: 369:             if(command == 0x0C)
  9409  001D4A  0E0C               	movlw	12
  9410  001D4C  181C               	xorwf	MFRC522_ToCard@command^0,w,c
  9411  001D4E  A4D8               	btfss	status,2,c
  9412  001D50  EFAC  F00E         	goto	u3411
  9413  001D54  EFAE  F00E         	goto	u3410
  9414  001D58                     u3411:
  9415  001D58  EF2B  F00F         	goto	l370
  9416  001D5C                     u3410:
  9417  001D5C                     
  9418                           ;rc522.c: 370:             {;rc522.c: 371:                 n = MFRC522_Rd(0x0A);
  9419  001D5C  0E0A               	movlw	10
  9420  001D5E  ECE1  F013         	call	_MFRC522_Rd
  9421  001D62  6E1F               	movwf	MFRC522_ToCard@n^0,c
  9422                           
  9423                           ;rc522.c: 372:                 lastBits = MFRC522_Rd(0x0C) & 0x07;
  9424  001D64  0E0C               	movlw	12
  9425  001D66  ECE1  F013         	call	_MFRC522_Rd
  9426  001D6A  0B07               	andlw	7
  9427  001D6C  6E1A               	movwf	MFRC522_ToCard@lastBits^0,c
  9428  001D6E                     
  9429                           ;rc522.c: 373:                 if(lastBits)
  9430  001D6E  501A               	movf	MFRC522_ToCard@lastBits^0,w,c
  9431  001D70  B4D8               	btfsc	status,2,c
  9432  001D72  EFBD  F00E         	goto	u3421
  9433  001D76  EFBF  F00E         	goto	u3420
  9434  001D7A                     u3421:
  9435  001D7A  EFE1  F00E         	goto	l3786
  9436  001D7E                     u3420:
  9437  001D7E                     
  9438                           ;rc522.c: 374:                 {;rc522.c: 375:                     *backLen = (n-1) * 8 
      +                          + lastBits;
  9439  001D7E  0EF8               	movlw	248
  9440  001D80  6E14               	movwf	??_MFRC522_ToCard^0,c
  9441  001D82  0EFF               	movlw	255
  9442  001D84  6E15               	movwf	(??_MFRC522_ToCard+1)^0,c
  9443  001D86  501A               	movf	MFRC522_ToCard@lastBits^0,w,c
  9444  001D88  C01F  F016         	movff	MFRC522_ToCard@n,??_MFRC522_ToCard+2
  9445  001D8C  6A17               	clrf	(??_MFRC522_ToCard+3)^0,c
  9446  001D8E  90D8               	bcf	status,0,c
  9447  001D90  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  9448  001D92  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  9449  001D94  90D8               	bcf	status,0,c
  9450  001D96  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  9451  001D98  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  9452  001D9A  90D8               	bcf	status,0,c
  9453  001D9C  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  9454  001D9E  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  9455  001DA0  2616               	addwf	(??_MFRC522_ToCard+2)^0,f,c
  9456  001DA2  0E00               	movlw	0
  9457  001DA4  2217               	addwfc	(??_MFRC522_ToCard+3)^0,f,c
  9458  001DA6  5014               	movf	??_MFRC522_ToCard^0,w,c
  9459  001DA8  2616               	addwf	(??_MFRC522_ToCard+2)^0,f,c
  9460  001DAA  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  9461  001DAC  2217               	addwfc	(??_MFRC522_ToCard+3)^0,f,c
  9462  001DAE  C012  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  9463  001DB2  C013  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  9464  001DB6  C016  FFDE         	movff	??_MFRC522_ToCard+2,postinc2
  9465  001DBA  C017  FFDD         	movff	??_MFRC522_ToCard+3,postdec2
  9466                           
  9467                           ;rc522.c: 376:                 }
  9468  001DBE  EFEB  F00E         	goto	l3788
  9469  001DC2                     l3786:
  9470                           
  9471                           ;rc522.c: 378:                 {;rc522.c: 379:                     *backLen = n * 8;
  9472  001DC2  501F               	movf	MFRC522_ToCard@n^0,w,c
  9473  001DC4  0D08               	mullw	8
  9474  001DC6  C012  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  9475  001DCA  C013  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  9476  001DCE  CFF3 FFDE          	movff	prodl,postinc2
  9477  001DD2  CFF4 FFDD          	movff	prodh,postdec2
  9478  001DD6                     l3788:
  9479                           
  9480                           ;rc522.c: 381:                 if(n == 0)
  9481  001DD6  501F               	movf	MFRC522_ToCard@n^0,w,c
  9482  001DD8  A4D8               	btfss	status,2,c
  9483  001DDA  EFF1  F00E         	goto	u3431
  9484  001DDE  EFF3  F00E         	goto	u3430
  9485  001DE2                     u3431:
  9486  001DE2  EFF5  F00E         	goto	l3792
  9487  001DE6                     u3430:
  9488  001DE6                     
  9489                           ;rc522.c: 382:                 {;rc522.c: 383:                     n = 1;
  9490  001DE6  0E01               	movlw	1
  9491  001DE8  6E1F               	movwf	MFRC522_ToCard@n^0,c
  9492  001DEA                     l3792:
  9493                           
  9494                           ;rc522.c: 385:                 if(n > 16)
  9495  001DEA  0E10               	movlw	16
  9496  001DEC  641F               	cpfsgt	MFRC522_ToCard@n^0,c
  9497  001DEE  EFFB  F00E         	goto	u3441
  9498  001DF2  EFFD  F00E         	goto	u3440
  9499  001DF6                     u3441:
  9500  001DF6  EFFF  F00E         	goto	l377
  9501  001DFA                     u3440:
  9502  001DFA                     
  9503                           ;rc522.c: 386:                 {;rc522.c: 387:                     n = 16;
  9504  001DFA  0E10               	movlw	16
  9505  001DFC  6E1F               	movwf	MFRC522_ToCard@n^0,c
  9506  001DFE                     l377:
  9507                           
  9508                           ;rc522.c: 389:                 for(i=0; i<n; i++)
  9509  001DFE  0E00               	movlw	0
  9510  001E00  6E1E               	movwf	(MFRC522_ToCard@i+1)^0,c
  9511  001E02  0E00               	movlw	0
  9512  001E04  6E1D               	movwf	MFRC522_ToCard@i^0,c
  9513  001E06  EF11  F00F         	goto	l3800
  9514  001E0A                     l3796:
  9515                           
  9516                           ;rc522.c: 390:                 {;rc522.c: 391:                     backData[i] = MFRC522
      +                          _Rd(0x09);
  9517  001E0A  501D               	movf	MFRC522_ToCard@i^0,w,c
  9518  001E0C  2410               	addwf	MFRC522_ToCard@backData^0,w,c
  9519  001E0E  6ED9               	movwf	fsr2l,c
  9520  001E10  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
  9521  001E12  2011               	addwfc	(MFRC522_ToCard@backData+1)^0,w,c
  9522  001E14  6EDA               	movwf	fsr2h,c
  9523  001E16  0E09               	movlw	9
  9524  001E18  ECE1  F013         	call	_MFRC522_Rd
  9525  001E1C  6EDF               	movwf	indf2,c
  9526  001E1E                     
  9527                           ;rc522.c: 392:                 }
  9528  001E1E  4A1D               	infsnz	MFRC522_ToCard@i^0,f,c
  9529  001E20  2A1E               	incf	(MFRC522_ToCard@i+1)^0,f,c
  9530  001E22                     l3800:
  9531  001E22  501F               	movf	MFRC522_ToCard@n^0,w,c
  9532  001E24  6E14               	movwf	??_MFRC522_ToCard^0,c
  9533  001E26  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
  9534  001E28  5014               	movf	??_MFRC522_ToCard^0,w,c
  9535  001E2A  5C1D               	subwf	MFRC522_ToCard@i^0,w,c
  9536  001E2C  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  9537  001E2E  581E               	subwfb	(MFRC522_ToCard@i+1)^0,w,c
  9538  001E30  A0D8               	btfss	status,0,c
  9539  001E32  EF1D  F00F         	goto	u3451
  9540  001E36  EF1F  F00F         	goto	u3450
  9541  001E3A                     u3451:
  9542  001E3A  EF05  F00F         	goto	l3796
  9543  001E3E                     u3450:
  9544  001E3E                     
  9545                           ;rc522.c: 393:                 backData[i] = 0;
  9546  001E3E  501D               	movf	MFRC522_ToCard@i^0,w,c
  9547  001E40  2410               	addwf	MFRC522_ToCard@backData^0,w,c
  9548  001E42  6ED9               	movwf	fsr2l,c
  9549  001E44  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
  9550  001E46  2011               	addwfc	(MFRC522_ToCard@backData+1)^0,w,c
  9551  001E48  6EDA               	movwf	fsr2h,c
  9552  001E4A  0E00               	movlw	0
  9553  001E4C  6EDF               	movwf	indf2,c
  9554  001E4E  EF2B  F00F         	goto	l370
  9555  001E52                     l3804:
  9556                           
  9557                           ;rc522.c: 397:         {;rc522.c: 398:             _status = 2;
  9558  001E52  0E02               	movlw	2
  9559  001E54  6E19               	movwf	MFRC522_ToCard@_status^0,c
  9560  001E56                     l370:
  9561                           
  9562                           ;rc522.c: 401:     return _status;
  9563  001E56  5019               	movf	MFRC522_ToCard@_status^0,w,c
  9564  001E58  0012               	return		;funcret
  9565  001E5A                     __end_of_MFRC522_ToCard:
  9566                           	callstack 0
  9567                           
  9568 ;; *************** function _MFRC522_CRC *****************
  9569 ;; Defined at:
  9570 ;;		line 626 in file "rc522.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;  dataIn          2   12[COMRAM] PTR unsigned char 
  9573 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  9574 ;;  length          1   14[COMRAM] unsigned char 
  9575 ;;  dataOut         2   15[COMRAM] PTR unsigned char 
  9576 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  9577 ;; Auto vars:     Size  Location     Type
  9578 ;;  i               1   18[COMRAM] unsigned char 
  9579 ;;  n               1   17[COMRAM] unsigned char 
  9580 ;; Return value:  Size  Location     Type
  9581 ;;                  1    wreg      void 
  9582 ;; Registers used:
  9583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9584 ;; Tracked objects:
  9585 ;;		On entry : 0/0
  9586 ;;		On exit  : 0/0
  9587 ;;		Unchanged: 0/0
  9588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9589 ;;      Params:         5       0       0       0       0       0       0       0       0
  9590 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9592 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9593 ;;Total ram usage:        7 bytes
  9594 ;; Hardware stack levels used: 1
  9595 ;; Hardware stack levels required when called: 2
  9596 ;; This function calls:
  9597 ;;		_MFRC522_Clear_Bit
  9598 ;;		_MFRC522_Rd
  9599 ;;		_MFRC522_Set_Bit
  9600 ;;		_MFRC522_Wr
  9601 ;; This function is called by:
  9602 ;;		_MFRC522_Halt
  9603 ;;		_MFRC522_SelectTag
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           
  9607                           	psect	text56
  9608  002D32                     __ptext56:
  9609                           	callstack 0
  9610  002D32                     _MFRC522_CRC:
  9611                           	callstack 27
  9612  002D32                     
  9613                           ;rc522.c: 626: void MFRC522_CRC(char *dataIn, char length, char *dataOut);rc522.c: 627: 
      +                          {;rc522.c: 628:     char i, n;;rc522.c: 629:     MFRC522_Clear_Bit(0x05, 0x04);
  9614  002D32  0E04               	movlw	4
  9615  002D34  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  9616  002D36  0E05               	movlw	5
  9617  002D38  EC2E  F01C         	call	_MFRC522_Clear_Bit
  9618                           
  9619                           ;rc522.c: 630:     MFRC522_Set_Bit(0x0A, 0x80);
  9620  002D3C  0E80               	movlw	128
  9621  002D3E  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  9622  002D40  0E0A               	movlw	10
  9623  002D42  EC53  F01C         	call	_MFRC522_Set_Bit
  9624  002D46                     
  9625                           ;rc522.c: 631:     for(i=0; i<length; i++)
  9626  002D46  0E00               	movlw	0
  9627  002D48  6E13               	movwf	MFRC522_CRC@i^0,c
  9628  002D4A  EFB3  F016         	goto	l4226
  9629  002D4E                     l4220:
  9630                           
  9631                           ;rc522.c: 632:     {;rc522.c: 633:         MFRC522_Wr(0x09, *dataIn++);
  9632  002D4E  C00D  FFD9         	movff	MFRC522_CRC@dataIn,fsr2l
  9633  002D52  C00E  FFDA         	movff	MFRC522_CRC@dataIn+1,fsr2h
  9634  002D56  50DF               	movf	indf2,w,c
  9635  002D58  6E01               	movwf	MFRC522_Wr@value^0,c
  9636  002D5A  0E09               	movlw	9
  9637  002D5C  ECCF  F017         	call	_MFRC522_Wr
  9638  002D60  4A0D               	infsnz	MFRC522_CRC@dataIn^0,f,c
  9639  002D62  2A0E               	incf	(MFRC522_CRC@dataIn+1)^0,f,c
  9640  002D64                     
  9641                           ;rc522.c: 634:     }
  9642  002D64  2A13               	incf	MFRC522_CRC@i^0,f,c
  9643  002D66                     l4226:
  9644  002D66  500F               	movf	MFRC522_CRC@length^0,w,c
  9645  002D68  5C13               	subwf	MFRC522_CRC@i^0,w,c
  9646  002D6A  A0D8               	btfss	status,0,c
  9647  002D6C  EFBA  F016         	goto	u3931
  9648  002D70  EFBC  F016         	goto	u3930
  9649  002D74                     u3931:
  9650  002D74  EFA7  F016         	goto	l4220
  9651  002D78                     u3930:
  9652  002D78                     
  9653                           ;rc522.c: 635:     MFRC522_Wr(0x01, 0x03);
  9654  002D78  0E03               	movlw	3
  9655  002D7A  6E01               	movwf	MFRC522_Wr@value^0,c
  9656  002D7C  0E01               	movlw	1
  9657  002D7E  ECCF  F017         	call	_MFRC522_Wr
  9658  002D82                     
  9659                           ;rc522.c: 636:     i = 0xFF;
  9660  002D82  6813               	setf	MFRC522_CRC@i^0,c
  9661  002D84                     l462:
  9662                           
  9663                           ;rc522.c: 638:     {;rc522.c: 639:         n = MFRC522_Rd( 0x05 );
  9664  002D84  0E05               	movlw	5
  9665  002D86  ECE1  F013         	call	_MFRC522_Rd
  9666  002D8A  6E12               	movwf	MFRC522_CRC@n^0,c
  9667  002D8C                     
  9668                           ;rc522.c: 640:         i--;
  9669  002D8C  0613               	decf	MFRC522_CRC@i^0,f,c
  9670  002D8E                     
  9671                           ;rc522.c: 641:     }
  9672  002D8E  5013               	movf	MFRC522_CRC@i^0,w,c
  9673  002D90  B4D8               	btfsc	status,2,c
  9674  002D92  EFCD  F016         	goto	u3941
  9675  002D96  EFCF  F016         	goto	u3940
  9676  002D9A                     u3941:
  9677  002D9A  EFD6  F016         	goto	l4238
  9678  002D9E                     u3940:
  9679  002D9E  A412               	btfss	MFRC522_CRC@n^0,2,c
  9680  002DA0  EFD4  F016         	goto	u3951
  9681  002DA4  EFD6  F016         	goto	u3950
  9682  002DA8                     u3951:
  9683  002DA8  EFC2  F016         	goto	l462
  9684  002DAC                     u3950:
  9685  002DAC                     l4238:
  9686                           
  9687                           ;rc522.c: 643:     dataOut[0] = MFRC522_Rd(0x22);
  9688  002DAC  0E22               	movlw	34
  9689  002DAE  ECE1  F013         	call	_MFRC522_Rd
  9690  002DB2  C010  FFD9         	movff	MFRC522_CRC@dataOut,fsr2l
  9691  002DB6  C011  FFDA         	movff	MFRC522_CRC@dataOut+1,fsr2h
  9692  002DBA  6EDF               	movwf	indf2,c
  9693                           
  9694                           ;rc522.c: 644:     dataOut[1] = MFRC522_Rd(0x21);
  9695  002DBC  EE20 F001          	lfsr	2,1
  9696  002DC0  5010               	movf	MFRC522_CRC@dataOut^0,w,c
  9697  002DC2  26D9               	addwf	fsr2l,f,c
  9698  002DC4  5011               	movf	(MFRC522_CRC@dataOut+1)^0,w,c
  9699  002DC6  22DA               	addwfc	fsr2h,f,c
  9700  002DC8  0E21               	movlw	33
  9701  002DCA  ECE1  F013         	call	_MFRC522_Rd
  9702  002DCE  6EDF               	movwf	indf2,c
  9703  002DD0  0012               	return		;funcret
  9704  002DD2                     __end_of_MFRC522_CRC:
  9705                           	callstack 0
  9706                           
  9707 ;; *************** function _MFRC522_Set_Bit *****************
  9708 ;; Defined at:
  9709 ;;		line 180 in file "rc522.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;  addr            1    wreg     unsigned char 
  9712 ;;  mask            1    9[COMRAM] unsigned char 
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;  addr            1   11[COMRAM] unsigned char 
  9715 ;;  tmp             1   10[COMRAM] unsigned char 
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  1    wreg      void 
  9718 ;; Registers used:
  9719 ;;		wreg, status,2, status,0, cstack
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9725 ;;      Params:         1       0       0       0       0       0       0       0       0
  9726 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9728 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9729 ;;Total ram usage:        3 bytes
  9730 ;; Hardware stack levels used: 1
  9731 ;; Hardware stack levels required when called: 1
  9732 ;; This function calls:
  9733 ;;		_MFRC522_Rd
  9734 ;;		_MFRC522_Wr
  9735 ;; This function is called by:
  9736 ;;		_MFRC522_AntennaOn
  9737 ;;		_MFRC522_ToCard
  9738 ;;		_MFRC522_CRC
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           	psect	text57
  9743  0038A6                     __ptext57:
  9744                           	callstack 0
  9745  0038A6                     _MFRC522_Set_Bit:
  9746                           	callstack 26
  9747                           
  9748                           ;incstack = 0
  9749                           ;MFRC522_Set_Bit@addr stored from wreg
  9750  0038A6  6E0C               	movwf	MFRC522_Set_Bit@addr^0,c
  9751  0038A8                     
  9752                           ;rc522.c: 183:     tmp = MFRC522_Rd(addr);
  9753  0038A8  500C               	movf	MFRC522_Set_Bit@addr^0,w,c
  9754  0038AA  ECE1  F013         	call	_MFRC522_Rd
  9755  0038AE  6E0B               	movwf	MFRC522_Set_Bit@tmp^0,c
  9756  0038B0                     
  9757                           ;rc522.c: 184:     MFRC522_Wr(addr, tmp | mask);
  9758  0038B0  500B               	movf	MFRC522_Set_Bit@tmp^0,w,c
  9759  0038B2  100A               	iorwf	MFRC522_Set_Bit@mask^0,w,c
  9760  0038B4  6E01               	movwf	MFRC522_Wr@value^0,c
  9761  0038B6  500C               	movf	MFRC522_Set_Bit@addr^0,w,c
  9762  0038B8  ECCF  F017         	call	_MFRC522_Wr
  9763  0038BC  0012               	return		;funcret
  9764  0038BE                     __end_of_MFRC522_Set_Bit:
  9765                           	callstack 0
  9766                           
  9767 ;; *************** function _MFRC522_Clear_Bit *****************
  9768 ;; Defined at:
  9769 ;;		line 158 in file "rc522.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;  addr            1    wreg     unsigned char 
  9772 ;;  mask            1    9[COMRAM] unsigned char 
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;  addr            1   11[COMRAM] unsigned char 
  9775 ;;  tmp             1   10[COMRAM] unsigned char 
  9776 ;; Return value:  Size  Location     Type
  9777 ;;                  1    wreg      void 
  9778 ;; Registers used:
  9779 ;;		wreg, status,2, status,0, cstack
  9780 ;; Tracked objects:
  9781 ;;		On entry : 0/0
  9782 ;;		On exit  : 0/0
  9783 ;;		Unchanged: 0/0
  9784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9785 ;;      Params:         1       0       0       0       0       0       0       0       0
  9786 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9787 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9788 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9789 ;;Total ram usage:        3 bytes
  9790 ;; Hardware stack levels used: 1
  9791 ;; Hardware stack levels required when called: 1
  9792 ;; This function calls:
  9793 ;;		_MFRC522_Rd
  9794 ;;		_MFRC522_Wr
  9795 ;; This function is called by:
  9796 ;;		_MFRC522_AntennaOff
  9797 ;;		_MFRC522_ToCard
  9798 ;;		_MFRC522_CRC
  9799 ;;		_MFRC522_Halt
  9800 ;;		_MFRC522_AntiColl
  9801 ;; This function uses a non-reentrant model
  9802 ;;
  9803                           
  9804                           	psect	text58
  9805  00385C                     __ptext58:
  9806                           	callstack 0
  9807  00385C                     _MFRC522_Clear_Bit:
  9808                           	callstack 26
  9809                           
  9810                           ;incstack = 0
  9811                           ;MFRC522_Clear_Bit@addr stored from wreg
  9812  00385C  6E0C               	movwf	MFRC522_Clear_Bit@addr^0,c
  9813  00385E                     
  9814                           ;rc522.c: 161:     tmp = MFRC522_Rd(addr) ;
  9815  00385E  500C               	movf	MFRC522_Clear_Bit@addr^0,w,c
  9816  003860  ECE1  F013         	call	_MFRC522_Rd
  9817  003864  6E0B               	movwf	MFRC522_Clear_Bit@tmp^0,c
  9818  003866                     
  9819                           ;rc522.c: 162:     MFRC522_Wr(addr, tmp&~mask);
  9820  003866  500A               	movf	MFRC522_Clear_Bit@mask^0,w,c
  9821  003868  0AFF               	xorlw	255
  9822  00386A  140B               	andwf	MFRC522_Clear_Bit@tmp^0,w,c
  9823  00386C  6E01               	movwf	MFRC522_Wr@value^0,c
  9824  00386E  500C               	movf	MFRC522_Clear_Bit@addr^0,w,c
  9825  003870  ECCF  F017         	call	_MFRC522_Wr
  9826  003874  0012               	return		;funcret
  9827  003876                     __end_of_MFRC522_Clear_Bit:
  9828                           	callstack 0
  9829                           
  9830 ;; *************** function _MFRC522_Wr *****************
  9831 ;; Defined at:
  9832 ;;		line 83 in file "rc522.c"
  9833 ;; Parameters:    Size  Location     Type
  9834 ;;  address         1    wreg     unsigned char 
  9835 ;;  value           1    0[COMRAM] unsigned char 
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;  address         1    2[COMRAM] unsigned char 
  9838 ;;  i               1    4[COMRAM] unsigned char 
  9839 ;;  ucAddr          1    3[COMRAM] unsigned char 
  9840 ;; Return value:  Size  Location     Type
  9841 ;;                  1    wreg      void 
  9842 ;; Registers used:
  9843 ;;		wreg, status,2, status,0
  9844 ;; Tracked objects:
  9845 ;;		On entry : 0/0
  9846 ;;		On exit  : 0/0
  9847 ;;		Unchanged: 0/0
  9848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9849 ;;      Params:         1       0       0       0       0       0       0       0       0
  9850 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9851 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9852 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9853 ;;Total ram usage:        5 bytes
  9854 ;; Hardware stack levels used: 1
  9855 ;; This function calls:
  9856 ;;		Nothing
  9857 ;; This function is called by:
  9858 ;;		_MFRC522_Clear_Bit
  9859 ;;		_MFRC522_Set_Bit
  9860 ;;		_MFRC522_Reset
  9861 ;;		_MFRC522_Init
  9862 ;;		_MFRC522_ToCard
  9863 ;;		_MFRC522_Request
  9864 ;;		_MFRC522_CRC
  9865 ;;		_MFRC522_AntiColl
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869                           	psect	text59
  9870  002F9E                     __ptext59:
  9871                           	callstack 0
  9872  002F9E                     _MFRC522_Wr:
  9873                           	callstack 28
  9874                           
  9875                           ;incstack = 0
  9876                           ;MFRC522_Wr@address stored from wreg
  9877  002F9E  6E03               	movwf	MFRC522_Wr@address^0,c
  9878  002FA0                     
  9879                           ;rc522.c: 83: void MFRC522_Wr(unsigned char address, unsigned char value);rc522.c: 84: {
      +                          ;rc522.c: 85:     unsigned char i, ucAddr;;rc522.c: 86:     LATDbits.LD1 = 0;
  9880  002FA0  928C               	bcf	140,1,c	;volatile
  9881                           
  9882                           ;rc522.c: 87:     LATAbits.LA0 = 0;
  9883  002FA2  9089               	bcf	137,0,c	;volatile
  9884  002FA4                     
  9885                           ;rc522.c: 88:     ucAddr = ((address << 1) & 0x7E);
  9886  002FA4  5003               	movf	MFRC522_Wr@address^0,w,c
  9887  002FA6  2403               	addwf	MFRC522_Wr@address^0,w,c
  9888  002FA8  0B7E               	andlw	126
  9889  002FAA  6E04               	movwf	MFRC522_Wr@ucAddr^0,c
  9890  002FAC                     
  9891                           ;rc522.c: 90:     for(i=8; i>0; i--)
  9892  002FAC  0E08               	movlw	8
  9893  002FAE  6E05               	movwf	MFRC522_Wr@i^0,c
  9894  002FB0                     l3480:
  9895                           
  9896                           ;rc522.c: 91:     {;rc522.c: 92:         LATDbits.LD3 = ((ucAddr&0x80) == 0x80);
  9897  002FB0  BE04               	btfsc	MFRC522_Wr@ucAddr^0,7,c
  9898  002FB2  EFDD  F017         	goto	u2931
  9899  002FB6  EFE1  F017         	goto	u2930
  9900  002FBA                     u2931:
  9901  002FBA  6A02               	clrf	??_MFRC522_Wr^0,c
  9902  002FBC  2A02               	incf	??_MFRC522_Wr^0,f,c
  9903  002FBE  EFE2  F017         	goto	u2948
  9904  002FC2                     u2930:
  9905  002FC2  6A02               	clrf	??_MFRC522_Wr^0,c
  9906  002FC4                     u2948:
  9907  002FC4  4602               	rlncf	??_MFRC522_Wr^0,f,c
  9908  002FC6  4602               	rlncf	??_MFRC522_Wr^0,f,c
  9909  002FC8  4602               	rlncf	??_MFRC522_Wr^0,f,c
  9910  002FCA  508C               	movf	140,w,c	;volatile
  9911  002FCC  1802               	xorwf	??_MFRC522_Wr^0,w,c
  9912  002FCE  0BF7               	andlw	-9
  9913  002FD0  1802               	xorwf	??_MFRC522_Wr^0,w,c
  9914  002FD2  6E8C               	movwf	140,c	;volatile
  9915  002FD4                     
  9916                           ;rc522.c: 93:         LATDbits.LD1 = 1;
  9917  002FD4  828C               	bsf	140,1,c	;volatile
  9918                           
  9919                           ;rc522.c: 94:         ucAddr <<= 1;
  9920  002FD6  90D8               	bcf	status,0,c
  9921  002FD8  3604               	rlcf	MFRC522_Wr@ucAddr^0,f,c
  9922  002FDA                     
  9923                           ;rc522.c: 95:         LATDbits.LD1 = 0;
  9924  002FDA  928C               	bcf	140,1,c	;volatile
  9925  002FDC                     
  9926                           ;rc522.c: 96:     }
  9927  002FDC  0605               	decf	MFRC522_Wr@i^0,f,c
  9928  002FDE  5005               	movf	MFRC522_Wr@i^0,w,c
  9929  002FE0  A4D8               	btfss	status,2,c
  9930  002FE2  EFF5  F017         	goto	u2951
  9931  002FE6  EFF7  F017         	goto	u2950
  9932  002FEA                     u2951:
  9933  002FEA  EFD8  F017         	goto	l3480
  9934  002FEE                     u2950:
  9935  002FEE                     
  9936                           ;rc522.c: 97:     for(i=8; i>0; i--)
  9937  002FEE  0E08               	movlw	8
  9938  002FF0  6E05               	movwf	MFRC522_Wr@i^0,c
  9939  002FF2                     l3494:
  9940                           
  9941                           ;rc522.c: 98:     {;rc522.c: 99:         LATDbits.LD3 = ((value&0x80) == 0x80);
  9942  002FF2  BE01               	btfsc	MFRC522_Wr@value^0,7,c
  9943  002FF4  EFFE  F017         	goto	u2961
  9944  002FF8  EF02  F018         	goto	u2960
  9945  002FFC                     u2961:
  9946  002FFC  6A02               	clrf	??_MFRC522_Wr^0,c
  9947  002FFE  2A02               	incf	??_MFRC522_Wr^0,f,c
  9948  003000  EF03  F018         	goto	u2978
  9949  003004                     u2960:
  9950  003004  6A02               	clrf	??_MFRC522_Wr^0,c
  9951  003006                     u2978:
  9952  003006  4602               	rlncf	??_MFRC522_Wr^0,f,c
  9953  003008  4602               	rlncf	??_MFRC522_Wr^0,f,c
  9954  00300A  4602               	rlncf	??_MFRC522_Wr^0,f,c
  9955  00300C  508C               	movf	140,w,c	;volatile
  9956  00300E  1802               	xorwf	??_MFRC522_Wr^0,w,c
  9957  003010  0BF7               	andlw	-9
  9958  003012  1802               	xorwf	??_MFRC522_Wr^0,w,c
  9959  003014  6E8C               	movwf	140,c	;volatile
  9960  003016                     
  9961                           ;rc522.c: 100:         LATDbits.LD1 = 1;
  9962  003016  828C               	bsf	140,1,c	;volatile
  9963                           
  9964                           ;rc522.c: 101:         value <<= 1;
  9965  003018  90D8               	bcf	status,0,c
  9966  00301A  3601               	rlcf	MFRC522_Wr@value^0,f,c
  9967  00301C                     
  9968                           ;rc522.c: 102:         LATDbits.LD1 = 0;
  9969  00301C  928C               	bcf	140,1,c	;volatile
  9970  00301E                     
  9971                           ;rc522.c: 103:     }
  9972  00301E  0605               	decf	MFRC522_Wr@i^0,f,c
  9973  003020  5005               	movf	MFRC522_Wr@i^0,w,c
  9974  003022  A4D8               	btfss	status,2,c
  9975  003024  EF16  F018         	goto	u2981
  9976  003028  EF18  F018         	goto	u2980
  9977  00302C                     u2981:
  9978  00302C  EFF9  F017         	goto	l3494
  9979  003030                     u2980:
  9980  003030                     
  9981                           ;rc522.c: 104:     LATAbits.LA0 = 1;
  9982  003030  8089               	bsf	137,0,c	;volatile
  9983                           
  9984                           ;rc522.c: 105:     LATDbits.LD1 = 1;
  9985  003032  828C               	bsf	140,1,c	;volatile
  9986  003034  0012               	return		;funcret
  9987  003036                     __end_of_MFRC522_Wr:
  9988                           	callstack 0
  9989                           
  9990 ;; *************** function _MFRC522_Rd *****************
  9991 ;; Defined at:
  9992 ;;		line 2 in file "rc522.c"
  9993 ;; Parameters:    Size  Location     Type
  9994 ;;  address         1    wreg     unsigned char 
  9995 ;; Auto vars:     Size  Location     Type
  9996 ;;  address         1    2[COMRAM] unsigned char 
  9997 ;;  i               2    7[COMRAM] unsigned int 
  9998 ;;  ucResult        2    5[COMRAM] unsigned int 
  9999 ;;  ucAddr          2    3[COMRAM] unsigned int 
 10000 ;; Return value:  Size  Location     Type
 10001 ;;                  1    wreg      unsigned char 
 10002 ;; Registers used:
 10003 ;;		wreg, status,2, status,0
 10004 ;; Tracked objects:
 10005 ;;		On entry : 0/0
 10006 ;;		On exit  : 0/0
 10007 ;;		Unchanged: 0/0
 10008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10009 ;;      Params:         0       0       0       0       0       0       0       0       0
 10010 ;;      Locals:         7       0       0       0       0       0       0       0       0
 10011 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10012 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10013 ;;Total ram usage:        9 bytes
 10014 ;; Hardware stack levels used: 1
 10015 ;; This function calls:
 10016 ;;		Nothing
 10017 ;; This function is called by:
 10018 ;;		_MFRC522_Clear_Bit
 10019 ;;		_MFRC522_Set_Bit
 10020 ;;		_MFRC522_AntennaOn
 10021 ;;		_MFRC522_ToCard
 10022 ;;		_MFRC522_CRC
 10023 ;; This function uses a non-reentrant model
 10024 ;;
 10025                           
 10026                           	psect	text60
 10027  0027C2                     __ptext60:
 10028                           	callstack 0
 10029  0027C2                     _MFRC522_Rd:
 10030                           	callstack 26
 10031                           
 10032                           ;incstack = 0
 10033                           ;MFRC522_Rd@address stored from wreg
 10034  0027C2  6E03               	movwf	MFRC522_Rd@address^0,c
 10035  0027C4                     
 10036                           ;rc522.c: 2: unsigned char MFRC522_Rd(unsigned char address);rc522.c: 3: {;rc522.c: 4:  
      +                             unsigned int i, ucAddr;;rc522.c: 5:     unsigned int ucResult = 0;
 10037  0027C4  0E00               	movlw	0
 10038  0027C6  6E07               	movwf	(MFRC522_Rd@ucResult+1)^0,c
 10039  0027C8  0E00               	movlw	0
 10040  0027CA  6E06               	movwf	MFRC522_Rd@ucResult^0,c
 10041  0027CC                     
 10042                           ;rc522.c: 6:     LATDbits.LD1 = 0;
 10043  0027CC  928C               	bcf	140,1,c	;volatile
 10044  0027CE                     
 10045                           ;rc522.c: 7:     LATAbits.LA0 = 0;
 10046  0027CE  9089               	bcf	137,0,c	;volatile
 10047  0027D0                     
 10048                           ;rc522.c: 8:     ucAddr = ((address << 1) & 0x7E) | 0x80;
 10049  0027D0  5003               	movf	MFRC522_Rd@address^0,w,c
 10050  0027D2  2403               	addwf	MFRC522_Rd@address^0,w,c
 10051  0027D4  0B7E               	andlw	126
 10052  0027D6  6E01               	movwf	??_MFRC522_Rd^0,c
 10053  0027D8  6A02               	clrf	(??_MFRC522_Rd+1)^0,c
 10054  0027DA  0E80               	movlw	128
 10055  0027DC  1001               	iorwf	??_MFRC522_Rd^0,w,c
 10056  0027DE  6E04               	movwf	MFRC522_Rd@ucAddr^0,c
 10057  0027E0  5002               	movf	(??_MFRC522_Rd+1)^0,w,c
 10058  0027E2  6E05               	movwf	(MFRC522_Rd@ucAddr+1)^0,c
 10059  0027E4                     
 10060                           ;rc522.c: 10:     for(i=8; i>0; i--)
 10061  0027E4  0E00               	movlw	0
 10062  0027E6  6E09               	movwf	(MFRC522_Rd@i+1)^0,c
 10063  0027E8  0E08               	movlw	8
 10064  0027EA  6E08               	movwf	MFRC522_Rd@i^0,c
 10065  0027EC                     l3358:
 10066                           
 10067                           ;rc522.c: 11:     {;rc522.c: 12:         LATDbits.LD3 = ((ucAddr & 0x80) == 0x80);
 10068  0027EC  BE04               	btfsc	MFRC522_Rd@ucAddr^0,7,c
 10069  0027EE  EFFB  F013         	goto	u2781
 10070  0027F2  EFFF  F013         	goto	u2780
 10071  0027F6                     u2781:
 10072  0027F6  6A01               	clrf	??_MFRC522_Rd^0,c
 10073  0027F8  2A01               	incf	??_MFRC522_Rd^0,f,c
 10074  0027FA  EF00  F014         	goto	u2798
 10075  0027FE                     u2780:
 10076  0027FE  6A01               	clrf	??_MFRC522_Rd^0,c
 10077  002800                     u2798:
 10078  002800  4601               	rlncf	??_MFRC522_Rd^0,f,c
 10079  002802  4601               	rlncf	??_MFRC522_Rd^0,f,c
 10080  002804  4601               	rlncf	??_MFRC522_Rd^0,f,c
 10081  002806  508C               	movf	140,w,c	;volatile
 10082  002808  1801               	xorwf	??_MFRC522_Rd^0,w,c
 10083  00280A  0BF7               	andlw	-9
 10084  00280C  1801               	xorwf	??_MFRC522_Rd^0,w,c
 10085  00280E  6E8C               	movwf	140,c	;volatile
 10086  002810                     
 10087                           ;rc522.c: 13:         LATDbits.LD1 = 1;
 10088  002810  828C               	bsf	140,1,c	;volatile
 10089  002812                     
 10090                           ;rc522.c: 14:         ucAddr <<= 1;
 10091  002812  90D8               	bcf	status,0,c
 10092  002814  3604               	rlcf	MFRC522_Rd@ucAddr^0,f,c
 10093  002816  3605               	rlcf	(MFRC522_Rd@ucAddr+1)^0,f,c
 10094  002818                     
 10095                           ;rc522.c: 15:         LATDbits.LD1 = 0;
 10096  002818  928C               	bcf	140,1,c	;volatile
 10097  00281A                     
 10098                           ;rc522.c: 16:     }
 10099  00281A  0608               	decf	MFRC522_Rd@i^0,f,c
 10100  00281C  A0D8               	btfss	status,0,c
 10101  00281E  0609               	decf	(MFRC522_Rd@i+1)^0,f,c
 10102  002820  5008               	movf	MFRC522_Rd@i^0,w,c
 10103  002822  1009               	iorwf	(MFRC522_Rd@i+1)^0,w,c
 10104  002824  A4D8               	btfss	status,2,c
 10105  002826  EF17  F014         	goto	u2801
 10106  00282A  EF19  F014         	goto	u2800
 10107  00282E                     u2801:
 10108  00282E  EFF6  F013         	goto	l3358
 10109  002832                     u2800:
 10110  002832                     
 10111                           ;rc522.c: 17:     for(i=8; i>0; i--)
 10112  002832  0E00               	movlw	0
 10113  002834  6E09               	movwf	(MFRC522_Rd@i+1)^0,c
 10114  002836  0E08               	movlw	8
 10115  002838  6E08               	movwf	MFRC522_Rd@i^0,c
 10116  00283A                     l275:
 10117                           
 10118                           ;rc522.c: 18:     {;rc522.c: 19:         LATDbits.LD1 = 1;
 10119  00283A  828C               	bsf	140,1,c	;volatile
 10120  00283C                     
 10121                           ;rc522.c: 20:         ucResult <<= 1;
 10122  00283C  90D8               	bcf	status,0,c
 10123  00283E  3606               	rlcf	MFRC522_Rd@ucResult^0,f,c
 10124  002840  3607               	rlcf	(MFRC522_Rd@ucResult+1)^0,f,c
 10125  002842                     
 10126                           ;rc522.c: 21:         ucResult |= (short)PORTDbits.RD2;
 10127  002842  B483               	btfsc	131,2,c	;volatile
 10128  002844  EF26  F014         	goto	u2811
 10129  002848  EF2A  F014         	goto	u2810
 10130  00284C                     u2811:
 10131  00284C  6A01               	clrf	??_MFRC522_Rd^0,c
 10132  00284E  2A01               	incf	??_MFRC522_Rd^0,f,c
 10133  002850  EF2B  F014         	goto	u2818
 10134  002854                     u2810:
 10135  002854  6A01               	clrf	??_MFRC522_Rd^0,c
 10136  002856                     u2818:
 10137  002856  5001               	movf	??_MFRC522_Rd^0,w,c
 10138  002858  1206               	iorwf	MFRC522_Rd@ucResult^0,f,c
 10139  00285A                     
 10140                           ;rc522.c: 22:         LATDbits.LD1 = 0;
 10141  00285A  928C               	bcf	140,1,c	;volatile
 10142  00285C                     
 10143                           ;rc522.c: 23:     }
 10144  00285C  0608               	decf	MFRC522_Rd@i^0,f,c
 10145  00285E  A0D8               	btfss	status,0,c
 10146  002860  0609               	decf	(MFRC522_Rd@i+1)^0,f,c
 10147  002862  5008               	movf	MFRC522_Rd@i^0,w,c
 10148  002864  1009               	iorwf	(MFRC522_Rd@i+1)^0,w,c
 10149  002866  A4D8               	btfss	status,2,c
 10150  002868  EF38  F014         	goto	u2821
 10151  00286C  EF3A  F014         	goto	u2820
 10152  002870                     u2821:
 10153  002870  EF1D  F014         	goto	l275
 10154  002874                     u2820:
 10155  002874                     
 10156                           ;rc522.c: 24:     LATAbits.LA0 = 1;
 10157  002874  8089               	bsf	137,0,c	;volatile
 10158                           
 10159                           ;rc522.c: 25:     LATDbits.LD1 = 1;
 10160  002876  828C               	bsf	140,1,c	;volatile
 10161  002878                     
 10162                           ;rc522.c: 26:     return ucResult;
 10163  002878  5006               	movf	MFRC522_Rd@ucResult^0,w,c
 10164  00287A  0012               	return		;funcret
 10165  00287C                     __end_of_MFRC522_Rd:
 10166                           	callstack 0
 10167                           
 10168 ;; *************** function _LCD_Print *****************
 10169 ;; Defined at:
 10170 ;;		line 109 in file "I2C.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;  LCD_Str         2    4[COMRAM] PTR unsigned char 
 10173 ;;		 -> STR_9(5), STR_6(5), STR_3(5), data_buffer(20), 
 10174 ;; Auto vars:     Size  Location     Type
 10175 ;;  i               1    9[COMRAM] unsigned char 
 10176 ;; Return value:  Size  Location     Type
 10177 ;;                  1    wreg      void 
 10178 ;; Registers used:
 10179 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10180 ;; Tracked objects:
 10181 ;;		On entry : 0/0
 10182 ;;		On exit  : 0/0
 10183 ;;		Unchanged: 0/0
 10184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10185 ;;      Params:         2       0       0       0       0       0       0       0       0
 10186 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10187 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10188 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10189 ;;Total ram usage:        6 bytes
 10190 ;; Hardware stack levels used: 1
 10191 ;; Hardware stack levels required when called: 3
 10192 ;; This function calls:
 10193 ;;		_LCD_Write_Nibble
 10194 ;; This function is called by:
 10195 ;;		_main
 10196 ;; This function uses a non-reentrant model
 10197 ;;
 10198                           
 10199                           	psect	text61
 10200  00287C                     __ptext61:
 10201                           	callstack 0
 10202  00287C                     _LCD_Print:
 10203                           	callstack 27
 10204  00287C                     
 10205                           ;I2C.c: 109: void LCD_Print(char* LCD_Str);I2C.c: 110: {;I2C.c: 111:   uint8_t i = 0;
 10206  00287C  0E00               	movlw	0
 10207  00287E  6E0A               	movwf	LCD_Print@i^0,c
 10208  002880                     
 10209                           ;I2C.c: 112:   RS = 1;
 10210  002880  0100               	movlb	0	; () banked
 10211  002882  81F3               	bsf	(_RS/(0+8))& (0+255),_RS& (0+7),b
 10212                           
 10213                           ;I2C.c: 113:   while(LCD_Str[i] != '\0')
 10214  002884  EF7A  F014         	goto	l4894
 10215  002888                     l4890:
 10216                           
 10217                           ;I2C.c: 114:   {;I2C.c: 115:     LCD_Write_Nibble(LCD_Str[i] & 0xF0);
 10218  002888  500A               	movf	LCD_Print@i^0,w,c
 10219  00288A  2405               	addwf	LCD_Print@LCD_Str^0,w,c
 10220  00288C  6E07               	movwf	??_LCD_Print^0,c
 10221  00288E  0E00               	movlw	0
 10222  002890  2006               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
 10223  002892  6E08               	movwf	(??_LCD_Print+1)^0,c
 10224  002894  C007  FFF6         	movff	??_LCD_Print,tblptrl
 10225  002898  C008  FFF7         	movff	??_LCD_Print+1,tblptrh
 10226  00289C  6AF8               	clrf	tblptru,c
 10227  00289E  0E07               	movlw	(high __ramtop+-1)
 10228  0028A0  64F7               	cpfsgt	tblptrh,c
 10229  0028A2  D003               	bra	u4897
 10230  0028A4  0008               	tblrd		*
 10231  0028A6  50F5               	movf	tablat,w,c
 10232  0028A8  D005               	bra	u4890
 10233  0028AA                     u4897:
 10234  0028AA  CFF6 FFE1          	movff	tblptrl,fsr1l
 10235  0028AE  CFF7 FFE2          	movff	tblptrh,fsr1h
 10236  0028B2  50E7               	movf	indf1,w,c
 10237  0028B4                     u4890:
 10238  0028B4  0BF0               	andlw	240
 10239  0028B6  EC7E  F01B         	call	_LCD_Write_Nibble
 10240                           
 10241                           ;I2C.c: 116:     LCD_Write_Nibble( (LCD_Str[i++] << 4) & 0xF0 );
 10242  0028BA  500A               	movf	LCD_Print@i^0,w,c
 10243  0028BC  2405               	addwf	LCD_Print@LCD_Str^0,w,c
 10244  0028BE  6E07               	movwf	??_LCD_Print^0,c
 10245  0028C0  0E00               	movlw	0
 10246  0028C2  2006               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
 10247  0028C4  6E08               	movwf	(??_LCD_Print+1)^0,c
 10248  0028C6  C007  FFF6         	movff	??_LCD_Print,tblptrl
 10249  0028CA  C008  FFF7         	movff	??_LCD_Print+1,tblptrh
 10250  0028CE  6AF8               	clrf	tblptru,c
 10251  0028D0  0E07               	movlw	(high __ramtop+-1)
 10252  0028D2  64F7               	cpfsgt	tblptrh,c
 10253  0028D4  D003               	bra	u4907
 10254  0028D6  0008               	tblrd		*
 10255  0028D8  50F5               	movf	tablat,w,c
 10256  0028DA  D005               	bra	u4900
 10257  0028DC                     u4907:
 10258  0028DC  CFF6 FFE1          	movff	tblptrl,fsr1l
 10259  0028E0  CFF7 FFE2          	movff	tblptrh,fsr1h
 10260  0028E4  50E7               	movf	indf1,w,c
 10261  0028E6                     u4900:
 10262  0028E6  6E09               	movwf	(??_LCD_Print+2)^0,c
 10263  0028E8  3809               	swapf	(??_LCD_Print+2)^0,w,c
 10264  0028EA  0BF0               	andlw	240
 10265  0028EC  0BF0               	andlw	240
 10266  0028EE  EC7E  F01B         	call	_LCD_Write_Nibble
 10267  0028F2  2A0A               	incf	LCD_Print@i^0,f,c
 10268  0028F4                     l4894:
 10269                           
 10270                           ;I2C.c: 113:   while(LCD_Str[i] != '\0')
 10271  0028F4  500A               	movf	LCD_Print@i^0,w,c
 10272  0028F6  2405               	addwf	LCD_Print@LCD_Str^0,w,c
 10273  0028F8  6E07               	movwf	??_LCD_Print^0,c
 10274  0028FA  0E00               	movlw	0
 10275  0028FC  2006               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
 10276  0028FE  6E08               	movwf	(??_LCD_Print+1)^0,c
 10277  002900  C007  FFF6         	movff	??_LCD_Print,tblptrl
 10278  002904  C008  FFF7         	movff	??_LCD_Print+1,tblptrh
 10279  002908  6AF8               	clrf	tblptru,c
 10280  00290A  0E07               	movlw	(high __ramtop+-1)
 10281  00290C  64F7               	cpfsgt	tblptrh,c
 10282  00290E  D003               	bra	u4917
 10283  002910  0008               	tblrd		*
 10284  002912  50F5               	movf	tablat,w,c
 10285  002914  D005               	bra	u4910
 10286  002916                     u4917:
 10287  002916  CFF6 FFE1          	movff	tblptrl,fsr1l
 10288  00291A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10289  00291E  50E7               	movf	indf1,w,c
 10290  002920                     u4910:
 10291  002920  0900               	iorlw	0
 10292  002922  A4D8               	btfss	status,2,c
 10293  002924  EF96  F014         	goto	u4921
 10294  002928  EF98  F014         	goto	u4920
 10295  00292C                     u4921:
 10296  00292C  EF44  F014         	goto	l4890
 10297  002930                     u4920:
 10298  002930  0012               	return		;funcret
 10299  002932                     __end_of_LCD_Print:
 10300                           	callstack 0
 10301                           
 10302 ;; *************** function _LCD_Goto *****************
 10303 ;; Defined at:
 10304 ;;		line 83 in file "I2C.c"
 10305 ;; Parameters:    Size  Location     Type
 10306 ;;  col             1    wreg     unsigned char 
 10307 ;;  row             1    6[COMRAM] unsigned char 
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;  col             1    9[COMRAM] unsigned char 
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  1    wreg      void 
 10312 ;; Registers used:
 10313 ;;		wreg, status,2, status,0, cstack
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/0
 10316 ;;		On exit  : 0/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10319 ;;      Params:         1       0       0       0       0       0       0       0       0
 10320 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10321 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10322 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10323 ;;Total ram usage:        4 bytes
 10324 ;; Hardware stack levels used: 1
 10325 ;; Hardware stack levels required when called: 4
 10326 ;; This function calls:
 10327 ;;		_LCD_Cmd
 10328 ;; This function is called by:
 10329 ;;		_main
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text62
 10334  003120                     __ptext62:
 10335                           	callstack 0
 10336  003120                     _LCD_Goto:
 10337                           	callstack 26
 10338                           
 10339                           ;incstack = 0
 10340                           ;LCD_Goto@col stored from wreg
 10341  003120  6E0A               	movwf	LCD_Goto@col^0,c
 10342  003122                     
 10343                           ;I2C.c: 83: void LCD_Goto(uint8_t col, uint8_t row);I2C.c: 84: {;I2C.c: 85:   switch(row
      +                          )
 10344  003122  EFAB  F018         	goto	l4858
 10345  003126                     l4850:
 10346                           
 10347                           ;I2C.c: 88:       LCD_Cmd(0xC0 + col - 1);
 10348  003126  500A               	movf	LCD_Goto@col^0,w,c
 10349  003128  0FBF               	addlw	191
 10350  00312A  ECBE  F01A         	call	_LCD_Cmd
 10351                           
 10352                           ;I2C.c: 89:       break;
 10353  00312E  EFC4  F018         	goto	l240
 10354  003132                     l4852:
 10355                           
 10356                           ;I2C.c: 91:       LCD_Cmd(0x94 + col - 1);
 10357  003132  500A               	movf	LCD_Goto@col^0,w,c
 10358  003134  0F93               	addlw	147
 10359  003136  ECBE  F01A         	call	_LCD_Cmd
 10360                           
 10361                           ;I2C.c: 92:       break;
 10362  00313A  EFC4  F018         	goto	l240
 10363  00313E                     l4854:
 10364                           
 10365                           ;I2C.c: 94:       LCD_Cmd(0xD4 + col - 1);
 10366  00313E  500A               	movf	LCD_Goto@col^0,w,c
 10367  003140  0FD3               	addlw	211
 10368  003142  ECBE  F01A         	call	_LCD_Cmd
 10369                           
 10370                           ;I2C.c: 95:     break;
 10371  003146  EFC4  F018         	goto	l240
 10372  00314A                     l4856:
 10373                           
 10374                           ;I2C.c: 97:       LCD_Cmd(0x80 + col - 1);
 10375  00314A  500A               	movf	LCD_Goto@col^0,w,c
 10376  00314C  0F7F               	addlw	127
 10377  00314E  ECBE  F01A         	call	_LCD_Cmd
 10378                           
 10379                           ;I2C.c: 98:   }
 10380  003152  EFC4  F018         	goto	l240
 10381  003156                     l4858:
 10382  003156  5007               	movf	LCD_Goto@row^0,w,c
 10383  003158  6E08               	movwf	??_LCD_Goto^0,c
 10384  00315A  6A09               	clrf	(??_LCD_Goto+1)^0,c
 10385                           
 10386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10387                           ; Switch size 1, requested type "simple"
 10388                           ; Number of cases is 1, Range of values is 0 to 0
 10389                           ; switch strategies available:
 10390                           ; Name         Instructions Cycles
 10391                           ; simple_byte            4     3 (average)
 10392                           ;	Chosen strategy is simple_byte
 10393  00315C  5009               	movf	(??_LCD_Goto+1)^0,w,c
 10394  00315E  0A00               	xorlw	0	; case 0
 10395  003160  B4D8               	btfsc	status,2,c
 10396  003162  EFB5  F018         	goto	l5232
 10397  003166  EFA5  F018         	goto	l4856
 10398  00316A                     l5232:
 10399                           
 10400                           ; Switch size 1, requested type "simple"
 10401                           ; Number of cases is 3, Range of values is 2 to 4
 10402                           ; switch strategies available:
 10403                           ; Name         Instructions Cycles
 10404                           ; simple_byte           10     6 (average)
 10405                           ;	Chosen strategy is simple_byte
 10406  00316A  5008               	movf	??_LCD_Goto^0,w,c
 10407  00316C  0A02               	xorlw	2	; case 2
 10408  00316E  B4D8               	btfsc	status,2,c
 10409  003170  EF93  F018         	goto	l4850
 10410  003174  0A01               	xorlw	1	; case 3
 10411  003176  B4D8               	btfsc	status,2,c
 10412  003178  EF99  F018         	goto	l4852
 10413  00317C  0A07               	xorlw	7	; case 4
 10414  00317E  B4D8               	btfsc	status,2,c
 10415  003180  EF9F  F018         	goto	l4854
 10416  003184  EFA5  F018         	goto	l4856
 10417  003188                     l240:
 10418  003188  0012               	return		;funcret
 10419  00318A                     __end_of_LCD_Goto:
 10420                           	callstack 0
 10421                           
 10422 ;; *************** function _LCD_Begin *****************
 10423 ;; Defined at:
 10424 ;;		line 120 in file "I2C.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;  _i2c_addr       1    wreg     unsigned char 
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;  _i2c_addr       1    8[COMRAM] unsigned char 
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  1    wreg      void 
 10431 ;; Registers used:
 10432 ;;		wreg, status,2, status,0, cstack
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10438 ;;      Params:         0       0       0       0       0       0       0       0       0
 10439 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10440 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10441 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10442 ;;Total ram usage:        3 bytes
 10443 ;; Hardware stack levels used: 1
 10444 ;; Hardware stack levels required when called: 4
 10445 ;; This function calls:
 10446 ;;		_Expander_Write
 10447 ;;		_LCD_Cmd
 10448 ;; This function is called by:
 10449 ;;		_main
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text63
 10454  0022E4                     __ptext63:
 10455                           	callstack 0
 10456  0022E4                     _LCD_Begin:
 10457                           	callstack 26
 10458                           
 10459                           ;incstack = 0
 10460                           ;LCD_Begin@_i2c_addr stored from wreg
 10461  0022E4  6E09               	movwf	LCD_Begin@_i2c_addr^0,c
 10462  0022E6                     
 10463                           ;I2C.c: 120: void LCD_Begin(uint8_t _i2c_addr);I2C.c: 121: {;I2C.c: 122:   i2c_addr = _i
      +                          2c_addr;
 10464  0022E6  C009  F0F2         	movff	LCD_Begin@_i2c_addr,_i2c_addr
 10465  0022EA                     
 10466                           ;I2C.c: 123:   Expander_Write(0);
 10467  0022EA  0E00               	movlw	0
 10468  0022EC  EC05  F01C         	call	_Expander_Write
 10469  0022F0                     
 10470                           ;I2C.c: 125:   _delay((unsigned long)((40)*(27000000/4000.0)));
 10471  0022F0  0E02               	movlw	2
 10472  0022F2  6E08               	movwf	(??_LCD_Begin+1)^0,c
 10473  0022F4  0E5F               	movlw	95
 10474  0022F6  6E07               	movwf	??_LCD_Begin^0,c
 10475  0022F8  0EA3               	movlw	163
 10476  0022FA                     u5177:
 10477  0022FA  2EE8               	decfsz	wreg,f,c
 10478  0022FC  D7FE               	bra	u5177
 10479  0022FE  2E07               	decfsz	??_LCD_Begin^0,f,c
 10480  002300  D7FC               	bra	u5177
 10481  002302  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
 10482  002304  D7FA               	bra	u5177
 10483  002306  F000               	nop	
 10484                           
 10485                           ;I2C.c: 126:   LCD_Cmd(3);
 10486  002308  0E03               	movlw	3
 10487  00230A  ECBE  F01A         	call	_LCD_Cmd
 10488  00230E                     
 10489                           ;I2C.c: 127:   _delay((unsigned long)((5)*(27000000/4000.0)));
 10490  00230E  0E2C               	movlw	44
 10491  002310  6E07               	movwf	??_LCD_Begin^0,c
 10492  002312  0ED4               	movlw	212
 10493  002314                     u5187:
 10494  002314  2EE8               	decfsz	wreg,f,c
 10495  002316  D7FE               	bra	u5187
 10496  002318  2E07               	decfsz	??_LCD_Begin^0,f,c
 10497  00231A  D7FC               	bra	u5187
 10498  00231C                     
 10499                           ;I2C.c: 128:   LCD_Cmd(3);
 10500  00231C  0E03               	movlw	3
 10501  00231E  ECBE  F01A         	call	_LCD_Cmd
 10502                           
 10503                           ;I2C.c: 129:   _delay((unsigned long)((5)*(27000000/4000.0)));
 10504  002322  0E2C               	movlw	44
 10505  002324  6E07               	movwf	??_LCD_Begin^0,c
 10506  002326  0ED4               	movlw	212
 10507  002328                     u5197:
 10508  002328  2EE8               	decfsz	wreg,f,c
 10509  00232A  D7FE               	bra	u5197
 10510  00232C  2E07               	decfsz	??_LCD_Begin^0,f,c
 10511  00232E  D7FC               	bra	u5197
 10512  002330                     
 10513                           ;I2C.c: 130:   LCD_Cmd(3);
 10514  002330  0E03               	movlw	3
 10515  002332  ECBE  F01A         	call	_LCD_Cmd
 10516  002336                     
 10517                           ;I2C.c: 131:   _delay((unsigned long)((5)*(27000000/4000.0)));
 10518  002336  0E2C               	movlw	44
 10519  002338  6E07               	movwf	??_LCD_Begin^0,c
 10520  00233A  0ED4               	movlw	212
 10521  00233C                     u5207:
 10522  00233C  2EE8               	decfsz	wreg,f,c
 10523  00233E  D7FE               	bra	u5207
 10524  002340  2E07               	decfsz	??_LCD_Begin^0,f,c
 10525  002342  D7FC               	bra	u5207
 10526                           
 10527                           ;I2C.c: 132:   LCD_Cmd(0x02);
 10528  002344  0E02               	movlw	2
 10529  002346  ECBE  F01A         	call	_LCD_Cmd
 10530  00234A                     
 10531                           ;I2C.c: 133:   _delay((unsigned long)((5)*(27000000/4000.0)));
 10532  00234A  0E2C               	movlw	44
 10533  00234C  6E07               	movwf	??_LCD_Begin^0,c
 10534  00234E  0ED4               	movlw	212
 10535  002350                     u5217:
 10536  002350  2EE8               	decfsz	wreg,f,c
 10537  002352  D7FE               	bra	u5217
 10538  002354  2E07               	decfsz	??_LCD_Begin^0,f,c
 10539  002356  D7FC               	bra	u5217
 10540  002358                     
 10541                           ;I2C.c: 134:   LCD_Cmd(0x20 | (2 << 2));
 10542  002358  0E28               	movlw	40
 10543  00235A  ECBE  F01A         	call	_LCD_Cmd
 10544                           
 10545                           ;I2C.c: 135:   _delay((unsigned long)((50)*(27000000/4000.0)));
 10546  00235E  0E02               	movlw	2
 10547  002360  6E08               	movwf	(??_LCD_Begin+1)^0,c
 10548  002362  0EB7               	movlw	183
 10549  002364  6E07               	movwf	??_LCD_Begin^0,c
 10550  002366  0E4C               	movlw	76
 10551  002368                     u5227:
 10552  002368  2EE8               	decfsz	wreg,f,c
 10553  00236A  D7FE               	bra	u5227
 10554  00236C  2E07               	decfsz	??_LCD_Begin^0,f,c
 10555  00236E  D7FC               	bra	u5227
 10556  002370  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
 10557  002372  D7FA               	bra	u5227
 10558  002374  D000               	nop2	
 10559  002376                     
 10560                           ;I2C.c: 136:   LCD_Cmd(0x0C);
 10561  002376  0E0C               	movlw	12
 10562  002378  ECBE  F01A         	call	_LCD_Cmd
 10563  00237C                     
 10564                           ;I2C.c: 137:   _delay((unsigned long)((50)*(27000000/4000.0)));
 10565  00237C  0E02               	movlw	2
 10566  00237E  6E08               	movwf	(??_LCD_Begin+1)^0,c
 10567  002380  0EB7               	movlw	183
 10568  002382  6E07               	movwf	??_LCD_Begin^0,c
 10569  002384  0E4C               	movlw	76
 10570  002386                     u5237:
 10571  002386  2EE8               	decfsz	wreg,f,c
 10572  002388  D7FE               	bra	u5237
 10573  00238A  2E07               	decfsz	??_LCD_Begin^0,f,c
 10574  00238C  D7FC               	bra	u5237
 10575  00238E  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
 10576  002390  D7FA               	bra	u5237
 10577  002392  D000               	nop2	
 10578                           
 10579                           ;I2C.c: 138:   LCD_Cmd(0x01);
 10580  002394  0E01               	movlw	1
 10581  002396  ECBE  F01A         	call	_LCD_Cmd
 10582  00239A                     
 10583                           ;I2C.c: 139:   _delay((unsigned long)((50)*(27000000/4000.0)));
 10584  00239A  0E02               	movlw	2
 10585  00239C  6E08               	movwf	(??_LCD_Begin+1)^0,c
 10586  00239E  0EB7               	movlw	183
 10587  0023A0  6E07               	movwf	??_LCD_Begin^0,c
 10588  0023A2  0E4C               	movlw	76
 10589  0023A4                     u5247:
 10590  0023A4  2EE8               	decfsz	wreg,f,c
 10591  0023A6  D7FE               	bra	u5247
 10592  0023A8  2E07               	decfsz	??_LCD_Begin^0,f,c
 10593  0023AA  D7FC               	bra	u5247
 10594  0023AC  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
 10595  0023AE  D7FA               	bra	u5247
 10596  0023B0  D000               	nop2	
 10597  0023B2                     
 10598                           ;I2C.c: 140:   LCD_Cmd(0x04 | 0x02);
 10599  0023B2  0E06               	movlw	6
 10600  0023B4  ECBE  F01A         	call	_LCD_Cmd
 10601                           
 10602                           ;I2C.c: 141:   _delay((unsigned long)((50)*(27000000/4000.0)));
 10603  0023B8  0E02               	movlw	2
 10604  0023BA  6E08               	movwf	(??_LCD_Begin+1)^0,c
 10605  0023BC  0EB7               	movlw	183
 10606  0023BE  6E07               	movwf	??_LCD_Begin^0,c
 10607  0023C0  0E4C               	movlw	76
 10608  0023C2                     u5257:
 10609  0023C2  2EE8               	decfsz	wreg,f,c
 10610  0023C4  D7FE               	bra	u5257
 10611  0023C6  2E07               	decfsz	??_LCD_Begin^0,f,c
 10612  0023C8  D7FC               	bra	u5257
 10613  0023CA  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
 10614  0023CC  D7FA               	bra	u5257
 10615  0023CE  D000               	nop2	
 10616  0023D0  0012               	return		;funcret
 10617  0023D2                     __end_of_LCD_Begin:
 10618                           	callstack 0
 10619                           
 10620 ;; *************** function _LCD_Cmd *****************
 10621 ;; Defined at:
 10622 ;;		line 74 in file "I2C.c"
 10623 ;; Parameters:    Size  Location     Type
 10624 ;;  Command         1    wreg     unsigned char 
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;  Command         1    5[COMRAM] unsigned char 
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  1    wreg      void 
 10629 ;; Registers used:
 10630 ;;		wreg, status,2, status,0, cstack
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10636 ;;      Params:         0       0       0       0       0       0       0       0       0
 10637 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10638 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10639 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10640 ;;Total ram usage:        2 bytes
 10641 ;; Hardware stack levels used: 1
 10642 ;; Hardware stack levels required when called: 3
 10643 ;; This function calls:
 10644 ;;		_LCD_Write_Nibble
 10645 ;; This function is called by:
 10646 ;;		_main
 10647 ;;		_LCD_Goto
 10648 ;;		_LCD_Begin
 10649 ;; This function uses a non-reentrant model
 10650 ;;
 10651                           
 10652                           	psect	text64
 10653  00357C                     __ptext64:
 10654                           	callstack 0
 10655  00357C                     _LCD_Cmd:
 10656                           	callstack 26
 10657                           
 10658                           ;incstack = 0
 10659                           ;LCD_Cmd@Command stored from wreg
 10660  00357C  6E06               	movwf	LCD_Cmd@Command^0,c
 10661  00357E                     
 10662                           ;I2C.c: 74: void LCD_Cmd(uint8_t Command);I2C.c: 75: {;I2C.c: 76:   RS = 0;
 10663  00357E  0100               	movlb	0	; () banked
 10664  003580  91F3               	bcf	(_RS/(0+8))& (0+255),_RS& (0+7),b
 10665  003582                     
 10666                           ; BSR set to: 0
 10667                           ;I2C.c: 77:   LCD_Write_Nibble(Command & 0xF0);
 10668  003582  5006               	movf	LCD_Cmd@Command^0,w,c
 10669  003584  0BF0               	andlw	240
 10670  003586  EC7E  F01B         	call	_LCD_Write_Nibble
 10671                           
 10672                           ;I2C.c: 78:   LCD_Write_Nibble((Command << 4) & 0xF0);
 10673  00358A  3806               	swapf	LCD_Cmd@Command^0,w,c
 10674  00358C  0BF0               	andlw	240
 10675  00358E  0BF0               	andlw	240
 10676  003590  EC7E  F01B         	call	_LCD_Write_Nibble
 10677  003594                     
 10678                           ;I2C.c: 79:   if((Command == 0x01) || (Command == 0x02))
 10679  003594  0406               	decf	LCD_Cmd@Command^0,w,c
 10680  003596  B4D8               	btfsc	status,2,c
 10681  003598  EFD0  F01A         	goto	u3851
 10682  00359C  EFD2  F01A         	goto	u3850
 10683  0035A0                     u3851:
 10684  0035A0  EFDB  F01A         	goto	l4126
 10685  0035A4                     u3850:
 10686  0035A4  0E02               	movlw	2
 10687  0035A6  1806               	xorwf	LCD_Cmd@Command^0,w,c
 10688  0035A8  A4D8               	btfss	status,2,c
 10689  0035AA  EFD9  F01A         	goto	u3861
 10690  0035AE  EFDB  F01A         	goto	u3860
 10691  0035B2                     u3861:
 10692  0035B2  EFE3  F01A         	goto	l231
 10693  0035B6                     u3860:
 10694  0035B6                     l4126:
 10695                           
 10696                           ;I2C.c: 80:     _delay((unsigned long)((2)*(27000000/4000.0)));
 10697  0035B6  0E12               	movlw	18
 10698  0035B8  6E05               	movwf	??_LCD_Cmd^0,c
 10699  0035BA  0E87               	movlw	135
 10700  0035BC                     u5267:
 10701  0035BC  2EE8               	decfsz	wreg,f,c
 10702  0035BE  D7FE               	bra	u5267
 10703  0035C0  2E05               	decfsz	??_LCD_Cmd^0,f,c
 10704  0035C2  D7FC               	bra	u5267
 10705  0035C4  F000               	nop	
 10706  0035C6                     l231:
 10707  0035C6  0012               	return		;funcret
 10708  0035C8                     __end_of_LCD_Cmd:
 10709                           	callstack 0
 10710                           
 10711 ;; *************** function _LCD_Write_Nibble *****************
 10712 ;; Defined at:
 10713 ;;		line 63 in file "I2C.c"
 10714 ;; Parameters:    Size  Location     Type
 10715 ;;  n               1    wreg     unsigned char 
 10716 ;; Auto vars:     Size  Location     Type
 10717 ;;  n               1    3[COMRAM] unsigned char 
 10718 ;; Return value:  Size  Location     Type
 10719 ;;                  1    wreg      void 
 10720 ;; Registers used:
 10721 ;;		wreg, status,2, status,0, cstack
 10722 ;; Tracked objects:
 10723 ;;		On entry : 0/0
 10724 ;;		On exit  : 0/0
 10725 ;;		Unchanged: 0/0
 10726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10727 ;;      Params:         0       0       0       0       0       0       0       0       0
 10728 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10729 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10730 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10731 ;;Total ram usage:        1 bytes
 10732 ;; Hardware stack levels used: 1
 10733 ;; Hardware stack levels required when called: 2
 10734 ;; This function calls:
 10735 ;;		_Expander_Write
 10736 ;; This function is called by:
 10737 ;;		_LCD_Cmd
 10738 ;;		_LCD_Print
 10739 ;;		_LCD_PutC
 10740 ;; This function uses a non-reentrant model
 10741 ;;
 10742                           
 10743                           	psect	text65
 10744  0036FC                     __ptext65:
 10745                           	callstack 0
 10746  0036FC                     _LCD_Write_Nibble:
 10747                           	callstack 27
 10748                           
 10749                           ;incstack = 0
 10750                           ;LCD_Write_Nibble@n stored from wreg
 10751  0036FC  6E04               	movwf	LCD_Write_Nibble@n^0,c
 10752  0036FE                     
 10753                           ;I2C.c: 63: void LCD_Write_Nibble(uint8_t n);I2C.c: 64: {;I2C.c: 65:   n |= RS;
 10754  0036FE  0E00               	movlw	0
 10755  003700  0100               	movlb	0	; () banked
 10756  003702  B1F3               	btfsc	(_RS/(0+8))& (0+255),_RS& (0+7),b
 10757  003704  0E01               	movlw	1
 10758  003706  1204               	iorwf	LCD_Write_Nibble@n^0,f,c
 10759  003708                     
 10760                           ; BSR set to: 0
 10761                           ;I2C.c: 66:   Expander_Write(n & 0xFB);
 10762  003708  5004               	movf	LCD_Write_Nibble@n^0,w,c
 10763  00370A  0BFB               	andlw	251
 10764  00370C  EC05  F01C         	call	_Expander_Write
 10765  003710                     
 10766                           ;I2C.c: 67:   _delay((unsigned long)((1)*(27000000/4000000.0)));
 10767  003710  D000               	nop2		;2 cycle nop
 10768  003712  D000               	nop2		;2 cycle nop
 10769  003714  D000               	nop2		;2 cycle nop
 10770  003716                     
 10771                           ;I2C.c: 68:   Expander_Write(n | 0x04);
 10772  003716  5004               	movf	LCD_Write_Nibble@n^0,w,c
 10773  003718  0904               	iorlw	4
 10774  00371A  EC05  F01C         	call	_Expander_Write
 10775  00371E                     
 10776                           ;I2C.c: 69:   _delay((unsigned long)((1)*(27000000/4000000.0)));
 10777  00371E  D000               	nop2		;2 cycle nop
 10778  003720  D000               	nop2		;2 cycle nop
 10779  003722  D000               	nop2		;2 cycle nop
 10780  003724                     
 10781                           ;I2C.c: 70:   Expander_Write(n & 0xFB);
 10782  003724  5004               	movf	LCD_Write_Nibble@n^0,w,c
 10783  003726  0BFB               	andlw	251
 10784  003728  EC05  F01C         	call	_Expander_Write
 10785  00372C                     
 10786                           ;I2C.c: 71:   _delay((unsigned long)((100)*(27000000/4000000.0)));
 10787  00372C  0EE1               	movlw	225
 10788  00372E                     u5277:
 10789  00372E  2EE8               	decfsz	wreg,f,c
 10790  003730  D7FE               	bra	u5277
 10791  003732  0012               	return		;funcret
 10792  003734                     __end_of_LCD_Write_Nibble:
 10793                           	callstack 0
 10794                           
 10795 ;; *************** function _Expander_Write *****************
 10796 ;; Defined at:
 10797 ;;		line 55 in file "I2C.c"
 10798 ;; Parameters:    Size  Location     Type
 10799 ;;  value           1    wreg     unsigned char 
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;  value           1    2[COMRAM] unsigned char 
 10802 ;; Return value:  Size  Location     Type
 10803 ;;                  1    wreg      void 
 10804 ;; Registers used:
 10805 ;;		wreg, status,2, status,0, cstack
 10806 ;; Tracked objects:
 10807 ;;		On entry : 0/0
 10808 ;;		On exit  : 0/0
 10809 ;;		Unchanged: 0/0
 10810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10811 ;;      Params:         0       0       0       0       0       0       0       0       0
 10812 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10813 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10814 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10815 ;;Total ram usage:        1 bytes
 10816 ;; Hardware stack levels used: 1
 10817 ;; Hardware stack levels required when called: 1
 10818 ;; This function calls:
 10819 ;;		_I2CLCD_Start
 10820 ;;		_I2CLCD_Stop
 10821 ;;		_I2CLCD_Write
 10822 ;; This function is called by:
 10823 ;;		_LCD_Write_Nibble
 10824 ;;		_LCD_Begin
 10825 ;;		_Backlight
 10826 ;;		_noBacklight
 10827 ;; This function uses a non-reentrant model
 10828 ;;
 10829                           
 10830                           	psect	text66
 10831  00380A                     __ptext66:
 10832                           	callstack 0
 10833  00380A                     _Expander_Write:
 10834                           	callstack 27
 10835                           
 10836                           ;incstack = 0
 10837                           ;Expander_Write@value stored from wreg
 10838  00380A  6E03               	movwf	Expander_Write@value^0,c
 10839  00380C                     
 10840                           ;I2C.c: 55: void Expander_Write(uint8_t value);I2C.c: 56: {;I2C.c: 57:   I2CLCD_Start();
 10841  00380C  ECC4  F01B         	call	_I2CLCD_Start	;wreg free
 10842                           
 10843                           ;I2C.c: 58:   I2CLCD_Write(i2c_addr);
 10844  003810  0100               	movlb	0	; () banked
 10845  003812  51F2               	movf	_i2c_addr& (0+255),w,b
 10846  003814  EC9A  F01B         	call	_I2CLCD_Write
 10847                           
 10848                           ;I2C.c: 59:   I2CLCD_Write(value | backlight_val);
 10849  003818  5003               	movf	Expander_Write@value^0,w,c
 10850  00381A  0100               	movlb	0	; () banked
 10851  00381C  11F4               	iorwf	_backlight_val& (0+255),w,b
 10852  00381E  EC9A  F01B         	call	_I2CLCD_Write
 10853                           
 10854                           ;I2C.c: 60:   I2CLCD_Stop();
 10855  003822  ECB0  F01B         	call	_I2CLCD_Stop	;wreg free
 10856  003826  0012               	return		;funcret
 10857  003828                     __end_of_Expander_Write:
 10858                           	callstack 0
 10859                           
 10860 ;; *************** function _I2CLCD_Write *****************
 10861 ;; Defined at:
 10862 ;;		line 27 in file "I2C.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;  i2c_data        1    wreg     unsigned char 
 10865 ;; Auto vars:     Size  Location     Type
 10866 ;;  i2c_data        1    1[COMRAM] unsigned char 
 10867 ;; Return value:  Size  Location     Type
 10868 ;;                  1    wreg      void 
 10869 ;; Registers used:
 10870 ;;		wreg, status,2, status,0
 10871 ;; Tracked objects:
 10872 ;;		On entry : 0/0
 10873 ;;		On exit  : 0/0
 10874 ;;		Unchanged: 0/0
 10875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10876 ;;      Params:         0       0       0       0       0       0       0       0       0
 10877 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10878 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10879 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10880 ;;Total ram usage:        2 bytes
 10881 ;; Hardware stack levels used: 1
 10882 ;; This function calls:
 10883 ;;		Nothing
 10884 ;; This function is called by:
 10885 ;;		_Expander_Write
 10886 ;; This function uses a non-reentrant model
 10887 ;;
 10888                           
 10889                           	psect	text67
 10890  003734                     __ptext67:
 10891                           	callstack 0
 10892  003734                     _I2CLCD_Write:
 10893                           	callstack 27
 10894                           
 10895                           ;incstack = 0
 10896                           ;I2CLCD_Write@i2c_data stored from wreg
 10897  003734  6E02               	movwf	I2CLCD_Write@i2c_data^0,c
 10898  003736                     l198:
 10899  003736  B4C7               	btfsc	199,2,c	;volatile
 10900  003738  EFA0  F01B         	goto	u2761
 10901  00373C  EFA2  F01B         	goto	u2760
 10902  003740                     u2761:
 10903  003740  EF9B  F01B         	goto	l198
 10904  003744                     u2760:
 10905  003744  CFC5 F001          	movff	4037,??_I2CLCD_Write	;volatile
 10906  003748  0E1F               	movlw	31
 10907  00374A  1601               	andwf	??_I2CLCD_Write^0,f,c
 10908  00374C  A4D8               	btfss	status,2,c
 10909  00374E  EFAB  F01B         	goto	u2771
 10910  003752  EFAD  F01B         	goto	u2770
 10911  003756                     u2771:
 10912  003756  EF9B  F01B         	goto	l198
 10913  00375A                     u2770:
 10914  00375A                     
 10915                           ;I2C.c: 30:   SSPBUF = i2c_data;
 10916  00375A  C002  FFC9         	movff	I2CLCD_Write@i2c_data,4041	;volatile
 10917  00375E  0012               	return		;funcret
 10918  003760                     __end_of_I2CLCD_Write:
 10919                           	callstack 0
 10920                           
 10921 ;; *************** function _I2CLCD_Stop *****************
 10922 ;; Defined at:
 10923 ;;		line 21 in file "I2C.c"
 10924 ;; Parameters:    Size  Location     Type
 10925 ;;		None
 10926 ;; Auto vars:     Size  Location     Type
 10927 ;;		None
 10928 ;; Return value:  Size  Location     Type
 10929 ;;                  1    wreg      void 
 10930 ;; Registers used:
 10931 ;;		wreg, status,2, status,0
 10932 ;; Tracked objects:
 10933 ;;		On entry : 0/0
 10934 ;;		On exit  : 0/0
 10935 ;;		Unchanged: 0/0
 10936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10937 ;;      Params:         0       0       0       0       0       0       0       0       0
 10938 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10939 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10940 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10941 ;;Total ram usage:        1 bytes
 10942 ;; Hardware stack levels used: 1
 10943 ;; This function calls:
 10944 ;;		Nothing
 10945 ;; This function is called by:
 10946 ;;		_Expander_Write
 10947 ;; This function uses a non-reentrant model
 10948 ;;
 10949                           
 10950                           	psect	text68
 10951  003760                     __ptext68:
 10952                           	callstack 0
 10953  003760                     _I2CLCD_Stop:
 10954                           	callstack 27
 10955  003760                     l192:
 10956  003760  B4C7               	btfsc	199,2,c	;volatile
 10957  003762  EFB5  F01B         	goto	u2741
 10958  003766  EFB7  F01B         	goto	u2740
 10959  00376A                     u2741:
 10960  00376A  EFB0  F01B         	goto	l192
 10961  00376E                     u2740:
 10962  00376E  CFC5 F001          	movff	4037,??_I2CLCD_Stop	;volatile
 10963  003772  0E1F               	movlw	31
 10964  003774  1601               	andwf	??_I2CLCD_Stop^0,f,c
 10965  003776  A4D8               	btfss	status,2,c
 10966  003778  EFC0  F01B         	goto	u2751
 10967  00377C  EFC2  F01B         	goto	u2750
 10968  003780                     u2751:
 10969  003780  EFB0  F01B         	goto	l192
 10970  003784                     u2750:
 10971  003784                     
 10972                           ;I2C.c: 24:   PEN = 1;
 10973  003784  84C5               	bsf	4037,2,c	;volatile
 10974  003786  0012               	return		;funcret
 10975  003788                     __end_of_I2CLCD_Stop:
 10976                           	callstack 0
 10977                           
 10978 ;; *************** function _I2CLCD_Start *****************
 10979 ;; Defined at:
 10980 ;;		line 15 in file "I2C.c"
 10981 ;; Parameters:    Size  Location     Type
 10982 ;;		None
 10983 ;; Auto vars:     Size  Location     Type
 10984 ;;		None
 10985 ;; Return value:  Size  Location     Type
 10986 ;;                  1    wreg      void 
 10987 ;; Registers used:
 10988 ;;		wreg, status,2, status,0
 10989 ;; Tracked objects:
 10990 ;;		On entry : 0/0
 10991 ;;		On exit  : 0/0
 10992 ;;		Unchanged: 0/0
 10993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10994 ;;      Params:         0       0       0       0       0       0       0       0       0
 10995 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10996 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10997 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10998 ;;Total ram usage:        1 bytes
 10999 ;; Hardware stack levels used: 1
 11000 ;; This function calls:
 11001 ;;		Nothing
 11002 ;; This function is called by:
 11003 ;;		_Expander_Write
 11004 ;; This function uses a non-reentrant model
 11005 ;;
 11006                           
 11007                           	psect	text69
 11008  003788                     __ptext69:
 11009                           	callstack 0
 11010  003788                     _I2CLCD_Start:
 11011                           	callstack 27
 11012  003788                     l186:
 11013  003788  B4C7               	btfsc	199,2,c	;volatile
 11014  00378A  EFC9  F01B         	goto	u2721
 11015  00378E  EFCB  F01B         	goto	u2720
 11016  003792                     u2721:
 11017  003792  EFC4  F01B         	goto	l186
 11018  003796                     u2720:
 11019  003796  CFC5 F001          	movff	4037,??_I2CLCD_Start	;volatile
 11020  00379A  0E1F               	movlw	31
 11021  00379C  1601               	andwf	??_I2CLCD_Start^0,f,c
 11022  00379E  A4D8               	btfss	status,2,c
 11023  0037A0  EFD4  F01B         	goto	u2731
 11024  0037A4  EFD6  F01B         	goto	u2730
 11025  0037A8                     u2731:
 11026  0037A8  EFC4  F01B         	goto	l186
 11027  0037AC                     u2730:
 11028  0037AC                     
 11029                           ;I2C.c: 18:   SEN = 1;
 11030  0037AC  80C5               	bsf	4037,0,c	;volatile
 11031  0037AE  0012               	return		;funcret
 11032  0037B0                     __end_of_I2CLCD_Start:
 11033                           	callstack 0
 11034                           
 11035 ;; *************** function _I2CLCD_Init *****************
 11036 ;; Defined at:
 11037 ;;		line 7 in file "I2C.c"
 11038 ;; Parameters:    Size  Location     Type
 11039 ;;  i2c_clk_freq    4   13[COMRAM] unsigned long 
 11040 ;; Auto vars:     Size  Location     Type
 11041 ;;		None
 11042 ;; Return value:  Size  Location     Type
 11043 ;;                  1    wreg      void 
 11044 ;; Registers used:
 11045 ;;		wreg, status,2, status,0, cstack
 11046 ;; Tracked objects:
 11047 ;;		On entry : 0/0
 11048 ;;		On exit  : 0/0
 11049 ;;		Unchanged: 0/0
 11050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11051 ;;      Params:         4       0       0       0       0       0       0       0       0
 11052 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11053 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11054 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11055 ;;Total ram usage:        8 bytes
 11056 ;; Hardware stack levels used: 1
 11057 ;; Hardware stack levels required when called: 1
 11058 ;; This function calls:
 11059 ;;		___lldiv
 11060 ;; This function is called by:
 11061 ;;		_main
 11062 ;; This function uses a non-reentrant model
 11063 ;;
 11064                           
 11065                           	psect	text70
 11066  003484                     __ptext70:
 11067                           	callstack 0
 11068  003484                     _I2CLCD_Init:
 11069                           	callstack 29
 11070  003484                     
 11071                           ;I2C.c: 7: void I2CLCD_Init(uint32_t i2c_clk_freq);I2C.c: 8: {;I2C.c: 9:   SSPCON1 = 0x2
      +                          8;
 11072  003484  0E28               	movlw	40
 11073  003486  6EC6               	movwf	198,c	;volatile
 11074                           
 11075                           ;I2C.c: 10:   SSPCON2 = 0x00;
 11076  003488  0E00               	movlw	0
 11077  00348A  6EC5               	movwf	197,c	;volatile
 11078  00348C                     
 11079                           ;I2C.c: 11:   SSPADD = (27000000/(4 * i2c_clk_freq)) - 1;
 11080  00348C  0EC0               	movlw	192
 11081  00348E  6E01               	movwf	___lldiv@dividend^0,c
 11082  003490  0EFC               	movlw	252
 11083  003492  6E02               	movwf	(___lldiv@dividend+1)^0,c
 11084  003494  0E9B               	movlw	155
 11085  003496  6E03               	movwf	(___lldiv@dividend+2)^0,c
 11086  003498  0E01               	movlw	1
 11087  00349A  6E04               	movwf	(___lldiv@dividend+3)^0,c
 11088  00349C  C00E  F012         	movff	I2CLCD_Init@i2c_clk_freq,??_I2CLCD_Init
 11089  0034A0  C00F  F013         	movff	I2CLCD_Init@i2c_clk_freq+1,??_I2CLCD_Init+1
 11090  0034A4  C010  F014         	movff	I2CLCD_Init@i2c_clk_freq+2,??_I2CLCD_Init+2
 11091  0034A8  C011  F015         	movff	I2CLCD_Init@i2c_clk_freq+3,??_I2CLCD_Init+3
 11092  0034AC  0E02               	movlw	2
 11093  0034AE                     u4855:
 11094  0034AE  90D8               	bcf	status,0,c
 11095  0034B0  3612               	rlcf	??_I2CLCD_Init^0,f,c
 11096  0034B2  3613               	rlcf	(??_I2CLCD_Init+1)^0,f,c
 11097  0034B4  3614               	rlcf	(??_I2CLCD_Init+2)^0,f,c
 11098  0034B6  3615               	rlcf	(??_I2CLCD_Init+3)^0,f,c
 11099  0034B8  2EE8               	decfsz	wreg,f,c
 11100  0034BA  EF57  F01A         	goto	u4855
 11101  0034BE  C012  F005         	movff	??_I2CLCD_Init,___lldiv@divisor
 11102  0034C2  C013  F006         	movff	??_I2CLCD_Init+1,___lldiv@divisor+1
 11103  0034C6  C014  F007         	movff	??_I2CLCD_Init+2,___lldiv@divisor+2
 11104  0034CA  C015  F008         	movff	??_I2CLCD_Init+3,___lldiv@divisor+3
 11105  0034CE  ECA7  F015         	call	___lldiv	;wreg free
 11106  0034D2  0401               	decf	?___lldiv^0,w,c
 11107  0034D4  6EC8               	movwf	200,c	;volatile
 11108  0034D6                     
 11109                           ;I2C.c: 12:   SSPSTAT = 0;
 11110  0034D6  0E00               	movlw	0
 11111  0034D8  6EC7               	movwf	199,c	;volatile
 11112  0034DA  0012               	return		;funcret
 11113  0034DC                     __end_of_I2CLCD_Init:
 11114                           	callstack 0
 11115                           
 11116 ;; *************** function ___lldiv *****************
 11117 ;; Defined at:
 11118 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
 11119 ;; Parameters:    Size  Location     Type
 11120 ;;  dividend        4    0[COMRAM] unsigned long 
 11121 ;;  divisor         4    4[COMRAM] unsigned long 
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;  quotient        4    8[COMRAM] unsigned long 
 11124 ;;  counter         1   12[COMRAM] unsigned char 
 11125 ;; Return value:  Size  Location     Type
 11126 ;;                  4    0[COMRAM] unsigned long 
 11127 ;; Registers used:
 11128 ;;		wreg, status,2, status,0
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/0
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11134 ;;      Params:         8       0       0       0       0       0       0       0       0
 11135 ;;      Locals:         5       0       0       0       0       0       0       0       0
 11136 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11137 ;;      Totals:        13       0       0       0       0       0       0       0       0
 11138 ;;Total ram usage:       13 bytes
 11139 ;; Hardware stack levels used: 1
 11140 ;; This function calls:
 11141 ;;		Nothing
 11142 ;; This function is called by:
 11143 ;;		_I2CLCD_Init
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           	psect	text71
 11148  002B4E                     __ptext71:
 11149                           	callstack 0
 11150  002B4E                     ___lldiv:
 11151                           	callstack 29
 11152  002B4E  0E00               	movlw	0
 11153  002B50  6E09               	movwf	___lldiv@quotient^0,c
 11154  002B52  0E00               	movlw	0
 11155  002B54  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 11156  002B56  0E00               	movlw	0
 11157  002B58  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 11158  002B5A  0E00               	movlw	0
 11159  002B5C  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 11160  002B5E  5005               	movf	___lldiv@divisor^0,w,c
 11161  002B60  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 11162  002B62  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 11163  002B64  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 11164  002B66  B4D8               	btfsc	status,2,c
 11165  002B68  EFB8  F015         	goto	u4021
 11166  002B6C  EFBA  F015         	goto	u4020
 11167  002B70                     u4021:
 11168  002B70  EFF0  F015         	goto	l603
 11169  002B74                     u4020:
 11170  002B74  0E01               	movlw	1
 11171  002B76  6E0D               	movwf	___lldiv@counter^0,c
 11172  002B78  EFC4  F015         	goto	l4296
 11173  002B7C                     l4294:
 11174  002B7C  90D8               	bcf	status,0,c
 11175  002B7E  3605               	rlcf	___lldiv@divisor^0,f,c
 11176  002B80  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 11177  002B82  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 11178  002B84  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 11179  002B86  2A0D               	incf	___lldiv@counter^0,f,c
 11180  002B88                     l4296:
 11181  002B88  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 11182  002B8A  EFC9  F015         	goto	u4031
 11183  002B8E  EFCB  F015         	goto	u4030
 11184  002B92                     u4031:
 11185  002B92  EFBE  F015         	goto	l4294
 11186  002B96                     u4030:
 11187  002B96                     l4298:
 11188  002B96  90D8               	bcf	status,0,c
 11189  002B98  3609               	rlcf	___lldiv@quotient^0,f,c
 11190  002B9A  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 11191  002B9C  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 11192  002B9E  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 11193  002BA0  5005               	movf	___lldiv@divisor^0,w,c
 11194  002BA2  5C01               	subwf	___lldiv@dividend^0,w,c
 11195  002BA4  5006               	movf	(___lldiv@divisor+1)^0,w,c
 11196  002BA6  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 11197  002BA8  5007               	movf	(___lldiv@divisor+2)^0,w,c
 11198  002BAA  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 11199  002BAC  5008               	movf	(___lldiv@divisor+3)^0,w,c
 11200  002BAE  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 11201  002BB0  A0D8               	btfss	status,0,c
 11202  002BB2  EFDD  F015         	goto	u4041
 11203  002BB6  EFDF  F015         	goto	u4040
 11204  002BBA                     u4041:
 11205  002BBA  EFE8  F015         	goto	l4306
 11206  002BBE                     u4040:
 11207  002BBE  5005               	movf	___lldiv@divisor^0,w,c
 11208  002BC0  5E01               	subwf	___lldiv@dividend^0,f,c
 11209  002BC2  5006               	movf	(___lldiv@divisor+1)^0,w,c
 11210  002BC4  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 11211  002BC6  5007               	movf	(___lldiv@divisor+2)^0,w,c
 11212  002BC8  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 11213  002BCA  5008               	movf	(___lldiv@divisor+3)^0,w,c
 11214  002BCC  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 11215  002BCE  8009               	bsf	___lldiv@quotient^0,0,c
 11216  002BD0                     l4306:
 11217  002BD0  90D8               	bcf	status,0,c
 11218  002BD2  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 11219  002BD4  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 11220  002BD6  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 11221  002BD8  3205               	rrcf	___lldiv@divisor^0,f,c
 11222  002BDA  2E0D               	decfsz	___lldiv@counter^0,f,c
 11223  002BDC  EFCB  F015         	goto	l4298
 11224  002BE0                     l603:
 11225  002BE0  C009  F001         	movff	___lldiv@quotient,?___lldiv
 11226  002BE4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 11227  002BE8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 11228  002BEC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 11229  002BF0  0012               	return		;funcret
 11230  002BF2                     __end_of___lldiv:
 11231                           	callstack 0
 11232                           
 11233                           	psect	rparam
 11234  0000                     
 11235                           	psect	idloc
 11236                           
 11237                           ;Config register IDLOC0 @ 0x200000
 11238                           ;	unspecified, using default values
 11239  200000                     	org	2097152
 11240  200000  FF                 	db	255
 11241                           
 11242                           ;Config register IDLOC1 @ 0x200001
 11243                           ;	unspecified, using default values
 11244  200001                     	org	2097153
 11245  200001  FF                 	db	255
 11246                           
 11247                           ;Config register IDLOC2 @ 0x200002
 11248                           ;	unspecified, using default values
 11249  200002                     	org	2097154
 11250  200002  FF                 	db	255
 11251                           
 11252                           ;Config register IDLOC3 @ 0x200003
 11253                           ;	unspecified, using default values
 11254  200003                     	org	2097155
 11255  200003  FF                 	db	255
 11256                           
 11257                           ;Config register IDLOC4 @ 0x200004
 11258                           ;	unspecified, using default values
 11259  200004                     	org	2097156
 11260  200004  FF                 	db	255
 11261                           
 11262                           ;Config register IDLOC5 @ 0x200005
 11263                           ;	unspecified, using default values
 11264  200005                     	org	2097157
 11265  200005  FF                 	db	255
 11266                           
 11267                           ;Config register IDLOC6 @ 0x200006
 11268                           ;	unspecified, using default values
 11269  200006                     	org	2097158
 11270  200006  FF                 	db	255
 11271                           
 11272                           ;Config register IDLOC7 @ 0x200007
 11273                           ;	unspecified, using default values
 11274  200007                     	org	2097159
 11275  200007  FF                 	db	255
 11276                           
 11277                           	psect	config
 11278                           
 11279                           ;Config register CONFIG1L @ 0x300000
 11280                           ;	PLL Prescaler Selection bits
 11281                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 11282                           ;	System Clock Postscaler Selection bits
 11283                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 11284                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 11285                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 11286  300000                     	org	3145728
 11287  300000  00                 	db	0
 11288                           
 11289                           ;Config register CONFIG1H @ 0x300001
 11290                           ;	Oscillator Selection bits
 11291                           ;	FOSC = HS, HS oscillator (HS)
 11292                           ;	Fail-Safe Clock Monitor Enable bit
 11293                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11294                           ;	Internal/External Oscillator Switchover bit
 11295                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11296  300001                     	org	3145729
 11297  300001  0C                 	db	12
 11298                           
 11299                           ;Config register CONFIG2L @ 0x300002
 11300                           ;	Power-up Timer Enable bit
 11301                           ;	PWRT = ON, PWRT enabled
 11302                           ;	Brown-out Reset Enable bits
 11303                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 11304                           ;	Brown-out Reset Voltage bits
 11305                           ;	BORV = 3, Minimum setting 2.05V
 11306                           ;	USB Voltage Regulator Enable bit
 11307                           ;	VREGEN = OFF, USB voltage regulator disabled
 11308  300002                     	org	3145730
 11309  300002  1E                 	db	30
 11310                           
 11311                           ;Config register CONFIG2H @ 0x300003
 11312                           ;	Watchdog Timer Enable bit
 11313                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11314                           ;	Watchdog Timer Postscale Select bits
 11315                           ;	WDTPS = 32768, 1:32768
 11316  300003                     	org	3145731
 11317  300003  1E                 	db	30
 11318                           
 11319                           ; Padding undefined space
 11320  300004                     	org	3145732
 11321  300004  FF                 	db	255
 11322                           
 11323                           ;Config register CONFIG3H @ 0x300005
 11324                           ;	CCP2 MUX bit
 11325                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 11326                           ;	PORTB A/D Enable bit
 11327                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 11328                           ;	Low-Power Timer 1 Oscillator Enable bit
 11329                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 11330                           ;	MCLR Pin Enable bit
 11331                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 11332  300005                     	org	3145733
 11333  300005  81                 	db	129
 11334                           
 11335                           ;Config register CONFIG4L @ 0x300006
 11336                           ;	Stack Full/Underflow Reset Enable bit
 11337                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11338                           ;	Single-Supply ICSP Enable bit
 11339                           ;	LVP = OFF, Single-Supply ICSP disabled
 11340                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 11341                           ;	ICPRT = OFF, ICPORT disabled
 11342                           ;	Extended Instruction Set Enable bit
 11343                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11344                           ;	Background Debugger Enable bit
 11345                           ;	DEBUG = 0x1, unprogrammed default
 11346  300006                     	org	3145734
 11347  300006  81                 	db	129
 11348                           
 11349                           ; Padding undefined space
 11350  300007                     	org	3145735
 11351  300007  FF                 	db	255
 11352                           
 11353                           ;Config register CONFIG5L @ 0x300008
 11354                           ;	Code Protection bit
 11355                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 11356                           ;	Code Protection bit
 11357                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 11358                           ;	Code Protection bit
 11359                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 11360                           ;	Code Protection bit
 11361                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 11362  300008                     	org	3145736
 11363  300008  0F                 	db	15
 11364                           
 11365                           ;Config register CONFIG5H @ 0x300009
 11366                           ;	Boot Block Code Protection bit
 11367                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 11368                           ;	Data EEPROM Code Protection bit
 11369                           ;	CPD = OFF, Data EEPROM is not code-protected
 11370  300009                     	org	3145737
 11371  300009  C0                 	db	192
 11372                           
 11373                           ;Config register CONFIG6L @ 0x30000A
 11374                           ;	Write Protection bit
 11375                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 11376                           ;	Write Protection bit
 11377                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 11378                           ;	Write Protection bit
 11379                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 11380                           ;	Write Protection bit
 11381                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 11382  30000A                     	org	3145738
 11383  30000A  0F                 	db	15
 11384                           
 11385                           ;Config register CONFIG6H @ 0x30000B
 11386                           ;	Configuration Register Write Protection bit
 11387                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 11388                           ;	Boot Block Write Protection bit
 11389                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 11390                           ;	Data EEPROM Write Protection bit
 11391                           ;	WRTD = OFF, Data EEPROM is not write-protected
 11392  30000B                     	org	3145739
 11393  30000B  E0                 	db	224
 11394                           
 11395                           ;Config register CONFIG7L @ 0x30000C
 11396                           ;	Table Read Protection bit
 11397                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11398                           ;	Table Read Protection bit
 11399                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11400                           ;	Table Read Protection bit
 11401                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11402                           ;	Table Read Protection bit
 11403                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11404  30000C                     	org	3145740
 11405  30000C  0F                 	db	15
 11406                           
 11407                           ;Config register CONFIG7H @ 0x30000D
 11408                           ;	Boot Block Table Read Protection bit
 11409                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 11410  30000D                     	org	3145741
 11411  30000D  40                 	db	64
 11412                           tosu	equ	0xFFF
 11413                           tosh	equ	0xFFE
 11414                           tosl	equ	0xFFD
 11415                           stkptr	equ	0xFFC
 11416                           pclatu	equ	0xFFB
 11417                           pclath	equ	0xFFA
 11418                           pcl	equ	0xFF9
 11419                           tblptru	equ	0xFF8
 11420                           tblptrh	equ	0xFF7
 11421                           tblptrl	equ	0xFF6
 11422                           tablat	equ	0xFF5
 11423                           prodh	equ	0xFF4
 11424                           prodl	equ	0xFF3
 11425                           indf0	equ	0xFEF
 11426                           postinc0	equ	0xFEE
 11427                           postdec0	equ	0xFED
 11428                           preinc0	equ	0xFEC
 11429                           plusw0	equ	0xFEB
 11430                           fsr0h	equ	0xFEA
 11431                           fsr0l	equ	0xFE9
 11432                           wreg	equ	0xFE8
 11433                           indf1	equ	0xFE7
 11434                           postinc1	equ	0xFE6
 11435                           postdec1	equ	0xFE5
 11436                           preinc1	equ	0xFE4
 11437                           plusw1	equ	0xFE3
 11438                           fsr1h	equ	0xFE2
 11439                           fsr1l	equ	0xFE1
 11440                           bsr	equ	0xFE0
 11441                           indf2	equ	0xFDF
 11442                           postinc2	equ	0xFDE
 11443                           postdec2	equ	0xFDD
 11444                           preinc2	equ	0xFDC
 11445                           plusw2	equ	0xFDB
 11446                           fsr2h	equ	0xFDA
 11447                           fsr2l	equ	0xFD9
 11448                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    0
    Data        21
    BSS         148
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     18     149
    BANK1           256      0      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), STR_7(CODE[3]), STR_4(CODE[3]), data_buffer(BANK0[20]), 
		 -> STR_1(CODE[3]), UID_3(BANK0[20]), UID_2(BANK0[20]), UID_1(BANK0[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), STR_7(CODE[3]), STR_4(CODE[3]), data_buffer(BANK0[20]), 
		 -> STR_1(CODE[3]), UID_3(BANK0[20]), UID_2(BANK0[20]), UID_1(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_5(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_5(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), STR_5(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> data_buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1308$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1308$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    MFRC522_ReadCardSerial3@str	PTR unsigned char  size(2) Largest target is 20
		 -> UID_3(BANK0[20]), 

    MFRC522_ReadCardSerial2@str	PTR unsigned char  size(2) Largest target is 20
		 -> UID_2(BANK0[20]), 

    MFRC522_ReadCardSerial@str	PTR unsigned char  size(2) Largest target is 20
		 -> UID_1(BANK0[20]), 

    MFRC522_IsCard3@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType3(BANK0[1]), 

    MFRC522_IsCard2@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType2(BANK0[1]), 

    MFRC522_IsCard@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType1(BANK0[1]), 

    MFRC522_AntiColl3@serNum	PTR unsigned char  size(2) Largest target is 20
		 -> UID_3(BANK0[20]), 

    MFRC522_AntiColl2@serNum	PTR unsigned char  size(2) Largest target is 20
		 -> UID_2(BANK0[20]), 

    MFRC522_AntiColl@serNum	PTR unsigned char  size(2) Largest target is 20
		 -> UID_1(BANK0[20]), 

    MFRC522_CRC3@dataOut	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt3@buff(COMRAM[4]), MFRC522_SelectTag3@buffer(COMRAM[9]), 

    MFRC522_CRC3@dataIn	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt3@buff(COMRAM[4]), MFRC522_SelectTag3@buffer(COMRAM[9]), 

    MFRC522_CRC2@dataOut	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt2@buff(COMRAM[4]), MFRC522_SelectTag2@buffer(COMRAM[9]), 

    MFRC522_CRC2@dataIn	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt2@buff(COMRAM[4]), MFRC522_SelectTag2@buffer(COMRAM[9]), 

    MFRC522_CRC@dataOut	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_CRC@dataIn	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_Request3@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType3(BANK0[1]), 

    MFRC522_Request2@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType2(BANK0[1]), 

    MFRC522_Request@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType1(BANK0[1]), 

    MFRC522_ToCard3@backData	PTR unsigned char  size(2) Largest target is 20
		 -> MFRC522_Halt3@buff(COMRAM[4]), MFRC522_SelectTag3@buffer(COMRAM[9]), UID_3(BANK0[20]), TagType3(BANK0[1]), 

    MFRC522_ToCard3@backLen	PTR unsigned int  size(2) Largest target is 2
		 -> MFRC522_AntiColl3@unLen(COMRAM[2]), MFRC522_Halt3@unLen(COMRAM[2]), MFRC522_SelectTag3@recvBits(COMRAM[2]), MFRC522_Request3@backBits(COMRAM[2]), 

    MFRC522_ToCard3@sendData	PTR unsigned char  size(2) Largest target is 20
		 -> MFRC522_Halt3@buff(COMRAM[4]), MFRC522_SelectTag3@buffer(COMRAM[9]), UID_3(BANK0[20]), TagType3(BANK0[1]), 

    MFRC522_ToCard2@backData	PTR unsigned char  size(2) Largest target is 20
		 -> MFRC522_Halt2@buff(COMRAM[4]), MFRC522_SelectTag2@buffer(COMRAM[9]), UID_2(BANK0[20]), TagType2(BANK0[1]), 

    MFRC522_ToCard2@backLen	PTR unsigned int  size(2) Largest target is 2
		 -> MFRC522_AntiColl2@unLen(COMRAM[2]), MFRC522_Halt2@unLen(COMRAM[2]), MFRC522_SelectTag2@recvBits(COMRAM[2]), MFRC522_Request2@backBits(COMRAM[2]), 

    MFRC522_ToCard2@sendData	PTR unsigned char  size(2) Largest target is 20
		 -> MFRC522_Halt2@buff(COMRAM[4]), MFRC522_SelectTag2@buffer(COMRAM[9]), UID_2(BANK0[20]), TagType2(BANK0[1]), 

    MFRC522_ToCard@backData	PTR unsigned char  size(2) Largest target is 20
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), UID_1(BANK0[20]), TagType1(BANK0[1]), 

    MFRC522_ToCard@backLen	PTR unsigned int  size(2) Largest target is 2
		 -> MFRC522_AntiColl@unLen(COMRAM[2]), MFRC522_Halt@unLen(COMRAM[2]), MFRC522_SelectTag@recvBits(COMRAM[2]), MFRC522_Request@backBits(COMRAM[2]), 

    MFRC522_ToCard@sendData	PTR unsigned char  size(2) Largest target is 20
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), UID_1(BANK0[20]), TagType1(BANK0[1]), 

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 20
		 -> STR_9(CODE[5]), STR_6(CODE[5]), STR_3(CODE[5]), data_buffer(BANK0[20]), 

    USART_TxChar@out	PTR unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[3]), STR_4(CODE[3]), data_buffer(BANK0[20]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _USART_TxChar->_strlen
    _USART_Init->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _MFRC522_ReadCardSerial3->_MFRC522_AntiColl3
    _MFRC522_AntiColl3->_MFRC522_ToCard3
    _MFRC522_ReadCardSerial2->_MFRC522_AntiColl2
    _MFRC522_AntiColl2->_MFRC522_ToCard2
    _MFRC522_ReadCardSerial->_MFRC522_AntiColl
    _MFRC522_AntiColl->_MFRC522_ToCard
    _MFRC522_IsCard3->_MFRC522_Request3
    _MFRC522_Request3->_MFRC522_ToCard3
    _MFRC522_IsCard2->_MFRC522_Request2
    _MFRC522_Request2->_MFRC522_ToCard2
    _MFRC522_IsCard->_MFRC522_Request
    _MFRC522_Request->_MFRC522_ToCard
    _MFRC522_Reset->_MFRC522_Wr
    _MFRC522_Reset->_MFRC522_Wr2
    _MFRC522_Reset->_MFRC522_Wr3
    _MFRC522_AntennaOn3->_MFRC522_Set_Bit3
    _MFRC522_AntennaOn2->_MFRC522_Set_Bit2
    _MFRC522_AntennaOn->_MFRC522_Set_Bit
    _MFRC522_AntennaOff3->_MFRC522_Clear_Bit3
    _MFRC522_AntennaOff2->_MFRC522_Clear_Bit2
    _MFRC522_AntennaOff->_MFRC522_Clear_Bit
    _MFRC522_Halt3->_MFRC522_ToCard3
    _MFRC522_ToCard3->_MFRC522_Clear_Bit3
    _MFRC522_ToCard3->_MFRC522_Set_Bit3
    _MFRC522_CRC3->_MFRC522_Clear_Bit3
    _MFRC522_CRC3->_MFRC522_Set_Bit3
    _MFRC522_Set_Bit3->_MFRC522_Rd3
    _MFRC522_Clear_Bit3->_MFRC522_Rd3
    _MFRC522_Halt2->_MFRC522_ToCard2
    _MFRC522_ToCard2->_MFRC522_Clear_Bit2
    _MFRC522_ToCard2->_MFRC522_Set_Bit2
    _MFRC522_CRC2->_MFRC522_Clear_Bit2
    _MFRC522_CRC2->_MFRC522_Set_Bit2
    _MFRC522_Set_Bit2->_MFRC522_Rd2
    _MFRC522_Clear_Bit2->_MFRC522_Rd2
    _MFRC522_Halt->_MFRC522_ToCard
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_ToCard->_MFRC522_Set_Bit
    _MFRC522_CRC->_MFRC522_Clear_Bit
    _MFRC522_CRC->_MFRC522_Set_Bit
    _MFRC522_Set_Bit->_MFRC522_Rd
    _MFRC522_Clear_Bit->_MFRC522_Rd
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble
    _LCD_Write_Nibble->_Expander_Write
    _Expander_Write->_I2CLCD_Write
    _I2CLCD_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  188227
                                             13 BANK0      5     5      0
                        _I2CLCD_Init
                          _LCD_Begin
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                   _MFRC522_AntiColl
                  _MFRC522_AntiColl2
                  _MFRC522_AntiColl3
                       _MFRC522_Halt
                      _MFRC522_Halt2
                      _MFRC522_Halt3
                       _MFRC522_Init
                     _MFRC522_IsCard
                    _MFRC522_IsCard2
                    _MFRC522_IsCard3
             _MFRC522_ReadCardSerial
            _MFRC522_ReadCardSerial2
            _MFRC522_ReadCardSerial3
                         _USART_Init
                       _USART_TxChar
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    6943
                                             89 COMRAM     6     0      6
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6288
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5933
                                             62 COMRAM    19    13      6
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    24     11    4495
                                             27 COMRAM    35    24     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              6     4      2     388
                                              6 COMRAM     6     4      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3013
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _USART_TxChar                                         5     3      2    1016
                                              4 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     470
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4    4611
                                             55 COMRAM     8     4      4
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2388
                                             39 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _MFRC522_ReadCardSerial3                              3     1      2   12065
                                             39 COMRAM     2     0      2
                  _MFRC522_AntiColl3
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntiColl3                                    8     6      2   11922
                                             31 COMRAM     8     6      2
                 _MFRC522_Clear_Bit3
                    _MFRC522_ToCard3
                        _MFRC522_Wr3
 ---------------------------------------------------------------------------------
 (1) _MFRC522_ReadCardSerial2                              3     1      2   12065
                                             39 COMRAM     2     0      2
                  _MFRC522_AntiColl2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntiColl2                                    8     6      2   11922
                                             31 COMRAM     8     6      2
                 _MFRC522_Clear_Bit2
                    _MFRC522_ToCard2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (1) _MFRC522_ReadCardSerial                               3     1      2   12065
                                             39 COMRAM     2     0      2
                   _MFRC522_AntiColl
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntiColl                                     8     6      2   11922
                                             31 COMRAM     8     6      2
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_IsCard3                                      2     0      2    9592
                                             37 COMRAM     2     0      2
                   _MFRC522_Request3
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Request3                                     6     4      2    9494
                                             31 COMRAM     6     4      2
                    _MFRC522_ToCard3
                        _MFRC522_Wr3
 ---------------------------------------------------------------------------------
 (1) _MFRC522_IsCard2                                      2     0      2    9592
                                             37 COMRAM     2     0      2
                   _MFRC522_Request2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Request2                                     6     4      2    9494
                                             31 COMRAM     6     4      2
                    _MFRC522_ToCard2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (1) _MFRC522_IsCard                                       2     0      2    9592
                                             37 COMRAM     2     0      2
                    _MFRC522_Request
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Request                                      6     4      2    9494
                                             31 COMRAM     6     4      2
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Init                                         0     0      0   21954
                 _MFRC522_AntennaOff
                _MFRC522_AntennaOff2
                _MFRC522_AntennaOff3
                  _MFRC522_AntennaOn
                 _MFRC522_AntennaOn2
                 _MFRC522_AntennaOn3
                      _MFRC522_Reset
                         _MFRC522_Wr
                        _MFRC522_Wr2
                        _MFRC522_Wr3
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Reset                                        0     0      0    4359
                         _MFRC522_Wr
                        _MFRC522_Wr2
                        _MFRC522_Wr3
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOn3                                   1     1      0    2174
                        _MFRC522_Rd3
                   _MFRC522_Set_Bit3
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOn2                                   1     1      0    2174
                        _MFRC522_Rd2
                   _MFRC522_Set_Bit2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOn                                    1     1      0    2174
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOff3                                  0     0      0    2238
                 _MFRC522_Clear_Bit3
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOff2                                  0     0      0    2238
                 _MFRC522_Clear_Bit2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOff                                   0     0      0    2238
                  _MFRC522_Clear_Bit
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Halt3                                        6     6      0   16650
                                             31 COMRAM     6     6      0
                       _MFRC522_CRC3
                 _MFRC522_Clear_Bit3
                    _MFRC522_ToCard3
 ---------------------------------------------------------------------------------
 (3) _MFRC522_ToCard3                                     19    12      7    7783
                                             12 COMRAM    19    12      7
                 _MFRC522_Clear_Bit3
                        _MFRC522_Rd3
                   _MFRC522_Set_Bit3
                        _MFRC522_Wr3
 ---------------------------------------------------------------------------------
 (2) _MFRC522_CRC3                                         7     2      5    6480
                                             12 COMRAM     7     2      5
                 _MFRC522_Clear_Bit3
                        _MFRC522_Rd3
                   _MFRC522_Set_Bit3
                        _MFRC522_Wr3
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit3                                     3     2      1    2010
                                              9 COMRAM     3     2      1
                        _MFRC522_Rd3
                        _MFRC522_Wr3
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit3                                   3     2      1    2238
                                              9 COMRAM     3     2      1
                        _MFRC522_Rd3
                        _MFRC522_Wr3
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr3                                          5     4      1    1453
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd3                                          9     9      0     163
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Halt2                                        6     6      0   16650
                                             31 COMRAM     6     6      0
                       _MFRC522_CRC2
                 _MFRC522_Clear_Bit2
                    _MFRC522_ToCard2
 ---------------------------------------------------------------------------------
 (3) _MFRC522_ToCard2                                     19    12      7    7783
                                             12 COMRAM    19    12      7
                 _MFRC522_Clear_Bit2
                        _MFRC522_Rd2
                   _MFRC522_Set_Bit2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_CRC2                                         7     2      5    6480
                                             12 COMRAM     7     2      5
                 _MFRC522_Clear_Bit2
                        _MFRC522_Rd2
                   _MFRC522_Set_Bit2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit2                                     3     2      1    2010
                                              9 COMRAM     3     2      1
                        _MFRC522_Rd2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit2                                   3     2      1    2238
                                              9 COMRAM     3     2      1
                        _MFRC522_Rd2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr2                                          5     4      1    1453
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd2                                          9     9      0     163
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Halt                                         6     6      0   16650
                                             31 COMRAM     6     6      0
                        _MFRC522_CRC
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
 ---------------------------------------------------------------------------------
 (3) _MFRC522_ToCard                                      19    12      7    7783
                                             12 COMRAM    19    12      7
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_CRC                                          7     2      5    6480
                                             12 COMRAM     7     2      5
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit                                      3     2      1    2010
                                              9 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit                                    3     2      1    2238
                                              9 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr                                           5     4      1    1453
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd                                           9     9      0     163
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            6     4      2     701
                                              4 COMRAM     6     4      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Goto                                             4     3      1     765
                                              6 COMRAM     4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     265
                                              6 COMRAM     3     3      0
                     _Expander_Write
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              2     2      0     199
                                              4 COMRAM     2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Nibble                                     1     1      0     111
                                              3 COMRAM     1     1      0
                     _Expander_Write
 ---------------------------------------------------------------------------------
 (3) _Expander_Write                                       1     1      0      44
                                              2 COMRAM     1     1      0
                       _I2CLCD_Start
                        _I2CLCD_Stop
                       _I2CLCD_Write
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Write                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Stop                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Start                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2CLCD_Init                                          8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2CLCD_Init
     ___lldiv
   _LCD_Begin
     _Expander_Write
       _I2CLCD_Start
       _I2CLCD_Stop
       _I2CLCD_Write
     _LCD_Cmd
       _LCD_Write_Nibble
         _Expander_Write
   _LCD_Cmd
   _LCD_Goto
     _LCD_Cmd
   _LCD_Print
     _LCD_Write_Nibble
   _MFRC522_AntiColl
     _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Wr
     _MFRC522_ToCard
       _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Set_Bit
         _MFRC522_Rd
         _MFRC522_Wr
       _MFRC522_Wr
     _MFRC522_Wr
   _MFRC522_AntiColl2
     _MFRC522_Clear_Bit2
       _MFRC522_Rd2
       _MFRC522_Wr2
     _MFRC522_ToCard2
       _MFRC522_Clear_Bit2
       _MFRC522_Rd2
       _MFRC522_Set_Bit2
         _MFRC522_Rd2
         _MFRC522_Wr2
       _MFRC522_Wr2
     _MFRC522_Wr2
   _MFRC522_AntiColl3
     _MFRC522_Clear_Bit3
       _MFRC522_Rd3
       _MFRC522_Wr3
     _MFRC522_ToCard3
       _MFRC522_Clear_Bit3
       _MFRC522_Rd3
       _MFRC522_Set_Bit3
         _MFRC522_Rd3
         _MFRC522_Wr3
       _MFRC522_Wr3
     _MFRC522_Wr3
   _MFRC522_Halt
     _MFRC522_CRC
       _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Set_Bit
       _MFRC522_Wr
     _MFRC522_Clear_Bit
     _MFRC522_ToCard
   _MFRC522_Halt2
     _MFRC522_CRC2
       _MFRC522_Clear_Bit2
       _MFRC522_Rd2
       _MFRC522_Set_Bit2
       _MFRC522_Wr2
     _MFRC522_Clear_Bit2
     _MFRC522_ToCard2
   _MFRC522_Halt3
     _MFRC522_CRC3
       _MFRC522_Clear_Bit3
       _MFRC522_Rd3
       _MFRC522_Set_Bit3
       _MFRC522_Wr3
     _MFRC522_Clear_Bit3
     _MFRC522_ToCard3
   _MFRC522_Init
     _MFRC522_AntennaOff
       _MFRC522_Clear_Bit
     _MFRC522_AntennaOff2
       _MFRC522_Clear_Bit2
     _MFRC522_AntennaOff3
       _MFRC522_Clear_Bit3
     _MFRC522_AntennaOn
       _MFRC522_Rd
       _MFRC522_Set_Bit
     _MFRC522_AntennaOn2
       _MFRC522_Rd2
       _MFRC522_Set_Bit2
     _MFRC522_AntennaOn3
       _MFRC522_Rd3
       _MFRC522_Set_Bit3
     _MFRC522_Reset
       _MFRC522_Wr
       _MFRC522_Wr2
       _MFRC522_Wr3
     _MFRC522_Wr
     _MFRC522_Wr2
     _MFRC522_Wr3
   _MFRC522_IsCard
     _MFRC522_Request
       _MFRC522_ToCard
       _MFRC522_Wr
   _MFRC522_IsCard2
     _MFRC522_Request2
       _MFRC522_ToCard2
       _MFRC522_Wr2
   _MFRC522_IsCard3
     _MFRC522_Request3
       _MFRC522_ToCard3
       _MFRC522_Wr3
   _MFRC522_ReadCardSerial
     _MFRC522_AntiColl
   _MFRC522_ReadCardSerial2
     _MFRC522_AntiColl2
   _MFRC522_ReadCardSerial3
     _MFRC522_AntiColl3
   _USART_Init
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___fltol
     ___xxtofl
   _USART_TxChar
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
           _toupper
             _islower
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      28       7       15.6%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     12      95       5       93.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhlhh      28      0       0      21        0.0%
BITBIGSFRllll       23      0       0      29        0.0%
BITBIGSFRhhll       15      0       0      22        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhllh        C      0       0      23        0.0%
BITBIGSFRhlll        7      0       0      24        0.0%
BITBIGSFRlllh        5      0       0      28        0.0%
BITBIGSFRlhl         5      0       0      26        0.0%
BITBIGSFRllh         2      0       0      27        0.0%
BITBIGSFRlhh         1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11C      30        0.0%
DATA                 0      0     11C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar 30 08:44:26 2022

                   ___fldiv@aexp 0027                     ___fldiv@bexp 0026  
                   ___fldiv@sign 001F                      MFRC522_Rd@i 0008  
                   MFRC522_CRC@i 0013                     MFRC522_CRC@n 0012  
                    MFRC522_Wr@i 0005                               _RS 0798  
                   MFRC522_Rd2@i 0008                     MFRC522_Rd3@i 0008  
                  MFRC522_CRC2@i 0013                    MFRC522_CRC3@i 0013  
                  MFRC522_CRC2@n 0012                    MFRC522_CRC3@n 0012  
                   MFRC522_Wr2@i 0005                     MFRC522_Wr3@i 0005  
                            l200 375A                              l201 375E  
                            l114 119C                              l222 3826  
                            l134 2E6C                              l231 35C6  
                            l311 2F00                              l143 311E  
                            l240 3188                              l304 2F98  
                            l312 2F04                              l225 3732  
                            l305 2F9C                              l321 3840  
                            l137 30B0                              l410 1BCA  
                            l330 388C                              l315 3874  
                            l252 23D0                              l324 38BC  
                            l405 1B70                              l333 30AE  
                            l510 3482                              l318 385A  
                            l422 179A                              l342 38E2  
                            l183 34DA                              l327 38A4  
                            l351 3942                              l192 3760  
                            l336 3906                              l249 2930  
                            l513 342A                              l433 18E2  
                            l345 395A                              l441 32BE  
                            l610 2BF0                              l186 3788  
                            l194 3784                              l370 1E56  
                            l282 2780                              l290 2700  
                            l426 193A                              l354 24BC  
                            l450 3258                              l530 2A98  
                            l603 2BE0                              l195 3786  
                            l275 283A                              l283 27BA  
                            l291 2706                              l339 38F4  
                            l523 2B4C                              l188 37AC  
                            l276 2874                              l284 27C0  
                            l516 33D2                              l348 394E  
                            l444 32C0                              l189 37AE  
                            l277 287A                              l541 3936  
                            l453 31EE                              l533 29E2  
                            l198 3736                              l462 2D84  
                            l382 1E58                              l366 1CB6  
                            l438 193C                              l526 2A96  
                            l447 3256                              l551 3916  
                            l519 2B4A                              l472 2CE4  
                            l456 31F0                              l297 3030  
                            l377 1DFE                              l289 26C6  
                            l561 37EA                              l537 29E4  
                            l298 3034                              l466 2DD0  
                            l394 1A28                              l482 2C44  
                            l546 3926                              l476 2D30  
                            l556 3808                              l398 1BC8  
                            l486 2C90                              l566 37CC  
                            l873 22E2              MFRC522_Rd2@ucResult 0006  
                            _PEN 007E2A                              _SEN 007E28  
                            _pad 2588                              wreg 000FE8  
            MFRC522_Rd3@ucResult 0006                   ??_MFRC522_CRC2 0012  
                 ??_MFRC522_CRC3 0012                   ??_MFRC522_Halt 0020  
                 ??_MFRC522_Init 000D                  __end_of_LCD_Cmd 35C8  
                   ___fltol@exp1 000A                             l1104 0A0C  
                           l1121 0B26                             l1113 0CDC  
                           l1105 09FA                             l1130 0BF6  
                           l1106 09C0                             l1131 0BE4  
                           l1231 2080                             l1160 0ED6  
                           l1234 21DC                             l1314 164A  
                           l1330 3322                             l1171 0F94  
                           l1163 0E9A                             l1323 2028  
                           l1172 0F82                             l1316 16AE  
                           l1245 2174                             l1333 368A  
                           l1158 1076                             l1238 2118  
                           l1254 352C                             l4000 1FAA  
                           l1169 0F1C                             l1329 331A  
                           l1354 2586                             l1362 364E  
                           l1290 264C                             l4010 1FE6  
                           l4002 1FB8                             l1371 357A  
                           l1339 36FA                             l4100 299A  
                           l3300 24E2                             l4004 1FCC  
                           l1365 395C                             l1285 25CE  
                           l4030 2AC4                             l4022 2A9A  
                           l4110 29B0                             l3310 352E  
                           l3302 24EC                             l4014 1FF2  
                           l1295 1444                             l4120 3582  
                           l3400 2732                             l4032 2ACE  
                           l4024 2A9E                             l4112 29C0  
                           l3312 353A                             l3304 250A  
                           l3320 360C                             l1288 2610  
                           l1376 3602                             l4016 2016  
                           l4008 1FD8                             l5000 12CA  
                           l1385 36C2                             l1297 144C  
                           l4122 3594                             l3410 2778  
                           l3402 2756                             l4130 304E  
                           l4210 31D6                             l4202 318C  
                           l4050 2B46                             l4042 2B06  
                           l4034 2AF2                             l4026 2AA8  
                           l4114 29DE                             l4106 299E  
                           l3314 353E                             l3306 2540  
                           l3322 3618                             l5010 1300  
                           l5002 12D6                             l1379 360A  
                           l4300 2BA0                             l3332 3788  
                           l3340 3736                             l4124 35A4  
                           l3500 301E                             l4220 2D4E  
                           l3420 27A0                             l3404 2758  
                           l4140 3068                             l4132 3058  
                           l4212 31EA                             l4204 3196  
                           l4044 2B16                             l4036 2B02  
                           l4028 2AB4                             l4060 2A00  
                           l4108 29AE                             l3316 356E  
                           l3324 362A                             l5020 1352  
                           l5012 130C                             l5004 12E2  
                           l4302 2BBE                             l3334 3796  
                           l3342 3744                             l4126 35B6  
                           l4118 357E                             l3350 27D0  
                           l3502 3020                             l4230 2D82  
                           l4222 2D60                             l3422 27A2  
                           l3406 275E                             l3430 2658  
                           l4150 3088                             l4142 306E  
                           l4134 305E                             l4206 31A2  
                           l4046 2B18                             l4062 2A10  
                           l4054 29E6                             l4310 081E  
                           l3326 362E                             l5030 1376  
                           l5022 1364                             l5006 12E6  
                           l5014 132A                             l4304 2BCE  
                           l3336 3760                             l3360 2810  
                           l3352 27E4                             l3344 27C4  
                           l4232 2D8C                             l4224 2D64  
                           l4216 2D32                             l3424 27BE  
                           l3416 2782                             l3408 2760  
                           l3520 2F44                             l3504 2F08  
                           l4240 2C92                             l3432 265A  
                           l4160 30A8                             l4152 308E  
                           l4144 3070                             l4136 3060  
                           l4128 3036                             l4208 31C6  
                           l4048 2B28                             l4080 2A74  
                           l4064 2A1A                             l4056 29EA  
                           l4400 09DA                             l4320 085A  
                           l4312 082A                             l3328 368C  
                           l5040 13CC                             l5032 13A0  
                           l5024 1370                             l5016 1344  
                           l5008 12F6                             l4306 2BD0  
                           l3338 376E                             l3362 2812  
                           l3346 27CC                             l4234 2D8E  
                           l4226 2D66                             l4218 2D46  
                           l3418 2788                             l3530 2F7E  
                           l3522 2F46                             l3514 2F18  
                           l3506 2F0C                             l4250 2CC6  
                           l4242 2CA6                             l3450 26A6  
                           l3442 2678                             l3434 265C  
                           l4170 3944                             l4162 38F6  
                           l4154 3090                             l4146 3080  
                           l4138 3066                             l4082 2A92  
                           l4074 2A52                             l4066 2A3E  
                           l4058 29F4                             l4090 2940  
                           l4410 0A1A                             l4402 09DE  
                           l4330 088A                             l4322 086A  
                           l4314 0838                             l3602 35C8  
                           l5042 13D6                             l5034 13AC  
                           l5018 1348                             l4308 2BDA  
                           l3612 380C                             l3380 285C  
                           l3364 2818                             l3348 27CE  
                           l4236 2D9E                             l4228 2D78  
                           l3532 2F84                             l3524 2F56  
                           l3516 2F3C                             l3508 2F14  
                           l3620 3844                             l4260 2CFE  
                           l4252 2CD8                             l4244 2CAE  
                           l3460 26CE                             l3452 26BE  
                           l3444 269C                             l3436 2670  
                           l3428 2650                             l3540 2E74  
                           l4172 3938                             l4164 38E4  
                           l4156 3096                             l4148 3086  
                           l4180 3296                             l4076 2A62  
                           l4068 2A4E                             l4092 294C  
                           l4500 0CB4                             l4420 0A5C  
                           l4412 0A2A                             l4404 09EC  
                           l4340 08B4                             l4332 089C  
                           l4324 086C                             l4316 083A  
                           l3700 1606                             l5036 13B8  
                           l3382 2878                             l3374 283C  
                           l3366 281A                             l3358 27EC  
                           l3470 2FA0                             l3614 385E  
                           l4238 2DAC                             l5230 1C0A  
                           l3390 2714                             l3534 2F86  
                           l3518 2F42                             l3622 3844  
                           l4262 2D0C                             l4254 2CE2  
                           l4246 2CC0                             l3462 26E6  
                           l3446 269E                             l3550 2EA4  
                           l3542 2E7C                             l3630 3832  
                           l4270 2C20                             l4166 38D2  
                           l4158 3098                             l4182 32A6  
                           l4174 325C                             l4190 31FE  
                           l4078 2A64                             l4094 295C  
                           l4086 2932                             l4502 0CB6  
                           l4430 0A8A                             l4422 0A6A  
                           l4406 09EE                             l4342 08C4  
                           l4350 08EE                             l4334 089E  
                           l4318 084A                             l4326 0874  
                           l3606 35C8                             l3710 1670  
                           l3702 1620                             l5038 13BC  
                           l5046 13E6                             l3720 3710  
                           l5232 316A                             l3376 2842  
                           l3368 2832                             l3480 2FB0  
                           l3472 2FA4                             l3616 385E  
                           l3632 38A8                             l3800 1E22  
                           l3392 2716                             l3536 2F88  
                           l3528 2F5A                             l3624 384C  
                           l3640 3890                             l4256 2CEC  
                           l4248 2CC4                             l3464 26E8  
                           l3448 26A4                             l3552 2EAA  
                           l4280 2C4C                             l4272 2C24  
                           l4264 2BF2                             l4168 3950  
                           l4184 32BA                             l4176 3266  
                           l4192 320A                             l4096 2966  
                           l4088 2936                             l4504 0CBC  
                           l4440 0AF6                             l4432 0A94  
                           l4424 0A76                             l4416 0A3E  
                           l4408 09F8                             l4360 0926  
                           l4352 08FE                             l4344 08D4  
                           l4336 08A4                             l4328 0884  
                           l4600 0F02                             l4520 0D0A  
                           l4512 0CDE                             l3296 24BE  
                           l3608 35F6                             l3712 1686  
                           l3704 163A                             l5048 1400  
                           l4290 2B5E                             l3722 3716  
                           l3378 285A                             l3490 2FEE  
                           l3482 2FD4                             l3474 2FAC  
                           l3618 3866                             l3634 38A8  
                           l3802 1E3E                             l3730 1BCE  
                           l3394 272A                             l3386 270A  
                           l3642 3898                             l4258 2CEE  
                           l3466 2704                             l3458 26C8  
                           l3570 2EF0                             l3562 2EC2  
                           l3554 2EAC                             l3538 2E70  
                           l3626 382A                             l4282 2C4E  
                           l4274 2C26                             l4266 2C06  
                           l5226 16EE                             l4178 3272  
                           l4194 322E                             l4098 298A  
                           l4506 0CCA                             l4442 0B06  
                           l4426 0A7A                             l4418 0A4E  
                           l4434 0A9A                             l4370 093A  
                           l4362 092A                             l4354 0910  
                           l4346 08E4                             l4338 08B2  
                           l4610 0F3E                             l4602 0F0C  
                           l4530 0D44                             l4522 0D1A  
                           l4514 0CEA                             l3298 24D0  
                           l3706 165A                             l3650 140C  
                           l4292 2B74                             l3724 371E  
                           l3716 36FE                             l3484 2FDA  
                           l3636 38B0                             l3804 1E52  
                           l3740 1C20                             l3732 1BDE  
                           l3388 2712                             l5228 197C  
                           l3820 1968                             l3812 1940  
                           l3564 2EE6                             l3556 2EAE  
                           l3548 2E80                             l3628 382A  
                           l3644 3878                             l4284 2C5E  
                           l4276 2C38                             l4268 2C0E  
                           l4196 323E                             l4188 31F4  
                           l4508 0CCC                             l4460 0B88  
                           l4452 0B60                             l4436 0AC0  
                           l4444 0B16                             l4428 0A88  
                           l4380 094E                             l4372 093E  
                           l4364 092E                             l4356 091E  
                           l4348 08E6                             l4620 0FB0  
                           l4612 0F4C                             l4604 0F1A  
                           l4540 0D70                             l4532 0D4A  
                           l4524 0D2A                             l4516 0CF8  
                           l4700 2090                             l3580 25C6  
                           l3572 2588                             l3708 1660  
                           l3660 146A                             l3652 141C  
                           l4294 2B7C                             l3726 3724  
                           l3718 3708                             l3494 2FF2  
                           l3486 2FDC                             l3750 1C8C  
                           l3742 1C4A                             l3734 1BEA  
                           l3638 3890                             l3830 19E2  
                           l3822 1992                             l3814 1950  
                           l3566 2EEC                             l3558 2EBE  
                           l3646 3878                             l4286 2C6C  
                           l4278 2C42                             l3910 1750  
                           l3902 16DA                             l4198 3252  
                           l4462 0B90                             l4454 0B6A  
                           l4446 0B3C                             l4438 0AF4  
                           l4470 0BB4                             l4390 0962  
                           l4382 0952                             l4374 0942  
                           l4366 0932                             l4358 0922  
                           l4630 101C                             l4622 0FBE  
                           l4614 0F7A                             l4606 0F2C  
                           l4550 0DAA                             l4542 0D80  
                           l4534 0D50                             l4526 0D2C  
                           l4518 0CFA                             l4710 20CE  
                           l4702 20A6                             l3590 2634  
                           l3582 25DA                             l3574 2598  
                           l3670 14A8                             l3662 148A  
                           l3654 141E                             ?_pad 0011  
                           l4296 2B88                             l4288 2B4E  
                           l3728 372C                             l3496 3016  
                           l3488 2FDE                             l3760 1CC4  
                           l3752 1C96                             l3744 1C56  
                           l3840 1A30                             l3832 19FE  
                           l3824 19BC                             l3816 195C  
                           l3568 2EEE                             l3648 3880  
                           l3920 1796                             l3912 1754  
                           l3904 1704                             l4800 3928  
                           l4480 0C06                             l4472 0BB8  
                           l4464 0B94                             l4456 0B78  
                           l4448 0B4C                             l4392 098C  
                           l4384 0956                             l4376 0946  
                           l4368 0936                             l4640 106A  
                           l4632 1036                             l4624 0FE8  
                           l4608 0F3A                             l4552 0DC0  
                           l4544 0D90                             l4536 0D5E  
                           l4528 0D34                             l4720 2156  
                           l4712 2100                             l3584 25EE  
                           l3576 25AC                             l3672 14C4  
                           l3664 1492                             l3656 1438  
                           l4298 2B96                             l3498 301C  
                           l3770 1D14                             l3762 1CD6  
                           l3754 1CA8                             l3746 1C6C  
                           l3738 1BF6                             l3850 1A74  
                           l3842 1A36                             l3834 1A08  
                           l3826 19C8                             l3930 17DC  
                           l3922 17A2                             l3914 1770  
                           l3906 172E                             l4490 0C6C  
                           l4482 0C12                             l4474 0BC6  
                           l4466 0BA4                             l4458 0B7A  
                           l4394 09A8                             l4386 095A  
                           l4378 094A                             l4642 106C  
                           l4634 1052                             l4618 0FA4  
                           l4626 0FEC                             l4570 0E14  
                           l4554 0DD0                             l4562 0DF0  
                           l4546 0D92                             l4538 0D60  
                           l4650 21DE                             l4730 21AC  
                           l4722 2164                             l4714 2102  
                           l4706 20BA                             l3594 36C4  
                           l3586 25F2                             l3578 25BA  
                           l3690 1562                             l3674 14D4  
                           l3666 149A                             l3658 1462  
                           l3780 1D5C                             l3772 1D2E  
                           l3764 1CE4                             l3756 1CB2  
                           l3748 1C70                             l4900 344C  
                           l3860 1ABC                             l3852 1A86  
                           l3844 1A48                             l3836 1A1A  
                           l3828 19DE                             l3940 182A  
                           l3932 17E6                             l3924 17A8  
                           l3916 177A                             l3908 173A  
                           l4492 0C7C                             l4484 0C20  
                           l4476 0BDC                             l4468 0BA6  
                           l4396 09B8                             l4388 095E  
                           l4636 1056                             l4628 1006  
                           l4580 0E66                             l4572 0E2E  
                           l4564 0E00                             l4556 0DD8  
                           l4548 0D9A                             l4660 2234  
                           l4652 21F4                             l4732 21BC  
                           l4724 2182                             l4716 210E  
                           l4708 20C2                             l3588 2620  
                           l3692 1568                             l3684 150C  
                           l3668 14A0                             l4740 32C2  
                           l4750 348C                             l3790 1DE6  
                           l3782 1D6E                             l3774 1D32  
                           l3766 1CF8                             l3758 1CBE  
                           l4902 3456                             l3870 1B48  
                           l3862 1ACE                             l3854 1AA0  
                           l3846 1A56                             l3838 1A24  
                           l4910 33F4                             l3950 18A6  
                           l3942 182E                             l3934 17F8  
                           l3926 17BA                             l3918 178C  
                           l4806 37EC                             l4822 37CE  
                           l4494 0C9C                             l4486 0C5A  
                           l4398 09CE                             l4638 1064  
                           l4590 0EC2                             l4582 0E76  
                           l4574 0E3E                             l4566 0E00  
                           l4558 0DDC                             l4662 2244  
                           l4734 21CA                             l4726 2184  
                           l4718 214A                             l3598 3650  
                           l3694 156E                             l3686 153E  
                           l3678 14E0                             l4742 32CA  
                           l4752 34D6                             l4760 230E  
                           l3792 1DEA                             l3784 1D7E  
                           l3776 1D46                             l3768 1D02  
                           l4904 3478                             l3880 1B90  
                           l3872 1B58                             l3864 1AE0  
                           l3856 1AA4                             l3848 1A6A  
                           l4912 33FE                             l3960 18EE  
                           l3952 18BA                             l3944 1840  
                           l3936 1812                             l3928 17C8  
                           l4920 339C                             l4816 3918  
                           l4832 3908                             l4808 37F8  
                           l4824 37DA                             l4840 37BC  
                           l4496 0CA0                             l4488 0C5C  
                           l4592 0EC4                             l4584 0E8A  
                           l4576 0E4E                             l4672 226E  
                           l4664 2248                             l4656 2208  
                           l4736 21CC                             l4728 2188  
                           l3688 1552                             l3696 15CC  
                           l4744 32D8                ?_LCD_Write_Nibble 0001  
                           l4770 2358                             l4762 231C  
                           l4754 22E6                             l4850 3126  
                           l3794 1DFA                             l3786 1DC2  
                           l3778 1D4A                             l3882 1B94  
                           l3874 1B5C                             l3866 1AF0  
                           l3858 1AB8                             l4914 3420  
                           l4906 33D4                             l3962 1902  
                           l3954 18CA                             l3946 1852  
                           l3938 1816                             l4922 33A6  
                           l4498 0CAE                             l4594 0ED4  
                           l4586 0E98                             l4578 0E5E  
                           l4690 22D2                             l4682 2296  
                           l4674 2278                             l4666 2256  
                           l4658 2232                             l3698 15E8  
                           l4746 32FE                             l4930 10C4  
                           l4748 3484                             l4772 2376  
                           l4764 2330                             l4756 22EA  
                           l4852 3132                             l3796 1E0A  
                           l3788 1DD6                             l3884 1BB0  
                           l3876 1B6C                             l3868 1B34  
                           l4908 33DC                             l3964 1906  
                           l3956 18CE                             l3948 1862  
                           l4924 33C8                             l4916 337C  
                           l4780 23D2                             l4596 0EE6  
                           l4588 0EA4                             l4684 22A2  
                           l4676 2282                             l3980 1E8C  
                           l4940 1104                             l4932 10D0  
                           l4774 237C                             l4766 2336  
                           l4758 22F0                             l4854 313E  
                           l3798 1E1E                             l3878 1B7C  
                           l3886 1BC4                             l3966 1922  
                           l3958 18DE                             l3894 16B2  
                           l4918 3384                             l4782 23EC  
                           l4838 37B0                             l4598 0EFC  
                           l4686 22B2                             l4694 202C  
                           l4790 2E60                             l4870 30F4  
                           l3990 1F00                             l3982 1E9E  
                           l4950 115A                             l4942 1114  
                           l4934 10DC                             l4926 1078  
                           l4776 239A                             l4768 234A  
                           l4856 314A                             l4848 3122  
                           l3968 1936                             l3896 16C2  
                           l4688 22C2                             l4696 203C  
                           l4792 2E64                             l4784 2DD2  
                           l4872 30F6                             l4864 30B0  
                           l3992 1F0E                             l3984 1EA2  
                           l3976 1E5A                             l4880 34FE  
                           l4960 11C4                             l4952 1178  
                           l4944 1120                             l4936 10EC  
                           l4928 10AA                             l4778 23B2  
                           l4858 3156                             l4890 2888  
                           l3898 16CE                             l4698 204A  
                           l4794 2E66                             l4786 2DD6  
                           l4866 30BE                             l3994 1F4A  
                           l3986 1EC6                             l3978 1E7E  
                           l4882 351A                             l4874 34DC  
                           l4970 1200                             l4954 1196  
                           l4946 112C                             l4938 10F8  
                           l4892 28F2                             l4796 2E68  
                           l4788 2E5C                             l4868 30C6  
                           l3988 1EEA                             l4876 34EE  
                           l4980 1236                             l4972 120C  
                           l4956 11A6                             l4948 113C  
                           l4894 28F4                             l4886 287C  
                           l4798 2E6A                             l3998 1F86  
                           l4878 34F6                             l4990 128E  
                           l4974 1210                             l4966 11CA  
                           l4958 11B8                             l4982 1254  
                           l4888 2880                             l4896 342C  
                           l4992 129A                             l4984 126E  
                           l4976 1220                             l4968 11F4  
                           l4898 3434                             l4986 1272  
                           l4978 122A                             l4988 127C  
                           l4998 12A0                             STR_1 0810  
                           STR_2 0819                             STR_3 0801  
                           STR_4 0813                             STR_5 0819  
                           STR_6 0806                             STR_7 0816  
                           STR_8 0819                             STR_9 080B  
                           _CREN 007D5C                             u3010 2F56  
                           u3011 2F52                             u3020 2F6C  
                           u3100 2F00                             u3021 2F64  
                           u3101 2EFC                             u3110 2598  
                           u3111 2594                             u3040 2F98  
                           u3008 2F2C                             u4000 2C5E  
                           u3120 25BA                             u3200 141C  
                           u3041 2F94                             u4001 2C5A  
                           u3121 25B6                             u3201 1418  
                           u3050 2E92                             u4010 2C6C  
                           u3130 2610                             u3210 1438  
                           u3051 2E8A                             u4011 2C68  
                           u3131 260C                             u3211 1434  
                           u4020 2B74                             u4100 08C4  
                           u3140 2620                             u3300 163A  
                           u3220 1462                             u4021 2B70  
                           u4101 08C0                             u3141 261C  
                           u3301 1636                             u3221 145E  
                           u4030 2B96                             u3038 2F6E  
                           u3070 2EBE                             u4110 08D4  
                           u3150 36F4                             u3310 164A  
                           u3230 14C4                             u4031 2B92  
                           u3071 2EBA                             u4111 08D0  
                           u3151 36EE                             u3311 1646  
                           u3231 14C0                             u4040 2BBE  
                           u3400 1D46                             u3080 2ED4  
                           u4200 0A1A                             u4120 0910  
                           u3160 36F6                             u3320 165A  
                           u3240 150C                             u5000 1364  
                           u4041 2BBA                             u3401 1D42  
                           u3081 2ECC                             u4201 0A16  
                           u4121 090C                             u3321 1656  
                           u3241 1508                             u5001 1360  
                           u3410 1D5C                             u3330 1C8C  
                           u4210 0A2A                             u4130 091E  
                           u4050 0838                             u3170 3684  
                           u3250 153E                             u5010 13CC  
                           u3411 1D58                             u3331 1C88  
                           u4211 0A26                             u4131 091A  
                           u4051 0834                             u3171 367E  
                           u3251 153A                             u5011 13C8  
                           u3420 1D7E                             u3340 1CA8  
                           u3500 1A6A                             u3068 2E94  
                           u4300 0B88                             u4220 0A5C  
                           u4140 098C                             u4060 084A  
                           u3180 3686                             u2700 36BC  
                           u3260 15A6                             u3421 1D7A  
                           u3341 1CA4                             u3501 1A66  
                           u4301 0B84                             u4221 0A58  
                           u4141 0988                             u4061 0846  
                           u2701 36B6                             u3430 1DE6  
                           u3350 1CD6                             u3510 1A86  
                           u4310 0BA4                             u4230 0A6A  
                           u4150 09A4                             u4070 085A  
                           u2630 24D0                             u2710 36BE  
                           u3190 35F6                             u3270 15E8  
                           u3431 1DE2                             u3351 1CD2  
                           u3511 1A82                             u4311 0BA0  
                           u4231 0A66                             u4151 099E  
                           u4071 0856                             u2631 24CC  
                           u3191 35F2                             u3271 15E4  
                           u2720 3796                             u2800 2832  
                           u3440 1DFA                             u3360 1CE4  
                           u3520 1AA0                             u3600 178C  
                           u4400 0C7C                             u4320 0BB4  
                           u4240 0A88                             u4160 09A6  
                           u4080 089C                             u2640 24E2  
                           u3280 1606                             u2721 3792  
                           u2801 282E                             u3441 1DF6  
                           u3361 1CE0                             u3521 1A9C  
                           u3601 1788                             u4401 0C78  
                           u4321 0BB0                             u4241 0A84  
                           u4081 0898                             u2641 24DE  
                           u3281 1602                             u3265 1594  
                           u2730 37AC                             u2810 2854  
                           u3450 1E3E                             u3370 1CF8  
                           u3530 1AB8                             u3098 2ED6  
                           u3610 17BA                             u4410 0C9C  
                           u4330 0BC6                             u4250 0AC0  
                           u4170 09CE                             u4090 08B2  
                           u2650 250A                             u3290 1620  
                           u2731 37A8                             u2811 284C  
                           u3451 1E3A                             u3371 1CF4  
                           u3531 1AB4                             u3611 17B6  
                           u4411 0C98                             u4331 0BC2  
                           u4251 0ABC                             u4171 09CA  
                           u4091 08AE                             u2651 2506  
                           u3291 161C                             u2740 376E  
                           u2820 2874                             u3380 1D14  
                           u3540 1ACE                             u3460 19FE  
                           u2900 26BE                             u3700 18DE  
                           u3620 17C8                             u4420 0CAE  
                           u4340 0BDC                             u4260 0B06  
                           u4180 09EC                             u4500 0DC0  
                           u2660 2540                             u2741 376A  
                           u2821 2870                             u3381 1D10  
                           u3541 1ACA                             u3461 19FA  
                           u2901 26BA                             u3701 18DA  
                           u3621 17C4                             u4421 0CAA  
                           u4341 0BD8                             u4261 0B02  
                           u4181 09E8                             u4501 0DBC  
                           u2661 253C                             u5117 10B6  
                           u2750 3784                             u3390 1D2E  
                           u2830 2744                             u3550 1AF0  
                           u3470 1A1A                             u2910 26E0  
                           u3710 1922                             u3630 17DC  
                           u4430 0CCA                             u4350 0BF2  
                           u4270 0B3C                             u4190 0A0C  
                           u4510 0E00                             u2670 355E  
                           u2751 3780                             u5207 233C  
                           u3391 1D2A                             u2831 273C  
                           u3551 1AEC                             u3471 1A16  
                           u2911 26D8                             u3711 191E  
                           u3631 17D8                             u4431 0CC6  
                           u4351 0BEE                             u4271 0B38  
                           u4191 0A08                             u4511 0DFC  
                           u5127 1242                             u2760 3744  
                           u3560 1B58                             u3480 1A48  
                           u2920 2700                             u3640 17F8  
                           u3800 2A74                             u4360 0C06  
                           u4280 0B4C                             u4600 0F7A  
                           u4520 0E76                             u4440 0CF8  
                           u2680 356E                             u3720 1E7E  
                           u2761 3740                             u5217 2350  
                           u3561 1B54                             u3481 1A44  
                           u2921 26FC                             u3641 17F4  
                           u3801 2A70                             u4361 0C02  
                           u4281 0B48                             u4601 0F76  
                           u4521 0E72                             u4441 0CF4  
                           u2681 356A                             u3721 1E7A  
                           u5137 1260                             u2770 375A  
                           u2818 2856                             u2930 2FC2  
                           u2850 2778                             u3570 1B6C  
                           u3490 1A56                             u3650 1812  
                           u3810 2A92                             u4370 0C20  
                           u4290 0B78                             u4610 0F90  
                           u4530 0E98                             u4450 0D0A  
                           u2690 364E                             u3730 1EC6  
                           u2771 3756                             u5227 2368  
                           u2931 2FBA                             u2851 2774  
                           u3571 1B68                             u3491 1A52  
                           u3651 180E                             u3811 2A8E  
                           u4371 0C1C                             u4291 0B74  
                           u4611 0F8C                             u4531 0E94  
                           u4451 0D06                             u2691 364A  
                           u3731 1EC2                             u5147 1318  
                           u2780 27FE                             u2860 279A  
                           u3580 1BB0                             u3660 182A  
                           u3900 3252                             u3820 299A  
                           u4380 0C5A                             u4620 0FA4  
                           u4540 0EC2                             u4460 0D1A  
                           u4700 226A                             u3740 1EEA  
                           u5237 2386                             u2781 27F6  
                           u2861 2792                             u3581 1BAC  
                           u3661 1826                             u3901 324E  
                           u3821 2996                             u4381 0C56  
                           u4621 0FA0                             u4541 0EBE  
                           u4461 0D16                             u4701 2266  
                           u2677 3554                             u3741 1EE6  
                           u5157 1336                             u2950 2FEE  
                           u2870 27BA                             u2918 26E2  
                           u3670 1840                             u3590 1770  
                           u3910 31D6                             u3830 29C0  
                           u4390 0C6C                             u4630 0FBE  
                           u4550 0EE6                             u4470 0D5E  
                           u4710 2292                             u3750 1FAA  
                           u5247 23A4                             u2951 2FEA  
                           u2871 27B6                             u3671 183C  
                           u3591 176C                             u3911 31D2  
                           u3831 29BC                             u4391 0C68  
                           u4631 0FBA                             u4551 0EE2  
                           u4471 0D5A                             u4711 228E  
                           u3751 1FA6                             u5167 13F2  
                           u2960 3004                             u2848 2746  
                           u2880 268A                             u3680 1862  
                           u3920 31EA                             u3760 2B02  
                           u3840 29DE                             u4640 1006  
                           u4560 0EFC                             u4480 0D70  
                           u4720 22B2                             u4800 2174  
                           u5257 23C2                             u5177 22FA  
                           u2961 2FFC                             u2881 2682  
                           u3681 185E                             u3921 31E6  
                           u3761 2AFE                             u3841 29DA  
                           u4641 1002                             u4561 0EF8  
                           u4481 0D6C                             u4721 22AE  
                           u4801 2170                             u3850 35A4  
                           u3930 2D78                             u3690 18CA  
                           u3770 2B28                             u4650 1036  
                           u4570 0F1A                             u4490 0D80  
                           u4730 22C2                             u4810 2182  
                           u5267 35BC                             u3851 35A0  
                           u5187 2314                             u3931 2D74  
                           u3691 18C6                             u3771 2B24  
                           u4651 1032                             u4571 0F16  
                           u4491 0D7C                             u4731 22BE  
                           u4811 217E                             u3860 35B6  
                           u4900 28E6                             u2980 3030  
                           u2948 2FC4                             u3940 2D9E  
                           u2868 279C                             u3780 2B46  
                           u4660 1064                             u4580 0F3A  
                           u4820 21BC                             u4740 203C  
                           _RCIF 007CF5                             _RCEN 007E2B  
                           u5277 372E                             u3861 35B2  
                           u5197 2328                             u2981 302C  
                           u3941 2D9A                             u3781 2B42  
                           u4661 1060                             u4581 0F36  
                           u4821 21B8                             u4741 2038  
                           u4910 2920                             u2798 2800  
                           u3950 2DAC                             u2990 2F2A  
                           u3870 32A6                             u3790 2A4E  
                           u4590 0F4C                             u4670 21F4  
                           u4830 21CA                             u4750 204A  
                           u3951 2DA8                             u2991 2F22  
                           u3871 32A2                             u3791 2A4A  
                           u4591 0F48                             u4671 21F0  
                           u4831 21C6                             u4751 2046  
                           u4920 2930                             u3960 2CD8  
                           u3880 32BA                             u4680 2228  
                           u4760 20A6                             u4840 331A  
                           u4921 292C                             u3961 2CD4  
                           u3881 32B6                             u4761 20A2  
                           u4841 3316                             u2978 3006  
                           u3970 2CFE                             u2898 268C  
                           u3890 323E                             u4690 2256  
                           u4770 20FC                             u4930 115A  
                           u4907 28DC                             u3971 2CFA  
                           u3891 323A                             u4691 2252  
                           u4771 20F8                             u4931 1156  
                           u3980 2D0C                             u4780 2146  
                           u4860 30BE                             u4940 1178  
                           u4917 2916                             u3981 2D08  
                           u4685 221E                             u4781 2142  
                           u4861 30BA                             u4941 1174  
                           u3990 2C38                             u4790 2164  
                           u4870 30F2                             u4950 1196  
                           u4855 34AE                             u3991 2C34  
                           u4791 2160                             u4951 1192  
                           u4880 311E                             u4960 11B8  
                           u4881 311A                             u4961 11B4  
                           u4890 28B4                             u4970 1220  
                           u4971 121C                             u4980 128E  
                           u4877 30E8                             u4981 128A  
                           u4990 12F6                             u4991 12F2  
                           u4897 28AA                             _RSEN 007E29  
                           _TXIF 007CF4               ??_LCD_Write_Nibble 0004  
           MFRC522_ToCard2@irqEn 001B                             _data 0114  
                           _dbuf 006D             MFRC522_ToCard3@irqEn 001B  
                           _main 1078                             _prec 0064  
          MFRC522_AntiColl@unLen 0024                             _nout 0060  
                           pad@i 0018                             pad@p 0015  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001A  
                           fsr2l 000FD9                             _xtoa 140C  
                           prodh 000FF4                             prodl 000FF3  
                           start 0000                 _MFRC522_AntiColl 2A9A  
                ___fldiv@new_exp 0020                      LCD_Goto@col 000A  
                    LCD_Goto@row 0007                     ___param_bank 000000  
         MFRC522_AntiColl2@unLen 0024                  ??_MFRC522_Halt2 0020  
                ??_MFRC522_Halt3 0020           MFRC522_AntiColl3@unLen 0024  
                ??_MFRC522_Reset 0006                            ??_pad 0017  
               __end_of_LCD_Goto 318A                    ___fltol@sign1 0009  
               _MFRC522_Set_Bit2 388E                 _MFRC522_Set_Bit3 3876  
                __end_of___fladd 0CDE                            ?_main 0001  
                          _ACKEN 007E2C                            _ACKDT 007E2D  
                __end_of___fldiv 1078          ?_MFRC522_ReadCardSerial 0028  
                __end_of___fltol 22E4                  __end_of___lldiv 2BF2  
                          ?_xtoa 001C               MFRC522_Halt2@unLen 0024  
             MFRC522_Halt3@unLen 0024                            _RCREG 000FAE  
                          _RCSTA 000FAB                     vfpfcnvrt@fmt 0041  
                          _UID_1 00B5                            _UID_2 00A1  
                          _UID_3 008D                     vfpfcnvrt@llu 0049  
                          _UID_4 0100                            _SPBRG 000FAF  
               _MFRC522_Request2 31F2                 _MFRC522_Request3 318A  
                          _TXREG 000FAD                            _TXSTA 000FAC  
                          _flags 0066                            _fputc 24BE  
                __end_of_isalpha 368C                            _fputs 360C  
         MFRC522_AntiColl@serNum 0020                            pad@fp 0011  
                          _width 0062                            _putch 395C  
                          main@i 00EF                  __end_of_islower 36C4  
                __end_of_isupper 36FC                            tablat 000FF5  
              _MFRC522_Clear_Bit 385C                            status 000FD8  
                __end_of_sprintf 352E                            xtoa@c 003D  
                          xtoa@d 001E                            xtoa@i 003B  
                          xtoa@n 0033                            xtoa@p 002F  
                          xtoa@w 0031                            xtoa@x 0026  
              _MFRC522_AntiColl2 29E6                _MFRC522_AntiColl3 2932  
             ?_MFRC522_Clear_Bit 000A                  __end_of_toupper 360C  
             MFRC522_AntiColl2@i 0027               MFRC522_AntiColl3@i 0027  
                    ?_USART_Init 0038               ?_MFRC522_AntiColl2 0020  
             ?_MFRC522_AntiColl3 0020                _MFRC522_AntennaOn 38F6  
                __initialization 3324                     __end_of_main 140C  
             ?_MFRC522_AntennaOn 0001              ??_MFRC522_Clear_Bit 000B  
                   __end_of_xtoa 16B0          MFRC522_AntiColl2@serNum 0020  
               ??_MFRC522_IsCard 0028          MFRC522_AntiColl3@serNum 0020  
      MFRC522_ReadCardSerial@str 0028              ??_MFRC522_AntiColl2 0022  
            ??_MFRC522_AntiColl3 0022   __end_of_MFRC522_ReadCardSerial 380A  
               ??_MFRC522_ToCard 0014                           ??_main 00ED  
            ??_MFRC522_AntennaOn 000D                __end_of_LCD_Begin 23D2  
                         ??_xtoa 0027                    __activetblptr 000002  
                      ??_LCD_Cmd 0005                  MFRC522_ToCard@i 001D  
                MFRC522_ToCard@n 001F            MFRC522_ToCard@backLen 0012  
              __end_of_LCD_Print 2932               MFRC522_Rd@ucResult 0006  
                MFRC522_Wr@value 0001        __end_of_MFRC522_Clear_Bit 3876  
          MFRC522_ToCard@_status 0019         ?_MFRC522_ReadCardSerial2 0028  
       ?_MFRC522_ReadCardSerial3 0028            MFRC522_ToCard@command 001C  
                         ?_fputc 0001                           ?_fputs 000A  
                         ?_putch 0001        __end_of_MFRC522_AntiColl2 2A9A  
      __end_of_MFRC522_AntiColl3 29E6            MFRC522_ToCard@sendLen 000F  
          MFRC522_ToCard@waitIRq 0018                           _SSPADD 000FC8  
                         _TRISC6 007CA6                           _TRISC7 007CA7  
                         _SSPBUF 000FC9                 __end_of___xxtofl 21DE  
      __end_of_MFRC522_AntennaOn 3908           MFRC522_ToCard2@backLen 0012  
            MFRC522_CRC2@dataOut 0010           MFRC522_ToCard3@backLen 0012  
            MFRC522_CRC3@dataOut 0010               MFRC522_Wr2@address 0003  
                   vfprintf@cfmt 0058             __end_of_MFRC522_CRC2 2D32  
           __end_of_MFRC522_CRC3 2C92           MFRC522_ToCard2@_status 0019  
         MFRC522_ToCard2@command 001C               MFRC522_Wr3@address 0003  
                      ??___fladd 0030             __end_of_MFRC522_Halt 3484  
                      ??___fldiv 0017             __end_of_MFRC522_Init 24BE  
         MFRC522_ToCard3@_status 0019           MFRC522_ToCard3@command 001C  
                      ??___fltol 0005          MFRC522_AntiColl@_status 0026  
                      ??___lldiv 0009           MFRC522_ToCard2@sendLen 000F  
         MFRC522_ToCard2@waitIRq 0018                           clear_0 335C  
                         clear_1 336C           MFRC522_ToCard3@sendLen 000F  
                         isa$std 000001                           pad@buf 0013  
         MFRC522_ToCard3@waitIRq 0018                           _strlen 352E  
                         fputc@c 0001                    USART_TxChar@i 0009  
                         fputs@c 000E                           fputs@i 000F  
                         fputs@s 000A                        ??_isalpha 0003  
             _MFRC522_Clear_Bit2 3842               _MFRC522_Clear_Bit3 3828  
                      ??_islower 0003                     __mediumconst 0000  
                         tblptrh 000FF7                        ??_isupper 0003  
                         tblptrl 000FF6                           tblptru 000FF8  
                         putch@c 0001                 __end_of_vfprintf 3324  
                      ??_sprintf 0060                           xtoa@fp 001C  
                      ??_toupper 0009              ?_MFRC522_Clear_Bit2 000A  
            ?_MFRC522_Clear_Bit3 000A                     ___xxtofl@arg 000B  
                   ___xxtofl@exp 000A                     ___xxtofl@val 0001  
                     __accesstop 0060          __end_of__initialization 3372  
                      ?_LCD_Goto 0007                    ___rparam_used 000001  
         MFRC522_Request@TagType 0020                     ??_MFRC522_Rd 0001  
                     ___fltol@f1 0001                     ??_MFRC522_Wr 0002  
             _MFRC522_AntennaOn2 38E4               _MFRC522_AntennaOn3 38D2  
             _MFRC522_AntennaOff 3950          I2CLCD_Init@i2c_clk_freq 000E  
                  _backlight_val 00F4                   __pcstackCOMRAM 0001  
                   __pidataBANK0 395E                     __pidataBANK1 38BE  
       MFRC522_AntiColl2@_status 0026                    ??_I2CLCD_Init 0012  
                  ??_I2CLCD_Stop 0001              ?_MFRC522_AntennaOn2 0001  
            ?_MFRC522_AntennaOn3 0001             ??_MFRC522_Clear_Bit2 000B  
           ??_MFRC522_Clear_Bit3 000B         MFRC522_AntiColl3@_status 0026  
            ?_MFRC522_AntennaOff 0001                    __end_of_fputc 2588  
                  __end_of_fputs 3650       MFRC522_ReadCardSerial2@str 0028  
     MFRC522_ReadCardSerial3@str 0028                   LCD_Cmd@Command 0006  
                  __end_of_putch 395E                 MFRC522_Halt@buff 0020  
         MFRC522_Request@_status 0023                ??_MFRC522_IsCard2 0028  
              ??_MFRC522_IsCard3 0028                 MFRC522_Rd@ucAddr 0004  
         MFRC522_Request@reqMode 0022  __end_of_MFRC522_ReadCardSerial2 37EC  
__end_of_MFRC522_ReadCardSerial3 37CE                ??_MFRC522_ToCard2 0014  
              ??_MFRC522_ToCard3 0014         __end_of_MFRC522_AntiColl 2B4E  
              ??_MFRC522_Set_Bit 000B               __end_of_MFRC522_Rd 287C  
             __end_of_MFRC522_Wr 3036                ??_MFRC522_Request 0022  
               MFRC522_Wr2@value 0001                 MFRC522_Wr3@value 0001  
                        ??_fputc 0005                          ??_fputs 000E  
           ??_MFRC522_AntennaOn2 000D             ??_MFRC522_AntennaOn3 000D  
           ??_MFRC522_AntennaOff 000D                          ??_putch 0001  
                     __pbssBANK0 0060                       __pbssBANK1 0100  
           MFRC522_Set_Bit2@addr 000C                 MFRC522_ToCard2@i 001D  
           MFRC522_Set_Bit3@addr 000C                 MFRC522_ToCard3@i 001D  
               MFRC522_ToCard2@n 001F                 MFRC522_ToCard3@n 001F  
           MFRC522_Set_Bit2@mask 000A             MFRC522_Set_Bit3@mask 000A  
                     ??_LCD_Goto 0008           MFRC522_ToCard@backData 0010  
       __end_of_MFRC522_Set_Bit2 38A6         __end_of_MFRC522_Set_Bit3 388E  
       __end_of_MFRC522_Request2 325A         __end_of_MFRC522_Request3 31F2  
              MFRC522_CRC@dataIn 000D               MFRC522_Set_Bit@tmp 000B  
              MFRC522_CRC@length 000F                 MFRC522_Wr@ucAddr 0004  
         MFRC522_ToCard@lastBits 001A                          ?_strlen 0001  
            __end_of_I2CLCD_Init 34DC                          _LCD_Cmd 357C  
            __end_of_I2CLCD_Stop 3788                        ?___xxtofl 0001  
         MFRC522_ToCard@sendData 000D                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
        MFRC522_ToCard2@backData 0010          MFRC522_ToCard3@backData 0010  
                   ??_USART_Init 003C                          __Hparam 0000  
                        __Lparam 0000          MFRC522_Request2@TagType 0020  
           MFRC522_Clear_Bit@tmp 000B              Expander_Write@value 0003  
           I2CLCD_Write@i2c_data 0002          MFRC522_Request3@TagType 0020  
                        ___fladd 081E                          ___fldiv 0CDE  
                        ___fltol 21DE                          ___lldiv 2B4E  
                      ?_vfprintf 0052                     __psmallconst 0800  
          __end_of_MFRC522_Halt2 342C            __end_of_MFRC522_Halt3 33D4  
        MFRC522_ToCard2@lastBits 001A                          __pcinit 3324  
          __end_of_MFRC522_Reset 30B0                          __ramtop 0800  
                        __ptext0 1078                          __ptext1 34DC  
                        __ptext2 32C2                          __ptext3 1E5A  
                        __ptext4 140C                          __ptext5 35C8  
                        __ptext6 368C                          __ptext7 2588  
                        __ptext8 360C                          __ptext9 24BE  
        MFRC522_ToCard3@lastBits 001A          MFRC522_ToCard2@sendData 000D  
                 _Expander_Write 380A                   USART_Init@temp 003C  
        MFRC522_Request2@_status 0023                          _isalpha 3650  
                     ??___xxtofl 0005          MFRC522_Request3@_status 0023  
                        _islower 368C          MFRC522_ToCard3@sendData 000D  
                        _isupper 36C4                        _LCD_Begin 22E4  
        MFRC522_Request2@reqMode 0022                     _MFRC522_CRC2 2C92  
                   _MFRC522_CRC3 2BF2               __end_of_USART_Init 2E6E  
        MFRC522_Request3@reqMode 0022                        _LCD_Print 287C  
                        _sprintf 34DC                     _MFRC522_Halt 342C  
                   _MFRC522_Init 23D2                          _toupper 35C8  
           end_of_initialization 3372                          fputc@fp 0003  
                  __Lmediumconst 0000                          fputs@fp 000C  
                ___lldiv@divisor 0005                  ___lldiv@counter 000D  
              __end_of_vfpfcnvrt 202A                        _RCSTAbits 000FAB  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                      _I2CLCD_Init 3484  
                     ??_vfprintf 0058                      _I2CLCD_Stop 3760  
              LCD_Write_Nibble@n 0004                          strlen@a 0003  
                        strlen@s 0001           __end_of_Expander_Write 3828  
                  ?_I2CLCD_Start 0001                        _PORTDbits 000F83  
                  ?_I2CLCD_Write 0001                      ___fladd@grs 0037  
                  ___xxtofl@sign 0009                        _TRISAbits 000F92  
                      _TRISDbits 000F95                       ?_LCD_Begin 0001  
              MFRC522_Rd2@ucAddr 0004                      ___fldiv@grs 0022  
                    ___fldiv@rem 001B                MFRC522_Rd3@ucAddr 0004  
                     ?_LCD_Print 0005              USART_Init@baud_rate 0038  
                  ??_MFRC522_CRC 0012                    ??_MFRC522_Rd2 0001  
                  ??_MFRC522_Rd3 0001                    ??_MFRC522_Wr2 0002  
                  ??_MFRC522_Wr3 0002              _MFRC522_AntennaOff2 3944  
            _MFRC522_AntennaOff3 3938                    ?_USART_TxChar 0005  
                _MFRC522_IsCard2 3918                  _MFRC522_IsCard3 3908  
                _MFRC522_ToCard2 193E                  _MFRC522_ToCard3 16B0  
               _LCD_Write_Nibble 36FC                       LCD_Print@i 000A  
                _MFRC522_Set_Bit 38A6                MFRC522_Halt2@buff 0020  
        MFRC522_Request@backBits 0024                MFRC522_Halt3@buff 0020  
            MFRC522_ToCard@irqEn 001B                      vfpfcnvrt@ap 0043  
                    vfpfcnvrt@fp 003F                  _MFRC522_Request 325A  
                 ??_I2CLCD_Start 0001                   ??_I2CLCD_Write 0001  
                ?_Expander_Write 0001             ?_MFRC522_AntennaOff2 0001  
           ?_MFRC522_AntennaOff3 0001                    __pbitbssBANK0 0798  
                 __end_of_strlen 357C              start_initialization 3324  
              MFRC522_Halt@unLen 0024                ?_MFRC522_AntiColl 0020  
              MFRC522_Rd@address 0003                MFRC522_AntiColl@i 0027  
                    __end_of_pad 264E               ??_MFRC522_AntiColl 0022  
         MFRC522_Clear_Bit2@addr 000C           MFRC522_Clear_Bit3@addr 000C  
         MFRC522_Clear_Bit2@mask 000A           MFRC522_Clear_Bit3@mask 000A  
                 ??_USART_TxChar 0007                ?_MFRC522_Set_Bit2 000A  
              ?_MFRC522_Set_Bit3 000A               MFRC522_CRC2@dataIn 000D  
             MFRC522_CRC3@dataIn 000D                ?_MFRC522_Request2 0020  
              ?_MFRC522_Request3 0020               ??_MFRC522_Set_Bit2 000B  
             ??_MFRC522_Set_Bit3 000B         ??_MFRC522_ReadCardSerial 002A  
                    vfprintf@fmt 0054               MFRC522_CRC2@length 000F  
            __end_of_MFRC522_CRC 2DD2              __end_of_MFRC522_Rd2 27C2  
            __end_of_MFRC522_Rd3 2708               MFRC522_CRC3@length 000F  
            __end_of_MFRC522_Wr2 2F9E              __end_of_MFRC522_Wr3 2F06  
              MFRC522_Wr2@ucAddr 0004               ??_MFRC522_Request2 0022  
             ??_MFRC522_Request3 0022                MFRC522_Wr3@ucAddr 0004  
                    __pdataBANK0 00F4                      __pdataBANK1 0114  
          ??_MFRC522_AntennaOff2 000D            ??_MFRC522_AntennaOff3 000D  
                       ??_strlen 0003                        ___fladd@a 002C  
                      ___fladd@b 0028                         ?_LCD_Cmd 0001  
                      ___fldiv@a 0013                        ___fldiv@b 000F  
                  __pcstackBANK0 00E0                      ??_LCD_Begin 0007  
                    _data_buffer 00C9                      ??_LCD_Print 0007  
        __end_of_MFRC522_IsCard2 3928          __end_of_MFRC522_IsCard3 3918  
        __end_of_MFRC522_ToCard2 1BCC          __end_of_MFRC522_ToCard3 193E  
                      __pnvBANK0 00F2              MFRC522_Set_Bit2@tmp 000B  
            MFRC522_Set_Bit3@tmp 000B          __end_of_MFRC522_Set_Bit 38BE  
        _MFRC522_ReadCardSerial2 37CE          _MFRC522_ReadCardSerial3 37B0  
             MFRC522_CRC@dataOut 0010          __end_of_MFRC522_Request 32C2  
            MFRC522_Set_Bit@addr 000C                MFRC522_Wr@address 0003  
            MFRC522_Set_Bit@mask 000A                         ?___fladd 0028  
                       ?___fldiv 000F                         ?___fltol 0001  
                       ?___lldiv 0001                 LCD_Print@LCD_Str 0005  
                    __smallconst 0800                         ?_isalpha 0001  
                       ?_islower 0001                         ?_isupper 0001  
                       ?_sprintf 005A                         ?_toupper 0007  
           __end_of_I2CLCD_Start 37B0                         _LCD_Goto 3120  
                    _MFRC522_CRC 2D32             __end_of_I2CLCD_Write 3760  
                    _MFRC522_Rd2 2708                      _MFRC522_Rd3 264E  
                       _LATAbits 000F89                      _MFRC522_Wr2 2F06  
                    _MFRC522_Wr3 2E6E                         _LATDbits 000F8C  
                       _PIE1bits 000F9D           MFRC522_IsCard2@TagType 0026  
                   ?_I2CLCD_Init 000E                     ?_I2CLCD_Stop 0001  
         MFRC522_IsCard3@TagType 0026                        _vfpfcnvrt 1E5A  
                      main@i_320 00F1                        main@i_316 00F0  
           __end_of_USART_TxChar 3120                   _MFRC522_IsCard 3928  
                 _MFRC522_ToCard 1BCC                       vfpfcnvrt@c 0051  
       __end_of_LCD_Write_Nibble 3734                        copy_data0 3338  
                       _i2c_addr 00F2                 ?_MFRC522_IsCard2 0026  
               ?_MFRC522_IsCard3 0026        ??_MFRC522_ReadCardSerial2 002A  
      ??_MFRC522_ReadCardSerial3 002A                         _TagType1 00DF  
                       _TagType2 00DE                         _TagType3 00DD  
                       _TagType4 0068                 ?_MFRC522_ToCard2 000D  
               ?_MFRC522_ToCard3 000D            MFRC522_Clear_Bit2@tmp 000B  
          MFRC522_Clear_Bit3@tmp 000B                 ?_MFRC522_Set_Bit 000A  
                       __Hrparam 0000            MFRC522_Clear_Bit@addr 000C  
               ?_MFRC522_Request 0020            MFRC522_Clear_Bit@mask 000A  
                     vfprintf@ap 0056                         __Lrparam 0000  
                     vfprintf@fp 0052                 ??_Expander_Write 0003  
                     ?_vfpfcnvrt 003F     MFRC522_AntiColl2@serNumCheck 0023  
         __end_of_MFRC522_IsCard 3938                       sprintf@fmt 005C  
       MFRC522_Request2@backBits 0024                         ___xxtofl 202A  
         __end_of_MFRC522_ToCard 1E5A           _MFRC522_ReadCardSerial 37EC  
       MFRC522_Request3@backBits 0024                         __ptext10 395C  
                       __ptext11 36C4                         __ptext20 37B0  
                       __ptext12 3650                         __ptext21 2932  
                       __ptext13 30B0                         __ptext30 3928  
                       __ptext22 37CE                         __ptext14 352E  
                       __ptext31 325A                         __ptext23 29E6  
                       __ptext15 2DD2                         __ptext40 337C  
                       __ptext32 23D2                         __ptext24 37EC  
                       __ptext16 202A                         __ptext41 16B0  
                       __ptext33 3036                         __ptext25 2A9A  
                       __ptext17 21DE                         __ptext50 388E  
                       __ptext42 2BF2                         __ptext34 38D2  
                       __ptext26 3908                         __ptext18 0CDE  
                       __ptext51 3842                         __ptext43 3876  
                       __ptext35 38E4                         __ptext27 318A  
                       __ptext19 081E                         __ptext60 27C2  
                       __ptext52 2F06                         __ptext44 3828  
                       __ptext36 38F6                         __ptext28 3918  
                       __ptext61 287C                         __ptext53 2708  
                       __ptext45 2E6E                         __ptext37 3938  
                       __ptext29 31F2                         __ptext70 3484  
                       __ptext62 3120                         __ptext54 342C  
                       __ptext46 264E                         __ptext38 3944  
                       __ptext71 2B4E                         __ptext63 22E4  
                       __ptext55 1BCC                         __ptext47 33D4  
                       __ptext39 3950                         __ptext64 357C  
                       __ptext56 2D32                         __ptext48 193E  
                       __ptext65 36FC                         __ptext57 38A6  
                       __ptext49 2C92                         __ptext66 380A  
                       __ptext58 385C                         __ptext67 3734  
                       __ptext59 2F9E                         __ptext68 3760  
                       __ptext69 3788      MFRC522_AntiColl@serNumCheck 0023  
                     _MFRC522_Rd 27C2                       _MFRC522_Wr 2F9E  
                       isa$xinst 000000                         _vfprintf 32C2  
                       _status_1 006C                         _status_2 006B  
                       _status_3 006A                         _status_4 0069  
                  _MFRC522_Halt2 33D4                    _MFRC522_Halt3 337C  
                  _MFRC522_Reset 3036     MFRC522_AntiColl3@serNumCheck 0023  
                ?_MFRC522_IsCard 0026                       _INTCONbits 000FF2  
                ?_MFRC522_ToCard 000D                         isalpha@c 0001  
                USART_TxChar@out 0005               LCD_Begin@_i2c_addr 0009  
                      sprintf@ap 00E0                         islower@c 0001  
               ___lldiv@dividend 0001                         isupper@c 0001  
          MFRC522_IsCard@TagType 0026      __end_of_MFRC522_AntennaOff2 3950  
    __end_of_MFRC522_AntennaOff3 3944       __end_of_MFRC522_Clear_Bit2 385C  
     __end_of_MFRC522_Clear_Bit3 3842                   ?_MFRC522_Halt2 0001  
                 ?_MFRC522_Halt3 0001                      ??_vfpfcnvrt 0045  
                 ?_MFRC522_Reset 0001                     _I2CLCD_Start 3788  
                   _I2CLCD_Write 3734                         sprintf@f 00E2  
                       sprintf@s 005A                 ___lldiv@quotient 0009  
                       toupper@c 0007       __end_of_MFRC522_AntennaOn2 38F6  
     __end_of_MFRC522_AntennaOn3 38E4       __end_of_MFRC522_AntennaOff 395C  
                  ?_MFRC522_CRC2 000D                    ?_MFRC522_CRC3 000D  
                  ?_MFRC522_Halt 0001                    ?_MFRC522_Init 0001  
                  ___fladd@signs 0034                     ?_MFRC522_CRC 000D  
                   ___fladd@aexp 0035                     ___fladd@bexp 0036  
                   ?_MFRC522_Rd2 0001                     ?_MFRC522_Rd3 0001  
                   ?_MFRC522_Wr2 0001                     ?_MFRC522_Wr3 0001  
                   _USART_TxChar 30B0                      ?_MFRC522_Rd 0001  
                    ?_MFRC522_Wr 0001               MFRC522_Rd2@address 0003  
                     _USART_Init 2DD2               MFRC522_Rd3@address 0003  
