

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Mar 22 18:20:52 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63  0000                     
    64                           ; Version 2.40
    65                           ; Generated 17/11/2021 GMT
    66                           ; 
    67                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F4550 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	idataBANK0
   101  00246A                     __pidataBANK0:
   102                           	callstack 0
   103                           
   104                           ;initializer for _backlight_val
   105  00246A  08                 	db	8
   106  0000                     _SSPSTAT	set	4039
   107  0000                     _SSPADD	set	4040
   108                           
   109                           	psect	nvBANK0
   110  0000D9                     __pnvBANK0:
   111                           	callstack 0
   112  0000D9                     _i2c_addr:
   113                           	callstack 0
   114  0000D9                     	ds	1
   115  0000                     _ACKEN	set	32300
   116  0000                     _ACKDT	set	32301
   117  0000                     _RCEN	set	32299
   118  0000                     _RSEN	set	32297
   119  0000                     _PEN	set	32298
   120  0000                     _SEN	set	32296
   121  0000                     _PORTDbits	set	3971
   122  0000                     _LATB7	set	31831
   123  0000                     _LATDbits	set	3980
   124  0000                     _TRISB7	set	31903
   125  0000                     _TRISDbits	set	3989
   126  0000                     _SSPCON2	set	4037
   127  0000                     _SSPCON1	set	4038
   128  0000                     _SSPBUF	set	4041
   129                           
   130                           	psect	smallconst
   131  000800                     __psmallconst:
   132                           	callstack 0
   133  000800  00                 	db	0
   134  000801                     STR_1:
   135  000801  57                 	db	87	;'W'
   136  000802  65                 	db	101	;'e'
   137  000803  6C                 	db	108	;'l'
   138  000804  63                 	db	99	;'c'
   139  000805  6F                 	db	111	;'o'
   140  000806  6D                 	db	109	;'m'
   141  000807  65                 	db	101	;'e'
   142  000808  00                 	db	0
   143  000809                     STR_4:
   144  000809  25                 	db	37
   145  00080A  58                 	db	88	;'X'
   146  00080B  00                 	db	0
   147  00080C                     STR_2:
   148  00080C  25                 	db	37
   149  00080D  64                 	db	100	;'d'
   150  00080E  00                 	db	0
   151  00080F  00                 	db	0	; dummy byte at the end
   152  0000                     
   153                           ; #config settings
   154                           
   155                           	psect	cinit
   156  0022F4                     __pcinit:
   157                           	callstack 0
   158  0022F4                     start_initialization:
   159                           	callstack 0
   160  0022F4                     __initialization:
   161                           	callstack 0
   162                           
   163                           ; Initialize objects allocated to BANK0 (1 bytes)
   164                           ; load TBLPTR registers with __pidataBANK0
   165  0022F4  0E6A               	movlw	low __pidataBANK0
   166  0022F6  6EF6               	movwf	tblptrl,c
   167  0022F8  0E24               	movlw	high __pidataBANK0
   168  0022FA  6EF7               	movwf	tblptrh,c
   169  0022FC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   170  0022FE  6EF8               	movwf	tblptru,c
   171  002300  0009               	tblrd		*+	;fetch initializer
   172  002302  CFF5 F0DB          	movff	tablat,__pdataBANK0
   173                           
   174                           ; Clear objects allocated to BITBANK0 (1 bytes)
   175  002306  0100               	movlb	0
   176  002308  6BDA               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
   177                           
   178                           ; Clear objects allocated to BANK0 (92 bytes)
   179  00230A  EE00  F060         	lfsr	0,__pbssBANK0
   180  00230E  0E5C               	movlw	92
   181  002310                     clear_0:
   182  002310  6AEE               	clrf	postinc0,c
   183  002312  06E8               	decf	wreg,f,c
   184  002314  E1FD               	bnz	clear_0
   185  002316                     end_of_initialization:
   186                           	callstack 0
   187  002316                     __end_of__initialization:
   188                           	callstack 0
   189  002316  0E00               	movlw	low (__Lmediumconst shr (0+16))
   190  002318  6EF8               	movwf	tblptru,c
   191  00231A  0100               	movlb	0
   192  00231C  EF5E  F009         	goto	_main	;jump to C main() function
   193                           
   194                           	psect	bitbssBANK0
   195  0006D0                     __pbitbssBANK0:
   196                           	callstack 0
   197  0006D0                     _RS:
   198                           	callstack 0
   199  0006D0                     	ds	1
   200                           
   201                           	psect	bssBANK0
   202  000060                     __pbssBANK0:
   203                           	callstack 0
   204  000060                     _nout:
   205                           	callstack 0
   206  000060                     	ds	2
   207  000062                     _width:
   208                           	callstack 0
   209  000062                     	ds	2
   210  000064                     _prec:
   211                           	callstack 0
   212  000064                     	ds	2
   213  000066                     _flags:
   214                           	callstack 0
   215  000066                     	ds	2
   216  000068                     _led:
   217                           	callstack 0
   218  000068                     	ds	2
   219  00006A                     _status:
   220                           	callstack 0
   221  00006A                     	ds	1
   222  00006B                     _dbuf:
   223                           	callstack 0
   224  00006B                     	ds	32
   225  00008B                     _temp:
   226                           	callstack 0
   227  00008B                     	ds	16
   228  00009B                     _UID:
   229                           	callstack 0
   230  00009B                     	ds	16
   231  0000AB                     _data_buffer:
   232                           	callstack 0
   233  0000AB                     	ds	16
   234  0000BB                     _TagType:
   235                           	callstack 0
   236  0000BB                     	ds	1
   237                           
   238                           	psect	dataBANK0
   239  0000DB                     __pdataBANK0:
   240                           	callstack 0
   241  0000DB                     _backlight_val:
   242                           	callstack 0
   243  0000DB                     	ds	1
   244                           
   245                           	psect	cstackBANK0
   246  0000BC                     __pcstackBANK0:
   247                           	callstack 0
   248  0000BC                     ?_vfprintf:
   249                           	callstack 0
   250  0000BC                     vfprintf@fp:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x0
   254  0000BC                     	ds	2
   255  0000BE                     vfprintf@fmt:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x2
   259  0000BE                     	ds	2
   260  0000C0                     vfprintf@ap:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x4
   264  0000C0                     	ds	2
   265  0000C2                     ?_sprintf:
   266                           	callstack 0
   267  0000C2                     sprintf@s:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x6
   271  0000C2                     	ds	2
   272  0000C4                     sprintf@fmt:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x8
   276  0000C4                     	ds	4
   277  0000C8                     sprintf@ap:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0xC
   281  0000C8                     	ds	2
   282  0000CA                     sprintf@f:
   283                           	callstack 0
   284                           
   285                           ; 11 bytes @ 0xE
   286  0000CA                     	ds	11
   287  0000D5                     _main$1289:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x19
   291  0000D5                     	ds	2
   292  0000D7                     main@i:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x1B
   296  0000D7                     	ds	2
   297                           
   298                           	psect	cstackCOMRAM
   299  000001                     __pcstackCOMRAM:
   300                           	callstack 0
   301  000001                     ??_I2CLCD_Start:
   302  000001                     ??_I2CLCD_Stop:
   303  000001                     ??_I2CLCD_Write:
   304  000001                     ??_MFRC522_Rd:
   305  000001                     ?_strlen:
   306                           	callstack 0
   307  000001                     ?_isupper:
   308                           	callstack 0
   309  000001                     ?_isalpha:
   310                           	callstack 0
   311  000001                     ?_islower:
   312                           	callstack 0
   313  000001                     ?___lldiv:
   314                           	callstack 0
   315  000001                     ?___aodiv:
   316                           	callstack 0
   317  000001                     ?___aomod:
   318                           	callstack 0
   319  000001                     MFRC522_Wr@value:
   320                           	callstack 0
   321  000001                     isalpha@c:
   322                           	callstack 0
   323  000001                     isupper@c:
   324                           	callstack 0
   325  000001                     fputc@c:
   326                           	callstack 0
   327  000001                     strlen@s:
   328                           	callstack 0
   329  000001                     islower@c:
   330                           	callstack 0
   331  000001                     ___lldiv@dividend:
   332                           	callstack 0
   333  000001                     ___aodiv@dividend:
   334                           	callstack 0
   335  000001                     ___aomod@dividend:
   336                           	callstack 0
   337                           
   338                           ; 8 bytes @ 0x0
   339  000001                     	ds	1
   340  000002                     ??_MFRC522_Wr:
   341  000002                     I2CLCD_Write@i2c_data:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0x1
   345  000002                     	ds	1
   346  000003                     ??_isupper:
   347  000003                     ??_isalpha:
   348  000003                     ??_islower:
   349  000003                     Expander_Write@value:
   350                           	callstack 0
   351  000003                     MFRC522_Rd@address:
   352                           	callstack 0
   353  000003                     MFRC522_Wr@address:
   354                           	callstack 0
   355  000003                     fputc@fp:
   356                           	callstack 0
   357  000003                     strlen@a:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x2
   361  000003                     	ds	1
   362  000004                     LCD_Write_Nibble@n:
   363                           	callstack 0
   364  000004                     MFRC522_Wr@ucAddr:
   365                           	callstack 0
   366  000004                     MFRC522_Rd@ucAddr:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x3
   370  000004                     	ds	1
   371  000005                     ??_LCD_Cmd:
   372  000005                     ??_fputc:
   373  000005                     MFRC522_Wr@i:
   374                           	callstack 0
   375  000005                     LCD_Print@LCD_Str:
   376                           	callstack 0
   377  000005                     ___lldiv@divisor:
   378                           	callstack 0
   379                           
   380                           ; 4 bytes @ 0x4
   381  000005                     	ds	1
   382  000006                     LCD_Cmd@Command:
   383                           	callstack 0
   384  000006                     MFRC522_Rd@ucResult:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x5
   388  000006                     	ds	1
   389  000007                     ??_LCD_Begin:
   390  000007                     ??_LCD_Print:
   391  000007                     ?_toupper:
   392                           	callstack 0
   393  000007                     LCD_Goto@row:
   394                           	callstack 0
   395  000007                     toupper@c:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x6
   399  000007                     	ds	1
   400  000008                     ??_LCD_Goto:
   401  000008                     MFRC522_Rd@i:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x7
   405  000008                     	ds	1
   406  000009                     ??_toupper:
   407  000009                     LCD_Begin@_i2c_addr:
   408                           	callstack 0
   409  000009                     ___lldiv@quotient:
   410                           	callstack 0
   411  000009                     ___aodiv@divisor:
   412                           	callstack 0
   413  000009                     ___aomod@divisor:
   414                           	callstack 0
   415                           
   416                           ; 8 bytes @ 0x8
   417  000009                     	ds	1
   418  00000A                     LCD_Goto@col:
   419                           	callstack 0
   420  00000A                     LCD_Print@i:
   421                           	callstack 0
   422  00000A                     MFRC522_Clear_Bit@mask:
   423                           	callstack 0
   424  00000A                     MFRC522_Set_Bit@mask:
   425                           	callstack 0
   426  00000A                     fputs@s:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x9
   430  00000A                     	ds	1
   431  00000B                     MFRC522_Clear_Bit@tmp:
   432                           	callstack 0
   433  00000B                     MFRC522_Set_Bit@tmp:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0xA
   437  00000B                     	ds	1
   438  00000C                     MFRC522_Clear_Bit@addr:
   439                           	callstack 0
   440  00000C                     MFRC522_Set_Bit@addr:
   441                           	callstack 0
   442  00000C                     fputs@fp:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0xB
   446  00000C                     	ds	1
   447  00000D                     ___lldiv@counter:
   448                           	callstack 0
   449  00000D                     MFRC522_ToCard@sendData:
   450                           	callstack 0
   451  00000D                     MFRC522_CRC@dataIn:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0xC
   455  00000D                     	ds	1
   456  00000E                     fputs@c:
   457                           	callstack 0
   458  00000E                     I2CLCD_Init@i2c_clk_freq:
   459                           	callstack 0
   460                           
   461                           ; 4 bytes @ 0xD
   462  00000E                     	ds	1
   463  00000F                     MFRC522_ToCard@sendLen:
   464                           	callstack 0
   465  00000F                     MFRC522_CRC@length:
   466                           	callstack 0
   467  00000F                     fputs@i:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0xE
   471  00000F                     	ds	1
   472  000010                     MFRC522_ToCard@backData:
   473                           	callstack 0
   474  000010                     MFRC522_CRC@dataOut:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0xF
   478  000010                     	ds	1
   479  000011                     ?_pad:
   480                           	callstack 0
   481  000011                     ___aodiv@counter:
   482                           	callstack 0
   483  000011                     ___aomod@counter:
   484                           	callstack 0
   485  000011                     pad@fp:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x10
   489  000011                     	ds	1
   490  000012                     ??_I2CLCD_Init:
   491  000012                     MFRC522_CRC@n:
   492                           	callstack 0
   493  000012                     ___aodiv@sign:
   494                           	callstack 0
   495  000012                     ___aomod@sign:
   496                           	callstack 0
   497  000012                     MFRC522_ToCard@backLen:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x11
   501  000012                     	ds	1
   502  000013                     ?_abs:
   503                           	callstack 0
   504  000013                     MFRC522_CRC@i:
   505                           	callstack 0
   506  000013                     pad@buf:
   507                           	callstack 0
   508  000013                     abs@a:
   509                           	callstack 0
   510  000013                     ___aodiv@quotient:
   511                           	callstack 0
   512                           
   513                           ; 8 bytes @ 0x12
   514  000013                     	ds	1
   515  000014                     ??_MFRC522_ToCard:
   516                           
   517                           ; 1 bytes @ 0x13
   518  000014                     	ds	1
   519  000015                     ??_abs:
   520  000015                     pad@p:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x14
   524  000015                     	ds	2
   525  000017                     ??_pad:
   526                           
   527                           ; 1 bytes @ 0x16
   528  000017                     	ds	1
   529  000018                     MFRC522_ToCard@waitIRq:
   530                           	callstack 0
   531  000018                     pad@i:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x17
   535  000018                     	ds	1
   536  000019                     MFRC522_ToCard@_status:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x18
   540  000019                     	ds	1
   541  00001A                     MFRC522_ToCard@lastBits:
   542                           	callstack 0
   543  00001A                     pad@w:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x19
   547  00001A                     	ds	1
   548  00001B                     MFRC522_ToCard@irqEn:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x1A
   552  00001B                     	ds	1
   553  00001C                     ?_dtoa:
   554                           	callstack 0
   555  00001C                     ?_xtoa:
   556                           	callstack 0
   557  00001C                     MFRC522_ToCard@command:
   558                           	callstack 0
   559  00001C                     dtoa@fp:
   560                           	callstack 0
   561  00001C                     xtoa@fp:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x1B
   565  00001C                     	ds	1
   566  00001D                     MFRC522_ToCard@i:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x1C
   570  00001D                     	ds	1
   571  00001E                     dtoa@d:
   572                           	callstack 0
   573  00001E                     xtoa@d:
   574                           	callstack 0
   575                           
   576                           ; 8 bytes @ 0x1D
   577  00001E                     	ds	1
   578  00001F                     MFRC522_ToCard@n:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x1E
   582  00001F                     	ds	1
   583  000020                     MFRC522_Request@TagType:
   584                           	callstack 0
   585  000020                     MFRC522_AntiColl@serNum:
   586                           	callstack 0
   587  000020                     MFRC522_Halt@buff:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x1F
   591  000020                     	ds	2
   592  000022                     MFRC522_Request@reqMode:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x21
   596  000022                     	ds	1
   597  000023                     MFRC522_Request@_status:
   598                           	callstack 0
   599  000023                     MFRC522_AntiColl@serNumCheck:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x22
   603  000023                     	ds	1
   604  000024                     MFRC522_Request@backBits:
   605                           	callstack 0
   606  000024                     MFRC522_Halt@unLen:
   607                           	callstack 0
   608  000024                     MFRC522_AntiColl@unLen:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x23
   612  000024                     	ds	2
   613  000026                     ??_dtoa:
   614  000026                     MFRC522_AntiColl@_status:
   615                           	callstack 0
   616  000026                     xtoa@x:
   617                           	callstack 0
   618  000026                     MFRC522_IsCard@TagType:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x25
   622  000026                     	ds	1
   623  000027                     ??_xtoa:
   624  000027                     MFRC522_AntiColl@i:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x26
   628  000027                     	ds	1
   629  000028                     MFRC522_ReadCardSerial@str:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x27
   633  000028                     	ds	2
   634  00002A                     
   635                           ; 1 bytes @ 0x29
   636  00002A                     	ds	4
   637  00002E                     _dtoa$929:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x2D
   641  00002E                     	ds	1
   642  00002F                     xtoa@p:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x2E
   646  00002F                     	ds	1
   647  000030                     dtoa@p:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x2F
   651  000030                     	ds	1
   652  000031                     xtoa@w:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x30
   656  000031                     	ds	1
   657  000032                     dtoa@w:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x31
   661  000032                     	ds	1
   662  000033                     xtoa@n:
   663                           	callstack 0
   664                           
   665                           ; 8 bytes @ 0x32
   666  000033                     	ds	1
   667  000034                     dtoa@s:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x33
   671  000034                     	ds	2
   672  000036                     dtoa@n:
   673                           	callstack 0
   674                           
   675                           ; 8 bytes @ 0x35
   676  000036                     	ds	5
   677  00003B                     xtoa@i:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x3A
   681  00003B                     	ds	2
   682  00003D                     xtoa@c:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x3C
   686  00003D                     	ds	1
   687  00003E                     dtoa@i:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x3D
   691  00003E                     	ds	2
   692  000040                     ?_vfpfcnvrt:
   693                           	callstack 0
   694  000040                     vfpfcnvrt@fp:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x3F
   698  000040                     	ds	2
   699  000042                     vfpfcnvrt@fmt:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x41
   703  000042                     	ds	2
   704  000044                     vfpfcnvrt@ap:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x43
   708  000044                     	ds	2
   709  000046                     ??_vfpfcnvrt:
   710                           
   711                           ; 1 bytes @ 0x45
   712  000046                     	ds	4
   713  00004A                     vfpfcnvrt@ll:
   714                           	callstack 0
   715                           
   716                           ; 8 bytes @ 0x49
   717  00004A                     	ds	8
   718  000052                     vfpfcnvrt@llu:
   719                           	callstack 0
   720                           
   721                           ; 8 bytes @ 0x51
   722  000052                     	ds	8
   723  00005A                     vfpfcnvrt@c:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0x59
   727  00005A                     	ds	1
   728  00005B                     vfprintf@cfmt:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x5A
   732  00005B                     	ds	2
   733  00005D                     ??_main:
   734                           
   735                           ; 1 bytes @ 0x5C
   736  00005D                     	ds	2
   737                           
   738 ;;
   739 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   740 ;;
   741 ;; *************** function _main *****************
   742 ;; Defined at:
   743 ;;		line 23 in file "main.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  i               2   27[BANK0 ] int 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   757 ;;      Params:         0       0       0       0       0       0       0       0       0
   758 ;;      Locals:         0       4       0       0       0       0       0       0       0
   759 ;;      Temps:          2       0       0       0       0       0       0       0       0
   760 ;;      Totals:         2       4       0       0       0       0       0       0       0
   761 ;;Total ram usage:        6 bytes
   762 ;; Hardware stack levels required when called: 8
   763 ;; This function calls:
   764 ;;		_I2CLCD_Init
   765 ;;		_LCD_Begin
   766 ;;		_LCD_Cmd
   767 ;;		_LCD_Goto
   768 ;;		_LCD_Print
   769 ;;		_MFRC522_AntiColl
   770 ;;		_MFRC522_Halt
   771 ;;		_MFRC522_Init
   772 ;;		_MFRC522_IsCard
   773 ;;		_MFRC522_ReadCardSerial
   774 ;;		_port_Init
   775 ;;		_sprintf
   776 ;;		_strlen
   777 ;; This function is called by:
   778 ;;		Startup code after reset
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text0
   783  0012BC                     __ptext0:
   784                           	callstack 0
   785  0012BC                     _main:
   786                           	callstack 23
   787  0012BC                     
   788                           ;main.c: 24:     port_Init();
   789  0012BC  EC31  F012         	call	_port_Init	;wreg free
   790  0012C0                     
   791                           ;main.c: 25:     I2CLCD_Init(100000);
   792  0012C0  0EA0               	movlw	160
   793  0012C2  6E0E               	movwf	I2CLCD_Init@i2c_clk_freq^0,c
   794  0012C4  0E86               	movlw	134
   795  0012C6  6E0F               	movwf	(I2CLCD_Init@i2c_clk_freq+1)^0,c
   796  0012C8  0E01               	movlw	1
   797  0012CA  6E10               	movwf	(I2CLCD_Init@i2c_clk_freq+2)^0,c
   798  0012CC  0E00               	movlw	0
   799  0012CE  6E11               	movwf	(I2CLCD_Init@i2c_clk_freq+3)^0,c
   800  0012D0  EC0E  F010         	call	_I2CLCD_Init	;wreg free
   801  0012D4                     
   802                           ;main.c: 26:     LCD_Begin(0x4E);
   803  0012D4  0E4E               	movlw	78
   804  0012D6  ECDE  F00B         	call	_LCD_Begin
   805  0012DA                     
   806                           ;main.c: 27:     MFRC522_Init();
   807  0012DA  ECB4  F00F         	call	_MFRC522_Init	;wreg free
   808  0012DE                     
   809                           ;main.c: 28:     _delay((unsigned long)((500)*(27000000/4000.0)));
   810  0012DE  0E12               	movlw	18
   811  0012E0  6E5E               	movwf	(??_main+1)^0,c
   812  0012E2  0E20               	movlw	32
   813  0012E4  6E5D               	movwf	??_main^0,c
   814  0012E6  0E10               	movlw	16
   815  0012E8                     u2687:
   816  0012E8  2EE8               	decfsz	wreg,f,c
   817  0012EA  D7FE               	bra	u2687
   818  0012EC  2E5D               	decfsz	??_main^0,f,c
   819  0012EE  D7FC               	bra	u2687
   820  0012F0  2E5E               	decfsz	(??_main+1)^0,f,c
   821  0012F2  D7FA               	bra	u2687
   822  0012F4                     
   823                           ;main.c: 30:     LCD_Goto(1, 1);
   824  0012F4  0E01               	movlw	1
   825  0012F6  6E07               	movwf	LCD_Goto@row^0,c
   826  0012F8  0E01               	movlw	1
   827  0012FA  EC1A  F00F         	call	_LCD_Goto
   828  0012FE                     
   829                           ;main.c: 31:     LCD_Print("Welcome");
   830  0012FE  0E01               	movlw	low STR_1
   831  001300  6E05               	movwf	LCD_Print@LCD_Str^0,c
   832  001302  0E08               	movlw	high STR_1
   833  001304  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
   834  001306  EC79  F00D         	call	_LCD_Print	;wreg free
   835  00130A                     
   836                           ;main.c: 32:     LATB7 = 1;
   837  00130A  8E8A               	bsf	3978,7,c	;volatile
   838  00130C                     
   839                           ;main.c: 34:     _delay((unsigned long)((2000)*(27000000/4000.0)));
   840  00130C  0E45               	movlw	69
   841  00130E  6E5E               	movwf	(??_main+1)^0,c
   842  001310  0E7D               	movlw	125
   843  001312  6E5D               	movwf	??_main^0,c
   844  001314  0E48               	movlw	72
   845  001316                     u2697:
   846  001316  2EE8               	decfsz	wreg,f,c
   847  001318  D7FE               	bra	u2697
   848  00131A  2E5D               	decfsz	??_main^0,f,c
   849  00131C  D7FC               	bra	u2697
   850  00131E  2E5E               	decfsz	(??_main+1)^0,f,c
   851  001320  D7FA               	bra	u2697
   852  001322                     
   853                           ;main.c: 35:     LCD_Cmd(0x01);
   854  001322  0E01               	movlw	1
   855  001324  EC63  F010         	call	_LCD_Cmd
   856  001328                     
   857                           ;main.c: 36:     LATB7 = 0;
   858  001328  9E8A               	bcf	3978,7,c	;volatile
   859  00132A                     l3115:
   860                           
   861                           ;main.c: 39:         MFRC522_IsCard(&TagType);
   862  00132A  0EBB               	movlw	low _TagType
   863  00132C  6E26               	movwf	MFRC522_IsCard@TagType^0,c
   864  00132E  0E00               	movlw	high _TagType
   865  001330  6E27               	movwf	(MFRC522_IsCard@TagType+1)^0,c
   866  001332  EC23  F012         	call	_MFRC522_IsCard	;wreg free
   867  001336                     
   868                           ;main.c: 40:         MFRC522_ReadCardSerial(&UID);
   869  001336  0E9B               	movlw	low _UID
   870  001338  6E28               	movwf	MFRC522_ReadCardSerial@str^0,c
   871  00133A  0E00               	movlw	high _UID
   872  00133C  6E29               	movwf	(MFRC522_ReadCardSerial@str+1)^0,c
   873  00133E  ECE3  F011         	call	_MFRC522_ReadCardSerial	;wreg free
   874  001342                     
   875                           ;main.c: 41:         status = MFRC522_AntiColl(&UID);
   876  001342  0E9B               	movlw	low _UID
   877  001344  6E20               	movwf	MFRC522_AntiColl@serNum^0,c
   878  001346  0E00               	movlw	high _UID
   879  001348  6E21               	movwf	(MFRC522_AntiColl@serNum+1)^0,c
   880  00134A  ECD4  F00D         	call	_MFRC522_AntiColl	;wreg free
   881  00134E  0100               	movlb	0	; () banked
   882  001350  6F6A               	movwf	_status& (0+255),b
   883  001352                     
   884                           ; BSR set to: 0
   885                           ;main.c: 43:         if (strlen(UID) == 1){
   886  001352  0E9B               	movlw	low _UID
   887  001354  6E01               	movwf	strlen@s^0,c
   888  001356  0E00               	movlw	high _UID
   889  001358  6E02               	movwf	(strlen@s+1)^0,c
   890  00135A  EC5F  F011         	call	_strlen	;wreg free
   891  00135E  0401               	decf	?_strlen^0,w,c
   892  001360  1002               	iorwf	(?_strlen+1)^0,w,c
   893  001362  A4D8               	btfss	status,2,c
   894  001364  EFB6  F009         	goto	u2651
   895  001368  EFB8  F009         	goto	u2650
   896  00136C                     u2651:
   897  00136C  EFE1  F009         	goto	l3129
   898  001370                     u2650:
   899  001370                     
   900                           ;main.c: 44:             LCD_Cmd(0x01);
   901  001370  0E01               	movlw	1
   902  001372  EC63  F010         	call	_LCD_Cmd
   903                           
   904                           ;main.c: 45:             LCD_Goto(1, 1);
   905  001376  0E01               	movlw	1
   906  001378  6E07               	movwf	LCD_Goto@row^0,c
   907  00137A  0E01               	movlw	1
   908  00137C  EC1A  F00F         	call	_LCD_Goto
   909  001380                     
   910                           ;main.c: 46:             sprintf(temp, "%d", strlen(UID));
   911  001380  0E9B               	movlw	low _UID
   912  001382  6E01               	movwf	strlen@s^0,c
   913  001384  0E00               	movlw	high _UID
   914  001386  6E02               	movwf	(strlen@s+1)^0,c
   915  001388  EC5F  F011         	call	_strlen	;wreg free
   916  00138C  C001  F0D5         	movff	?_strlen,_main$1289
   917  001390  C002  F0D6         	movff	?_strlen+1,_main$1289+1
   918  001394                     
   919                           ;main.c: 46:             sprintf(temp, "%d", strlen(UID));
   920  001394  0E8B               	movlw	low _temp
   921  001396  0100               	movlb	0	; () banked
   922  001398  6FC2               	movwf	sprintf@s& (0+255),b
   923  00139A  0E00               	movlw	high _temp
   924  00139C  6FC3               	movwf	(sprintf@s+1)& (0+255),b
   925  00139E  0E0C               	movlw	low STR_2
   926  0013A0  6FC4               	movwf	sprintf@fmt& (0+255),b
   927  0013A2  0E08               	movlw	high STR_2
   928  0013A4  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
   929  0013A6  C0D5  F0C6         	movff	_main$1289,?_sprintf+4
   930  0013AA  C0D6  F0C7         	movff	_main$1289+1,?_sprintf+5
   931  0013AE  EC3A  F010         	call	_sprintf	;wreg free
   932                           
   933                           ;main.c: 47:             LCD_Print(temp);
   934  0013B2  0E8B               	movlw	low _temp
   935  0013B4  6E05               	movwf	LCD_Print@LCD_Str^0,c
   936  0013B6  0E00               	movlw	high _temp
   937  0013B8  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
   938  0013BA  EC79  F00D         	call	_LCD_Print	;wreg free
   939                           
   940                           ;main.c: 48:         }
   941  0013BE  EF08  F00A         	goto	l3135
   942  0013C2                     l3129:
   943                           
   944                           ;main.c: 50:             LCD_Cmd(0x01);
   945  0013C2  0E01               	movlw	1
   946  0013C4  EC63  F010         	call	_LCD_Cmd
   947                           
   948                           ;main.c: 51:             LCD_Goto(1, 1);
   949  0013C8  0E01               	movlw	1
   950  0013CA  6E07               	movwf	LCD_Goto@row^0,c
   951  0013CC  0E01               	movlw	1
   952  0013CE  EC1A  F00F         	call	_LCD_Goto
   953  0013D2                     
   954                           ;main.c: 52:             sprintf(temp, "%d", strlen(UID));
   955  0013D2  0E9B               	movlw	low _UID
   956  0013D4  6E01               	movwf	strlen@s^0,c
   957  0013D6  0E00               	movlw	high _UID
   958  0013D8  6E02               	movwf	(strlen@s+1)^0,c
   959  0013DA  EC5F  F011         	call	_strlen	;wreg free
   960  0013DE  C001  F0D5         	movff	?_strlen,_main$1289
   961  0013E2  C002  F0D6         	movff	?_strlen+1,_main$1289+1
   962  0013E6                     
   963                           ;main.c: 52:             sprintf(temp, "%d", strlen(UID));
   964  0013E6  0E8B               	movlw	low _temp
   965  0013E8  0100               	movlb	0	; () banked
   966  0013EA  6FC2               	movwf	sprintf@s& (0+255),b
   967  0013EC  0E00               	movlw	high _temp
   968  0013EE  6FC3               	movwf	(sprintf@s+1)& (0+255),b
   969  0013F0  0E0C               	movlw	low STR_2
   970  0013F2  6FC4               	movwf	sprintf@fmt& (0+255),b
   971  0013F4  0E08               	movlw	high STR_2
   972  0013F6  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
   973  0013F8  C0D5  F0C6         	movff	_main$1289,?_sprintf+4
   974  0013FC  C0D6  F0C7         	movff	_main$1289+1,?_sprintf+5
   975  001400  EC3A  F010         	call	_sprintf	;wreg free
   976                           
   977                           ;main.c: 53:             LCD_Print(temp);
   978  001404  0E8B               	movlw	low _temp
   979  001406  6E05               	movwf	LCD_Print@LCD_Str^0,c
   980  001408  0E00               	movlw	high _temp
   981  00140A  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
   982  00140C  EC79  F00D         	call	_LCD_Print	;wreg free
   983  001410                     l3135:
   984                           
   985                           ;main.c: 56:         LCD_Goto(1, 2);
   986  001410  0E02               	movlw	2
   987  001412  6E07               	movwf	LCD_Goto@row^0,c
   988  001414  0E01               	movlw	1
   989  001416  EC1A  F00F         	call	_LCD_Goto
   990  00141A                     
   991                           ;main.c: 58:         if(status == 0) {
   992  00141A  0100               	movlb	0	; () banked
   993  00141C  516A               	movf	_status& (0+255),w,b
   994  00141E  A4D8               	btfss	status,2,c
   995  001420  EF14  F00A         	goto	u2661
   996  001424  EF16  F00A         	goto	u2660
   997  001428                     u2661:
   998  001428  EF55  F00A         	goto	l3155
   999  00142C                     u2660:
  1000  00142C                     
  1001                           ; BSR set to: 0
  1002                           ;main.c: 59:             for(int i = 0; i < 5; i++)
  1003  00142C  0E00               	movlw	0
  1004  00142E  6FD8               	movwf	(main@i+1)& (0+255),b
  1005  001430  0E00               	movlw	0
  1006  001432  6FD7               	movwf	main@i& (0+255),b
  1007  001434                     l3145:
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;main.c: 60:             {;main.c: 61:                 sprintf(data_buffer, "%X", UID[i]
      +                          );
  1011  001434  0EAB               	movlw	low _data_buffer
  1012  001436  6FC2               	movwf	sprintf@s& (0+255),b
  1013  001438  0E00               	movlw	high _data_buffer
  1014  00143A  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  1015  00143C  0E09               	movlw	low STR_4
  1016  00143E  6FC4               	movwf	sprintf@fmt& (0+255),b
  1017  001440  0E08               	movlw	high STR_4
  1018  001442  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
  1019  001444  0E9B               	movlw	low _UID
  1020  001446  25D7               	addwf	main@i& (0+255),w,b
  1021  001448  6ED9               	movwf	fsr2l,c
  1022  00144A  0E00               	movlw	high _UID
  1023  00144C  21D8               	addwfc	(main@i+1)& (0+255),w,b
  1024  00144E  6EDA               	movwf	fsr2h,c
  1025  001450  50DF               	movf	indf2,w,c
  1026  001452  6E5D               	movwf	??_main^0,c
  1027  001454  505D               	movf	??_main^0,w,c
  1028  001456  6FC6               	movwf	(?_sprintf+4)& (0+255),b
  1029  001458  6BC7               	clrf	(?_sprintf+5)& (0+255),b
  1030  00145A  EC3A  F010         	call	_sprintf	;wreg free
  1031  00145E                     
  1032                           ;main.c: 62:                 LCD_Print(data_buffer);
  1033  00145E  0EAB               	movlw	low _data_buffer
  1034  001460  6E05               	movwf	LCD_Print@LCD_Str^0,c
  1035  001462  0E00               	movlw	high _data_buffer
  1036  001464  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1037  001466  EC79  F00D         	call	_LCD_Print	;wreg free
  1038  00146A                     
  1039                           ;main.c: 63:             }
  1040  00146A  0100               	movlb	0	; () banked
  1041  00146C  4BD7               	infsnz	main@i& (0+255),f,b
  1042  00146E  2BD8               	incf	(main@i+1)& (0+255),f,b
  1043  001470                     
  1044                           ; BSR set to: 0
  1045  001470  BFD8               	btfsc	(main@i+1)& (0+255),7,b
  1046  001472  EF44  F00A         	goto	u2671
  1047  001476  51D8               	movf	(main@i+1)& (0+255),w,b
  1048  001478  E109               	bnz	u2670
  1049  00147A  0E05               	movlw	5
  1050  00147C  5DD7               	subwf	main@i& (0+255),w,b
  1051  00147E  A0D8               	btfss	status,0,c
  1052  001480  EF44  F00A         	goto	u2671
  1053  001484  EF46  F00A         	goto	u2670
  1054  001488                     u2671:
  1055  001488  EF1A  F00A         	goto	l3145
  1056  00148C                     u2670:
  1057  00148C                     
  1058                           ; BSR set to: 0
  1059                           ;main.c: 64:             LATB7 = 1;
  1060  00148C  8E8A               	bsf	3978,7,c	;volatile
  1061  00148E                     
  1062                           ; BSR set to: 0
  1063                           ;main.c: 65:             _delay((unsigned long)((1000)*(27000000/4000.0)));
  1064  00148E  0E23               	movlw	35
  1065  001490  6E5E               	movwf	(??_main+1)^0,c
  1066  001492  0E3F               	movlw	63
  1067  001494  6E5D               	movwf	??_main^0,c
  1068  001496  0E22               	movlw	34
  1069  001498                     u2707:
  1070  001498  2EE8               	decfsz	wreg,f,c
  1071  00149A  D7FE               	bra	u2707
  1072  00149C  2E5D               	decfsz	??_main^0,f,c
  1073  00149E  D7FC               	bra	u2707
  1074  0014A0  2E5E               	decfsz	(??_main+1)^0,f,c
  1075  0014A2  D7FA               	bra	u2707
  1076  0014A4  D000               	nop2	
  1077                           
  1078                           ;main.c: 66:         } else {
  1079  0014A6  EF95  F009         	goto	l3115
  1080  0014AA                     l3155:
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;main.c: 67:             _delay((unsigned long)((50)*(27000000/4000.0)));
  1084  0014AA  0E02               	movlw	2
  1085  0014AC  6E5E               	movwf	(??_main+1)^0,c
  1086  0014AE  0EB7               	movlw	183
  1087  0014B0  6E5D               	movwf	??_main^0,c
  1088  0014B2  0E4C               	movlw	76
  1089  0014B4                     u2717:
  1090  0014B4  2EE8               	decfsz	wreg,f,c
  1091  0014B6  D7FE               	bra	u2717
  1092  0014B8  2E5D               	decfsz	??_main^0,f,c
  1093  0014BA  D7FC               	bra	u2717
  1094  0014BC  2E5E               	decfsz	(??_main+1)^0,f,c
  1095  0014BE  D7FA               	bra	u2717
  1096  0014C0  D000               	nop2	
  1097  0014C2                     
  1098                           ;main.c: 68:             LATB7 = 0;
  1099  0014C2  9E8A               	bcf	3978,7,c	;volatile
  1100  0014C4                     
  1101                           ;main.c: 69:             MFRC522_Halt();
  1102  0014C4  ECE2  F00F         	call	_MFRC522_Halt	;wreg free
  1103  0014C8  EF95  F009         	goto	l3115
  1104  0014CC  EF00  F000         	goto	start
  1105  0014D0                     __end_of_main:
  1106                           	callstack 0
  1107                           
  1108 ;; *************** function _sprintf *****************
  1109 ;; Defined at:
  1110 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  s               2    6[BANK0 ] PTR unsigned char 
  1113 ;;		 -> data_buffer(16), temp(16), 
  1114 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  1115 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  f              11   14[BANK0 ] struct _IO_FILE
  1118 ;;  ap              2   12[BANK0 ] PTR void [1]
  1119 ;;		 -> ?_sprintf(2), 
  1120 ;;  ret             2    0        int 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  2    6[BANK0 ] int 
  1123 ;; Registers used:
  1124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1130 ;;      Params:         0       6       0       0       0       0       0       0       0
  1131 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1133 ;;      Totals:         0      19       0       0       0       0       0       0       0
  1134 ;;Total ram usage:       19 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 7
  1137 ;; This function calls:
  1138 ;;		_vfprintf
  1139 ;; This function is called by:
  1140 ;;		_main
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text1
  1145  002074                     __ptext1:
  1146                           	callstack 0
  1147  002074                     _sprintf:
  1148                           	callstack 23
  1149  002074  0EC6               	movlw	low (?_sprintf+4)
  1150  002076  0100               	movlb	0	; () banked
  1151  002078  6FC8               	movwf	sprintf@ap& (0+255),b
  1152  00207A  0E00               	movlw	high (?_sprintf+4)
  1153  00207C  6FC9               	movwf	(sprintf@ap+1)& (0+255),b
  1154  00207E  C0C2  F0CA         	movff	sprintf@s,sprintf@f
  1155  002082  C0C3  F0CB         	movff	sprintf@s+1,sprintf@f+1
  1156  002086                     
  1157                           ; BSR set to: 0
  1158  002086  0E00               	movlw	0
  1159  002088  6FCE               	movwf	(sprintf@f+4)& (0+255),b
  1160  00208A  0E00               	movlw	0
  1161  00208C  6FCD               	movwf	(sprintf@f+3)& (0+255),b
  1162  00208E                     
  1163                           ; BSR set to: 0
  1164  00208E  0E00               	movlw	0
  1165  002090  6FD4               	movwf	(sprintf@f+10)& (0+255),b
  1166  002092  0E00               	movlw	0
  1167  002094  6FD3               	movwf	(sprintf@f+9)& (0+255),b
  1168  002096                     
  1169                           ; BSR set to: 0
  1170  002096  0ECA               	movlw	low sprintf@f
  1171  002098  6FBC               	movwf	vfprintf@fp& (0+255),b
  1172  00209A  0E00               	movlw	high sprintf@f
  1173  00209C  6FBD               	movwf	(vfprintf@fp+1)& (0+255),b
  1174  00209E  C0C4  F0BE         	movff	sprintf@fmt,vfprintf@fmt
  1175  0020A2  C0C5  F0BF         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1176  0020A6  0EC8               	movlw	low sprintf@ap
  1177  0020A8  6FC0               	movwf	vfprintf@ap& (0+255),b
  1178  0020AA  0E00               	movlw	high sprintf@ap
  1179  0020AC  6FC1               	movwf	(vfprintf@ap+1)& (0+255),b
  1180  0020AE  EC83  F00F         	call	_vfprintf	;wreg free
  1181  0020B2  0100               	movlb	0	; () banked
  1182  0020B4  51CD               	movf	(sprintf@f+3)& (0+255),w,b
  1183  0020B6  25C2               	addwf	sprintf@s& (0+255),w,b
  1184  0020B8  6ED9               	movwf	fsr2l,c
  1185  0020BA  51CE               	movf	(sprintf@f+4)& (0+255),w,b
  1186  0020BC  21C3               	addwfc	(sprintf@s+1)& (0+255),w,b
  1187  0020BE  6EDA               	movwf	fsr2h,c
  1188  0020C0  0E00               	movlw	0
  1189  0020C2  6EDF               	movwf	indf2,c
  1190  0020C4                     
  1191                           ; BSR set to: 0
  1192  0020C4  0012               	return		;funcret
  1193  0020C6                     __end_of_sprintf:
  1194                           	callstack 0
  1195                           
  1196 ;; *************** function _vfprintf *****************
  1197 ;; Defined at:
  1198 ;;		line 1390 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1201 ;;		 -> sprintf@f(11), 
  1202 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1203 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  1204 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1205 ;;		 -> sprintf@ap(2), 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  cfmt            2   90[COMRAM] PTR unsigned char 
  1208 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  2    0[BANK0 ] int 
  1211 ;; Registers used:
  1212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1218 ;;      Params:         0       6       0       0       0       0       0       0       0
  1219 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1221 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1222 ;;Total ram usage:        8 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; Hardware stack levels required when called: 6
  1225 ;; This function calls:
  1226 ;;		_vfpfcnvrt
  1227 ;; This function is called by:
  1228 ;;		_sprintf
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text2
  1233  001F06                     __ptext2:
  1234                           	callstack 0
  1235  001F06                     _vfprintf:
  1236                           	callstack 23
  1237  001F06                     
  1238                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1239  001F06  C0BE  F05B         	movff	vfprintf@fmt,vfprintf@cfmt
  1240  001F0A  C0BF  F05C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1241  001F0E                     
  1242                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1243  001F0E  0E00               	movlw	0
  1244  001F10  0100               	movlb	0	; () banked
  1245  001F12  6F61               	movwf	(_nout+1)& (0+255),b
  1246  001F14  0E00               	movlw	0
  1247  001F16  6F60               	movwf	_nout& (0+255),b
  1248                           
  1249                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1250  001F18  EFA1  F00F         	goto	l2751
  1251  001F1C                     l2749:
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1255  001F1C  C0BC  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1256  001F20  C0BD  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1257  001F24  0E5B               	movlw	low vfprintf@cfmt
  1258  001F26  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1259  001F28  0E00               	movlw	high vfprintf@cfmt
  1260  001F2A  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1261  001F2C  C0C0  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1262  001F30  C0C1  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1263  001F34  ECCB  F006         	call	_vfpfcnvrt	;wreg free
  1264  001F38  5040               	movf	?_vfpfcnvrt^0,w,c
  1265  001F3A  0100               	movlb	0	; () banked
  1266  001F3C  2760               	addwf	_nout& (0+255),f,b
  1267  001F3E  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1268  001F40  2361               	addwfc	(_nout+1)& (0+255),f,b
  1269  001F42                     l2751:
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1273  001F42  C05B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1274  001F46  C05C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1275  001F4A                     	if	0	;tblptru may be non-zero
  1276  001F4A                     	endif
  1277  001F4A                     	if	0	;tblptru may be non-zero
  1278  001F4A                     	endif
  1279  001F4A  0008               	tblrd		*
  1280  001F4C  50F5               	movf	tablat,w,c
  1281  001F4E  0900               	iorlw	0
  1282  001F50  A4D8               	btfss	status,2,c
  1283  001F52  EFAD  F00F         	goto	u2411
  1284  001F56  EFAF  F00F         	goto	u2410
  1285  001F5A                     u2411:
  1286  001F5A  EF8E  F00F         	goto	l2749
  1287  001F5E                     u2410:
  1288  001F5E                     
  1289                           ; BSR set to: 0
  1290                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1291  001F5E  C060  F0BC         	movff	_nout,?_vfprintf
  1292  001F62  C061  F0BD         	movff	_nout+1,?_vfprintf+1
  1293  001F66                     
  1294                           ; BSR set to: 0
  1295  001F66  0012               	return		;funcret
  1296  001F68                     __end_of_vfprintf:
  1297                           	callstack 0
  1298                           
  1299 ;; *************** function _vfpfcnvrt *****************
  1300 ;; Defined at:
  1301 ;;		line 692 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1304 ;;		 -> sprintf@f(11), 
  1305 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1306 ;;		 -> vfprintf@cfmt(2), 
  1307 ;;  ap              2   67[COMRAM] PTR PTR void 
  1308 ;;		 -> sprintf@ap(2), 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;  llu             8   81[COMRAM] unsigned long long 
  1311 ;;  ll              8   73[COMRAM] long long 
  1312 ;;  f               4    0        long long 
  1313 ;;  vp              3    0        PTR void 
  1314 ;;  ct              3    0        unsigned char [3]
  1315 ;;  cp              3    0        PTR unsigned char 
  1316 ;;  i               2    0        int 
  1317 ;;  done            2    0        int 
  1318 ;;  c               1   89[COMRAM] unsigned char 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  2   63[COMRAM] int 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1328 ;;      Params:         6       0       0       0       0       0       0       0       0
  1329 ;;      Locals:        17       0       0       0       0       0       0       0       0
  1330 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1331 ;;      Totals:        27       0       0       0       0       0       0       0       0
  1332 ;;Total ram usage:       27 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; Hardware stack levels required when called: 5
  1335 ;; This function calls:
  1336 ;;		_dtoa
  1337 ;;		_fputc
  1338 ;;		_xtoa
  1339 ;; This function is called by:
  1340 ;;		_vfprintf
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text3
  1345  000D96                     __ptext3:
  1346                           	callstack 0
  1347  000D96                     _vfpfcnvrt:
  1348                           	callstack 23
  1349  000D96                     
  1350                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;D:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;D:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1351  000D96  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1352  000D9A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1353  000D9E  CFDE FFF6          	movff	postinc2,tblptrl
  1354  000DA2  CFDD FFF7          	movff	postdec2,tblptrh
  1355  000DA6                     	if	0	;tblptru may be non-zero
  1356  000DA6                     	endif
  1357  000DA6                     	if	0	;tblptru may be non-zero
  1358  000DA6                     	endif
  1359  000DA6  0008               	tblrd		*
  1360  000DA8  50F5               	movf	tablat,w,c
  1361  000DAA  0A25               	xorlw	37
  1362  000DAC  A4D8               	btfss	status,2,c
  1363  000DAE  EFDB  F006         	goto	u2221
  1364  000DB2  EFDD  F006         	goto	u2220
  1365  000DB6                     u2221:
  1366  000DB6  EFFB  F007         	goto	l2625
  1367  000DBA                     u2220:
  1368  000DBA                     
  1369                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1370  000DBA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1371  000DBE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1372  000DC2  2ADE               	incf	postinc2,f,c
  1373  000DC4  0E00               	movlw	0
  1374  000DC6  22DD               	addwfc	postdec2,f,c
  1375  000DC8                     
  1376                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1377  000DC8  0E00               	movlw	0
  1378  000DCA  0100               	movlb	0	; () banked
  1379  000DCC  6F63               	movwf	(_width+1)& (0+255),b
  1380  000DCE  0E00               	movlw	0
  1381  000DD0  6F62               	movwf	_width& (0+255),b
  1382  000DD2  C062  F066         	movff	_width,_flags
  1383  000DD6  C063  F067         	movff	_width+1,_flags+1
  1384  000DDA                     
  1385                           ; BSR set to: 0
  1386                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1387  000DDA  6964               	setf	_prec& (0+255),b
  1388  000DDC  6965               	setf	(_prec+1)& (0+255),b
  1389  000DDE                     
  1390                           ; BSR set to: 0
  1391                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1392  000DDE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1393  000DE2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1394  000DE6  CFDE FFF6          	movff	postinc2,tblptrl
  1395  000DEA  CFDD FFF7          	movff	postdec2,tblptrh
  1396  000DEE                     	if	0	;tblptru may be non-zero
  1397  000DEE                     	endif
  1398  000DEE                     	if	0	;tblptru may be non-zero
  1399  000DEE                     	endif
  1400  000DEE  0008               	tblrd		*
  1401  000DF0  50F5               	movf	tablat,w,c
  1402  000DF2  0A64               	xorlw	100
  1403  000DF4  B4D8               	btfsc	status,2,c
  1404  000DF6  EFFF  F006         	goto	u2231
  1405  000DFA  EF01  F007         	goto	u2230
  1406  000DFE                     u2231:
  1407  000DFE  EF13  F007         	goto	l2589
  1408  000E02                     u2230:
  1409  000E02                     
  1410                           ; BSR set to: 0
  1411  000E02  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1412  000E06  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1413  000E0A  CFDE FFF6          	movff	postinc2,tblptrl
  1414  000E0E  CFDD FFF7          	movff	postdec2,tblptrh
  1415  000E12                     	if	0	;tblptru may be non-zero
  1416  000E12                     	endif
  1417  000E12                     	if	0	;tblptru may be non-zero
  1418  000E12                     	endif
  1419  000E12  0008               	tblrd		*
  1420  000E14  50F5               	movf	tablat,w,c
  1421  000E16  0A69               	xorlw	105
  1422  000E18  A4D8               	btfss	status,2,c
  1423  000E1A  EF11  F007         	goto	u2241
  1424  000E1E  EF13  F007         	goto	u2240
  1425  000E22                     u2241:
  1426  000E22  EF53  F007         	goto	l2595
  1427  000E26                     u2240:
  1428  000E26                     l2589:
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1432  000E26  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1433  000E2A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1434  000E2E  2ADE               	incf	postinc2,f,c
  1435  000E30  0E00               	movlw	0
  1436  000E32  22DD               	addwfc	postdec2,f,c
  1437                           
  1438                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1439  000E34  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1440  000E38  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1441  000E3C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1442  000E40  0E02               	movlw	2
  1443  000E42  26DE               	addwf	postinc2,f,c
  1444  000E44  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1445  000E48  0E00               	movlw	0
  1446  000E4A  22DD               	addwfc	postdec2,f,c
  1447  000E4C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1448  000E50  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1449  000E54  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  1450  000E58  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  1451  000E5C  0E00               	movlw	0
  1452  000E5E  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1453  000E60  0EFF               	movlw	-1
  1454  000E62  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  1455  000E64  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  1456  000E66  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  1457  000E68  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  1458  000E6A  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  1459  000E6C  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  1460  000E6E                     
  1461                           ; BSR set to: 0
  1462                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1463  000E6E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1464  000E72  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1465  000E76  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1466  000E7A  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1467  000E7E  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1468  000E82  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1469  000E86  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1470  000E8A  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1471  000E8E  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1472  000E92  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1473  000E96  EC08  F004         	call	_dtoa	;wreg free
  1474  000E9A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1475  000E9E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1476  000EA2  EF16  F008         	goto	l1070
  1477  000EA6                     l2595:
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1481  000EA6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1482  000EAA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1483  000EAE  CFDE FFF6          	movff	postinc2,tblptrl
  1484  000EB2  CFDD FFF7          	movff	postdec2,tblptrh
  1485  000EB6                     	if	0	;tblptru may be non-zero
  1486  000EB6                     	endif
  1487  000EB6                     	if	0	;tblptru may be non-zero
  1488  000EB6                     	endif
  1489  000EB6  0008               	tblrd		*
  1490  000EB8  50F5               	movf	tablat,w,c
  1491  000EBA  0A78               	xorlw	120
  1492  000EBC  B4D8               	btfsc	status,2,c
  1493  000EBE  EF63  F007         	goto	u2251
  1494  000EC2  EF65  F007         	goto	u2250
  1495  000EC6                     u2251:
  1496  000EC6  EF77  F007         	goto	l2599
  1497  000ECA                     u2250:
  1498  000ECA                     
  1499                           ; BSR set to: 0
  1500  000ECA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1501  000ECE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1502  000ED2  CFDE FFF6          	movff	postinc2,tblptrl
  1503  000ED6  CFDD FFF7          	movff	postdec2,tblptrh
  1504  000EDA                     	if	0	;tblptru may be non-zero
  1505  000EDA                     	endif
  1506  000EDA                     	if	0	;tblptru may be non-zero
  1507  000EDA                     	endif
  1508  000EDA  0008               	tblrd		*
  1509  000EDC  50F5               	movf	tablat,w,c
  1510  000EDE  0A58               	xorlw	88
  1511  000EE0  A4D8               	btfss	status,2,c
  1512  000EE2  EF75  F007         	goto	u2261
  1513  000EE6  EF77  F007         	goto	u2260
  1514  000EEA                     u2261:
  1515  000EEA  EFC5  F007         	goto	l2609
  1516  000EEE                     u2260:
  1517  000EEE                     l2599:
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  1521  000EEE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1522  000EF2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1523  000EF6  CFDE FFF6          	movff	postinc2,tblptrl
  1524  000EFA  CFDD FFF7          	movff	postdec2,tblptrh
  1525  000EFE                     	if	0	;tblptru may be non-zero
  1526  000EFE                     	endif
  1527  000EFE                     	if	0	;tblptru may be non-zero
  1528  000EFE                     	endif
  1529  000EFE  0008               	tblrd		*
  1530  000F00  CFF5 F05A          	movff	tablat,vfpfcnvrt@c
  1531  000F04                     
  1532                           ; BSR set to: 0
  1533                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  1534  000F04  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1535  000F08  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1536  000F0C  2ADE               	incf	postinc2,f,c
  1537  000F0E  0E00               	movlw	0
  1538  000F10  22DD               	addwfc	postdec2,f,c
  1539  000F12                     
  1540                           ; BSR set to: 0
  1541                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1542  000F12  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1543  000F16  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1544  000F1A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1545  000F1E  0E02               	movlw	2
  1546  000F20  26DE               	addwf	postinc2,f,c
  1547  000F22  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1548  000F26  0E00               	movlw	0
  1549  000F28  22DD               	addwfc	postdec2,f,c
  1550  000F2A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1551  000F2E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1552  000F32  CFDE F048          	movff	postinc2,??_vfpfcnvrt+2
  1553  000F36  CFDD F049          	movff	postdec2,??_vfpfcnvrt+3
  1554  000F3A  C048  F052         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1555  000F3E  C049  F053         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1556  000F42  6A54               	clrf	(vfpfcnvrt@llu+2)^0,c
  1557  000F44  6A55               	clrf	(vfpfcnvrt@llu+3)^0,c
  1558  000F46  6A56               	clrf	(vfpfcnvrt@llu+4)^0,c
  1559  000F48  6A57               	clrf	(vfpfcnvrt@llu+5)^0,c
  1560  000F4A  6A58               	clrf	(vfpfcnvrt@llu+6)^0,c
  1561  000F4C  6A59               	clrf	(vfpfcnvrt@llu+7)^0,c
  1562  000F4E                     
  1563                           ; BSR set to: 0
  1564                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  1565  000F4E  C040  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  1566  000F52  C041  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1567  000F56  C052  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  1568  000F5A  C053  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1569  000F5E  C054  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1570  000F62  C055  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1571  000F66  C056  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1572  000F6A  C057  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1573  000F6E  C058  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1574  000F72  C059  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1575  000F76  C05A  F026         	movff	vfpfcnvrt@c,xtoa@x
  1576  000F7A  EC79  F005         	call	_xtoa	;wreg free
  1577  000F7E  C01C  F040         	movff	?_xtoa,?_vfpfcnvrt
  1578  000F82  C01D  F041         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1579  000F86  EF16  F008         	goto	l1070
  1580  000F8A                     l2609:
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1584  000F8A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1585  000F8E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1586  000F92  CFDE FFF6          	movff	postinc2,tblptrl
  1587  000F96  CFDD FFF7          	movff	postdec2,tblptrh
  1588  000F9A                     	if	0	;tblptru may be non-zero
  1589  000F9A                     	endif
  1590  000F9A                     	if	0	;tblptru may be non-zero
  1591  000F9A                     	endif
  1592  000F9A  0008               	tblrd		*
  1593  000F9C  50F5               	movf	tablat,w,c
  1594  000F9E  0A25               	xorlw	37
  1595  000FA0  A4D8               	btfss	status,2,c
  1596  000FA2  EFD5  F007         	goto	u2271
  1597  000FA6  EFD7  F007         	goto	u2270
  1598  000FAA                     u2271:
  1599  000FAA  EFEE  F007         	goto	l2619
  1600  000FAE                     u2270:
  1601  000FAE                     
  1602                           ; BSR set to: 0
  1603                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1604  000FAE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1605  000FB2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1606  000FB6  2ADE               	incf	postinc2,f,c
  1607  000FB8  0E00               	movlw	0
  1608  000FBA  22DD               	addwfc	postdec2,f,c
  1609  000FBC                     
  1610                           ; BSR set to: 0
  1611                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1612  000FBC  0E00               	movlw	0
  1613  000FBE  6E02               	movwf	(fputc@c+1)^0,c
  1614  000FC0  0E25               	movlw	37
  1615  000FC2  6E01               	movwf	fputc@c^0,c
  1616  000FC4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1617  000FC8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1618  000FCC  EC55  F00C         	call	_fputc	;wreg free
  1619  000FD0                     l2615:
  1620                           
  1621                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1622  000FD0  0E00               	movlw	0
  1623  000FD2  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1624  000FD4  0E01               	movlw	1
  1625  000FD6  6E40               	movwf	?_vfpfcnvrt^0,c
  1626  000FD8  EF16  F008         	goto	l1070
  1627  000FDC                     l2619:
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1631  000FDC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1632  000FE0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1633  000FE4  2ADE               	incf	postinc2,f,c
  1634  000FE6  0E00               	movlw	0
  1635  000FE8  22DD               	addwfc	postdec2,f,c
  1636  000FEA                     
  1637                           ; BSR set to: 0
  1638                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1639  000FEA  0E00               	movlw	0
  1640  000FEC  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1641  000FEE  0E00               	movlw	0
  1642  000FF0  6E40               	movwf	?_vfpfcnvrt^0,c
  1643  000FF2  EF16  F008         	goto	l1070
  1644  000FF6                     l2625:
  1645                           
  1646                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1647  000FF6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1648  000FFA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1649  000FFE  CFDE FFF6          	movff	postinc2,tblptrl
  1650  001002  CFDD FFF7          	movff	postdec2,tblptrh
  1651  001006                     	if	0	;tblptru may be non-zero
  1652  001006                     	endif
  1653  001006                     	if	0	;tblptru may be non-zero
  1654  001006                     	endif
  1655  001006  0008               	tblrd		*
  1656  001008  50F5               	movf	tablat,w,c
  1657  00100A  6E01               	movwf	fputc@c^0,c
  1658  00100C  6A02               	clrf	(fputc@c+1)^0,c
  1659  00100E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1660  001012  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1661  001016  EC55  F00C         	call	_fputc	;wreg free
  1662  00101A                     
  1663                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1664  00101A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1665  00101E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1666  001022  2ADE               	incf	postinc2,f,c
  1667  001024  0E00               	movlw	0
  1668  001026  22DD               	addwfc	postdec2,f,c
  1669  001028  EFE8  F007         	goto	l2615
  1670  00102C                     l1070:
  1671  00102C  0012               	return		;funcret
  1672  00102E                     __end_of_vfpfcnvrt:
  1673                           	callstack 0
  1674                           
  1675 ;; *************** function _xtoa *****************
  1676 ;; Defined at:
  1677 ;;		line 645 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1680 ;;		 -> sprintf@f(11), 
  1681 ;;  d               8   29[COMRAM] unsigned long long 
  1682 ;;  x               1   37[COMRAM] unsigned char 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  n               8   50[COMRAM] unsigned long long 
  1685 ;;  c               2   60[COMRAM] int 
  1686 ;;  i               2   58[COMRAM] int 
  1687 ;;  w               2   48[COMRAM] int 
  1688 ;;  p               2   46[COMRAM] int 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  2   27[COMRAM] int 
  1691 ;; Registers used:
  1692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1698 ;;      Params:        11       0       0       0       0       0       0       0       0
  1699 ;;      Locals:        16       0       0       0       0       0       0       0       0
  1700 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1701 ;;      Totals:        35       0       0       0       0       0       0       0       0
  1702 ;;Total ram usage:       35 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 4
  1705 ;; This function calls:
  1706 ;;		_isalpha
  1707 ;;		_isupper
  1708 ;;		_pad
  1709 ;;		_toupper
  1710 ;; This function is called by:
  1711 ;;		_vfpfcnvrt
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text4
  1716  000AF2                     __ptext4:
  1717                           	callstack 0
  1718  000AF2                     _xtoa:
  1719                           	callstack 23
  1720  000AF2                     
  1721                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;D:\Program Files\Microchip\xc8\v2.36\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;D:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  1722  000AF2  0100               	movlb	0	; () banked
  1723  000AF4  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1724  000AF6  EF7F  F005         	goto	u1961
  1725  000AFA  EF81  F005         	goto	u1960
  1726  000AFE                     u1961:
  1727  000AFE  EF82  F005         	goto	l2419
  1728  000B02                     u1960:
  1729  000B02                     
  1730                           ; BSR set to: 0
  1731                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  1732  000B02  9366               	bcf	_flags& (0+255),1,b
  1733  000B04                     l2419:
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  1737  000B04  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1738  000B06  EF8F  F005         	goto	u1970
  1739  000B0A  5165               	movf	(_prec+1)& (0+255),w,b
  1740  000B0C  E106               	bnz	u1971
  1741  000B0E  0564               	decf	_prec& (0+255),w,b
  1742  000B10  B0D8               	btfsc	status,0,c
  1743  000B12  EF8D  F005         	goto	u1971
  1744  000B16  EF8F  F005         	goto	u1970
  1745  000B1A                     u1971:
  1746  000B1A  EF95  F005         	goto	l1042
  1747  000B1E                     u1970:
  1748  000B1E                     
  1749                           ; BSR set to: 0
  1750  000B1E  0E00               	movlw	0
  1751  000B20  6E30               	movwf	(xtoa@p+1)^0,c
  1752  000B22  0E01               	movlw	1
  1753  000B24  6E2F               	movwf	xtoa@p^0,c
  1754  000B26  EF99  F005         	goto	l1044
  1755  000B2A                     l1042:
  1756                           
  1757                           ; BSR set to: 0
  1758  000B2A  C064  F02F         	movff	_prec,xtoa@p
  1759  000B2E  C065  F030         	movff	_prec+1,xtoa@p+1
  1760  000B32                     l1044:
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  1764  000B32  C062  F031         	movff	_width,xtoa@w
  1765  000B36  C063  F032         	movff	_width+1,xtoa@w+1
  1766                           
  1767                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  1768  000B3A  A966               	btfss	_flags& (0+255),4,b
  1769  000B3C  EFA2  F005         	goto	u1981
  1770  000B40  EFA4  F005         	goto	u1980
  1771  000B44                     u1981:
  1772  000B44  EFA8  F005         	goto	l2425
  1773  000B48                     u1980:
  1774  000B48                     
  1775                           ; BSR set to: 0
  1776                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  1777  000B48  0EFE               	movlw	254
  1778  000B4A  2631               	addwf	xtoa@w^0,f,c
  1779  000B4C  0EFF               	movlw	255
  1780  000B4E  2232               	addwfc	(xtoa@w+1)^0,f,c
  1781  000B50                     l2425:
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 661:     n = d;
  1785  000B50  C01E  F033         	movff	xtoa@d,xtoa@n
  1786  000B54  C01F  F034         	movff	xtoa@d+1,xtoa@n+1
  1787  000B58  C020  F035         	movff	xtoa@d+2,xtoa@n+2
  1788  000B5C  C021  F036         	movff	xtoa@d+3,xtoa@n+3
  1789  000B60  C022  F037         	movff	xtoa@d+4,xtoa@n+4
  1790  000B64  C023  F038         	movff	xtoa@d+5,xtoa@n+5
  1791  000B68  C024  F039         	movff	xtoa@d+6,xtoa@n+6
  1792  000B6C  C025  F03A         	movff	xtoa@d+7,xtoa@n+7
  1793  000B70                     
  1794                           ; BSR set to: 0
  1795                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  1796  000B70  0E00               	movlw	0
  1797  000B72  6E3C               	movwf	(xtoa@i+1)^0,c
  1798  000B74  0E1F               	movlw	31
  1799  000B76  6E3B               	movwf	xtoa@i^0,c
  1800  000B78                     
  1801                           ; BSR set to: 0
  1802                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  1803  000B78  0E00               	movlw	0
  1804  000B7A  6F8A               	movwf	(_dbuf+31)& (0+255),b
  1805                           
  1806                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1807  000B7C  EF59  F006         	goto	l2461
  1808  000B80                     l2431:
  1809                           
  1810                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 665:         --i;
  1811  000B80  063B               	decf	xtoa@i^0,f,c
  1812  000B82  A0D8               	btfss	status,0,c
  1813  000B84  063C               	decf	(xtoa@i+1)^0,f,c
  1814  000B86                     
  1815                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  1816  000B86  0E0F               	movlw	15
  1817  000B88  1433               	andwf	xtoa@n^0,w,c
  1818  000B8A  6E3D               	movwf	xtoa@c^0,c
  1819  000B8C  6A3E               	clrf	(xtoa@c+1)^0,c
  1820  000B8E                     
  1821                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  1822  000B8E  BE3E               	btfsc	(xtoa@c+1)^0,7,c
  1823  000B90  EFD3  F005         	goto	u1991
  1824  000B94  503E               	movf	(xtoa@c+1)^0,w,c
  1825  000B96  E109               	bnz	u1990
  1826  000B98  0E0A               	movlw	10
  1827  000B9A  5C3D               	subwf	xtoa@c^0,w,c
  1828  000B9C  A0D8               	btfss	status,0,c
  1829  000B9E  EFD3  F005         	goto	u1991
  1830  000BA2  EFD5  F005         	goto	u1990
  1831  000BA6                     u1991:
  1832  000BA6  EFDD  F005         	goto	l2439
  1833  000BAA                     u1990:
  1834  000BAA  0E57               	movlw	87
  1835  000BAC  243D               	addwf	xtoa@c^0,w,c
  1836  000BAE  6E3D               	movwf	xtoa@c^0,c
  1837  000BB0  0E00               	movlw	0
  1838  000BB2  203E               	addwfc	(xtoa@c+1)^0,w,c
  1839  000BB4  6E3E               	movwf	(xtoa@c+1)^0,c
  1840  000BB6  EFE3  F005         	goto	l2443
  1841  000BBA                     l2439:
  1842  000BBA  0E30               	movlw	48
  1843  000BBC  243D               	addwf	xtoa@c^0,w,c
  1844  000BBE  6E3D               	movwf	xtoa@c^0,c
  1845  000BC0  0E00               	movlw	0
  1846  000BC2  203E               	addwfc	(xtoa@c+1)^0,w,c
  1847  000BC4  6E3E               	movwf	(xtoa@c+1)^0,c
  1848  000BC6                     l2443:
  1849  000BC6  0EBF               	movlw	191
  1850  000BC8  6E27               	movwf	??_xtoa^0,c
  1851  000BCA  0EFF               	movlw	255
  1852  000BCC  6E28               	movwf	(??_xtoa+1)^0,c
  1853  000BCE  5026               	movf	xtoa@x^0,w,c
  1854  000BD0  6E29               	movwf	(??_xtoa+2)^0,c
  1855  000BD2  6A2A               	clrf	(??_xtoa+3)^0,c
  1856  000BD4  5027               	movf	??_xtoa^0,w,c
  1857  000BD6  2629               	addwf	(??_xtoa+2)^0,f,c
  1858  000BD8  5028               	movf	(??_xtoa+1)^0,w,c
  1859  000BDA  222A               	addwfc	(??_xtoa+3)^0,f,c
  1860  000BDC  502A               	movf	(??_xtoa+3)^0,w,c
  1861  000BDE  E107               	bnz	u2001
  1862  000BE0  0E1A               	movlw	26
  1863  000BE2  5C29               	subwf	(??_xtoa+2)^0,w,c
  1864  000BE4  B0D8               	btfsc	status,0,c
  1865  000BE6  EFF7  F005         	goto	u2001
  1866  000BEA  EFF9  F005         	goto	u2000
  1867  000BEE                     u2001:
  1868  000BEE  EF1C  F006         	goto	l2453
  1869  000BF2                     u2000:
  1870  000BF2  0E9F               	movlw	159
  1871  000BF4  6E27               	movwf	??_xtoa^0,c
  1872  000BF6  0EFF               	movlw	255
  1873  000BF8  6E28               	movwf	(??_xtoa+1)^0,c
  1874  000BFA  0E20               	movlw	32
  1875  000BFC  103D               	iorwf	xtoa@c^0,w,c
  1876  000BFE  6E29               	movwf	(??_xtoa+2)^0,c
  1877  000C00  0E00               	movlw	0
  1878  000C02  103E               	iorwf	(xtoa@c+1)^0,w,c
  1879  000C04  6E2A               	movwf	(??_xtoa+3)^0,c
  1880  000C06  5027               	movf	??_xtoa^0,w,c
  1881  000C08  2629               	addwf	(??_xtoa+2)^0,f,c
  1882  000C0A  5028               	movf	(??_xtoa+1)^0,w,c
  1883  000C0C  222A               	addwfc	(??_xtoa+3)^0,f,c
  1884  000C0E  502A               	movf	(??_xtoa+3)^0,w,c
  1885  000C10  E107               	bnz	u2011
  1886  000C12  0E1A               	movlw	26
  1887  000C14  5C29               	subwf	(??_xtoa+2)^0,w,c
  1888  000C16  B0D8               	btfsc	status,0,c
  1889  000C18  EF10  F006         	goto	u2011
  1890  000C1C  EF12  F006         	goto	u2010
  1891  000C20                     u2011:
  1892  000C20  EF1C  F006         	goto	l2453
  1893  000C24                     u2010:
  1894  000C24                     
  1895                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  1896  000C24  C03D  F007         	movff	xtoa@c,toupper@c
  1897  000C28  C03E  F008         	movff	xtoa@c+1,toupper@c+1
  1898  000C2C  EC89  F010         	call	_toupper	;wreg free
  1899  000C30  C007  F03D         	movff	?_toupper,xtoa@c
  1900  000C34  C008  F03E         	movff	?_toupper+1,xtoa@c+1
  1901  000C38                     l2453:
  1902                           
  1903                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  1904  000C38  0E6B               	movlw	low _dbuf
  1905  000C3A  243B               	addwf	xtoa@i^0,w,c
  1906  000C3C  6ED9               	movwf	fsr2l,c
  1907  000C3E  0E00               	movlw	high _dbuf
  1908  000C40  203C               	addwfc	(xtoa@i+1)^0,w,c
  1909  000C42  6EDA               	movwf	fsr2h,c
  1910  000C44  C03D  FFDF         	movff	xtoa@c,indf2
  1911  000C48                     
  1912                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 672:         --p;
  1913  000C48  062F               	decf	xtoa@p^0,f,c
  1914  000C4A  A0D8               	btfss	status,0,c
  1915  000C4C  0630               	decf	(xtoa@p+1)^0,f,c
  1916  000C4E                     
  1917                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 673:         --w;
  1918  000C4E  0631               	decf	xtoa@w^0,f,c
  1919  000C50  A0D8               	btfss	status,0,c
  1920  000C52  0632               	decf	(xtoa@w+1)^0,f,c
  1921  000C54                     
  1922                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  1923  000C54  C033  F027         	movff	xtoa@n,??_xtoa
  1924  000C58  C034  F028         	movff	xtoa@n+1,??_xtoa+1
  1925  000C5C  C035  F029         	movff	xtoa@n+2,??_xtoa+2
  1926  000C60  C036  F02A         	movff	xtoa@n+3,??_xtoa+3
  1927  000C64  C037  F02B         	movff	xtoa@n+4,??_xtoa+4
  1928  000C68  C038  F02C         	movff	xtoa@n+5,??_xtoa+5
  1929  000C6C  C039  F02D         	movff	xtoa@n+6,??_xtoa+6
  1930  000C70  C03A  F02E         	movff	xtoa@n+7,??_xtoa+7
  1931  000C74  0E05               	movlw	5
  1932  000C76  EF46  F006         	goto	u2020
  1933  000C7A                     u2025:
  1934  000C7A  90D8               	bcf	status,0,c
  1935  000C7C  322E               	rrcf	(??_xtoa+7)^0,f,c
  1936  000C7E  322D               	rrcf	(??_xtoa+6)^0,f,c
  1937  000C80  322C               	rrcf	(??_xtoa+5)^0,f,c
  1938  000C82  322B               	rrcf	(??_xtoa+4)^0,f,c
  1939  000C84  322A               	rrcf	(??_xtoa+3)^0,f,c
  1940  000C86  3229               	rrcf	(??_xtoa+2)^0,f,c
  1941  000C88  3228               	rrcf	(??_xtoa+1)^0,f,c
  1942  000C8A  3227               	rrcf	??_xtoa^0,f,c
  1943  000C8C                     u2020:
  1944  000C8C  2EE8               	decfsz	wreg,f,c
  1945  000C8E  EF3D  F006         	goto	u2025
  1946  000C92  C027  F033         	movff	??_xtoa,xtoa@n
  1947  000C96  C028  F034         	movff	??_xtoa+1,xtoa@n+1
  1948  000C9A  C029  F035         	movff	??_xtoa+2,xtoa@n+2
  1949  000C9E  C02A  F036         	movff	??_xtoa+3,xtoa@n+3
  1950  000CA2  C02B  F037         	movff	??_xtoa+4,xtoa@n+4
  1951  000CA6  C02C  F038         	movff	??_xtoa+5,xtoa@n+5
  1952  000CAA  C02D  F039         	movff	??_xtoa+6,xtoa@n+6
  1953  000CAE  C02E  F03A         	movff	??_xtoa+7,xtoa@n+7
  1954  000CB2                     l2461:
  1955                           
  1956                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1957  000CB2  BE3C               	btfsc	(xtoa@i+1)^0,7,c
  1958  000CB4  EF65  F006         	goto	u2031
  1959  000CB8  503C               	movf	(xtoa@i+1)^0,w,c
  1960  000CBA  E109               	bnz	u2030
  1961  000CBC  0E02               	movlw	2
  1962  000CBE  5C3B               	subwf	xtoa@i^0,w,c
  1963  000CC0  A0D8               	btfss	status,0,c
  1964  000CC2  EF65  F006         	goto	u2031
  1965  000CC6  EF67  F006         	goto	u2030
  1966  000CCA                     u2031:
  1967  000CCA  EF98  F006         	goto	l1061
  1968  000CCE                     u2030:
  1969  000CCE  5033               	movf	xtoa@n^0,w,c
  1970  000CD0  1034               	iorwf	(xtoa@n+1)^0,w,c
  1971  000CD2  1035               	iorwf	(xtoa@n+2)^0,w,c
  1972  000CD4  1036               	iorwf	(xtoa@n+3)^0,w,c
  1973  000CD6  1037               	iorwf	(xtoa@n+4)^0,w,c
  1974  000CD8  1038               	iorwf	(xtoa@n+5)^0,w,c
  1975  000CDA  1039               	iorwf	(xtoa@n+6)^0,w,c
  1976  000CDC  103A               	iorwf	(xtoa@n+7)^0,w,c
  1977  000CDE  A4D8               	btfss	status,2,c
  1978  000CE0  EF74  F006         	goto	u2041
  1979  000CE4  EF76  F006         	goto	u2040
  1980  000CE8                     u2041:
  1981  000CE8  EFC0  F005         	goto	l2431
  1982  000CEC                     u2040:
  1983  000CEC  BE30               	btfsc	(xtoa@p+1)^0,7,c
  1984  000CEE  EF83  F006         	goto	u2050
  1985  000CF2  5030               	movf	(xtoa@p+1)^0,w,c
  1986  000CF4  E106               	bnz	u2051
  1987  000CF6  042F               	decf	xtoa@p^0,w,c
  1988  000CF8  B0D8               	btfsc	status,0,c
  1989  000CFA  EF81  F006         	goto	u2051
  1990  000CFE  EF83  F006         	goto	u2050
  1991  000D02                     u2051:
  1992  000D02  EFC0  F005         	goto	l2431
  1993  000D06                     u2050:
  1994  000D06  BE32               	btfsc	(xtoa@w+1)^0,7,c
  1995  000D08  EF8E  F006         	goto	u2061
  1996  000D0C  5032               	movf	(xtoa@w+1)^0,w,c
  1997  000D0E  E108               	bnz	u2060
  1998  000D10  0431               	decf	xtoa@w^0,w,c
  1999  000D12  A0D8               	btfss	status,0,c
  2000  000D14  EF8E  F006         	goto	u2061
  2001  000D18  EF90  F006         	goto	u2060
  2002  000D1C                     u2061:
  2003  000D1C  EF98  F006         	goto	l1061
  2004  000D20                     u2060:
  2005  000D20  0100               	movlb	0	; () banked
  2006  000D22  B366               	btfsc	_flags& (0+255),1,b
  2007  000D24  EF96  F006         	goto	u2071
  2008  000D28  EF98  F006         	goto	u2070
  2009  000D2C                     u2071:
  2010  000D2C  EFC0  F005         	goto	l2431
  2011  000D30                     u2070:
  2012  000D30                     l1061:
  2013                           
  2014                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  2015  000D30  0100               	movlb	0	; () banked
  2016  000D32  A966               	btfss	_flags& (0+255),4,b
  2017  000D34  EF9E  F006         	goto	u2081
  2018  000D38  EFA0  F006         	goto	u2080
  2019  000D3C                     u2081:
  2020  000D3C  EFB6  F006         	goto	l2477
  2021  000D40                     u2080:
  2022  000D40                     
  2023                           ; BSR set to: 0
  2024                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 679:         --i;
  2025  000D40  063B               	decf	xtoa@i^0,f,c
  2026  000D42  A0D8               	btfss	status,0,c
  2027  000D44  063C               	decf	(xtoa@i+1)^0,f,c
  2028  000D46                     
  2029                           ; BSR set to: 0
  2030                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  2031  000D46  0E6B               	movlw	low _dbuf
  2032  000D48  243B               	addwf	xtoa@i^0,w,c
  2033  000D4A  6ED9               	movwf	fsr2l,c
  2034  000D4C  0E00               	movlw	high _dbuf
  2035  000D4E  203C               	addwfc	(xtoa@i+1)^0,w,c
  2036  000D50  6EDA               	movwf	fsr2h,c
  2037  000D52  C026  FFDF         	movff	xtoa@x,indf2
  2038  000D56                     
  2039                           ; BSR set to: 0
  2040                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 681:         --i;
  2041  000D56  063B               	decf	xtoa@i^0,f,c
  2042  000D58  A0D8               	btfss	status,0,c
  2043  000D5A  063C               	decf	(xtoa@i+1)^0,f,c
  2044                           
  2045                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  2046  000D5C  0E6B               	movlw	low _dbuf
  2047  000D5E  243B               	addwf	xtoa@i^0,w,c
  2048  000D60  6ED9               	movwf	fsr2l,c
  2049  000D62  0E00               	movlw	high _dbuf
  2050  000D64  203C               	addwfc	(xtoa@i+1)^0,w,c
  2051  000D66  6EDA               	movwf	fsr2h,c
  2052  000D68  0E30               	movlw	48
  2053  000D6A  6EDF               	movwf	indf2,c
  2054  000D6C                     l2477:
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  2058  000D6C  C01C  F011         	movff	xtoa@fp,pad@fp
  2059  000D70  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  2060  000D74  0E6B               	movlw	low _dbuf
  2061  000D76  243B               	addwf	xtoa@i^0,w,c
  2062  000D78  6E13               	movwf	pad@buf^0,c
  2063  000D7A  0E00               	movlw	high _dbuf
  2064  000D7C  203C               	addwfc	(xtoa@i+1)^0,w,c
  2065  000D7E  6E14               	movwf	(pad@buf+1)^0,c
  2066  000D80  C031  F015         	movff	xtoa@w,pad@p
  2067  000D84  C032  F016         	movff	xtoa@w+1,pad@p+1
  2068  000D88  ECBA  F00C         	call	_pad	;wreg free
  2069  000D8C  C011  F01C         	movff	?_pad,?_xtoa
  2070  000D90  C012  F01D         	movff	?_pad+1,?_xtoa+1
  2071  000D94  0012               	return		;funcret
  2072  000D96                     __end_of_xtoa:
  2073                           	callstack 0
  2074                           
  2075 ;; *************** function _toupper *****************
  2076 ;; Defined at:
  2077 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\toupper.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  c               2    6[COMRAM] int 
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  2    6[COMRAM] int 
  2084 ;; Registers used:
  2085 ;;		wreg, status,2, status,0
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2091 ;;      Params:         2       0       0       0       0       0       0       0       0
  2092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2093 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2094 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2095 ;;Total ram usage:        6 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; Hardware stack levels required when called: 1
  2098 ;; This function calls:
  2099 ;;		_islower
  2100 ;; This function is called by:
  2101 ;;		_xtoa
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text5
  2106  002112                     __ptext5:
  2107                           	callstack 0
  2108  002112                     _toupper:
  2109                           	callstack 25
  2110  002112  0E9F               	movlw	159
  2111  002114  6E09               	movwf	??_toupper^0,c
  2112  002116  0EFF               	movlw	255
  2113  002118  6E0A               	movwf	(??_toupper+1)^0,c
  2114  00211A  C007  F00B         	movff	toupper@c,??_toupper+2
  2115  00211E  C008  F00C         	movff	toupper@c+1,??_toupper+3
  2116  002122  5009               	movf	??_toupper^0,w,c
  2117  002124  260B               	addwf	(??_toupper+2)^0,f,c
  2118  002126  500A               	movf	(??_toupper+1)^0,w,c
  2119  002128  220C               	addwfc	(??_toupper+3)^0,f,c
  2120  00212A  500C               	movf	(??_toupper+3)^0,w,c
  2121  00212C  E107               	bnz	u1801
  2122  00212E  0E1A               	movlw	26
  2123  002130  5C0B               	subwf	(??_toupper+2)^0,w,c
  2124  002132  B0D8               	btfsc	status,0,c
  2125  002134  EF9E  F010         	goto	u1801
  2126  002138  EFA0  F010         	goto	u1800
  2127  00213C                     u1801:
  2128  00213C  EFA6  F010         	goto	l1133
  2129  002140                     u1800:
  2130  002140  0E5F               	movlw	95
  2131  002142  1407               	andwf	toupper@c^0,w,c
  2132  002144  6E07               	movwf	?_toupper^0,c
  2133  002146  6A08               	clrf	(?_toupper+1)^0,c
  2134  002148  EFAA  F010         	goto	l1136
  2135  00214C                     l1133:
  2136  00214C  C007  F007         	movff	toupper@c,?_toupper
  2137  002150  C008  F008         	movff	toupper@c+1,?_toupper+1
  2138  002154                     l1136:
  2139  002154  0012               	return		;funcret
  2140  002156                     __end_of_toupper:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _islower *****************
  2144 ;; Defined at:
  2145 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\islower.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  c               2    0[COMRAM] int 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  2    0[COMRAM] int 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2159 ;;      Params:         2       0       0       0       0       0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2161 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2162 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2163 ;;Total ram usage:        6 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_toupper
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text6
  2173  002216                     __ptext6:
  2174                           	callstack 0
  2175  002216                     _islower:
  2176                           	callstack 25
  2177  002216  0E9F               	movlw	159
  2178  002218  6E03               	movwf	??_islower^0,c
  2179  00221A  0EFF               	movlw	255
  2180  00221C  6E04               	movwf	(??_islower+1)^0,c
  2181  00221E  C001  F005         	movff	islower@c,??_islower+2
  2182  002222  C002  F006         	movff	islower@c+1,??_islower+3
  2183  002226  5003               	movf	??_islower^0,w,c
  2184  002228  2605               	addwf	(??_islower+2)^0,f,c
  2185  00222A  5004               	movf	(??_islower+1)^0,w,c
  2186  00222C  2206               	addwfc	(??_islower+3)^0,f,c
  2187  00222E  5006               	movf	(??_islower+3)^0,w,c
  2188  002230  E10A               	bnz	u1390
  2189  002232  0E1A               	movlw	26
  2190  002234  5C05               	subwf	(??_islower+2)^0,w,c
  2191  002236  A0D8               	btfss	status,0,c
  2192  002238  EF20  F011         	goto	u1391
  2193  00223C  EF23  F011         	goto	u1390
  2194  002240                     u1391:
  2195  002240  0E01               	movlw	1
  2196  002242  EF24  F011         	goto	u1400
  2197  002246                     u1390:
  2198  002246  0E00               	movlw	0
  2199  002248                     u1400:
  2200  002248  6E01               	movwf	?_islower^0,c
  2201  00224A  6A02               	clrf	(?_islower+1)^0,c
  2202  00224C  0012               	return		;funcret
  2203  00224E                     __end_of_islower:
  2204                           	callstack 0
  2205                           
  2206 ;; *************** function _isupper *****************
  2207 ;; Defined at:
  2208 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  c               2    0[COMRAM] int 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  2    0[COMRAM] int 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2222 ;;      Params:         2       0       0       0       0       0       0       0       0
  2223 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2224 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2225 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2226 ;;Total ram usage:        6 bytes
  2227 ;; Hardware stack levels used: 1
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_xtoa
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text7
  2236  00224E                     __ptext7:
  2237                           	callstack 0
  2238  00224E                     _isupper:
  2239                           	callstack 26
  2240  00224E  0EBF               	movlw	191
  2241  002250  6E03               	movwf	??_isupper^0,c
  2242  002252  0EFF               	movlw	255
  2243  002254  6E04               	movwf	(??_isupper+1)^0,c
  2244  002256  C001  F005         	movff	isupper@c,??_isupper+2
  2245  00225A  C002  F006         	movff	isupper@c+1,??_isupper+3
  2246  00225E  5003               	movf	??_isupper^0,w,c
  2247  002260  2605               	addwf	(??_isupper+2)^0,f,c
  2248  002262  5004               	movf	(??_isupper+1)^0,w,c
  2249  002264  2206               	addwfc	(??_isupper+3)^0,f,c
  2250  002266  5006               	movf	(??_isupper+3)^0,w,c
  2251  002268  E10A               	bnz	u1760
  2252  00226A  0E1A               	movlw	26
  2253  00226C  5C05               	subwf	(??_isupper+2)^0,w,c
  2254  00226E  A0D8               	btfss	status,0,c
  2255  002270  EF3C  F011         	goto	u1761
  2256  002274  EF3F  F011         	goto	u1760
  2257  002278                     u1761:
  2258  002278  0E01               	movlw	1
  2259  00227A  EF40  F011         	goto	u1770
  2260  00227E                     u1760:
  2261  00227E  0E00               	movlw	0
  2262  002280                     u1770:
  2263  002280  6E01               	movwf	?_isupper^0,c
  2264  002282  6A02               	clrf	(?_isupper+1)^0,c
  2265  002284  0012               	return		;funcret
  2266  002286                     __end_of_isupper:
  2267                           	callstack 0
  2268                           
  2269 ;; *************** function _isalpha *****************
  2270 ;; Defined at:
  2271 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isalpha.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  c               2    0[COMRAM] int 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  2    0[COMRAM] int 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2285 ;;      Params:         2       0       0       0       0       0       0       0       0
  2286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2287 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2288 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2289 ;;Total ram usage:        6 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_xtoa
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text8
  2299  0021DA                     __ptext8:
  2300                           	callstack 0
  2301  0021DA                     _isalpha:
  2302                           	callstack 26
  2303  0021DA  0E9F               	movlw	159
  2304  0021DC  6E03               	movwf	??_isalpha^0,c
  2305  0021DE  0EFF               	movlw	255
  2306  0021E0  6E04               	movwf	(??_isalpha+1)^0,c
  2307  0021E2  0E20               	movlw	32
  2308  0021E4  1001               	iorwf	isalpha@c^0,w,c
  2309  0021E6  6E05               	movwf	(??_isalpha+2)^0,c
  2310  0021E8  0E00               	movlw	0
  2311  0021EA  1002               	iorwf	(isalpha@c+1)^0,w,c
  2312  0021EC  6E06               	movwf	(??_isalpha+3)^0,c
  2313  0021EE  5003               	movf	??_isalpha^0,w,c
  2314  0021F0  2605               	addwf	(??_isalpha+2)^0,f,c
  2315  0021F2  5004               	movf	(??_isalpha+1)^0,w,c
  2316  0021F4  2206               	addwfc	(??_isalpha+3)^0,f,c
  2317  0021F6  5006               	movf	(??_isalpha+3)^0,w,c
  2318  0021F8  E10A               	bnz	u1780
  2319  0021FA  0E1A               	movlw	26
  2320  0021FC  5C05               	subwf	(??_isalpha+2)^0,w,c
  2321  0021FE  A0D8               	btfss	status,0,c
  2322  002200  EF04  F011         	goto	u1781
  2323  002204  EF07  F011         	goto	u1780
  2324  002208                     u1781:
  2325  002208  0E01               	movlw	1
  2326  00220A  EF08  F011         	goto	u1790
  2327  00220E                     u1780:
  2328  00220E  0E00               	movlw	0
  2329  002210                     u1790:
  2330  002210  6E01               	movwf	?_isalpha^0,c
  2331  002212  6A02               	clrf	(?_isalpha+1)^0,c
  2332  002214  0012               	return		;funcret
  2333  002216                     __end_of_isalpha:
  2334                           	callstack 0
  2335                           
  2336 ;; *************** function _dtoa *****************
  2337 ;; Defined at:
  2338 ;;		line 287 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2341 ;;		 -> sprintf@f(11), 
  2342 ;;  d               8   29[COMRAM] long long 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  n               8   53[COMRAM] long long 
  2345 ;;  i               2   61[COMRAM] int 
  2346 ;;  s               2   51[COMRAM] int 
  2347 ;;  w               2   49[COMRAM] int 
  2348 ;;  p               2   47[COMRAM] int 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  2   27[COMRAM] int 
  2351 ;; Registers used:
  2352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2358 ;;      Params:        10       0       0       0       0       0       0       0       0
  2359 ;;      Locals:        18       0       0       0       0       0       0       0       0
  2360 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2361 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2362 ;;Total ram usage:       36 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; Hardware stack levels required when called: 4
  2365 ;; This function calls:
  2366 ;;		___aodiv
  2367 ;;		___aomod
  2368 ;;		_abs
  2369 ;;		_pad
  2370 ;; This function is called by:
  2371 ;;		_vfpfcnvrt
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text9
  2376  000810                     __ptext9:
  2377                           	callstack 0
  2378  000810                     _dtoa:
  2379                           	callstack 23
  2380  000810                     
  2381                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2382  000810  C01E  F036         	movff	dtoa@d,dtoa@n
  2383  000814  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  2384  000818  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  2385  00081C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  2386  000820  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  2387  000824  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  2388  000828  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  2389  00082C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  2390  000830                     
  2391                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2392  000830  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  2393  000832  EF1D  F004         	goto	u1811
  2394  000836  EF20  F004         	goto	u1810
  2395  00083A                     u1811:
  2396  00083A  0E01               	movlw	1
  2397  00083C  EF21  F004         	goto	u1820
  2398  000840                     u1810:
  2399  000840  0E00               	movlw	0
  2400  000842                     u1820:
  2401  000842  6E34               	movwf	dtoa@s^0,c
  2402  000844  6A35               	clrf	(dtoa@s+1)^0,c
  2403                           
  2404                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2405  000846  5034               	movf	dtoa@s^0,w,c
  2406  000848  1035               	iorwf	(dtoa@s+1)^0,w,c
  2407  00084A  B4D8               	btfsc	status,2,c
  2408  00084C  EF2A  F004         	goto	u1831
  2409  000850  EF2C  F004         	goto	u1830
  2410  000854                     u1831:
  2411  000854  EF3C  F004         	goto	l2359
  2412  000858                     u1830:
  2413  000858                     
  2414                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2415  000858  1E3D               	comf	(dtoa@n+7)^0,f,c
  2416  00085A  1E3C               	comf	(dtoa@n+6)^0,f,c
  2417  00085C  1E3B               	comf	(dtoa@n+5)^0,f,c
  2418  00085E  1E3A               	comf	(dtoa@n+4)^0,f,c
  2419  000860  1E39               	comf	(dtoa@n+3)^0,f,c
  2420  000862  1E38               	comf	(dtoa@n+2)^0,f,c
  2421  000864  1E37               	comf	(dtoa@n+1)^0,f,c
  2422  000866  6C36               	negf	dtoa@n^0,c
  2423  000868  0E00               	movlw	0
  2424  00086A  2237               	addwfc	(dtoa@n+1)^0,f,c
  2425  00086C  2238               	addwfc	(dtoa@n+2)^0,f,c
  2426  00086E  2239               	addwfc	(dtoa@n+3)^0,f,c
  2427  000870  223A               	addwfc	(dtoa@n+4)^0,f,c
  2428  000872  223B               	addwfc	(dtoa@n+5)^0,f,c
  2429  000874  223C               	addwfc	(dtoa@n+6)^0,f,c
  2430  000876  223D               	addwfc	(dtoa@n+7)^0,f,c
  2431  000878                     l2359:
  2432                           
  2433                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2434  000878  0100               	movlb	0	; () banked
  2435  00087A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2436  00087C  EF42  F004         	goto	u1841
  2437  000880  EF44  F004         	goto	u1840
  2438  000884                     u1841:
  2439  000884  EF45  F004         	goto	l2363
  2440  000888                     u1840:
  2441  000888                     
  2442                           ; BSR set to: 0
  2443                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2444  000888  9366               	bcf	_flags& (0+255),1,b
  2445  00088A                     l2363:
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2449  00088A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2450  00088C  EF52  F004         	goto	u1850
  2451  000890  5165               	movf	(_prec+1)& (0+255),w,b
  2452  000892  E106               	bnz	u1851
  2453  000894  0564               	decf	_prec& (0+255),w,b
  2454  000896  B0D8               	btfsc	status,0,c
  2455  000898  EF50  F004         	goto	u1851
  2456  00089C  EF52  F004         	goto	u1850
  2457  0008A0                     u1851:
  2458  0008A0  EF58  F004         	goto	l1017
  2459  0008A4                     u1850:
  2460  0008A4                     
  2461                           ; BSR set to: 0
  2462  0008A4  0E00               	movlw	0
  2463  0008A6  6E31               	movwf	(dtoa@p+1)^0,c
  2464  0008A8  0E01               	movlw	1
  2465  0008AA  6E30               	movwf	dtoa@p^0,c
  2466  0008AC  EF5C  F004         	goto	l1019
  2467  0008B0                     l1017:
  2468                           
  2469                           ; BSR set to: 0
  2470  0008B0  C064  F030         	movff	_prec,dtoa@p
  2471  0008B4  C065  F031         	movff	_prec+1,dtoa@p+1
  2472  0008B8                     l1019:
  2473                           
  2474                           ; BSR set to: 0
  2475                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2476  0008B8  C062  F032         	movff	_width,dtoa@w
  2477  0008BC  C063  F033         	movff	_width+1,dtoa@w+1
  2478  0008C0                     
  2479                           ; BSR set to: 0
  2480                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2481  0008C0  5034               	movf	dtoa@s^0,w,c
  2482  0008C2  1035               	iorwf	(dtoa@s+1)^0,w,c
  2483  0008C4  A4D8               	btfss	status,2,c
  2484  0008C6  EF67  F004         	goto	u1861
  2485  0008CA  EF69  F004         	goto	u1860
  2486  0008CE                     u1861:
  2487  0008CE  EF70  F004         	goto	l2371
  2488  0008D2                     u1860:
  2489  0008D2                     
  2490                           ; BSR set to: 0
  2491  0008D2  A566               	btfss	_flags& (0+255),2,b
  2492  0008D4  EF6E  F004         	goto	u1871
  2493  0008D8  EF70  F004         	goto	u1870
  2494  0008DC                     u1871:
  2495  0008DC  EF73  F004         	goto	l2373
  2496  0008E0                     u1870:
  2497  0008E0                     l2371:
  2498                           
  2499                           ; BSR set to: 0
  2500                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  2501  0008E0  0632               	decf	dtoa@w^0,f,c
  2502  0008E2  A0D8               	btfss	status,0,c
  2503  0008E4  0633               	decf	(dtoa@w+1)^0,f,c
  2504  0008E6                     l2373:
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2508  0008E6  0E00               	movlw	0
  2509  0008E8  6E3F               	movwf	(dtoa@i+1)^0,c
  2510  0008EA  0E1F               	movlw	31
  2511  0008EC  6E3E               	movwf	dtoa@i^0,c
  2512  0008EE                     
  2513                           ; BSR set to: 0
  2514                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2515  0008EE  0E00               	movlw	0
  2516  0008F0  6F8A               	movwf	(_dbuf+31)& (0+255),b
  2517                           
  2518                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2519  0008F2  EFF7  F004         	goto	l2387
  2520  0008F6                     l2377:
  2521                           
  2522                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  2523  0008F6  063E               	decf	dtoa@i^0,f,c
  2524  0008F8  A0D8               	btfss	status,0,c
  2525  0008FA  063F               	decf	(dtoa@i+1)^0,f,c
  2526  0008FC                     
  2527                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2528  0008FC  0E6B               	movlw	low _dbuf
  2529  0008FE  243E               	addwf	dtoa@i^0,w,c
  2530  000900  6ED9               	movwf	fsr2l,c
  2531  000902  0E00               	movlw	high _dbuf
  2532  000904  203F               	addwfc	(dtoa@i+1)^0,w,c
  2533  000906  6EDA               	movwf	fsr2h,c
  2534  000908  C036  F001         	movff	dtoa@n,___aomod@dividend
  2535  00090C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2536  000910  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2537  000914  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2538  000918  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2539  00091C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2540  000920  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2541  000924  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2542  000928  0E0A               	movlw	10
  2543  00092A  6E09               	movwf	___aomod@divisor^0,c
  2544  00092C  0E00               	movlw	0
  2545  00092E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2546  000930  0E00               	movlw	0
  2547  000932  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2548  000934  0E00               	movlw	0
  2549  000936  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2550  000938  0E00               	movlw	0
  2551  00093A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2552  00093C  0E00               	movlw	0
  2553  00093E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2554  000940  0E00               	movlw	0
  2555  000942  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2556  000944  0E00               	movlw	0
  2557  000946  6E10               	movwf	(___aomod@divisor+7)^0,c
  2558  000948  EC2C  F00B         	call	___aomod	;wreg free
  2559  00094C  C001  F026         	movff	?___aomod,??_dtoa
  2560  000950  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2561  000954  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2562  000958  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2563  00095C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2564  000960  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2565  000964  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2566  000968  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2567  00096C  C026  F013         	movff	??_dtoa,abs@a
  2568  000970  C028  F014         	movff	??_dtoa+2,abs@a+1
  2569  000974  ECCD  F010         	call	_abs	;wreg free
  2570  000978  5013               	movf	?_abs^0,w,c
  2571  00097A  0F30               	addlw	48
  2572  00097C  6EDF               	movwf	indf2,c
  2573  00097E                     
  2574                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  2575  00097E  0630               	decf	dtoa@p^0,f,c
  2576  000980  A0D8               	btfss	status,0,c
  2577  000982  0631               	decf	(dtoa@p+1)^0,f,c
  2578  000984                     
  2579                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  2580  000984  0632               	decf	dtoa@w^0,f,c
  2581  000986  A0D8               	btfss	status,0,c
  2582  000988  0633               	decf	(dtoa@w+1)^0,f,c
  2583  00098A                     
  2584                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2585  00098A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  2586  00098E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2587  000992  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2588  000996  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2589  00099A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2590  00099E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2591  0009A2  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2592  0009A6  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2593  0009AA  0E0A               	movlw	10
  2594  0009AC  6E09               	movwf	___aodiv@divisor^0,c
  2595  0009AE  0E00               	movlw	0
  2596  0009B0  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2597  0009B2  0E00               	movlw	0
  2598  0009B4  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2599  0009B6  0E00               	movlw	0
  2600  0009B8  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2601  0009BA  0E00               	movlw	0
  2602  0009BC  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2603  0009BE  0E00               	movlw	0
  2604  0009C0  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2605  0009C2  0E00               	movlw	0
  2606  0009C4  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2607  0009C6  0E00               	movlw	0
  2608  0009C8  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2609  0009CA  EC68  F00A         	call	___aodiv	;wreg free
  2610  0009CE  C001  F036         	movff	?___aodiv,dtoa@n
  2611  0009D2  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2612  0009D6  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2613  0009DA  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2614  0009DE  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2615  0009E2  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2616  0009E6  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2617  0009EA  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2618  0009EE                     l2387:
  2619                           
  2620                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2621  0009EE  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2622  0009F0  EF02  F005         	goto	u1881
  2623  0009F4  503F               	movf	(dtoa@i+1)^0,w,c
  2624  0009F6  E108               	bnz	u1880
  2625  0009F8  043E               	decf	dtoa@i^0,w,c
  2626  0009FA  A0D8               	btfss	status,0,c
  2627  0009FC  EF02  F005         	goto	u1881
  2628  000A00  EF04  F005         	goto	u1880
  2629  000A04                     u1881:
  2630  000A04  EF35  F005         	goto	l2397
  2631  000A08                     u1880:
  2632  000A08  5036               	movf	dtoa@n^0,w,c
  2633  000A0A  1037               	iorwf	(dtoa@n+1)^0,w,c
  2634  000A0C  1038               	iorwf	(dtoa@n+2)^0,w,c
  2635  000A0E  1039               	iorwf	(dtoa@n+3)^0,w,c
  2636  000A10  103A               	iorwf	(dtoa@n+4)^0,w,c
  2637  000A12  103B               	iorwf	(dtoa@n+5)^0,w,c
  2638  000A14  103C               	iorwf	(dtoa@n+6)^0,w,c
  2639  000A16  103D               	iorwf	(dtoa@n+7)^0,w,c
  2640  000A18  A4D8               	btfss	status,2,c
  2641  000A1A  EF11  F005         	goto	u1891
  2642  000A1E  EF13  F005         	goto	u1890
  2643  000A22                     u1891:
  2644  000A22  EF7B  F004         	goto	l2377
  2645  000A26                     u1890:
  2646  000A26  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2647  000A28  EF20  F005         	goto	u1900
  2648  000A2C  5031               	movf	(dtoa@p+1)^0,w,c
  2649  000A2E  E106               	bnz	u1901
  2650  000A30  0430               	decf	dtoa@p^0,w,c
  2651  000A32  B0D8               	btfsc	status,0,c
  2652  000A34  EF1E  F005         	goto	u1901
  2653  000A38  EF20  F005         	goto	u1900
  2654  000A3C                     u1901:
  2655  000A3C  EF7B  F004         	goto	l2377
  2656  000A40                     u1900:
  2657  000A40  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2658  000A42  EF2B  F005         	goto	u1911
  2659  000A46  5033               	movf	(dtoa@w+1)^0,w,c
  2660  000A48  E108               	bnz	u1910
  2661  000A4A  0432               	decf	dtoa@w^0,w,c
  2662  000A4C  A0D8               	btfss	status,0,c
  2663  000A4E  EF2B  F005         	goto	u1911
  2664  000A52  EF2D  F005         	goto	u1910
  2665  000A56                     u1911:
  2666  000A56  EF35  F005         	goto	l2397
  2667  000A5A                     u1910:
  2668  000A5A  0100               	movlb	0	; () banked
  2669  000A5C  B366               	btfsc	_flags& (0+255),1,b
  2670  000A5E  EF33  F005         	goto	u1921
  2671  000A62  EF35  F005         	goto	u1920
  2672  000A66                     u1921:
  2673  000A66  EF7B  F004         	goto	l2377
  2674  000A6A                     u1920:
  2675  000A6A                     l2397:
  2676                           
  2677                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2678  000A6A  5034               	movf	dtoa@s^0,w,c
  2679  000A6C  1035               	iorwf	(dtoa@s+1)^0,w,c
  2680  000A6E  A4D8               	btfss	status,2,c
  2681  000A70  EF3C  F005         	goto	u1931
  2682  000A74  EF3E  F005         	goto	u1930
  2683  000A78                     u1931:
  2684  000A78  EF46  F005         	goto	l2401
  2685  000A7C                     u1930:
  2686  000A7C  0100               	movlb	0	; () banked
  2687  000A7E  A566               	btfss	_flags& (0+255),2,b
  2688  000A80  EF44  F005         	goto	u1941
  2689  000A84  EF46  F005         	goto	u1940
  2690  000A88                     u1941:
  2691  000A88  EF64  F005         	goto	l2411
  2692  000A8C                     u1940:
  2693  000A8C                     l2401:
  2694                           
  2695                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  2696  000A8C  063E               	decf	dtoa@i^0,f,c
  2697  000A8E  A0D8               	btfss	status,0,c
  2698  000A90  063F               	decf	(dtoa@i+1)^0,f,c
  2699  000A92                     
  2700                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2701  000A92  5034               	movf	dtoa@s^0,w,c
  2702  000A94  1035               	iorwf	(dtoa@s+1)^0,w,c
  2703  000A96  A4D8               	btfss	status,2,c
  2704  000A98  EF50  F005         	goto	u1951
  2705  000A9C  EF52  F005         	goto	u1950
  2706  000AA0                     u1951:
  2707  000AA0  EF58  F005         	goto	l2407
  2708  000AA4                     u1950:
  2709  000AA4  0E00               	movlw	0
  2710  000AA6  6E2F               	movwf	(_dtoa$929+1)^0,c
  2711  000AA8  0E2B               	movlw	43
  2712  000AAA  6E2E               	movwf	_dtoa$929^0,c
  2713  000AAC  EF5C  F005         	goto	l2409
  2714  000AB0                     l2407:
  2715  000AB0  0E00               	movlw	0
  2716  000AB2  6E2F               	movwf	(_dtoa$929+1)^0,c
  2717  000AB4  0E2D               	movlw	45
  2718  000AB6  6E2E               	movwf	_dtoa$929^0,c
  2719  000AB8                     l2409:
  2720  000AB8  0E6B               	movlw	low _dbuf
  2721  000ABA  243E               	addwf	dtoa@i^0,w,c
  2722  000ABC  6ED9               	movwf	fsr2l,c
  2723  000ABE  0E00               	movlw	high _dbuf
  2724  000AC0  203F               	addwfc	(dtoa@i+1)^0,w,c
  2725  000AC2  6EDA               	movwf	fsr2h,c
  2726  000AC4  C02E  FFDF         	movff	_dtoa$929,indf2
  2727  000AC8                     l2411:
  2728                           
  2729                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2730  000AC8  C01C  F011         	movff	dtoa@fp,pad@fp
  2731  000ACC  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2732  000AD0  0E6B               	movlw	low _dbuf
  2733  000AD2  243E               	addwf	dtoa@i^0,w,c
  2734  000AD4  6E13               	movwf	pad@buf^0,c
  2735  000AD6  0E00               	movlw	high _dbuf
  2736  000AD8  203F               	addwfc	(dtoa@i+1)^0,w,c
  2737  000ADA  6E14               	movwf	(pad@buf+1)^0,c
  2738  000ADC  C032  F015         	movff	dtoa@w,pad@p
  2739  000AE0  C033  F016         	movff	dtoa@w+1,pad@p+1
  2740  000AE4  ECBA  F00C         	call	_pad	;wreg free
  2741  000AE8  C011  F01C         	movff	?_pad,?_dtoa
  2742  000AEC  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2743  000AF0  0012               	return		;funcret
  2744  000AF2                     __end_of_dtoa:
  2745                           	callstack 0
  2746                           
  2747 ;; *************** function _pad *****************
  2748 ;; Defined at:
  2749 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2752 ;;		 -> sprintf@f(11), 
  2753 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2754 ;;		 -> dbuf(32), 
  2755 ;;  p               2   20[COMRAM] int 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  w               2   25[COMRAM] int 
  2758 ;;  i               2   23[COMRAM] int 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  2   16[COMRAM] int 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2768 ;;      Params:         6       0       0       0       0       0       0       0       0
  2769 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2770 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2771 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2772 ;;Total ram usage:       11 bytes
  2773 ;; Hardware stack levels used: 1
  2774 ;; Hardware stack levels required when called: 3
  2775 ;; This function calls:
  2776 ;;		_fputc
  2777 ;;		_fputs
  2778 ;;		_strlen
  2779 ;; This function is called by:
  2780 ;;		_dtoa
  2781 ;;		_xtoa
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text10
  2786  001974                     __ptext10:
  2787                           	callstack 0
  2788  001974                     _pad:
  2789                           	callstack 23
  2790  001974                     
  2791                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2792  001974  0100               	movlb	0	; () banked
  2793  001976  A166               	btfss	_flags& (0+255),0,b
  2794  001978  EFC0  F00C         	goto	u1711
  2795  00197C  EFC2  F00C         	goto	u1710
  2796  001980                     u1711:
  2797  001980  EFCC  F00C         	goto	l2299
  2798  001984                     u1710:
  2799  001984                     
  2800                           ; BSR set to: 0
  2801                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2802  001984  C013  F00A         	movff	pad@buf,fputs@s
  2803  001988  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2804  00198C  C011  F00C         	movff	pad@fp,fputs@fp
  2805  001990  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2806  001994  ECAB  F010         	call	_fputs	;wreg free
  2807  001998                     l2299:
  2808                           
  2809                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2810  001998  BE16               	btfsc	(pad@p+1)^0,7,c
  2811  00199A  EFD1  F00C         	goto	u1721
  2812  00199E  EFD3  F00C         	goto	u1720
  2813  0019A2                     u1721:
  2814  0019A2  EFD9  F00C         	goto	l2303
  2815  0019A6                     u1720:
  2816  0019A6  C015  F01A         	movff	pad@p,pad@w
  2817  0019AA  C016  F01B         	movff	pad@p+1,pad@w+1
  2818  0019AE  EFDD  F00C         	goto	l1006
  2819  0019B2                     l2303:
  2820  0019B2  0E00               	movlw	0
  2821  0019B4  6E1B               	movwf	(pad@w+1)^0,c
  2822  0019B6  0E00               	movlw	0
  2823  0019B8  6E1A               	movwf	pad@w^0,c
  2824  0019BA                     l1006:
  2825                           
  2826                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2827  0019BA  0E00               	movlw	0
  2828  0019BC  6E19               	movwf	(pad@i+1)^0,c
  2829  0019BE  0E00               	movlw	0
  2830  0019C0  6E18               	movwf	pad@i^0,c
  2831                           
  2832                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2833  0019C2  EFEF  F00C         	goto	l2309
  2834  0019C6                     l2305:
  2835                           
  2836                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2837  0019C6  0E00               	movlw	0
  2838  0019C8  6E02               	movwf	(fputc@c+1)^0,c
  2839  0019CA  0E20               	movlw	32
  2840  0019CC  6E01               	movwf	fputc@c^0,c
  2841  0019CE  C011  F003         	movff	pad@fp,fputc@fp
  2842  0019D2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2843  0019D6  EC55  F00C         	call	_fputc	;wreg free
  2844  0019DA                     
  2845                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2846  0019DA  4A18               	infsnz	pad@i^0,f,c
  2847  0019DC  2A19               	incf	(pad@i+1)^0,f,c
  2848  0019DE                     l2309:
  2849                           
  2850                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2851  0019DE  501A               	movf	pad@w^0,w,c
  2852  0019E0  5C18               	subwf	pad@i^0,w,c
  2853  0019E2  5019               	movf	(pad@i+1)^0,w,c
  2854  0019E4  0A80               	xorlw	128
  2855  0019E6  6E17               	movwf	??_pad^0,c
  2856  0019E8  501B               	movf	(pad@w+1)^0,w,c
  2857  0019EA  0A80               	xorlw	128
  2858  0019EC  5817               	subwfb	??_pad^0,w,c
  2859  0019EE  A0D8               	btfss	status,0,c
  2860  0019F0  EFFC  F00C         	goto	u1731
  2861  0019F4  EFFE  F00C         	goto	u1730
  2862  0019F8                     u1731:
  2863  0019F8  EFE3  F00C         	goto	l2305
  2864  0019FC                     u1730:
  2865  0019FC                     
  2866                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2867  0019FC  0100               	movlb	0	; () banked
  2868  0019FE  B166               	btfsc	_flags& (0+255),0,b
  2869  001A00  EF04  F00D         	goto	u1741
  2870  001A04  EF06  F00D         	goto	u1740
  2871  001A08                     u1741:
  2872  001A08  EF10  F00D         	goto	l2313
  2873  001A0C                     u1740:
  2874  001A0C                     
  2875                           ; BSR set to: 0
  2876                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2877  001A0C  C013  F00A         	movff	pad@buf,fputs@s
  2878  001A10  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2879  001A14  C011  F00C         	movff	pad@fp,fputs@fp
  2880  001A18  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2881  001A1C  ECAB  F010         	call	_fputs	;wreg free
  2882  001A20                     l2313:
  2883                           
  2884                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2885  001A20  C013  F001         	movff	pad@buf,strlen@s
  2886  001A24  C014  F002         	movff	pad@buf+1,strlen@s+1
  2887  001A28  EC5F  F011         	call	_strlen	;wreg free
  2888  001A2C  501A               	movf	pad@w^0,w,c
  2889  001A2E  2401               	addwf	?_strlen^0,w,c
  2890  001A30  6E11               	movwf	?_pad^0,c
  2891  001A32  501B               	movf	(pad@w+1)^0,w,c
  2892  001A34  2002               	addwfc	(?_strlen+1)^0,w,c
  2893  001A36  6E12               	movwf	(?_pad+1)^0,c
  2894  001A38  0012               	return		;funcret
  2895  001A3A                     __end_of_pad:
  2896                           	callstack 0
  2897                           
  2898 ;; *************** function _strlen *****************
  2899 ;; Defined at:
  2900 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2903 ;;		 -> dbuf(32), UID(16), 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2906 ;;		 -> dbuf(32), UID(16), 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  2    0[COMRAM] unsigned int 
  2909 ;; Registers used:
  2910 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2916 ;;      Params:         2       0       0       0       0       0       0       0       0
  2917 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2919 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2920 ;;Total ram usage:        4 bytes
  2921 ;; Hardware stack levels used: 1
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;;		_pad
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text11
  2931  0022BE                     __ptext11:
  2932                           	callstack 0
  2933  0022BE                     _strlen:
  2934                           	callstack 30
  2935  0022BE  C001  F003         	movff	strlen@s,strlen@a
  2936  0022C2  C002  F004         	movff	strlen@s+1,strlen@a+1
  2937  0022C6  EF67  F011         	goto	l2109
  2938  0022CA                     l2107:
  2939  0022CA  4A01               	infsnz	strlen@s^0,f,c
  2940  0022CC  2A02               	incf	(strlen@s+1)^0,f,c
  2941  0022CE                     l2109:
  2942  0022CE  C001  FFD9         	movff	strlen@s,fsr2l
  2943  0022D2  C002  FFDA         	movff	strlen@s+1,fsr2h
  2944  0022D6  50DF               	movf	indf2,w,c
  2945  0022D8  A4D8               	btfss	status,2,c
  2946  0022DA  EF71  F011         	goto	u1371
  2947  0022DE  EF73  F011         	goto	u1370
  2948  0022E2                     u1371:
  2949  0022E2  EF65  F011         	goto	l2107
  2950  0022E6                     u1370:
  2951  0022E6  5003               	movf	strlen@a^0,w,c
  2952  0022E8  5C01               	subwf	strlen@s^0,w,c
  2953  0022EA  6E01               	movwf	?_strlen^0,c
  2954  0022EC  5004               	movf	(strlen@a+1)^0,w,c
  2955  0022EE  5802               	subwfb	(strlen@s+1)^0,w,c
  2956  0022F0  6E02               	movwf	(?_strlen+1)^0,c
  2957  0022F2  0012               	return		;funcret
  2958  0022F4                     __end_of_strlen:
  2959                           	callstack 0
  2960                           
  2961 ;; *************** function _fputs *****************
  2962 ;; Defined at:
  2963 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2966 ;;		 -> dbuf(32), 
  2967 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2968 ;;		 -> sprintf@f(11), 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  i               2   14[COMRAM] int 
  2971 ;;  c               1   13[COMRAM] unsigned char 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  2    9[COMRAM] int 
  2974 ;; Registers used:
  2975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2981 ;;      Params:         4       0       0       0       0       0       0       0       0
  2982 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2983 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2984 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2985 ;;Total ram usage:        7 bytes
  2986 ;; Hardware stack levels used: 1
  2987 ;; Hardware stack levels required when called: 2
  2988 ;; This function calls:
  2989 ;;		_fputc
  2990 ;; This function is called by:
  2991 ;;		_pad
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text12
  2996  002156                     __ptext12:
  2997                           	callstack 0
  2998  002156                     _fputs:
  2999                           	callstack 23
  3000  002156  0E00               	movlw	0
  3001  002158  6E10               	movwf	(fputs@i+1)^0,c
  3002  00215A  0E00               	movlw	0
  3003  00215C  6E0F               	movwf	fputs@i^0,c
  3004  00215E  EFBC  F010         	goto	l2121
  3005  002162                     l2117:
  3006  002162  C00E  F001         	movff	fputs@c,fputc@c
  3007  002166  6A02               	clrf	(fputc@c+1)^0,c
  3008  002168  C00C  F003         	movff	fputs@fp,fputc@fp
  3009  00216C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3010  002170  EC55  F00C         	call	_fputc	;wreg free
  3011  002174  4A0F               	infsnz	fputs@i^0,f,c
  3012  002176  2A10               	incf	(fputs@i+1)^0,f,c
  3013  002178                     l2121:
  3014  002178  500F               	movf	fputs@i^0,w,c
  3015  00217A  240A               	addwf	fputs@s^0,w,c
  3016  00217C  6ED9               	movwf	fsr2l,c
  3017  00217E  5010               	movf	(fputs@i+1)^0,w,c
  3018  002180  200B               	addwfc	(fputs@s+1)^0,w,c
  3019  002182  6EDA               	movwf	fsr2h,c
  3020  002184  50DF               	movf	indf2,w,c
  3021  002186  6E0E               	movwf	fputs@c^0,c
  3022  002188  500E               	movf	fputs@c^0,w,c
  3023  00218A  A4D8               	btfss	status,2,c
  3024  00218C  EFCA  F010         	goto	u1381
  3025  002190  EFCC  F010         	goto	u1380
  3026  002194                     u1381:
  3027  002194  EFB1  F010         	goto	l2117
  3028  002198                     u1380:
  3029  002198  0012               	return		;funcret
  3030  00219A                     __end_of_fputs:
  3031                           	callstack 0
  3032                           
  3033 ;; *************** function _fputc *****************
  3034 ;; Defined at:
  3035 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  c               2    0[COMRAM] int 
  3038 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3039 ;;		 -> sprintf@f(11), 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  2    0[COMRAM] int 
  3044 ;; Registers used:
  3045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3051 ;;      Params:         4       0       0       0       0       0       0       0       0
  3052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3053 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3054 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3055 ;;Total ram usage:        9 bytes
  3056 ;; Hardware stack levels used: 1
  3057 ;; Hardware stack levels required when called: 1
  3058 ;; This function calls:
  3059 ;;		_putch
  3060 ;; This function is called by:
  3061 ;;		_pad
  3062 ;;		_vfpfcnvrt
  3063 ;;		_fputs
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text13
  3068  0018AA                     __ptext13:
  3069                           	callstack 0
  3070  0018AA                     _fputc:
  3071                           	callstack 23
  3072  0018AA  5003               	movf	fputc@fp^0,w,c
  3073  0018AC  1004               	iorwf	(fputc@fp+1)^0,w,c
  3074  0018AE  B4D8               	btfsc	status,2,c
  3075  0018B0  EF5C  F00C         	goto	u1331
  3076  0018B4  EF5E  F00C         	goto	u1330
  3077  0018B8                     u1331:
  3078  0018B8  EF67  F00C         	goto	l2095
  3079  0018BC                     u1330:
  3080  0018BC  5003               	movf	fputc@fp^0,w,c
  3081  0018BE  1004               	iorwf	(fputc@fp+1)^0,w,c
  3082  0018C0  A4D8               	btfss	status,2,c
  3083  0018C2  EF65  F00C         	goto	u1341
  3084  0018C6  EF67  F00C         	goto	u1340
  3085  0018CA                     u1341:
  3086  0018CA  EF6C  F00C         	goto	l2097
  3087  0018CE                     u1340:
  3088  0018CE                     l2095:
  3089  0018CE  5001               	movf	fputc@c^0,w,c
  3090  0018D0  EC34  F012         	call	_putch
  3091  0018D4  EFB9  F00C         	goto	l1111
  3092  0018D8                     l2097:
  3093  0018D8  EE20 F009          	lfsr	2,9
  3094  0018DC  5003               	movf	fputc@fp^0,w,c
  3095  0018DE  26D9               	addwf	fsr2l,f,c
  3096  0018E0  5004               	movf	(fputc@fp+1)^0,w,c
  3097  0018E2  22DA               	addwfc	fsr2h,f,c
  3098  0018E4  50DE               	movf	postinc2,w,c
  3099  0018E6  10DE               	iorwf	postinc2,w,c
  3100  0018E8  B4D8               	btfsc	status,2,c
  3101  0018EA  EF79  F00C         	goto	u1351
  3102  0018EE  EF7B  F00C         	goto	u1350
  3103  0018F2                     u1351:
  3104  0018F2  EF96  F00C         	goto	l2101
  3105  0018F6                     u1350:
  3106  0018F6  EE20 F009          	lfsr	2,9
  3107  0018FA  5003               	movf	fputc@fp^0,w,c
  3108  0018FC  26D9               	addwf	fsr2l,f,c
  3109  0018FE  5004               	movf	(fputc@fp+1)^0,w,c
  3110  001900  22DA               	addwfc	fsr2h,f,c
  3111  001902  EE10 F003          	lfsr	1,3
  3112  001906  5003               	movf	fputc@fp^0,w,c
  3113  001908  26E1               	addwf	fsr1l,f,c
  3114  00190A  5004               	movf	(fputc@fp+1)^0,w,c
  3115  00190C  22E2               	addwfc	fsr1h,f,c
  3116  00190E  50DE               	movf	postinc2,w,c
  3117  001910  5CE6               	subwf	postinc1,w,c
  3118  001912  50E6               	movf	postinc1,w,c
  3119  001914  0A80               	xorlw	128
  3120  001916  6E09               	movwf	(??_fputc+4)^0,c
  3121  001918  50DE               	movf	postinc2,w,c
  3122  00191A  0A80               	xorlw	128
  3123  00191C  5809               	subwfb	(??_fputc+4)^0,w,c
  3124  00191E  B0D8               	btfsc	status,0,c
  3125  001920  EF94  F00C         	goto	u1361
  3126  001924  EF96  F00C         	goto	u1360
  3127  001928                     u1361:
  3128  001928  EFB9  F00C         	goto	l1111
  3129  00192C                     u1360:
  3130  00192C                     l2101:
  3131  00192C  EE20 F003          	lfsr	2,3
  3132  001930  5003               	movf	fputc@fp^0,w,c
  3133  001932  26D9               	addwf	fsr2l,f,c
  3134  001934  5004               	movf	(fputc@fp+1)^0,w,c
  3135  001936  22DA               	addwfc	fsr2h,f,c
  3136  001938  CFDE F005          	movff	postinc2,??_fputc
  3137  00193C  CFDD F006          	movff	postdec2,??_fputc+1
  3138  001940  C003  FFD9         	movff	fputc@fp,fsr2l
  3139  001944  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3140  001948  CFDE F007          	movff	postinc2,??_fputc+2
  3141  00194C  CFDD F008          	movff	postdec2,??_fputc+3
  3142  001950  5005               	movf	??_fputc^0,w,c
  3143  001952  2407               	addwf	(??_fputc+2)^0,w,c
  3144  001954  6ED9               	movwf	fsr2l,c
  3145  001956  5006               	movf	(??_fputc+1)^0,w,c
  3146  001958  2008               	addwfc	(??_fputc+3)^0,w,c
  3147  00195A  6EDA               	movwf	fsr2h,c
  3148  00195C  C001  FFDF         	movff	fputc@c,indf2
  3149  001960  EE20 F003          	lfsr	2,3
  3150  001964  5003               	movf	fputc@fp^0,w,c
  3151  001966  26D9               	addwf	fsr2l,f,c
  3152  001968  5004               	movf	(fputc@fp+1)^0,w,c
  3153  00196A  22DA               	addwfc	fsr2h,f,c
  3154  00196C  2ADE               	incf	postinc2,f,c
  3155  00196E  0E00               	movlw	0
  3156  001970  22DD               	addwfc	postdec2,f,c
  3157  001972                     l1111:
  3158  001972  0012               	return		;funcret
  3159  001974                     __end_of_fputc:
  3160                           	callstack 0
  3161                           
  3162 ;; *************** function _putch *****************
  3163 ;; Defined at:
  3164 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  c               1    wreg     unsigned char 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  c               1    0[COMRAM] unsigned char 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		wreg
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3178 ;;      Params:         0       0       0       0       0       0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3181 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3182 ;;Total ram usage:        0 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_fputc
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text14
  3192  002468                     __ptext14:
  3193                           	callstack 0
  3194  002468                     _putch:
  3195                           	callstack 23
  3196  002468  0012               	return		;funcret
  3197  00246A                     __end_of_putch:
  3198                           	callstack 0
  3199                           
  3200 ;; *************** function _abs *****************
  3201 ;; Defined at:
  3202 ;;		line 1 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  a               2   18[COMRAM] int 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;		None
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  2   18[COMRAM] int 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2, status,0
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3216 ;;      Params:         2       0       0       0       0       0       0       0       0
  3217 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3218 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3219 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3220 ;;Total ram usage:        4 bytes
  3221 ;; Hardware stack levels used: 1
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_dtoa
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text15
  3230  00219A                     __ptext15:
  3231                           	callstack 0
  3232  00219A                     _abs:
  3233                           	callstack 26
  3234  00219A  BE14               	btfsc	(abs@a+1)^0,7,c
  3235  00219C  EFDA  F010         	goto	u1750
  3236  0021A0  5014               	movf	(abs@a+1)^0,w,c
  3237  0021A2  E106               	bnz	u1751
  3238  0021A4  0413               	decf	abs@a^0,w,c
  3239  0021A6  B0D8               	btfsc	status,0,c
  3240  0021A8  EFD8  F010         	goto	u1751
  3241  0021AC  EFDA  F010         	goto	u1750
  3242  0021B0                     u1751:
  3243  0021B0  EFE8  F010         	goto	l1084
  3244  0021B4                     u1750:
  3245  0021B4  C013  F015         	movff	abs@a,??_abs
  3246  0021B8  C014  F016         	movff	abs@a+1,??_abs+1
  3247  0021BC  1E15               	comf	??_abs^0,f,c
  3248  0021BE  1E16               	comf	(??_abs+1)^0,f,c
  3249  0021C0  4A15               	infsnz	??_abs^0,f,c
  3250  0021C2  2A16               	incf	(??_abs+1)^0,f,c
  3251  0021C4  C015  F013         	movff	??_abs,?_abs
  3252  0021C8  C016  F014         	movff	??_abs+1,?_abs+1
  3253  0021CC  EFEC  F010         	goto	l1087
  3254  0021D0                     l1084:
  3255  0021D0  C013  F013         	movff	abs@a,?_abs
  3256  0021D4  C014  F014         	movff	abs@a+1,?_abs+1
  3257  0021D8                     l1087:
  3258  0021D8  0012               	return		;funcret
  3259  0021DA                     __end_of_abs:
  3260                           	callstack 0
  3261                           
  3262 ;; *************** function ___aomod *****************
  3263 ;; Defined at:
  3264 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  dividend        8    0[COMRAM] long long 
  3267 ;;  divisor         8    8[COMRAM] long long 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;  sign            1   17[COMRAM] unsigned char 
  3270 ;;  counter         1   16[COMRAM] unsigned char 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  8    0[COMRAM] long long 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3280 ;;      Params:        16       0       0       0       0       0       0       0       0
  3281 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3283 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3284 ;;Total ram usage:       18 bytes
  3285 ;; Hardware stack levels used: 1
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_dtoa
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text16
  3294  001658                     __ptext16:
  3295                           	callstack 0
  3296  001658                     ___aomod:
  3297                           	callstack 26
  3298  001658  0E00               	movlw	0
  3299  00165A  6E12               	movwf	___aomod@sign^0,c
  3300  00165C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3301  00165E  EF35  F00B         	goto	u1650
  3302  001662  EF33  F00B         	goto	u1651
  3303  001666                     u1651:
  3304  001666  EF47  F00B         	goto	l2267
  3305  00166A                     u1650:
  3306  00166A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3307  00166C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3308  00166E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3309  001670  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3310  001672  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3311  001674  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3312  001676  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3313  001678  6C01               	negf	___aomod@dividend^0,c
  3314  00167A  0E00               	movlw	0
  3315  00167C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3316  00167E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3317  001680  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3318  001682  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3319  001684  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3320  001686  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3321  001688  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3322  00168A  0E01               	movlw	1
  3323  00168C  6E12               	movwf	___aomod@sign^0,c
  3324  00168E                     l2267:
  3325  00168E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3326  001690  EF4E  F00B         	goto	u1660
  3327  001694  EF4C  F00B         	goto	u1661
  3328  001698                     u1661:
  3329  001698  EF5E  F00B         	goto	l2271
  3330  00169C                     u1660:
  3331  00169C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3332  00169E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3333  0016A0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3334  0016A2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3335  0016A4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3336  0016A6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3337  0016A8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3338  0016AA  6C09               	negf	___aomod@divisor^0,c
  3339  0016AC  0E00               	movlw	0
  3340  0016AE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3341  0016B0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3342  0016B2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3343  0016B4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3344  0016B6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3345  0016B8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3346  0016BA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3347  0016BC                     l2271:
  3348  0016BC  5009               	movf	___aomod@divisor^0,w,c
  3349  0016BE  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3350  0016C0  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3351  0016C2  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3352  0016C4  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3353  0016C6  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3354  0016C8  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3355  0016CA  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3356  0016CC  B4D8               	btfsc	status,2,c
  3357  0016CE  EF6B  F00B         	goto	u1671
  3358  0016D2  EF6D  F00B         	goto	u1670
  3359  0016D6                     u1671:
  3360  0016D6  EFB5  F00B         	goto	l2287
  3361  0016DA                     u1670:
  3362  0016DA  0E01               	movlw	1
  3363  0016DC  6E11               	movwf	___aomod@counter^0,c
  3364  0016DE  EF7B  F00B         	goto	l2277
  3365  0016E2                     l2275:
  3366  0016E2  90D8               	bcf	status,0,c
  3367  0016E4  3609               	rlcf	___aomod@divisor^0,f,c
  3368  0016E6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3369  0016E8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3370  0016EA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3371  0016EC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3372  0016EE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3373  0016F0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3374  0016F2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3375  0016F4  2A11               	incf	___aomod@counter^0,f,c
  3376  0016F6                     l2277:
  3377  0016F6  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3378  0016F8  EF80  F00B         	goto	u1681
  3379  0016FC  EF82  F00B         	goto	u1680
  3380  001700                     u1681:
  3381  001700  EF71  F00B         	goto	l2275
  3382  001704                     u1680:
  3383  001704                     l2279:
  3384  001704  5009               	movf	___aomod@divisor^0,w,c
  3385  001706  5C01               	subwf	___aomod@dividend^0,w,c
  3386  001708  500A               	movf	(___aomod@divisor+1)^0,w,c
  3387  00170A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3388  00170C  500B               	movf	(___aomod@divisor+2)^0,w,c
  3389  00170E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3390  001710  500C               	movf	(___aomod@divisor+3)^0,w,c
  3391  001712  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3392  001714  500D               	movf	(___aomod@divisor+4)^0,w,c
  3393  001716  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3394  001718  500E               	movf	(___aomod@divisor+5)^0,w,c
  3395  00171A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3396  00171C  500F               	movf	(___aomod@divisor+6)^0,w,c
  3397  00171E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3398  001720  5010               	movf	(___aomod@divisor+7)^0,w,c
  3399  001722  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3400  001724  A0D8               	btfss	status,0,c
  3401  001726  EF97  F00B         	goto	u1691
  3402  00172A  EF99  F00B         	goto	u1690
  3403  00172E                     u1691:
  3404  00172E  EFA9  F00B         	goto	l2283
  3405  001732                     u1690:
  3406  001732  5009               	movf	___aomod@divisor^0,w,c
  3407  001734  5E01               	subwf	___aomod@dividend^0,f,c
  3408  001736  500A               	movf	(___aomod@divisor+1)^0,w,c
  3409  001738  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3410  00173A  500B               	movf	(___aomod@divisor+2)^0,w,c
  3411  00173C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3412  00173E  500C               	movf	(___aomod@divisor+3)^0,w,c
  3413  001740  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3414  001742  500D               	movf	(___aomod@divisor+4)^0,w,c
  3415  001744  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3416  001746  500E               	movf	(___aomod@divisor+5)^0,w,c
  3417  001748  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3418  00174A  500F               	movf	(___aomod@divisor+6)^0,w,c
  3419  00174C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3420  00174E  5010               	movf	(___aomod@divisor+7)^0,w,c
  3421  001750  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3422  001752                     l2283:
  3423  001752  90D8               	bcf	status,0,c
  3424  001754  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3425  001756  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3426  001758  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3427  00175A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3428  00175C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3429  00175E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3430  001760  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3431  001762  3209               	rrcf	___aomod@divisor^0,f,c
  3432  001764  2E11               	decfsz	___aomod@counter^0,f,c
  3433  001766  EF82  F00B         	goto	l2279
  3434  00176A                     l2287:
  3435  00176A  5012               	movf	___aomod@sign^0,w,c
  3436  00176C  B4D8               	btfsc	status,2,c
  3437  00176E  EFBB  F00B         	goto	u1701
  3438  001772  EFBD  F00B         	goto	u1700
  3439  001776                     u1701:
  3440  001776  EFCD  F00B         	goto	l2291
  3441  00177A                     u1700:
  3442  00177A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3443  00177C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3444  00177E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3445  001780  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3446  001782  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3447  001784  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3448  001786  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3449  001788  6C01               	negf	___aomod@dividend^0,c
  3450  00178A  0E00               	movlw	0
  3451  00178C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3452  00178E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3453  001790  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3454  001792  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3455  001794  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3456  001796  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3457  001798  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3458  00179A                     l2291:
  3459  00179A  C001  F001         	movff	___aomod@dividend,?___aomod
  3460  00179E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3461  0017A2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3462  0017A6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3463  0017AA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3464  0017AE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3465  0017B2  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3466  0017B6  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3467  0017BA  0012               	return		;funcret
  3468  0017BC                     __end_of___aomod:
  3469                           	callstack 0
  3470                           
  3471 ;; *************** function ___aodiv *****************
  3472 ;; Defined at:
  3473 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  dividend        8    0[COMRAM] long long 
  3476 ;;  divisor         8    8[COMRAM] long long 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  quotient        8   18[COMRAM] long long 
  3479 ;;  sign            1   17[COMRAM] unsigned char 
  3480 ;;  counter         1   16[COMRAM] unsigned char 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  8    0[COMRAM] long long 
  3483 ;; Registers used:
  3484 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3490 ;;      Params:        16       0       0       0       0       0       0       0       0
  3491 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3493 ;;      Totals:        26       0       0       0       0       0       0       0       0
  3494 ;;Total ram usage:       26 bytes
  3495 ;; Hardware stack levels used: 1
  3496 ;; This function calls:
  3497 ;;		Nothing
  3498 ;; This function is called by:
  3499 ;;		_dtoa
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text17
  3504  0014D0                     __ptext17:
  3505                           	callstack 0
  3506  0014D0                     ___aodiv:
  3507                           	callstack 26
  3508  0014D0  0E00               	movlw	0
  3509  0014D2  6E12               	movwf	___aodiv@sign^0,c
  3510  0014D4  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3511  0014D6  EF71  F00A         	goto	u1580
  3512  0014DA  EF6F  F00A         	goto	u1581
  3513  0014DE                     u1581:
  3514  0014DE  EF83  F00A         	goto	l2223
  3515  0014E2                     u1580:
  3516  0014E2  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3517  0014E4  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3518  0014E6  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3519  0014E8  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3520  0014EA  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3521  0014EC  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3522  0014EE  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3523  0014F0  6C09               	negf	___aodiv@divisor^0,c
  3524  0014F2  0E00               	movlw	0
  3525  0014F4  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3526  0014F6  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3527  0014F8  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3528  0014FA  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3529  0014FC  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3530  0014FE  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3531  001500  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3532  001502  0E01               	movlw	1
  3533  001504  6E12               	movwf	___aodiv@sign^0,c
  3534  001506                     l2223:
  3535  001506  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3536  001508  EF8A  F00A         	goto	u1590
  3537  00150C  EF88  F00A         	goto	u1591
  3538  001510                     u1591:
  3539  001510  EF9C  F00A         	goto	l2229
  3540  001514                     u1590:
  3541  001514  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3542  001516  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3543  001518  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3544  00151A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3545  00151C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3546  00151E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3547  001520  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3548  001522  6C01               	negf	___aodiv@dividend^0,c
  3549  001524  0E00               	movlw	0
  3550  001526  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3551  001528  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3552  00152A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3553  00152C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3554  00152E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3555  001530  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3556  001532  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3557  001534  0E01               	movlw	1
  3558  001536  1A12               	xorwf	___aodiv@sign^0,f,c
  3559  001538                     l2229:
  3560  001538  EE20  F013         	lfsr	2,___aodiv@quotient
  3561  00153C  0E07               	movlw	7
  3562  00153E                     u1601:
  3563  00153E  6ADE               	clrf	postinc2,c
  3564  001540  06E8               	decf	wreg,f,c
  3565  001542  E2FD               	bc	u1601
  3566  001544  5009               	movf	___aodiv@divisor^0,w,c
  3567  001546  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3568  001548  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3569  00154A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3570  00154C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3571  00154E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3572  001550  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3573  001552  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3574  001554  B4D8               	btfsc	status,2,c
  3575  001556  EFAF  F00A         	goto	u1611
  3576  00155A  EFB1  F00A         	goto	u1610
  3577  00155E                     u1611:
  3578  00155E  EF03  F00B         	goto	l2251
  3579  001562                     u1610:
  3580  001562  0E01               	movlw	1
  3581  001564  6E11               	movwf	___aodiv@counter^0,c
  3582  001566  EFBF  F00A         	goto	l2237
  3583  00156A                     l2235:
  3584  00156A  90D8               	bcf	status,0,c
  3585  00156C  3609               	rlcf	___aodiv@divisor^0,f,c
  3586  00156E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3587  001570  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3588  001572  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3589  001574  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3590  001576  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3591  001578  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3592  00157A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3593  00157C  2A11               	incf	___aodiv@counter^0,f,c
  3594  00157E                     l2237:
  3595  00157E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3596  001580  EFC4  F00A         	goto	u1621
  3597  001584  EFC6  F00A         	goto	u1620
  3598  001588                     u1621:
  3599  001588  EFB5  F00A         	goto	l2235
  3600  00158C                     u1620:
  3601  00158C                     l2239:
  3602  00158C  90D8               	bcf	status,0,c
  3603  00158E  3613               	rlcf	___aodiv@quotient^0,f,c
  3604  001590  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3605  001592  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3606  001594  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3607  001596  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3608  001598  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3609  00159A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3610  00159C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3611  00159E  5009               	movf	___aodiv@divisor^0,w,c
  3612  0015A0  5C01               	subwf	___aodiv@dividend^0,w,c
  3613  0015A2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3614  0015A4  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3615  0015A6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3616  0015A8  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3617  0015AA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3618  0015AC  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3619  0015AE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3620  0015B0  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3621  0015B2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3622  0015B4  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3623  0015B6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3624  0015B8  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3625  0015BA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3626  0015BC  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3627  0015BE  A0D8               	btfss	status,0,c
  3628  0015C0  EFE4  F00A         	goto	u1631
  3629  0015C4  EFE6  F00A         	goto	u1630
  3630  0015C8                     u1631:
  3631  0015C8  EFF7  F00A         	goto	l2247
  3632  0015CC                     u1630:
  3633  0015CC  5009               	movf	___aodiv@divisor^0,w,c
  3634  0015CE  5E01               	subwf	___aodiv@dividend^0,f,c
  3635  0015D0  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3636  0015D2  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3637  0015D4  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3638  0015D6  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3639  0015D8  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3640  0015DA  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3641  0015DC  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3642  0015DE  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3643  0015E0  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3644  0015E2  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3645  0015E4  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3646  0015E6  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3647  0015E8  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3648  0015EA  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3649  0015EC  8013               	bsf	___aodiv@quotient^0,0,c
  3650  0015EE                     l2247:
  3651  0015EE  90D8               	bcf	status,0,c
  3652  0015F0  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3653  0015F2  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3654  0015F4  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3655  0015F6  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3656  0015F8  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3657  0015FA  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3658  0015FC  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3659  0015FE  3209               	rrcf	___aodiv@divisor^0,f,c
  3660  001600  2E11               	decfsz	___aodiv@counter^0,f,c
  3661  001602  EFC6  F00A         	goto	l2239
  3662  001606                     l2251:
  3663  001606  5012               	movf	___aodiv@sign^0,w,c
  3664  001608  B4D8               	btfsc	status,2,c
  3665  00160A  EF09  F00B         	goto	u1641
  3666  00160E  EF0B  F00B         	goto	u1640
  3667  001612                     u1641:
  3668  001612  EF1B  F00B         	goto	l2255
  3669  001616                     u1640:
  3670  001616  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3671  001618  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3672  00161A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3673  00161C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3674  00161E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3675  001620  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3676  001622  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3677  001624  6C13               	negf	___aodiv@quotient^0,c
  3678  001626  0E00               	movlw	0
  3679  001628  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3680  00162A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3681  00162C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3682  00162E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3683  001630  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3684  001632  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3685  001634  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3686  001636                     l2255:
  3687  001636  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3688  00163A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3689  00163E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3690  001642  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3691  001646  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3692  00164A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3693  00164E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3694  001652  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3695  001656  0012               	return		;funcret
  3696  001658                     __end_of___aodiv:
  3697                           	callstack 0
  3698                           
  3699 ;; *************** function _port_Init *****************
  3700 ;; Defined at:
  3701 ;;		line 75 in file "main.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;		None
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;		None
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		None
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3715 ;;      Params:         0       0       0       0       0       0       0       0       0
  3716 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3718 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3719 ;;Total ram usage:        0 bytes
  3720 ;; Hardware stack levels used: 1
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_main
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text18
  3729  002462                     __ptext18:
  3730                           	callstack 0
  3731  002462                     _port_Init:
  3732                           	callstack 30
  3733  002462                     
  3734                           ;main.c: 77:     TRISB7 = 0;
  3735  002462  9E93               	bcf	3987,7,c	;volatile
  3736                           
  3737                           ;main.c: 78:     LATB7 = 0;
  3738  002464  9E8A               	bcf	3978,7,c	;volatile
  3739  002466  0012               	return		;funcret
  3740  002468                     __end_of_port_Init:
  3741                           	callstack 0
  3742                           
  3743 ;; *************** function _MFRC522_ReadCardSerial *****************
  3744 ;; Defined at:
  3745 ;;		line 315 in file "rc522.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;  str             2   39[COMRAM] PTR unsigned char 
  3748 ;;		 -> UID(16), 
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  _status         1    0        unsigned char 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      unsigned char 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3760 ;;      Params:         2       0       0       0       0       0       0       0       0
  3761 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3763 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3764 ;;Total ram usage:        2 bytes
  3765 ;; Hardware stack levels used: 1
  3766 ;; Hardware stack levels required when called: 4
  3767 ;; This function calls:
  3768 ;;		_MFRC522_AntiColl
  3769 ;; This function is called by:
  3770 ;;		_main
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	text19
  3775  0023C6                     __ptext19:
  3776                           	callstack 0
  3777  0023C6                     _MFRC522_ReadCardSerial:
  3778                           	callstack 26
  3779  0023C6  C028  F020         	movff	MFRC522_ReadCardSerial@str,MFRC522_AntiColl@serNum
  3780  0023CA  C029  F021         	movff	MFRC522_ReadCardSerial@str+1,MFRC522_AntiColl@serNum+1
  3781  0023CE  ECD4  F00D         	call	_MFRC522_AntiColl	;wreg free
  3782  0023D2                     
  3783                           ;rc522.c: 319:     str[5] = 0;
  3784  0023D2  EE20 F005          	lfsr	2,5
  3785  0023D6  5028               	movf	MFRC522_ReadCardSerial@str^0,w,c
  3786  0023D8  26D9               	addwf	fsr2l,f,c
  3787  0023DA  5029               	movf	(MFRC522_ReadCardSerial@str+1)^0,w,c
  3788  0023DC  22DA               	addwfc	fsr2h,f,c
  3789  0023DE  0E00               	movlw	0
  3790  0023E0  6EDF               	movwf	indf2,c
  3791  0023E2  0012               	return		;funcret
  3792  0023E4                     __end_of_MFRC522_ReadCardSerial:
  3793                           	callstack 0
  3794                           
  3795 ;; *************** function _MFRC522_AntiColl *****************
  3796 ;; Defined at:
  3797 ;;		line 282 in file "rc522.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  serNum          2   31[COMRAM] PTR unsigned char 
  3800 ;;		 -> UID(16), 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  unLen           2   35[COMRAM] unsigned int 
  3803 ;;  i               1   38[COMRAM] unsigned char 
  3804 ;;  _status         1   37[COMRAM] unsigned char 
  3805 ;;  serNumCheck     1   34[COMRAM] unsigned char 
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      unsigned char 
  3808 ;; Registers used:
  3809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3815 ;;      Params:         2       0       0       0       0       0       0       0       0
  3816 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3817 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3818 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3819 ;;Total ram usage:        8 bytes
  3820 ;; Hardware stack levels used: 1
  3821 ;; Hardware stack levels required when called: 3
  3822 ;; This function calls:
  3823 ;;		_MFRC522_Clear_Bit
  3824 ;;		_MFRC522_ToCard
  3825 ;;		_MFRC522_Wr
  3826 ;; This function is called by:
  3827 ;;		_main
  3828 ;;		_MFRC522_ReadCardSerial
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text20
  3833  001BA8                     __ptext20:
  3834                           	callstack 0
  3835  001BA8                     _MFRC522_AntiColl:
  3836                           	callstack 26
  3837  001BA8                     
  3838                           ;rc522.c: 282: char MFRC522_AntiColl(char *serNum);rc522.c: 283: {;rc522.c: 284:     cha
      +                          r _status;;rc522.c: 285:     char i;;rc522.c: 286:     char serNumCheck = 0;
  3839  001BA8  0E00               	movlw	0
  3840  001BAA  6E23               	movwf	MFRC522_AntiColl@serNumCheck^0,c
  3841  001BAC                     
  3842                           ;rc522.c: 287:     unsigned unLen;;rc522.c: 288:     MFRC522_Wr(0x0D, 0x00);
  3843  001BAC  0E00               	movlw	0
  3844  001BAE  6E01               	movwf	MFRC522_Wr@value^0,c
  3845  001BB0  0E0D               	movlw	13
  3846  001BB2  ECD0  F00E         	call	_MFRC522_Wr
  3847  001BB6                     
  3848                           ;rc522.c: 289:     serNum[0] = 0x93;
  3849  001BB6  C020  FFD9         	movff	MFRC522_AntiColl@serNum,fsr2l
  3850  001BBA  C021  FFDA         	movff	MFRC522_AntiColl@serNum+1,fsr2h
  3851  001BBE  0E93               	movlw	147
  3852  001BC0  6EDF               	movwf	indf2,c
  3853  001BC2                     
  3854                           ;rc522.c: 290:     serNum[1] = 0x20;
  3855  001BC2  EE20 F001          	lfsr	2,1
  3856  001BC6  5020               	movf	MFRC522_AntiColl@serNum^0,w,c
  3857  001BC8  26D9               	addwf	fsr2l,f,c
  3858  001BCA  5021               	movf	(MFRC522_AntiColl@serNum+1)^0,w,c
  3859  001BCC  22DA               	addwfc	fsr2h,f,c
  3860  001BCE  0E20               	movlw	32
  3861  001BD0  6EDF               	movwf	indf2,c
  3862  001BD2                     
  3863                           ;rc522.c: 291:     MFRC522_Clear_Bit(0x08, 0x08);
  3864  001BD2  0E08               	movlw	8
  3865  001BD4  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  3866  001BD6  0E08               	movlw	8
  3867  001BD8  EC01  F012         	call	_MFRC522_Clear_Bit
  3868  001BDC                     
  3869                           ;rc522.c: 292:     _status = MFRC522_ToCard(0x0C, serNum, 2, serNum, &unLen);
  3870  001BDC  C020  F00D         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@sendData
  3871  001BE0  C021  F00E         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@sendData+1
  3872  001BE4  0E02               	movlw	2
  3873  001BE6  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
  3874  001BE8  C020  F010         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@backData
  3875  001BEC  C021  F011         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@backData+1
  3876  001BF0  0E24               	movlw	low MFRC522_AntiColl@unLen
  3877  001BF2  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  3878  001BF4  0E00               	movlw	high MFRC522_AntiColl@unLen
  3879  001BF6  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  3880  001BF8  0E0C               	movlw	12
  3881  001BFA  EC17  F008         	call	_MFRC522_ToCard
  3882  001BFE  6E26               	movwf	MFRC522_AntiColl@_status^0,c
  3883  001C00                     
  3884                           ;rc522.c: 293:     if(_status == 0)
  3885  001C00  5026               	movf	MFRC522_AntiColl@_status^0,w,c
  3886  001C02  A4D8               	btfss	status,2,c
  3887  001C04  EF06  F00E         	goto	u2301
  3888  001C08  EF08  F00E         	goto	u2300
  3889  001C0C                     u2301:
  3890  001C0C  EF2C  F00E         	goto	l272
  3891  001C10                     u2300:
  3892  001C10                     
  3893                           ;rc522.c: 294:     {;rc522.c: 295:         for(i=0; i<5; i++)
  3894  001C10  0E00               	movlw	0
  3895  001C12  6E27               	movwf	MFRC522_AntiColl@i^0,c
  3896  001C14                     l2663:
  3897                           
  3898                           ;rc522.c: 296:         {;rc522.c: 297:             serNumCheck ^= serNum[i];
  3899  001C14  5027               	movf	MFRC522_AntiColl@i^0,w,c
  3900  001C16  2420               	addwf	MFRC522_AntiColl@serNum^0,w,c
  3901  001C18  6ED9               	movwf	fsr2l,c
  3902  001C1A  0E00               	movlw	0
  3903  001C1C  2021               	addwfc	(MFRC522_AntiColl@serNum+1)^0,w,c
  3904  001C1E  6EDA               	movwf	fsr2h,c
  3905  001C20  50DF               	movf	indf2,w,c
  3906  001C22  1A23               	xorwf	MFRC522_AntiColl@serNumCheck^0,f,c
  3907  001C24                     
  3908                           ;rc522.c: 298:         }
  3909  001C24  2A27               	incf	MFRC522_AntiColl@i^0,f,c
  3910  001C26  0E04               	movlw	4
  3911  001C28  6427               	cpfsgt	MFRC522_AntiColl@i^0,c
  3912  001C2A  EF19  F00E         	goto	u2311
  3913  001C2E  EF1B  F00E         	goto	u2310
  3914  001C32                     u2311:
  3915  001C32  EF0A  F00E         	goto	l2663
  3916  001C36                     u2310:
  3917  001C36                     
  3918                           ;rc522.c: 299:         if(serNumCheck != serNum[5])
  3919  001C36  EE20 F005          	lfsr	2,5
  3920  001C3A  5020               	movf	MFRC522_AntiColl@serNum^0,w,c
  3921  001C3C  26D9               	addwf	fsr2l,f,c
  3922  001C3E  5021               	movf	(MFRC522_AntiColl@serNum+1)^0,w,c
  3923  001C40  22DA               	addwfc	fsr2h,f,c
  3924  001C42  5023               	movf	MFRC522_AntiColl@serNumCheck^0,w,c
  3925  001C44  18DE               	xorwf	postinc2,w,c
  3926  001C46  B4D8               	btfsc	status,2,c
  3927  001C48  EF28  F00E         	goto	u2321
  3928  001C4C  EF2A  F00E         	goto	u2320
  3929  001C50                     u2321:
  3930  001C50  EF2C  F00E         	goto	l272
  3931  001C54                     u2320:
  3932  001C54                     
  3933                           ;rc522.c: 300:         {;rc522.c: 301:             _status = 2;
  3934  001C54  0E02               	movlw	2
  3935  001C56  6E26               	movwf	MFRC522_AntiColl@_status^0,c
  3936  001C58                     l272:
  3937                           
  3938                           ;rc522.c: 304:     return _status;
  3939  001C58  5026               	movf	MFRC522_AntiColl@_status^0,w,c
  3940  001C5A  0012               	return		;funcret
  3941  001C5C                     __end_of_MFRC522_AntiColl:
  3942                           	callstack 0
  3943                           
  3944 ;; *************** function _MFRC522_IsCard *****************
  3945 ;; Defined at:
  3946 ;;		line 307 in file "rc522.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;  TagType         2   37[COMRAM] PTR unsigned char 
  3949 ;;		 -> TagType(1), 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      unsigned char 
  3954 ;; Registers used:
  3955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3961 ;;      Params:         2       0       0       0       0       0       0       0       0
  3962 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3964 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3965 ;;Total ram usage:        2 bytes
  3966 ;; Hardware stack levels used: 1
  3967 ;; Hardware stack levels required when called: 4
  3968 ;; This function calls:
  3969 ;;		_MFRC522_Request
  3970 ;; This function is called by:
  3971 ;;		_main
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text21
  3976  002446                     __ptext21:
  3977                           	callstack 0
  3978  002446                     _MFRC522_IsCard:
  3979                           	callstack 26
  3980  002446                     
  3981                           ;rc522.c: 307: char MFRC522_IsCard(char *TagType);rc522.c: 308: {;rc522.c: 309:     if(M
      +                          FRC522_Request(0x26, TagType) == 0)
  3982  002446  C026  F020         	movff	MFRC522_IsCard@TagType,MFRC522_Request@TagType
  3983  00244A  C027  F021         	movff	MFRC522_IsCard@TagType+1,MFRC522_Request@TagType+1
  3984  00244E  0E26               	movlw	38
  3985  002450  EC4F  F00F         	call	_MFRC522_Request
  3986  002454  0012               	return		;funcret
  3987  002456                     __end_of_MFRC522_IsCard:
  3988                           	callstack 0
  3989                           
  3990 ;; *************** function _MFRC522_Request *****************
  3991 ;; Defined at:
  3992 ;;		line 208 in file "rc522.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  reqMode         1    wreg     unsigned char 
  3995 ;;  TagType         2   31[COMRAM] PTR unsigned char 
  3996 ;;		 -> TagType(1), 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  reqMode         1   33[COMRAM] unsigned char 
  3999 ;;  backBits        2   35[COMRAM] unsigned int 
  4000 ;;  _status         1   34[COMRAM] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      unsigned char 
  4003 ;; Registers used:
  4004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4010 ;;      Params:         2       0       0       0       0       0       0       0       0
  4011 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4013 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4014 ;;Total ram usage:        6 bytes
  4015 ;; Hardware stack levels used: 1
  4016 ;; Hardware stack levels required when called: 3
  4017 ;; This function calls:
  4018 ;;		_MFRC522_ToCard
  4019 ;;		_MFRC522_Wr
  4020 ;; This function is called by:
  4021 ;;		_MFRC522_IsCard
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text22
  4026  001E9E                     __ptext22:
  4027                           	callstack 0
  4028  001E9E                     _MFRC522_Request:
  4029                           	callstack 26
  4030                           
  4031                           ;incstack = 0
  4032                           ;MFRC522_Request@reqMode stored from wreg
  4033  001E9E  6E22               	movwf	MFRC522_Request@reqMode^0,c
  4034  001EA0                     
  4035                           ;rc522.c: 208: char MFRC522_Request(char reqMode, char *TagType);rc522.c: 209: {;rc522.c
      +                          : 210:     char _status;;rc522.c: 211:     unsigned backBits;;rc522.c: 212:     MFRC522_
      +                          Wr(0x0D, 0x07);
  4036  001EA0  0E07               	movlw	7
  4037  001EA2  6E01               	movwf	MFRC522_Wr@value^0,c
  4038  001EA4  0E0D               	movlw	13
  4039  001EA6  ECD0  F00E         	call	_MFRC522_Wr
  4040  001EAA                     
  4041                           ;rc522.c: 213:     TagType[0] = reqMode;
  4042  001EAA  C020  FFD9         	movff	MFRC522_Request@TagType,fsr2l
  4043  001EAE  C021  FFDA         	movff	MFRC522_Request@TagType+1,fsr2h
  4044  001EB2  C022  FFDF         	movff	MFRC522_Request@reqMode,indf2
  4045  001EB6                     
  4046                           ;rc522.c: 214:     _status = MFRC522_ToCard(0x0C, TagType, 1, TagType, &backBits);
  4047  001EB6  C020  F00D         	movff	MFRC522_Request@TagType,MFRC522_ToCard@sendData
  4048  001EBA  C021  F00E         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@sendData+1
  4049  001EBE  0E01               	movlw	1
  4050  001EC0  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
  4051  001EC2  C020  F010         	movff	MFRC522_Request@TagType,MFRC522_ToCard@backData
  4052  001EC6  C021  F011         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@backData+1
  4053  001ECA  0E24               	movlw	low MFRC522_Request@backBits
  4054  001ECC  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  4055  001ECE  0E00               	movlw	high MFRC522_Request@backBits
  4056  001ED0  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  4057  001ED2  0E0C               	movlw	12
  4058  001ED4  EC17  F008         	call	_MFRC522_ToCard
  4059  001ED8  6E23               	movwf	MFRC522_Request@_status^0,c
  4060  001EDA                     
  4061                           ;rc522.c: 215:     if((_status != 0) || (backBits != 0x10))
  4062  001EDA  5023               	movf	MFRC522_Request@_status^0,w,c
  4063  001EDC  A4D8               	btfss	status,2,c
  4064  001EDE  EF73  F00F         	goto	u2331
  4065  001EE2  EF75  F00F         	goto	u2330
  4066  001EE6                     u2331:
  4067  001EE6  EF7F  F00F         	goto	l2695
  4068  001EEA                     u2330:
  4069  001EEA  0E10               	movlw	16
  4070  001EEC  1824               	xorwf	MFRC522_Request@backBits^0,w,c
  4071  001EEE  1025               	iorwf	(MFRC522_Request@backBits+1)^0,w,c
  4072  001EF0  B4D8               	btfsc	status,2,c
  4073  001EF2  EF7D  F00F         	goto	u2341
  4074  001EF6  EF7F  F00F         	goto	u2340
  4075  001EFA                     u2341:
  4076  001EFA  EF81  F00F         	goto	l246
  4077  001EFE                     u2340:
  4078  001EFE                     l2695:
  4079                           
  4080                           ;rc522.c: 216:     {;rc522.c: 217:         _status = 2;
  4081  001EFE  0E02               	movlw	2
  4082  001F00  6E23               	movwf	MFRC522_Request@_status^0,c
  4083  001F02                     l246:
  4084                           
  4085                           ;rc522.c: 219:     return _status;
  4086  001F02  5023               	movf	MFRC522_Request@_status^0,w,c
  4087  001F04  0012               	return		;funcret
  4088  001F06                     __end_of_MFRC522_Request:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function _MFRC522_Init *****************
  4092 ;; Defined at:
  4093 ;;		line 96 in file "rc522.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;		None
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;		None
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		wreg, status,2, status,0, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4107 ;;      Params:         0       0       0       0       0       0       0       0       0
  4108 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4110 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4111 ;;Total ram usage:        0 bytes
  4112 ;; Hardware stack levels used: 1
  4113 ;; Hardware stack levels required when called: 3
  4114 ;; This function calls:
  4115 ;;		_MFRC522_AntennaOff
  4116 ;;		_MFRC522_AntennaOn
  4117 ;;		_MFRC522_Reset
  4118 ;;		_MFRC522_Wr
  4119 ;; This function is called by:
  4120 ;;		_main
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text23
  4125  001F68                     __ptext23:
  4126                           	callstack 0
  4127  001F68                     _MFRC522_Init:
  4128                           	callstack 27
  4129  001F68                     
  4130                           ;rc522.c: 98:     TRISDbits.RD2 = 0;
  4131  001F68  9495               	bcf	149,2,c	;volatile
  4132                           
  4133                           ;rc522.c: 99:     TRISDbits.RD1 = 0;
  4134  001F6A  9295               	bcf	149,1,c	;volatile
  4135                           
  4136                           ;rc522.c: 100:     TRISDbits.RD0 = 0;
  4137  001F6C  9095               	bcf	149,0,c	;volatile
  4138                           
  4139                           ;rc522.c: 101:     TRISDbits.RD3 = 1;
  4140  001F6E  8695               	bsf	149,3,c	;volatile
  4141                           
  4142                           ;rc522.c: 102:     TRISDbits.RD4 = 0;
  4143  001F70  9895               	bcf	149,4,c	;volatile
  4144                           
  4145                           ;rc522.c: 103:     LATDbits.LD1 = 0;
  4146  001F72  928C               	bcf	140,1,c	;volatile
  4147                           
  4148                           ;rc522.c: 104:     LATDbits.LD2 = 0;
  4149  001F74  948C               	bcf	140,2,c	;volatile
  4150                           
  4151                           ;rc522.c: 105:     LATDbits.LD0 = 1;
  4152  001F76  808C               	bsf	140,0,c	;volatile
  4153                           
  4154                           ;rc522.c: 106:     LATDbits.LD4 = 1;
  4155  001F78  888C               	bsf	140,4,c	;volatile
  4156  001F7A                     
  4157                           ;rc522.c: 107:     MFRC522_Reset();
  4158  001F7A  ECA6  F011         	call	_MFRC522_Reset	;wreg free
  4159                           
  4160                           ;rc522.c: 108:     MFRC522_Wr(0x2A, 0x8D);
  4161  001F7E  0E8D               	movlw	141
  4162  001F80  6E01               	movwf	MFRC522_Wr@value^0,c
  4163  001F82  0E2A               	movlw	42
  4164  001F84  ECD0  F00E         	call	_MFRC522_Wr
  4165                           
  4166                           ;rc522.c: 109:     MFRC522_Wr(0x2B, 0x3E);
  4167  001F88  0E3E               	movlw	62
  4168  001F8A  6E01               	movwf	MFRC522_Wr@value^0,c
  4169  001F8C  0E2B               	movlw	43
  4170  001F8E  ECD0  F00E         	call	_MFRC522_Wr
  4171                           
  4172                           ;rc522.c: 110:     MFRC522_Wr(0x2D, 30);
  4173  001F92  0E1E               	movlw	30
  4174  001F94  6E01               	movwf	MFRC522_Wr@value^0,c
  4175  001F96  0E2D               	movlw	45
  4176  001F98  ECD0  F00E         	call	_MFRC522_Wr
  4177                           
  4178                           ;rc522.c: 111:     MFRC522_Wr(0x2C, 0);
  4179  001F9C  0E00               	movlw	0
  4180  001F9E  6E01               	movwf	MFRC522_Wr@value^0,c
  4181  001FA0  0E2C               	movlw	44
  4182  001FA2  ECD0  F00E         	call	_MFRC522_Wr
  4183                           
  4184                           ;rc522.c: 112:     MFRC522_Wr(0x15, 0x40);
  4185  001FA6  0E40               	movlw	64
  4186  001FA8  6E01               	movwf	MFRC522_Wr@value^0,c
  4187  001FAA  0E15               	movlw	21
  4188  001FAC  ECD0  F00E         	call	_MFRC522_Wr
  4189                           
  4190                           ;rc522.c: 113:     MFRC522_Wr(0x11, 0x3D);
  4191  001FB0  0E3D               	movlw	61
  4192  001FB2  6E01               	movwf	MFRC522_Wr@value^0,c
  4193  001FB4  0E11               	movlw	17
  4194  001FB6  ECD0  F00E         	call	_MFRC522_Wr
  4195                           
  4196                           ;rc522.c: 114:     MFRC522_AntennaOff();
  4197  001FBA  EC2B  F012         	call	_MFRC522_AntennaOff	;wreg free
  4198                           
  4199                           ;rc522.c: 115:     MFRC522_AntennaOn();
  4200  001FBE  EC1A  F012         	call	_MFRC522_AntennaOn	;wreg free
  4201  001FC2  0012               	return		;funcret
  4202  001FC4                     __end_of_MFRC522_Init:
  4203                           	callstack 0
  4204                           
  4205 ;; *************** function _MFRC522_Reset *****************
  4206 ;; Defined at:
  4207 ;;		line 72 in file "rc522.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;		None
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;		None
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      void 
  4214 ;; Registers used:
  4215 ;;		wreg, status,2, status,0, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4221 ;;      Params:         0       0       0       0       0       0       0       0       0
  4222 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4224 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4225 ;;Total ram usage:        0 bytes
  4226 ;; Hardware stack levels used: 1
  4227 ;; Hardware stack levels required when called: 1
  4228 ;; This function calls:
  4229 ;;		_MFRC522_Wr
  4230 ;; This function is called by:
  4231 ;;		_MFRC522_Init
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text24
  4236  00234C                     __ptext24:
  4237                           	callstack 0
  4238  00234C                     _MFRC522_Reset:
  4239                           	callstack 28
  4240  00234C                     
  4241                           ;rc522.c: 74:     LATDbits.LD4 = 1;
  4242  00234C  888C               	bsf	140,4,c	;volatile
  4243                           
  4244                           ;rc522.c: 75:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  4245  00234E  D000               	nop2		;2 cycle nop
  4246  002350  D000               	nop2		;2 cycle nop
  4247  002352  D000               	nop2		;2 cycle nop
  4248                           
  4249                           ;rc522.c: 76:     LATDbits.LD4 = 0;
  4250  002354  988C               	bcf	140,4,c	;volatile
  4251                           
  4252                           ;rc522.c: 77:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  4253  002356  D000               	nop2		;2 cycle nop
  4254  002358  D000               	nop2		;2 cycle nop
  4255  00235A  D000               	nop2		;2 cycle nop
  4256                           
  4257                           ;rc522.c: 78:     LATDbits.LD4 = 1;
  4258  00235C  888C               	bsf	140,4,c	;volatile
  4259                           
  4260                           ;rc522.c: 79:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  4261  00235E  D000               	nop2		;2 cycle nop
  4262  002360  D000               	nop2		;2 cycle nop
  4263  002362  D000               	nop2		;2 cycle nop
  4264  002364                     
  4265                           ;rc522.c: 80:     MFRC522_Wr(0x01, 0x0F);
  4266  002364  0E0F               	movlw	15
  4267  002366  6E01               	movwf	MFRC522_Wr@value^0,c
  4268  002368  0E01               	movlw	1
  4269  00236A  ECD0  F00E         	call	_MFRC522_Wr
  4270  00236E                     
  4271                           ;rc522.c: 81:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  4272  00236E  D000               	nop2		;2 cycle nop
  4273  002370  D000               	nop2		;2 cycle nop
  4274  002372  D000               	nop2		;2 cycle nop
  4275  002374  0012               	return		;funcret
  4276  002376                     __end_of_MFRC522_Reset:
  4277                           	callstack 0
  4278                           
  4279 ;; *************** function _MFRC522_AntennaOn *****************
  4280 ;; Defined at:
  4281 ;;		line 84 in file "rc522.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;		None
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;  stt             1    0        unsigned char 
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  1    wreg      void 
  4288 ;; Registers used:
  4289 ;;		wreg, status,2, status,0, cstack
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4295 ;;      Params:         0       0       0       0       0       0       0       0       0
  4296 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4297 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4298 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4299 ;;Total ram usage:        0 bytes
  4300 ;; Hardware stack levels used: 1
  4301 ;; Hardware stack levels required when called: 2
  4302 ;; This function calls:
  4303 ;;		_MFRC522_Rd
  4304 ;;		_MFRC522_Set_Bit
  4305 ;; This function is called by:
  4306 ;;		_MFRC522_Init
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text25
  4311  002434                     __ptext25:
  4312                           	callstack 0
  4313  002434                     _MFRC522_AntennaOn:
  4314                           	callstack 27
  4315  002434  0E14               	movlw	20
  4316  002436  EC1D  F00D         	call	_MFRC522_Rd
  4317                           
  4318                           ;rc522.c: 88:     MFRC522_Set_Bit(0x14, 0x03);
  4319  00243A  0E03               	movlw	3
  4320  00243C  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  4321  00243E  0E14               	movlw	20
  4322  002440  EC0E  F012         	call	_MFRC522_Set_Bit
  4323  002444  0012               	return		;funcret
  4324  002446                     __end_of_MFRC522_AntennaOn:
  4325                           	callstack 0
  4326                           
  4327 ;; *************** function _MFRC522_AntennaOff *****************
  4328 ;; Defined at:
  4329 ;;		line 91 in file "rc522.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;		None
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      void 
  4336 ;; Registers used:
  4337 ;;		wreg, status,2, status,0, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4343 ;;      Params:         0       0       0       0       0       0       0       0       0
  4344 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4346 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4347 ;;Total ram usage:        0 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 2
  4350 ;; This function calls:
  4351 ;;		_MFRC522_Clear_Bit
  4352 ;; This function is called by:
  4353 ;;		_MFRC522_Init
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text26
  4358  002456                     __ptext26:
  4359                           	callstack 0
  4360  002456                     _MFRC522_AntennaOff:
  4361                           	callstack 27
  4362  002456                     
  4363                           ;rc522.c: 93:     MFRC522_Clear_Bit(0x14, 0x03);
  4364  002456  0E03               	movlw	3
  4365  002458  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  4366  00245A  0E14               	movlw	20
  4367  00245C  EC01  F012         	call	_MFRC522_Clear_Bit
  4368  002460  0012               	return		;funcret
  4369  002462                     __end_of_MFRC522_AntennaOff:
  4370                           	callstack 0
  4371                           
  4372 ;; *************** function _MFRC522_Halt *****************
  4373 ;; Defined at:
  4374 ;;		line 270 in file "rc522.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  buff            4   31[COMRAM] unsigned char [4]
  4379 ;;  unLen           2   35[COMRAM] unsigned int 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4389 ;;      Params:         0       0       0       0       0       0       0       0       0
  4390 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4392 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4393 ;;Total ram usage:        6 bytes
  4394 ;; Hardware stack levels used: 1
  4395 ;; Hardware stack levels required when called: 3
  4396 ;; This function calls:
  4397 ;;		_MFRC522_CRC
  4398 ;;		_MFRC522_Clear_Bit
  4399 ;;		_MFRC522_ToCard
  4400 ;; This function is called by:
  4401 ;;		_main
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text27
  4406  001FC4                     __ptext27:
  4407                           	callstack 0
  4408  001FC4                     _MFRC522_Halt:
  4409                           	callstack 27
  4410  001FC4                     
  4411                           ;rc522.c: 272:     unsigned unLen;;rc522.c: 273:     char buff[4];;rc522.c: 274:     buf
      +                          f[0] = 0x50;
  4412  001FC4  0E50               	movlw	80
  4413  001FC6  6E20               	movwf	MFRC522_Halt@buff^0,c
  4414                           
  4415                           ;rc522.c: 275:     buff[1] = 0;
  4416  001FC8  0E00               	movlw	0
  4417  001FCA  6E21               	movwf	(MFRC522_Halt@buff+1)^0,c
  4418  001FCC                     
  4419                           ;rc522.c: 276:     MFRC522_CRC(buff, 2, &buff[2]);
  4420  001FCC  0E20               	movlw	low MFRC522_Halt@buff
  4421  001FCE  6E0D               	movwf	MFRC522_CRC@dataIn^0,c
  4422  001FD0  0E00               	movlw	high MFRC522_Halt@buff
  4423  001FD2  6E0E               	movwf	(MFRC522_CRC@dataIn+1)^0,c
  4424  001FD4  0E02               	movlw	2
  4425  001FD6  6E0F               	movwf	MFRC522_CRC@length^0,c
  4426  001FD8  0E22               	movlw	low (MFRC522_Halt@buff+2)
  4427  001FDA  6E10               	movwf	MFRC522_CRC@dataOut^0,c
  4428  001FDC  0E00               	movlw	high (MFRC522_Halt@buff+2)
  4429  001FDE  6E11               	movwf	(MFRC522_CRC@dataOut+1)^0,c
  4430  001FE0  EC80  F00E         	call	_MFRC522_CRC	;wreg free
  4431  001FE4                     
  4432                           ;rc522.c: 277:     MFRC522_Clear_Bit(0x08, 0x80);
  4433  001FE4  0E80               	movlw	128
  4434  001FE6  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  4435  001FE8  0E08               	movlw	8
  4436  001FEA  EC01  F012         	call	_MFRC522_Clear_Bit
  4437  001FEE                     
  4438                           ;rc522.c: 278:     MFRC522_ToCard(0x0C, buff, 4, buff, &unLen);
  4439  001FEE  0E20               	movlw	low MFRC522_Halt@buff
  4440  001FF0  6E0D               	movwf	MFRC522_ToCard@sendData^0,c
  4441  001FF2  0E00               	movlw	high MFRC522_Halt@buff
  4442  001FF4  6E0E               	movwf	(MFRC522_ToCard@sendData+1)^0,c
  4443  001FF6  0E04               	movlw	4
  4444  001FF8  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
  4445  001FFA  0E20               	movlw	low MFRC522_Halt@buff
  4446  001FFC  6E10               	movwf	MFRC522_ToCard@backData^0,c
  4447  001FFE  0E00               	movlw	high MFRC522_Halt@buff
  4448  002000  6E11               	movwf	(MFRC522_ToCard@backData+1)^0,c
  4449  002002  0E24               	movlw	low MFRC522_Halt@unLen
  4450  002004  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  4451  002006  0E00               	movlw	high MFRC522_Halt@unLen
  4452  002008  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  4453  00200A  0E0C               	movlw	12
  4454  00200C  EC17  F008         	call	_MFRC522_ToCard
  4455  002010                     
  4456                           ;rc522.c: 279:     MFRC522_Clear_Bit(0x08, 0x08);
  4457  002010  0E08               	movlw	8
  4458  002012  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  4459  002014  0E08               	movlw	8
  4460  002016  EC01  F012         	call	_MFRC522_Clear_Bit
  4461  00201A  0012               	return		;funcret
  4462  00201C                     __end_of_MFRC522_Halt:
  4463                           	callstack 0
  4464                           
  4465 ;; *************** function _MFRC522_ToCard *****************
  4466 ;; Defined at:
  4467 ;;		line 118 in file "rc522.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  command         1    wreg     unsigned char 
  4470 ;;  sendData        2   12[COMRAM] PTR unsigned char 
  4471 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), UID(16), TagType(1), 
  4472 ;;  sendLen         1   14[COMRAM] unsigned char 
  4473 ;;  backData        2   15[COMRAM] PTR unsigned char 
  4474 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), UID(16), TagType(1), 
  4475 ;;  backLen         2   17[COMRAM] PTR unsigned int 
  4476 ;;		 -> MFRC522_AntiColl@unLen(2), MFRC522_Halt@unLen(2), MFRC522_SelectTag@recvBits(2), MFRC522_Request@backBits(2), 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  command         1   27[COMRAM] unsigned char 
  4479 ;;  i               2   28[COMRAM] unsigned int 
  4480 ;;  n               1   30[COMRAM] unsigned char 
  4481 ;;  irqEn           1   26[COMRAM] unsigned char 
  4482 ;;  lastBits        1   25[COMRAM] unsigned char 
  4483 ;;  _status         1   24[COMRAM] unsigned char 
  4484 ;;  waitIRq         1   23[COMRAM] unsigned char 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      unsigned char 
  4487 ;; Registers used:
  4488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4494 ;;      Params:         7       0       0       0       0       0       0       0       0
  4495 ;;      Locals:         8       0       0       0       0       0       0       0       0
  4496 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4497 ;;      Totals:        19       0       0       0       0       0       0       0       0
  4498 ;;Total ram usage:       19 bytes
  4499 ;; Hardware stack levels used: 1
  4500 ;; Hardware stack levels required when called: 2
  4501 ;; This function calls:
  4502 ;;		_MFRC522_Clear_Bit
  4503 ;;		_MFRC522_Rd
  4504 ;;		_MFRC522_Set_Bit
  4505 ;;		_MFRC522_Wr
  4506 ;; This function is called by:
  4507 ;;		_MFRC522_Request
  4508 ;;		_MFRC522_Halt
  4509 ;;		_MFRC522_AntiColl
  4510 ;;		_MFRC522_SelectTag
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text28
  4515  00102E                     __ptext28:
  4516                           	callstack 0
  4517  00102E                     _MFRC522_ToCard:
  4518                           	callstack 26
  4519                           
  4520                           ;incstack = 0
  4521                           ;MFRC522_ToCard@command stored from wreg
  4522  00102E  6E1C               	movwf	MFRC522_ToCard@command^0,c
  4523  001030                     
  4524                           ;rc522.c: 118: char MFRC522_ToCard(char command, char *sendData, char sendLen, char *bac
      +                          kData, unsigned *backLen);rc522.c: 119: {;rc522.c: 120:     char _status = 2;
  4525  001030  0E02               	movlw	2
  4526  001032  6E19               	movwf	MFRC522_ToCard@_status^0,c
  4527                           
  4528                           ;rc522.c: 121:     char irqEn = 0x00;
  4529  001034  0E00               	movlw	0
  4530  001036  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
  4531                           
  4532                           ;rc522.c: 122:     char waitIRq = 0x00;
  4533  001038  0E00               	movlw	0
  4534  00103A  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
  4535                           
  4536                           ;rc522.c: 123:     char lastBits;;rc522.c: 124:     char n;;rc522.c: 125:     unsigned i
      +                          ;;rc522.c: 127:     switch(command)
  4537  00103C  EF2C  F008         	goto	l2503
  4538  001040                     l2497:
  4539                           
  4540                           ;rc522.c: 130:             irqEn = 0x12;
  4541  001040  0E12               	movlw	18
  4542  001042  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
  4543                           
  4544                           ;rc522.c: 131:             waitIRq = 0x10;
  4545  001044  0E10               	movlw	16
  4546  001046  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
  4547                           
  4548                           ;rc522.c: 132:             break;
  4549  001048  EF41  F008         	goto	l2505
  4550  00104C                     l2499:
  4551                           
  4552                           ;rc522.c: 135:             irqEn = 0x77;
  4553  00104C  0E77               	movlw	119
  4554  00104E  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
  4555                           
  4556                           ;rc522.c: 136:             waitIRq = 0x30;
  4557  001050  0E30               	movlw	48
  4558  001052  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
  4559                           
  4560                           ;rc522.c: 137:             break;
  4561  001054  EF41  F008         	goto	l2505
  4562  001058                     l2503:
  4563  001058  501C               	movf	MFRC522_ToCard@command^0,w,c
  4564  00105A  6E14               	movwf	??_MFRC522_ToCard^0,c
  4565  00105C  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
  4566                           
  4567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4568                           ; Switch size 1, requested type "simple"
  4569                           ; Number of cases is 1, Range of values is 0 to 0
  4570                           ; switch strategies available:
  4571                           ; Name         Instructions Cycles
  4572                           ; simple_byte            4     3 (average)
  4573                           ;	Chosen strategy is simple_byte
  4574  00105E  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  4575  001060  0A00               	xorlw	0	; case 0
  4576  001062  B4D8               	btfsc	status,2,c
  4577  001064  EF36  F008         	goto	l3213
  4578  001068  EF41  F008         	goto	l2505
  4579  00106C                     l3213:
  4580                           
  4581                           ; Switch size 1, requested type "simple"
  4582                           ; Number of cases is 2, Range of values is 12 to 14
  4583                           ; switch strategies available:
  4584                           ; Name         Instructions Cycles
  4585                           ; simple_byte            7     4 (average)
  4586                           ;	Chosen strategy is simple_byte
  4587  00106C  5014               	movf	??_MFRC522_ToCard^0,w,c
  4588  00106E  0A0C               	xorlw	12	; case 12
  4589  001070  B4D8               	btfsc	status,2,c
  4590  001072  EF26  F008         	goto	l2499
  4591  001076  0A02               	xorlw	2	; case 14
  4592  001078  B4D8               	btfsc	status,2,c
  4593  00107A  EF20  F008         	goto	l2497
  4594  00107E  EF41  F008         	goto	l2505
  4595  001082                     l2505:
  4596                           
  4597                           ;rc522.c: 142:     MFRC522_Wr(0x02, irqEn | 0x80);
  4598  001082  501B               	movf	MFRC522_ToCard@irqEn^0,w,c
  4599  001084  0980               	iorlw	128
  4600  001086  6E01               	movwf	MFRC522_Wr@value^0,c
  4601  001088  0E02               	movlw	2
  4602  00108A  ECD0  F00E         	call	_MFRC522_Wr
  4603                           
  4604                           ;rc522.c: 143:     MFRC522_Clear_Bit(0x04, 0x80);
  4605  00108E  0E80               	movlw	128
  4606  001090  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  4607  001092  0E04               	movlw	4
  4608  001094  EC01  F012         	call	_MFRC522_Clear_Bit
  4609                           
  4610                           ;rc522.c: 144:     MFRC522_Set_Bit(0x0A, 0x80);
  4611  001098  0E80               	movlw	128
  4612  00109A  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  4613  00109C  0E0A               	movlw	10
  4614  00109E  EC0E  F012         	call	_MFRC522_Set_Bit
  4615                           
  4616                           ;rc522.c: 145:     MFRC522_Wr(0x01, 0x00);
  4617  0010A2  0E00               	movlw	0
  4618  0010A4  6E01               	movwf	MFRC522_Wr@value^0,c
  4619  0010A6  0E01               	movlw	1
  4620  0010A8  ECD0  F00E         	call	_MFRC522_Wr
  4621  0010AC                     
  4622                           ;rc522.c: 147:     for(i=0; i<sendLen; i++)
  4623  0010AC  0E00               	movlw	0
  4624  0010AE  6E1E               	movwf	(MFRC522_ToCard@i+1)^0,c
  4625  0010B0  0E00               	movlw	0
  4626  0010B2  6E1D               	movwf	MFRC522_ToCard@i^0,c
  4627  0010B4  EF69  F008         	goto	l2513
  4628  0010B8                     l2509:
  4629                           
  4630                           ;rc522.c: 148:     {;rc522.c: 149:         MFRC522_Wr(0x09, sendData[i]);
  4631  0010B8  501D               	movf	MFRC522_ToCard@i^0,w,c
  4632  0010BA  240D               	addwf	MFRC522_ToCard@sendData^0,w,c
  4633  0010BC  6ED9               	movwf	fsr2l,c
  4634  0010BE  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
  4635  0010C0  200E               	addwfc	(MFRC522_ToCard@sendData+1)^0,w,c
  4636  0010C2  6EDA               	movwf	fsr2h,c
  4637  0010C4  50DF               	movf	indf2,w,c
  4638  0010C6  6E01               	movwf	MFRC522_Wr@value^0,c
  4639  0010C8  0E09               	movlw	9
  4640  0010CA  ECD0  F00E         	call	_MFRC522_Wr
  4641  0010CE                     
  4642                           ;rc522.c: 150:     }
  4643  0010CE  4A1D               	infsnz	MFRC522_ToCard@i^0,f,c
  4644  0010D0  2A1E               	incf	(MFRC522_ToCard@i+1)^0,f,c
  4645  0010D2                     l2513:
  4646  0010D2  500F               	movf	MFRC522_ToCard@sendLen^0,w,c
  4647  0010D4  6E14               	movwf	??_MFRC522_ToCard^0,c
  4648  0010D6  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
  4649  0010D8  5014               	movf	??_MFRC522_ToCard^0,w,c
  4650  0010DA  5C1D               	subwf	MFRC522_ToCard@i^0,w,c
  4651  0010DC  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  4652  0010DE  581E               	subwfb	(MFRC522_ToCard@i+1)^0,w,c
  4653  0010E0  A0D8               	btfss	status,0,c
  4654  0010E2  EF75  F008         	goto	u2091
  4655  0010E6  EF77  F008         	goto	u2090
  4656  0010EA                     u2091:
  4657  0010EA  EF5C  F008         	goto	l2509
  4658  0010EE                     u2090:
  4659  0010EE                     
  4660                           ;rc522.c: 151:     MFRC522_Wr(0x01, command);
  4661  0010EE  C01C  F001         	movff	MFRC522_ToCard@command,MFRC522_Wr@value
  4662  0010F2  0E01               	movlw	1
  4663  0010F4  ECD0  F00E         	call	_MFRC522_Wr
  4664  0010F8                     
  4665                           ;rc522.c: 152:     if(command == 0x0C)
  4666  0010F8  0E0C               	movlw	12
  4667  0010FA  181C               	xorwf	MFRC522_ToCard@command^0,w,c
  4668  0010FC  A4D8               	btfss	status,2,c
  4669  0010FE  EF83  F008         	goto	u2101
  4670  001102  EF85  F008         	goto	u2100
  4671  001106                     u2101:
  4672  001106  EF8A  F008         	goto	l2521
  4673  00110A                     u2100:
  4674  00110A                     
  4675                           ;rc522.c: 153:     {;rc522.c: 154:         MFRC522_Set_Bit(0x0D, 0x80);
  4676  00110A  0E80               	movlw	128
  4677  00110C  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  4678  00110E  0E0D               	movlw	13
  4679  001110  EC0E  F012         	call	_MFRC522_Set_Bit
  4680  001114                     l2521:
  4681                           
  4682                           ;rc522.c: 156:     i = 0xFFFF;
  4683  001114  681D               	setf	MFRC522_ToCard@i^0,c
  4684  001116  681E               	setf	(MFRC522_ToCard@i+1)^0,c
  4685  001118                     l227:
  4686                           
  4687                           ;rc522.c: 158:     {;rc522.c: 159:         n = MFRC522_Rd(0x04);
  4688  001118  0E04               	movlw	4
  4689  00111A  EC1D  F00D         	call	_MFRC522_Rd
  4690  00111E  6E1F               	movwf	MFRC522_ToCard@n^0,c
  4691  001120                     
  4692                           ;rc522.c: 160:         i--;
  4693  001120  061D               	decf	MFRC522_ToCard@i^0,f,c
  4694  001122  A0D8               	btfss	status,0,c
  4695  001124  061E               	decf	(MFRC522_ToCard@i+1)^0,f,c
  4696  001126                     
  4697                           ;rc522.c: 161:     }while(i && !(n & 0x01) && !(n & waitIRq));
  4698  001126  501D               	movf	MFRC522_ToCard@i^0,w,c
  4699  001128  101E               	iorwf	(MFRC522_ToCard@i+1)^0,w,c
  4700  00112A  B4D8               	btfsc	status,2,c
  4701  00112C  EF9A  F008         	goto	u2111
  4702  001130  EF9C  F008         	goto	u2110
  4703  001134                     u2111:
  4704  001134  EFAD  F008         	goto	l2531
  4705  001138                     u2110:
  4706  001138  B01F               	btfsc	MFRC522_ToCard@n^0,0,c
  4707  00113A  EFA1  F008         	goto	u2121
  4708  00113E  EFA3  F008         	goto	u2120
  4709  001142                     u2121:
  4710  001142  EFAD  F008         	goto	l2531
  4711  001146                     u2120:
  4712  001146  501F               	movf	MFRC522_ToCard@n^0,w,c
  4713  001148  1418               	andwf	MFRC522_ToCard@waitIRq^0,w,c
  4714  00114A  0900               	iorlw	0
  4715  00114C  B4D8               	btfsc	status,2,c
  4716  00114E  EFAB  F008         	goto	u2131
  4717  001152  EFAD  F008         	goto	u2130
  4718  001156                     u2131:
  4719  001156  EF8C  F008         	goto	l227
  4720  00115A                     u2130:
  4721  00115A                     l2531:
  4722                           
  4723                           ;rc522.c: 163:     MFRC522_Clear_Bit(0x0D, 0x80);
  4724  00115A  0E80               	movlw	128
  4725  00115C  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  4726  00115E  0E0D               	movlw	13
  4727  001160  EC01  F012         	call	_MFRC522_Clear_Bit
  4728  001164                     
  4729                           ;rc522.c: 164:     if(i != 0)
  4730  001164  501D               	movf	MFRC522_ToCard@i^0,w,c
  4731  001166  101E               	iorwf	(MFRC522_ToCard@i+1)^0,w,c
  4732  001168  B4D8               	btfsc	status,2,c
  4733  00116A  EFB9  F008         	goto	u2141
  4734  00116E  EFBB  F008         	goto	u2140
  4735  001172                     u2141:
  4736  001172  EF5C  F009         	goto	l231
  4737  001176                     u2140:
  4738  001176                     
  4739                           ;rc522.c: 165:     {;rc522.c: 166:         if(!(MFRC522_Rd(0x06) & 0x1B))
  4740  001176  0E06               	movlw	6
  4741  001178  EC1D  F00D         	call	_MFRC522_Rd
  4742  00117C  6E14               	movwf	??_MFRC522_ToCard^0,c
  4743  00117E  0E1B               	movlw	27
  4744  001180  1614               	andwf	??_MFRC522_ToCard^0,f,c
  4745  001182  A4D8               	btfss	status,2,c
  4746  001184  EFC6  F008         	goto	u2151
  4747  001188  EFC8  F008         	goto	u2150
  4748  00118C                     u2151:
  4749  00118C  EF5A  F009         	goto	l2569
  4750  001190                     u2150:
  4751  001190                     
  4752                           ;rc522.c: 167:         {;rc522.c: 168:             _status = 0;
  4753  001190  0E00               	movlw	0
  4754  001192  6E19               	movwf	MFRC522_ToCard@_status^0,c
  4755  001194                     
  4756                           ;rc522.c: 169:             if(n & irqEn & 0x01)
  4757  001194  501F               	movf	MFRC522_ToCard@n^0,w,c
  4758  001196  141B               	andwf	MFRC522_ToCard@irqEn^0,w,c
  4759  001198  6E14               	movwf	??_MFRC522_ToCard^0,c
  4760  00119A  A014               	btfss	??_MFRC522_ToCard^0,0,c
  4761  00119C  EFD2  F008         	goto	u2161
  4762  0011A0  EFD4  F008         	goto	u2160
  4763  0011A4                     u2161:
  4764  0011A4  EFD6  F008         	goto	l2543
  4765  0011A8                     u2160:
  4766  0011A8                     
  4767                           ;rc522.c: 170:             {;rc522.c: 171:                 _status = 1;
  4768  0011A8  0E01               	movlw	1
  4769  0011AA  6E19               	movwf	MFRC522_ToCard@_status^0,c
  4770  0011AC                     l2543:
  4771                           
  4772                           ;rc522.c: 173:             if(command == 0x0C)
  4773  0011AC  0E0C               	movlw	12
  4774  0011AE  181C               	xorwf	MFRC522_ToCard@command^0,w,c
  4775  0011B0  A4D8               	btfss	status,2,c
  4776  0011B2  EFDD  F008         	goto	u2171
  4777  0011B6  EFDF  F008         	goto	u2170
  4778  0011BA                     u2171:
  4779  0011BA  EF5C  F009         	goto	l231
  4780  0011BE                     u2170:
  4781  0011BE                     
  4782                           ;rc522.c: 174:             {;rc522.c: 175:                 n = MFRC522_Rd(0x0A);
  4783  0011BE  0E0A               	movlw	10
  4784  0011C0  EC1D  F00D         	call	_MFRC522_Rd
  4785  0011C4  6E1F               	movwf	MFRC522_ToCard@n^0,c
  4786                           
  4787                           ;rc522.c: 176:                 lastBits = MFRC522_Rd(0x0C) & 0x07;
  4788  0011C6  0E0C               	movlw	12
  4789  0011C8  EC1D  F00D         	call	_MFRC522_Rd
  4790  0011CC  0B07               	andlw	7
  4791  0011CE  6E1A               	movwf	MFRC522_ToCard@lastBits^0,c
  4792  0011D0                     
  4793                           ;rc522.c: 177:                 if(lastBits)
  4794  0011D0  501A               	movf	MFRC522_ToCard@lastBits^0,w,c
  4795  0011D2  B4D8               	btfsc	status,2,c
  4796  0011D4  EFEE  F008         	goto	u2181
  4797  0011D8  EFF0  F008         	goto	u2180
  4798  0011DC                     u2181:
  4799  0011DC  EF12  F009         	goto	l2551
  4800  0011E0                     u2180:
  4801  0011E0                     
  4802                           ;rc522.c: 178:                 {;rc522.c: 179:                     *backLen = (n-1) * 8 
      +                          + lastBits;
  4803  0011E0  0EF8               	movlw	248
  4804  0011E2  6E14               	movwf	??_MFRC522_ToCard^0,c
  4805  0011E4  0EFF               	movlw	255
  4806  0011E6  6E15               	movwf	(??_MFRC522_ToCard+1)^0,c
  4807  0011E8  501A               	movf	MFRC522_ToCard@lastBits^0,w,c
  4808  0011EA  C01F  F016         	movff	MFRC522_ToCard@n,??_MFRC522_ToCard+2
  4809  0011EE  6A17               	clrf	(??_MFRC522_ToCard+3)^0,c
  4810  0011F0  90D8               	bcf	status,0,c
  4811  0011F2  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  4812  0011F4  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  4813  0011F6  90D8               	bcf	status,0,c
  4814  0011F8  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  4815  0011FA  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  4816  0011FC  90D8               	bcf	status,0,c
  4817  0011FE  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  4818  001200  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  4819  001202  2616               	addwf	(??_MFRC522_ToCard+2)^0,f,c
  4820  001204  0E00               	movlw	0
  4821  001206  2217               	addwfc	(??_MFRC522_ToCard+3)^0,f,c
  4822  001208  5014               	movf	??_MFRC522_ToCard^0,w,c
  4823  00120A  2616               	addwf	(??_MFRC522_ToCard+2)^0,f,c
  4824  00120C  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  4825  00120E  2217               	addwfc	(??_MFRC522_ToCard+3)^0,f,c
  4826  001210  C012  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  4827  001214  C013  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  4828  001218  C016  FFDE         	movff	??_MFRC522_ToCard+2,postinc2
  4829  00121C  C017  FFDD         	movff	??_MFRC522_ToCard+3,postdec2
  4830                           
  4831                           ;rc522.c: 180:                 }
  4832  001220  EF1C  F009         	goto	l2553
  4833  001224                     l2551:
  4834                           
  4835                           ;rc522.c: 182:                 {;rc522.c: 183:                     *backLen = n * 8;
  4836  001224  501F               	movf	MFRC522_ToCard@n^0,w,c
  4837  001226  0D08               	mullw	8
  4838  001228  C012  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  4839  00122C  C013  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  4840  001230  CFF3 FFDE          	movff	prodl,postinc2
  4841  001234  CFF4 FFDD          	movff	prodh,postdec2
  4842  001238                     l2553:
  4843                           
  4844                           ;rc522.c: 185:                 if(n == 0)
  4845  001238  501F               	movf	MFRC522_ToCard@n^0,w,c
  4846  00123A  A4D8               	btfss	status,2,c
  4847  00123C  EF22  F009         	goto	u2191
  4848  001240  EF24  F009         	goto	u2190
  4849  001244                     u2191:
  4850  001244  EF26  F009         	goto	l2557
  4851  001248                     u2190:
  4852  001248                     
  4853                           ;rc522.c: 186:                 {;rc522.c: 187:                     n = 1;
  4854  001248  0E01               	movlw	1
  4855  00124A  6E1F               	movwf	MFRC522_ToCard@n^0,c
  4856  00124C                     l2557:
  4857                           
  4858                           ;rc522.c: 189:                 if(n > 16)
  4859  00124C  0E10               	movlw	16
  4860  00124E  641F               	cpfsgt	MFRC522_ToCard@n^0,c
  4861  001250  EF2C  F009         	goto	u2201
  4862  001254  EF2E  F009         	goto	u2200
  4863  001258                     u2201:
  4864  001258  EF30  F009         	goto	l238
  4865  00125C                     u2200:
  4866  00125C                     
  4867                           ;rc522.c: 190:                 {;rc522.c: 191:                     n = 16;
  4868  00125C  0E10               	movlw	16
  4869  00125E  6E1F               	movwf	MFRC522_ToCard@n^0,c
  4870  001260                     l238:
  4871                           
  4872                           ;rc522.c: 193:                 for(i=0; i<n; i++)
  4873  001260  0E00               	movlw	0
  4874  001262  6E1E               	movwf	(MFRC522_ToCard@i+1)^0,c
  4875  001264  0E00               	movlw	0
  4876  001266  6E1D               	movwf	MFRC522_ToCard@i^0,c
  4877  001268  EF42  F009         	goto	l2565
  4878  00126C                     l2561:
  4879                           
  4880                           ;rc522.c: 194:                 {;rc522.c: 195:                     backData[i] = MFRC522
      +                          _Rd(0x09);
  4881  00126C  501D               	movf	MFRC522_ToCard@i^0,w,c
  4882  00126E  2410               	addwf	MFRC522_ToCard@backData^0,w,c
  4883  001270  6ED9               	movwf	fsr2l,c
  4884  001272  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
  4885  001274  2011               	addwfc	(MFRC522_ToCard@backData+1)^0,w,c
  4886  001276  6EDA               	movwf	fsr2h,c
  4887  001278  0E09               	movlw	9
  4888  00127A  EC1D  F00D         	call	_MFRC522_Rd
  4889  00127E  6EDF               	movwf	indf2,c
  4890  001280                     
  4891                           ;rc522.c: 196:                 }
  4892  001280  4A1D               	infsnz	MFRC522_ToCard@i^0,f,c
  4893  001282  2A1E               	incf	(MFRC522_ToCard@i+1)^0,f,c
  4894  001284                     l2565:
  4895  001284  501F               	movf	MFRC522_ToCard@n^0,w,c
  4896  001286  6E14               	movwf	??_MFRC522_ToCard^0,c
  4897  001288  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
  4898  00128A  5014               	movf	??_MFRC522_ToCard^0,w,c
  4899  00128C  5C1D               	subwf	MFRC522_ToCard@i^0,w,c
  4900  00128E  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  4901  001290  581E               	subwfb	(MFRC522_ToCard@i+1)^0,w,c
  4902  001292  A0D8               	btfss	status,0,c
  4903  001294  EF4E  F009         	goto	u2211
  4904  001298  EF50  F009         	goto	u2210
  4905  00129C                     u2211:
  4906  00129C  EF36  F009         	goto	l2561
  4907  0012A0                     u2210:
  4908  0012A0                     
  4909                           ;rc522.c: 197:                 backData[i] = 0;
  4910  0012A0  501D               	movf	MFRC522_ToCard@i^0,w,c
  4911  0012A2  2410               	addwf	MFRC522_ToCard@backData^0,w,c
  4912  0012A4  6ED9               	movwf	fsr2l,c
  4913  0012A6  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
  4914  0012A8  2011               	addwfc	(MFRC522_ToCard@backData+1)^0,w,c
  4915  0012AA  6EDA               	movwf	fsr2h,c
  4916  0012AC  0E00               	movlw	0
  4917  0012AE  6EDF               	movwf	indf2,c
  4918  0012B0  EF5C  F009         	goto	l231
  4919  0012B4                     l2569:
  4920                           
  4921                           ;rc522.c: 201:         {;rc522.c: 202:             _status = 2;
  4922  0012B4  0E02               	movlw	2
  4923  0012B6  6E19               	movwf	MFRC522_ToCard@_status^0,c
  4924  0012B8                     l231:
  4925                           
  4926                           ;rc522.c: 205:     return _status;
  4927  0012B8  5019               	movf	MFRC522_ToCard@_status^0,w,c
  4928  0012BA  0012               	return		;funcret
  4929  0012BC                     __end_of_MFRC522_ToCard:
  4930                           	callstack 0
  4931                           
  4932 ;; *************** function _MFRC522_CRC *****************
  4933 ;; Defined at:
  4934 ;;		line 222 in file "rc522.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  dataIn          2   12[COMRAM] PTR unsigned char 
  4937 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  4938 ;;  length          1   14[COMRAM] unsigned char 
  4939 ;;  dataOut         2   15[COMRAM] PTR unsigned char 
  4940 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;  i               1   18[COMRAM] unsigned char 
  4943 ;;  n               1   17[COMRAM] unsigned char 
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4953 ;;      Params:         5       0       0       0       0       0       0       0       0
  4954 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4956 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4957 ;;Total ram usage:        7 bytes
  4958 ;; Hardware stack levels used: 1
  4959 ;; Hardware stack levels required when called: 2
  4960 ;; This function calls:
  4961 ;;		_MFRC522_Clear_Bit
  4962 ;;		_MFRC522_Rd
  4963 ;;		_MFRC522_Set_Bit
  4964 ;;		_MFRC522_Wr
  4965 ;; This function is called by:
  4966 ;;		_MFRC522_Halt
  4967 ;;		_MFRC522_SelectTag
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text29
  4972  001D00                     __ptext29:
  4973                           	callstack 0
  4974  001D00                     _MFRC522_CRC:
  4975                           	callstack 27
  4976  001D00                     
  4977                           ;rc522.c: 222: void MFRC522_CRC(char *dataIn, char length, char *dataOut);rc522.c: 223: 
      +                          {;rc522.c: 224:     char i, n;;rc522.c: 225:     MFRC522_Clear_Bit(0x05, 0x04);
  4978  001D00  0E04               	movlw	4
  4979  001D02  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  4980  001D04  0E05               	movlw	5
  4981  001D06  EC01  F012         	call	_MFRC522_Clear_Bit
  4982                           
  4983                           ;rc522.c: 226:     MFRC522_Set_Bit(0x0A, 0x80);
  4984  001D0A  0E80               	movlw	128
  4985  001D0C  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  4986  001D0E  0E0A               	movlw	10
  4987  001D10  EC0E  F012         	call	_MFRC522_Set_Bit
  4988  001D14                     
  4989                           ;rc522.c: 227:     for(i=0; i<length; i++)
  4990  001D14  0E00               	movlw	0
  4991  001D16  6E13               	movwf	MFRC522_CRC@i^0,c
  4992  001D18  EF9A  F00E         	goto	l2709
  4993  001D1C                     l2703:
  4994                           
  4995                           ;rc522.c: 228:     {;rc522.c: 229:         MFRC522_Wr(0x09, *dataIn++);
  4996  001D1C  C00D  FFD9         	movff	MFRC522_CRC@dataIn,fsr2l
  4997  001D20  C00E  FFDA         	movff	MFRC522_CRC@dataIn+1,fsr2h
  4998  001D24  50DF               	movf	indf2,w,c
  4999  001D26  6E01               	movwf	MFRC522_Wr@value^0,c
  5000  001D28  0E09               	movlw	9
  5001  001D2A  ECD0  F00E         	call	_MFRC522_Wr
  5002  001D2E  4A0D               	infsnz	MFRC522_CRC@dataIn^0,f,c
  5003  001D30  2A0E               	incf	(MFRC522_CRC@dataIn+1)^0,f,c
  5004  001D32                     
  5005                           ;rc522.c: 230:     }
  5006  001D32  2A13               	incf	MFRC522_CRC@i^0,f,c
  5007  001D34                     l2709:
  5008  001D34  500F               	movf	MFRC522_CRC@length^0,w,c
  5009  001D36  5C13               	subwf	MFRC522_CRC@i^0,w,c
  5010  001D38  A0D8               	btfss	status,0,c
  5011  001D3A  EFA1  F00E         	goto	u2351
  5012  001D3E  EFA3  F00E         	goto	u2350
  5013  001D42                     u2351:
  5014  001D42  EF8E  F00E         	goto	l2703
  5015  001D46                     u2350:
  5016  001D46                     
  5017                           ;rc522.c: 231:     MFRC522_Wr(0x01, 0x03);
  5018  001D46  0E03               	movlw	3
  5019  001D48  6E01               	movwf	MFRC522_Wr@value^0,c
  5020  001D4A  0E01               	movlw	1
  5021  001D4C  ECD0  F00E         	call	_MFRC522_Wr
  5022  001D50                     
  5023                           ;rc522.c: 232:     i = 0xFF;
  5024  001D50  6813               	setf	MFRC522_CRC@i^0,c
  5025  001D52                     l255:
  5026                           
  5027                           ;rc522.c: 234:     {;rc522.c: 235:         n = MFRC522_Rd( 0x05 );
  5028  001D52  0E05               	movlw	5
  5029  001D54  EC1D  F00D         	call	_MFRC522_Rd
  5030  001D58  6E12               	movwf	MFRC522_CRC@n^0,c
  5031  001D5A                     
  5032                           ;rc522.c: 236:         i--;
  5033  001D5A  0613               	decf	MFRC522_CRC@i^0,f,c
  5034  001D5C                     
  5035                           ;rc522.c: 237:     }
  5036  001D5C  5013               	movf	MFRC522_CRC@i^0,w,c
  5037  001D5E  B4D8               	btfsc	status,2,c
  5038  001D60  EFB4  F00E         	goto	u2361
  5039  001D64  EFB6  F00E         	goto	u2360
  5040  001D68                     u2361:
  5041  001D68  EFBD  F00E         	goto	l2721
  5042  001D6C                     u2360:
  5043  001D6C  A412               	btfss	MFRC522_CRC@n^0,2,c
  5044  001D6E  EFBB  F00E         	goto	u2371
  5045  001D72  EFBD  F00E         	goto	u2370
  5046  001D76                     u2371:
  5047  001D76  EFA9  F00E         	goto	l255
  5048  001D7A                     u2370:
  5049  001D7A                     l2721:
  5050                           
  5051                           ;rc522.c: 239:     dataOut[0] = MFRC522_Rd(0x22);
  5052  001D7A  0E22               	movlw	34
  5053  001D7C  EC1D  F00D         	call	_MFRC522_Rd
  5054  001D80  C010  FFD9         	movff	MFRC522_CRC@dataOut,fsr2l
  5055  001D84  C011  FFDA         	movff	MFRC522_CRC@dataOut+1,fsr2h
  5056  001D88  6EDF               	movwf	indf2,c
  5057                           
  5058                           ;rc522.c: 240:     dataOut[1] = MFRC522_Rd(0x21);
  5059  001D8A  EE20 F001          	lfsr	2,1
  5060  001D8E  5010               	movf	MFRC522_CRC@dataOut^0,w,c
  5061  001D90  26D9               	addwf	fsr2l,f,c
  5062  001D92  5011               	movf	(MFRC522_CRC@dataOut+1)^0,w,c
  5063  001D94  22DA               	addwfc	fsr2h,f,c
  5064  001D96  0E21               	movlw	33
  5065  001D98  EC1D  F00D         	call	_MFRC522_Rd
  5066  001D9C  6EDF               	movwf	indf2,c
  5067  001D9E  0012               	return		;funcret
  5068  001DA0                     __end_of_MFRC522_CRC:
  5069                           	callstack 0
  5070                           
  5071 ;; *************** function _MFRC522_Set_Bit *****************
  5072 ;; Defined at:
  5073 ;;		line 65 in file "rc522.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;  addr            1    wreg     unsigned char 
  5076 ;;  mask            1    9[COMRAM] unsigned char 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  addr            1   11[COMRAM] unsigned char 
  5079 ;;  tmp             1   10[COMRAM] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5089 ;;      Params:         1       0       0       0       0       0       0       0       0
  5090 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5092 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5093 ;;Total ram usage:        3 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 1
  5096 ;; This function calls:
  5097 ;;		_MFRC522_Rd
  5098 ;;		_MFRC522_Wr
  5099 ;; This function is called by:
  5100 ;;		_MFRC522_AntennaOn
  5101 ;;		_MFRC522_ToCard
  5102 ;;		_MFRC522_CRC
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           	psect	text30
  5107  00241C                     __ptext30:
  5108                           	callstack 0
  5109  00241C                     _MFRC522_Set_Bit:
  5110                           	callstack 26
  5111                           
  5112                           ;incstack = 0
  5113                           ;MFRC522_Set_Bit@addr stored from wreg
  5114  00241C  6E0C               	movwf	MFRC522_Set_Bit@addr^0,c
  5115  00241E                     
  5116                           ;rc522.c: 68:     tmp = MFRC522_Rd(addr);
  5117  00241E  500C               	movf	MFRC522_Set_Bit@addr^0,w,c
  5118  002420  EC1D  F00D         	call	_MFRC522_Rd
  5119  002424  6E0B               	movwf	MFRC522_Set_Bit@tmp^0,c
  5120  002426                     
  5121                           ;rc522.c: 69:     MFRC522_Wr(addr, tmp | mask);
  5122  002426  500B               	movf	MFRC522_Set_Bit@tmp^0,w,c
  5123  002428  100A               	iorwf	MFRC522_Set_Bit@mask^0,w,c
  5124  00242A  6E01               	movwf	MFRC522_Wr@value^0,c
  5125  00242C  500C               	movf	MFRC522_Set_Bit@addr^0,w,c
  5126  00242E  ECD0  F00E         	call	_MFRC522_Wr
  5127  002432  0012               	return		;funcret
  5128  002434                     __end_of_MFRC522_Set_Bit:
  5129                           	callstack 0
  5130                           
  5131 ;; *************** function _MFRC522_Clear_Bit *****************
  5132 ;; Defined at:
  5133 ;;		line 58 in file "rc522.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  addr            1    wreg     unsigned char 
  5136 ;;  mask            1    9[COMRAM] unsigned char 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  addr            1   11[COMRAM] unsigned char 
  5139 ;;  tmp             1   10[COMRAM] unsigned char 
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      void 
  5142 ;; Registers used:
  5143 ;;		wreg, status,2, status,0, cstack
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5149 ;;      Params:         1       0       0       0       0       0       0       0       0
  5150 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5152 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5153 ;;Total ram usage:        3 bytes
  5154 ;; Hardware stack levels used: 1
  5155 ;; Hardware stack levels required when called: 1
  5156 ;; This function calls:
  5157 ;;		_MFRC522_Rd
  5158 ;;		_MFRC522_Wr
  5159 ;; This function is called by:
  5160 ;;		_MFRC522_AntennaOff
  5161 ;;		_MFRC522_ToCard
  5162 ;;		_MFRC522_CRC
  5163 ;;		_MFRC522_Halt
  5164 ;;		_MFRC522_AntiColl
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text31
  5169  002402                     __ptext31:
  5170                           	callstack 0
  5171  002402                     _MFRC522_Clear_Bit:
  5172                           	callstack 26
  5173                           
  5174                           ;incstack = 0
  5175                           ;MFRC522_Clear_Bit@addr stored from wreg
  5176  002402  6E0C               	movwf	MFRC522_Clear_Bit@addr^0,c
  5177  002404                     
  5178                           ;rc522.c: 61:     tmp = MFRC522_Rd(addr) ;
  5179  002404  500C               	movf	MFRC522_Clear_Bit@addr^0,w,c
  5180  002406  EC1D  F00D         	call	_MFRC522_Rd
  5181  00240A  6E0B               	movwf	MFRC522_Clear_Bit@tmp^0,c
  5182  00240C                     
  5183                           ;rc522.c: 62:     MFRC522_Wr(addr, tmp&~mask);
  5184  00240C  500A               	movf	MFRC522_Clear_Bit@mask^0,w,c
  5185  00240E  0AFF               	xorlw	255
  5186  002410  140B               	andwf	MFRC522_Clear_Bit@tmp^0,w,c
  5187  002412  6E01               	movwf	MFRC522_Wr@value^0,c
  5188  002414  500C               	movf	MFRC522_Clear_Bit@addr^0,w,c
  5189  002416  ECD0  F00E         	call	_MFRC522_Wr
  5190  00241A  0012               	return		;funcret
  5191  00241C                     __end_of_MFRC522_Clear_Bit:
  5192                           	callstack 0
  5193                           
  5194 ;; *************** function _MFRC522_Wr *****************
  5195 ;; Defined at:
  5196 ;;		line 33 in file "rc522.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  address         1    wreg     unsigned char 
  5199 ;;  value           1    0[COMRAM] unsigned char 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  address         1    2[COMRAM] unsigned char 
  5202 ;;  i               1    4[COMRAM] unsigned char 
  5203 ;;  ucAddr          1    3[COMRAM] unsigned char 
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5213 ;;      Params:         1       0       0       0       0       0       0       0       0
  5214 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5215 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5216 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5217 ;;Total ram usage:        5 bytes
  5218 ;; Hardware stack levels used: 1
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		_MFRC522_Clear_Bit
  5223 ;;		_MFRC522_Set_Bit
  5224 ;;		_MFRC522_Reset
  5225 ;;		_MFRC522_Init
  5226 ;;		_MFRC522_ToCard
  5227 ;;		_MFRC522_Request
  5228 ;;		_MFRC522_CRC
  5229 ;;		_MFRC522_AntiColl
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           	psect	text32
  5234  001DA0                     __ptext32:
  5235                           	callstack 0
  5236  001DA0                     _MFRC522_Wr:
  5237                           	callstack 28
  5238                           
  5239                           ;incstack = 0
  5240                           ;MFRC522_Wr@address stored from wreg
  5241  001DA0  6E03               	movwf	MFRC522_Wr@address^0,c
  5242  001DA2                     
  5243                           ;rc522.c: 33: void MFRC522_Wr(unsigned char address, unsigned char value);rc522.c: 34: {
      +                          ;rc522.c: 35:     unsigned char i, ucAddr;;rc522.c: 36:     LATDbits.LD1 = 0;
  5244  001DA2  928C               	bcf	140,1,c	;volatile
  5245                           
  5246                           ;rc522.c: 37:     LATDbits.LD0 = 0;
  5247  001DA4  908C               	bcf	140,0,c	;volatile
  5248  001DA6                     
  5249                           ;rc522.c: 38:     ucAddr = ((address << 1) & 0x7E);
  5250  001DA6  5003               	movf	MFRC522_Wr@address^0,w,c
  5251  001DA8  2403               	addwf	MFRC522_Wr@address^0,w,c
  5252  001DAA  0B7E               	andlw	126
  5253  001DAC  6E04               	movwf	MFRC522_Wr@ucAddr^0,c
  5254  001DAE                     
  5255                           ;rc522.c: 40:     for(i=8; i>0; i--)
  5256  001DAE  0E08               	movlw	8
  5257  001DB0  6E05               	movwf	MFRC522_Wr@i^0,c
  5258  001DB2                     l2191:
  5259                           
  5260                           ;rc522.c: 41:     {;rc522.c: 42:         LATDbits.LD2 = ((ucAddr&0x80) == 0x80);
  5261  001DB2  BE04               	btfsc	MFRC522_Wr@ucAddr^0,7,c
  5262  001DB4  EFDE  F00E         	goto	u1521
  5263  001DB8  EFE2  F00E         	goto	u1520
  5264  001DBC                     u1521:
  5265  001DBC  6A02               	clrf	??_MFRC522_Wr^0,c
  5266  001DBE  2A02               	incf	??_MFRC522_Wr^0,f,c
  5267  001DC0  EFE3  F00E         	goto	u1538
  5268  001DC4                     u1520:
  5269  001DC4  6A02               	clrf	??_MFRC522_Wr^0,c
  5270  001DC6                     u1538:
  5271  001DC6  4602               	rlncf	??_MFRC522_Wr^0,f,c
  5272  001DC8  4602               	rlncf	??_MFRC522_Wr^0,f,c
  5273  001DCA  508C               	movf	140,w,c	;volatile
  5274  001DCC  1802               	xorwf	??_MFRC522_Wr^0,w,c
  5275  001DCE  0BFB               	andlw	-5
  5276  001DD0  1802               	xorwf	??_MFRC522_Wr^0,w,c
  5277  001DD2  6E8C               	movwf	140,c	;volatile
  5278  001DD4                     
  5279                           ;rc522.c: 43:         LATDbits.LD1 = 1;
  5280  001DD4  828C               	bsf	140,1,c	;volatile
  5281                           
  5282                           ;rc522.c: 44:         ucAddr <<= 1;
  5283  001DD6  90D8               	bcf	status,0,c
  5284  001DD8  3604               	rlcf	MFRC522_Wr@ucAddr^0,f,c
  5285  001DDA                     
  5286                           ;rc522.c: 45:         LATDbits.LD1 = 0;
  5287  001DDA  928C               	bcf	140,1,c	;volatile
  5288  001DDC                     
  5289                           ;rc522.c: 46:     }
  5290  001DDC  0605               	decf	MFRC522_Wr@i^0,f,c
  5291  001DDE  5005               	movf	MFRC522_Wr@i^0,w,c
  5292  001DE0  A4D8               	btfss	status,2,c
  5293  001DE2  EFF5  F00E         	goto	u1541
  5294  001DE6  EFF7  F00E         	goto	u1540
  5295  001DEA                     u1541:
  5296  001DEA  EFD9  F00E         	goto	l2191
  5297  001DEE                     u1540:
  5298  001DEE                     
  5299                           ;rc522.c: 47:     for(i=8; i>0; i--)
  5300  001DEE  0E08               	movlw	8
  5301  001DF0  6E05               	movwf	MFRC522_Wr@i^0,c
  5302  001DF2                     l2205:
  5303                           
  5304                           ;rc522.c: 48:     {;rc522.c: 49:         LATDbits.LD2 = ((value&0x80) == 0x80);
  5305  001DF2  BE01               	btfsc	MFRC522_Wr@value^0,7,c
  5306  001DF4  EFFE  F00E         	goto	u1551
  5307  001DF8  EF02  F00F         	goto	u1550
  5308  001DFC                     u1551:
  5309  001DFC  6A02               	clrf	??_MFRC522_Wr^0,c
  5310  001DFE  2A02               	incf	??_MFRC522_Wr^0,f,c
  5311  001E00  EF03  F00F         	goto	u1568
  5312  001E04                     u1550:
  5313  001E04  6A02               	clrf	??_MFRC522_Wr^0,c
  5314  001E06                     u1568:
  5315  001E06  4602               	rlncf	??_MFRC522_Wr^0,f,c
  5316  001E08  4602               	rlncf	??_MFRC522_Wr^0,f,c
  5317  001E0A  508C               	movf	140,w,c	;volatile
  5318  001E0C  1802               	xorwf	??_MFRC522_Wr^0,w,c
  5319  001E0E  0BFB               	andlw	-5
  5320  001E10  1802               	xorwf	??_MFRC522_Wr^0,w,c
  5321  001E12  6E8C               	movwf	140,c	;volatile
  5322  001E14                     
  5323                           ;rc522.c: 50:         LATDbits.LD1 = 1;
  5324  001E14  828C               	bsf	140,1,c	;volatile
  5325                           
  5326                           ;rc522.c: 51:         value <<= 1;
  5327  001E16  90D8               	bcf	status,0,c
  5328  001E18  3601               	rlcf	MFRC522_Wr@value^0,f,c
  5329  001E1A                     
  5330                           ;rc522.c: 52:         LATDbits.LD1 = 0;
  5331  001E1A  928C               	bcf	140,1,c	;volatile
  5332  001E1C                     
  5333                           ;rc522.c: 53:     }
  5334  001E1C  0605               	decf	MFRC522_Wr@i^0,f,c
  5335  001E1E  5005               	movf	MFRC522_Wr@i^0,w,c
  5336  001E20  A4D8               	btfss	status,2,c
  5337  001E22  EF15  F00F         	goto	u1571
  5338  001E26  EF17  F00F         	goto	u1570
  5339  001E2A                     u1571:
  5340  001E2A  EFF9  F00E         	goto	l2205
  5341  001E2E                     u1570:
  5342  001E2E                     
  5343                           ;rc522.c: 54:     LATDbits.LD0 = 1;
  5344  001E2E  808C               	bsf	140,0,c	;volatile
  5345                           
  5346                           ;rc522.c: 55:     LATDbits.LD1 = 1;
  5347  001E30  828C               	bsf	140,1,c	;volatile
  5348  001E32  0012               	return		;funcret
  5349  001E34                     __end_of_MFRC522_Wr:
  5350                           	callstack 0
  5351                           
  5352 ;; *************** function _MFRC522_Rd *****************
  5353 ;; Defined at:
  5354 ;;		line 6 in file "rc522.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;  address         1    wreg     unsigned char 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  address         1    2[COMRAM] unsigned char 
  5359 ;;  i               2    7[COMRAM] unsigned int 
  5360 ;;  ucResult        2    5[COMRAM] unsigned int 
  5361 ;;  ucAddr          2    3[COMRAM] unsigned int 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  1    wreg      unsigned char 
  5364 ;; Registers used:
  5365 ;;		wreg, status,2, status,0
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5371 ;;      Params:         0       0       0       0       0       0       0       0       0
  5372 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5373 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5374 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5375 ;;Total ram usage:        9 bytes
  5376 ;; Hardware stack levels used: 1
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		_MFRC522_Clear_Bit
  5381 ;;		_MFRC522_Set_Bit
  5382 ;;		_MFRC522_AntennaOn
  5383 ;;		_MFRC522_ToCard
  5384 ;;		_MFRC522_CRC
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text33
  5389  001A3A                     __ptext33:
  5390                           	callstack 0
  5391  001A3A                     _MFRC522_Rd:
  5392                           	callstack 26
  5393                           
  5394                           ;incstack = 0
  5395                           ;MFRC522_Rd@address stored from wreg
  5396  001A3A  6E03               	movwf	MFRC522_Rd@address^0,c
  5397  001A3C                     
  5398                           ;rc522.c: 6: unsigned char MFRC522_Rd(unsigned char address);rc522.c: 7: {;rc522.c: 8:  
      +                             unsigned int i, ucAddr;;rc522.c: 9:     unsigned int ucResult = 0;
  5399  001A3C  0E00               	movlw	0
  5400  001A3E  6E07               	movwf	(MFRC522_Rd@ucResult+1)^0,c
  5401  001A40  0E00               	movlw	0
  5402  001A42  6E06               	movwf	MFRC522_Rd@ucResult^0,c
  5403  001A44                     
  5404                           ;rc522.c: 10:     LATDbits.LD1 = 0;
  5405  001A44  928C               	bcf	140,1,c	;volatile
  5406  001A46                     
  5407                           ;rc522.c: 11:     LATDbits.LD0 = 0;
  5408  001A46  908C               	bcf	140,0,c	;volatile
  5409  001A48                     
  5410                           ;rc522.c: 12:     ucAddr = ((address << 1) & 0x7E) | 0x80;
  5411  001A48  5003               	movf	MFRC522_Rd@address^0,w,c
  5412  001A4A  2403               	addwf	MFRC522_Rd@address^0,w,c
  5413  001A4C  0B7E               	andlw	126
  5414  001A4E  6E01               	movwf	??_MFRC522_Rd^0,c
  5415  001A50  6A02               	clrf	(??_MFRC522_Rd+1)^0,c
  5416  001A52  0E80               	movlw	128
  5417  001A54  1001               	iorwf	??_MFRC522_Rd^0,w,c
  5418  001A56  6E04               	movwf	MFRC522_Rd@ucAddr^0,c
  5419  001A58  5002               	movf	(??_MFRC522_Rd+1)^0,w,c
  5420  001A5A  6E05               	movwf	(MFRC522_Rd@ucAddr+1)^0,c
  5421  001A5C                     
  5422                           ;rc522.c: 14:     for(i=8; i>0; i--)
  5423  001A5C  0E00               	movlw	0
  5424  001A5E  6E09               	movwf	(MFRC522_Rd@i+1)^0,c
  5425  001A60  0E08               	movlw	8
  5426  001A62  6E08               	movwf	MFRC522_Rd@i^0,c
  5427  001A64                     l2153:
  5428                           
  5429                           ;rc522.c: 15:     {;rc522.c: 16:         LATDbits.LD2 = ((ucAddr & 0x80) == 0x80);
  5430  001A64  BE04               	btfsc	MFRC522_Rd@ucAddr^0,7,c
  5431  001A66  EF37  F00D         	goto	u1471
  5432  001A6A  EF3B  F00D         	goto	u1470
  5433  001A6E                     u1471:
  5434  001A6E  6A01               	clrf	??_MFRC522_Rd^0,c
  5435  001A70  2A01               	incf	??_MFRC522_Rd^0,f,c
  5436  001A72  EF3C  F00D         	goto	u1488
  5437  001A76                     u1470:
  5438  001A76  6A01               	clrf	??_MFRC522_Rd^0,c
  5439  001A78                     u1488:
  5440  001A78  4601               	rlncf	??_MFRC522_Rd^0,f,c
  5441  001A7A  4601               	rlncf	??_MFRC522_Rd^0,f,c
  5442  001A7C  508C               	movf	140,w,c	;volatile
  5443  001A7E  1801               	xorwf	??_MFRC522_Rd^0,w,c
  5444  001A80  0BFB               	andlw	-5
  5445  001A82  1801               	xorwf	??_MFRC522_Rd^0,w,c
  5446  001A84  6E8C               	movwf	140,c	;volatile
  5447  001A86                     
  5448                           ;rc522.c: 17:         LATDbits.LD1 = 1;
  5449  001A86  828C               	bsf	140,1,c	;volatile
  5450  001A88                     
  5451                           ;rc522.c: 18:         ucAddr <<= 1;
  5452  001A88  90D8               	bcf	status,0,c
  5453  001A8A  3604               	rlcf	MFRC522_Rd@ucAddr^0,f,c
  5454  001A8C  3605               	rlcf	(MFRC522_Rd@ucAddr+1)^0,f,c
  5455  001A8E                     
  5456                           ;rc522.c: 19:         LATDbits.LD1 = 0;
  5457  001A8E  928C               	bcf	140,1,c	;volatile
  5458  001A90                     
  5459                           ;rc522.c: 20:     }
  5460  001A90  0608               	decf	MFRC522_Rd@i^0,f,c
  5461  001A92  A0D8               	btfss	status,0,c
  5462  001A94  0609               	decf	(MFRC522_Rd@i+1)^0,f,c
  5463  001A96  5008               	movf	MFRC522_Rd@i^0,w,c
  5464  001A98  1009               	iorwf	(MFRC522_Rd@i+1)^0,w,c
  5465  001A9A  A4D8               	btfss	status,2,c
  5466  001A9C  EF52  F00D         	goto	u1491
  5467  001AA0  EF54  F00D         	goto	u1490
  5468  001AA4                     u1491:
  5469  001AA4  EF32  F00D         	goto	l2153
  5470  001AA8                     u1490:
  5471  001AA8                     
  5472                           ;rc522.c: 21:     for(i=8; i>0; i--)
  5473  001AA8  0E00               	movlw	0
  5474  001AAA  6E09               	movwf	(MFRC522_Rd@i+1)^0,c
  5475  001AAC  0E08               	movlw	8
  5476  001AAE  6E08               	movwf	MFRC522_Rd@i^0,c
  5477  001AB0                     l188:
  5478                           
  5479                           ;rc522.c: 22:     {;rc522.c: 23:         LATDbits.LD1 = 1;
  5480  001AB0  828C               	bsf	140,1,c	;volatile
  5481  001AB2                     
  5482                           ;rc522.c: 24:         ucResult <<= 1;
  5483  001AB2  90D8               	bcf	status,0,c
  5484  001AB4  3606               	rlcf	MFRC522_Rd@ucResult^0,f,c
  5485  001AB6  3607               	rlcf	(MFRC522_Rd@ucResult+1)^0,f,c
  5486  001AB8                     
  5487                           ;rc522.c: 25:         ucResult |= (short)PORTDbits.RD3;
  5488  001AB8  B683               	btfsc	131,3,c	;volatile
  5489  001ABA  EF61  F00D         	goto	u1501
  5490  001ABE  EF65  F00D         	goto	u1500
  5491  001AC2                     u1501:
  5492  001AC2  6A01               	clrf	??_MFRC522_Rd^0,c
  5493  001AC4  2A01               	incf	??_MFRC522_Rd^0,f,c
  5494  001AC6  EF66  F00D         	goto	u1508
  5495  001ACA                     u1500:
  5496  001ACA  6A01               	clrf	??_MFRC522_Rd^0,c
  5497  001ACC                     u1508:
  5498  001ACC  5001               	movf	??_MFRC522_Rd^0,w,c
  5499  001ACE  1206               	iorwf	MFRC522_Rd@ucResult^0,f,c
  5500  001AD0                     
  5501                           ;rc522.c: 26:         LATDbits.LD1 = 0;
  5502  001AD0  928C               	bcf	140,1,c	;volatile
  5503  001AD2                     
  5504                           ;rc522.c: 27:     }
  5505  001AD2  0608               	decf	MFRC522_Rd@i^0,f,c
  5506  001AD4  A0D8               	btfss	status,0,c
  5507  001AD6  0609               	decf	(MFRC522_Rd@i+1)^0,f,c
  5508  001AD8  5008               	movf	MFRC522_Rd@i^0,w,c
  5509  001ADA  1009               	iorwf	(MFRC522_Rd@i+1)^0,w,c
  5510  001ADC  A4D8               	btfss	status,2,c
  5511  001ADE  EF73  F00D         	goto	u1511
  5512  001AE2  EF75  F00D         	goto	u1510
  5513  001AE6                     u1511:
  5514  001AE6  EF58  F00D         	goto	l188
  5515  001AEA                     u1510:
  5516  001AEA                     
  5517                           ;rc522.c: 28:     LATDbits.LD0 = 1;
  5518  001AEA  808C               	bsf	140,0,c	;volatile
  5519                           
  5520                           ;rc522.c: 29:     LATDbits.LD1 = 1;
  5521  001AEC  828C               	bsf	140,1,c	;volatile
  5522  001AEE                     
  5523                           ;rc522.c: 30:     return ucResult;
  5524  001AEE  5006               	movf	MFRC522_Rd@ucResult^0,w,c
  5525  001AF0  0012               	return		;funcret
  5526  001AF2                     __end_of_MFRC522_Rd:
  5527                           	callstack 0
  5528                           
  5529 ;; *************** function _LCD_Print *****************
  5530 ;; Defined at:
  5531 ;;		line 109 in file "I2C.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;  LCD_Str         2    4[COMRAM] PTR unsigned char 
  5534 ;;		 -> data_buffer(16), temp(16), STR_1(8), 
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;  i               1    9[COMRAM] unsigned char 
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  1    wreg      void 
  5539 ;; Registers used:
  5540 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5546 ;;      Params:         2       0       0       0       0       0       0       0       0
  5547 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5548 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5549 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5550 ;;Total ram usage:        6 bytes
  5551 ;; Hardware stack levels used: 1
  5552 ;; Hardware stack levels required when called: 3
  5553 ;; This function calls:
  5554 ;;		_LCD_Write_Nibble
  5555 ;; This function is called by:
  5556 ;;		_main
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           	psect	text34
  5561  001AF2                     __ptext34:
  5562                           	callstack 0
  5563  001AF2                     _LCD_Print:
  5564                           	callstack 27
  5565  001AF2                     
  5566                           ;I2C.c: 109: void LCD_Print(char* LCD_Str);I2C.c: 110: {;I2C.c: 111:   uint8_t i = 0;
  5567  001AF2  0E00               	movlw	0
  5568  001AF4  6E0A               	movwf	LCD_Print@i^0,c
  5569  001AF6                     
  5570                           ;I2C.c: 112:   RS = 1;
  5571  001AF6  0100               	movlb	0	; () banked
  5572  001AF8  81DA               	bsf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  5573                           
  5574                           ;I2C.c: 113:   while(LCD_Str[i] != '\0')
  5575  001AFA  EFB5  F00D         	goto	l3091
  5576  001AFE                     l3087:
  5577                           
  5578                           ;I2C.c: 114:   {;I2C.c: 115:     LCD_Write_Nibble(LCD_Str[i] & 0xF0);
  5579  001AFE  500A               	movf	LCD_Print@i^0,w,c
  5580  001B00  2405               	addwf	LCD_Print@LCD_Str^0,w,c
  5581  001B02  6E07               	movwf	??_LCD_Print^0,c
  5582  001B04  0E00               	movlw	0
  5583  001B06  2006               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  5584  001B08  6E08               	movwf	(??_LCD_Print+1)^0,c
  5585  001B0A  C007  FFF6         	movff	??_LCD_Print,tblptrl
  5586  001B0E  C008  FFF7         	movff	??_LCD_Print+1,tblptrh
  5587  001B12  6AF8               	clrf	tblptru,c
  5588  001B14  0E07               	movlw	(high __ramtop+-1)
  5589  001B16  64F7               	cpfsgt	tblptrh,c
  5590  001B18  D003               	bra	u2617
  5591  001B1A  0008               	tblrd		*
  5592  001B1C  50F5               	movf	tablat,w,c
  5593  001B1E  D005               	bra	u2610
  5594  001B20                     u2617:
  5595  001B20  CFF6 FFE1          	movff	tblptrl,fsr1l
  5596  001B24  CFF7 FFE2          	movff	tblptrh,fsr1h
  5597  001B28  50E7               	movf	indf1,w,c
  5598  001B2A                     u2610:
  5599  001B2A  0BF0               	andlw	240
  5600  001B2C  EC43  F011         	call	_LCD_Write_Nibble
  5601                           
  5602                           ;I2C.c: 116:     LCD_Write_Nibble( (LCD_Str[i++] << 4) & 0xF0 );
  5603  001B30  500A               	movf	LCD_Print@i^0,w,c
  5604  001B32  2405               	addwf	LCD_Print@LCD_Str^0,w,c
  5605  001B34  6E07               	movwf	??_LCD_Print^0,c
  5606  001B36  0E00               	movlw	0
  5607  001B38  2006               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  5608  001B3A  6E08               	movwf	(??_LCD_Print+1)^0,c
  5609  001B3C  C007  FFF6         	movff	??_LCD_Print,tblptrl
  5610  001B40  C008  FFF7         	movff	??_LCD_Print+1,tblptrh
  5611  001B44  6AF8               	clrf	tblptru,c
  5612  001B46  0E07               	movlw	(high __ramtop+-1)
  5613  001B48  64F7               	cpfsgt	tblptrh,c
  5614  001B4A  D003               	bra	u2627
  5615  001B4C  0008               	tblrd		*
  5616  001B4E  50F5               	movf	tablat,w,c
  5617  001B50  D005               	bra	u2620
  5618  001B52                     u2627:
  5619  001B52  CFF6 FFE1          	movff	tblptrl,fsr1l
  5620  001B56  CFF7 FFE2          	movff	tblptrh,fsr1h
  5621  001B5A  50E7               	movf	indf1,w,c
  5622  001B5C                     u2620:
  5623  001B5C  6E09               	movwf	(??_LCD_Print+2)^0,c
  5624  001B5E  3809               	swapf	(??_LCD_Print+2)^0,w,c
  5625  001B60  0BF0               	andlw	240
  5626  001B62  0BF0               	andlw	240
  5627  001B64  EC43  F011         	call	_LCD_Write_Nibble
  5628  001B68  2A0A               	incf	LCD_Print@i^0,f,c
  5629  001B6A                     l3091:
  5630                           
  5631                           ;I2C.c: 113:   while(LCD_Str[i] != '\0')
  5632  001B6A  500A               	movf	LCD_Print@i^0,w,c
  5633  001B6C  2405               	addwf	LCD_Print@LCD_Str^0,w,c
  5634  001B6E  6E07               	movwf	??_LCD_Print^0,c
  5635  001B70  0E00               	movlw	0
  5636  001B72  2006               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  5637  001B74  6E08               	movwf	(??_LCD_Print+1)^0,c
  5638  001B76  C007  FFF6         	movff	??_LCD_Print,tblptrl
  5639  001B7A  C008  FFF7         	movff	??_LCD_Print+1,tblptrh
  5640  001B7E  6AF8               	clrf	tblptru,c
  5641  001B80  0E07               	movlw	(high __ramtop+-1)
  5642  001B82  64F7               	cpfsgt	tblptrh,c
  5643  001B84  D003               	bra	u2637
  5644  001B86  0008               	tblrd		*
  5645  001B88  50F5               	movf	tablat,w,c
  5646  001B8A  D005               	bra	u2630
  5647  001B8C                     u2637:
  5648  001B8C  CFF6 FFE1          	movff	tblptrl,fsr1l
  5649  001B90  CFF7 FFE2          	movff	tblptrh,fsr1h
  5650  001B94  50E7               	movf	indf1,w,c
  5651  001B96                     u2630:
  5652  001B96  0900               	iorlw	0
  5653  001B98  A4D8               	btfss	status,2,c
  5654  001B9A  EFD1  F00D         	goto	u2641
  5655  001B9E  EFD3  F00D         	goto	u2640
  5656  001BA2                     u2641:
  5657  001BA2  EF7F  F00D         	goto	l3087
  5658  001BA6                     u2640:
  5659  001BA6  0012               	return		;funcret
  5660  001BA8                     __end_of_LCD_Print:
  5661                           	callstack 0
  5662                           
  5663 ;; *************** function _LCD_Goto *****************
  5664 ;; Defined at:
  5665 ;;		line 83 in file "I2C.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;  col             1    wreg     unsigned char 
  5668 ;;  row             1    6[COMRAM] unsigned char 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  col             1    9[COMRAM] unsigned char 
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  1    wreg      void 
  5673 ;; Registers used:
  5674 ;;		wreg, status,2, status,0, cstack
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5680 ;;      Params:         1       0       0       0       0       0       0       0       0
  5681 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5682 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5683 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5684 ;;Total ram usage:        4 bytes
  5685 ;; Hardware stack levels used: 1
  5686 ;; Hardware stack levels required when called: 4
  5687 ;; This function calls:
  5688 ;;		_LCD_Cmd
  5689 ;; This function is called by:
  5690 ;;		_main
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text35
  5695  001E34                     __ptext35:
  5696                           	callstack 0
  5697  001E34                     _LCD_Goto:
  5698                           	callstack 26
  5699                           
  5700                           ;incstack = 0
  5701                           ;LCD_Goto@col stored from wreg
  5702  001E34  6E0A               	movwf	LCD_Goto@col^0,c
  5703  001E36                     
  5704                           ;I2C.c: 83: void LCD_Goto(uint8_t col, uint8_t row);I2C.c: 84: {;I2C.c: 85:   switch(row
      +                          )
  5705  001E36  EF35  F00F         	goto	l3077
  5706  001E3A                     l3069:
  5707                           
  5708                           ;I2C.c: 88:       LCD_Cmd(0xC0 + col - 1);
  5709  001E3A  500A               	movf	LCD_Goto@col^0,w,c
  5710  001E3C  0FBF               	addlw	191
  5711  001E3E  EC63  F010         	call	_LCD_Cmd
  5712                           
  5713                           ;I2C.c: 89:       break;
  5714  001E42  EF4E  F00F         	goto	l157
  5715  001E46                     l3071:
  5716                           
  5717                           ;I2C.c: 91:       LCD_Cmd(0x94 + col - 1);
  5718  001E46  500A               	movf	LCD_Goto@col^0,w,c
  5719  001E48  0F93               	addlw	147
  5720  001E4A  EC63  F010         	call	_LCD_Cmd
  5721                           
  5722                           ;I2C.c: 92:       break;
  5723  001E4E  EF4E  F00F         	goto	l157
  5724  001E52                     l3073:
  5725                           
  5726                           ;I2C.c: 94:       LCD_Cmd(0xD4 + col - 1);
  5727  001E52  500A               	movf	LCD_Goto@col^0,w,c
  5728  001E54  0FD3               	addlw	211
  5729  001E56  EC63  F010         	call	_LCD_Cmd
  5730                           
  5731                           ;I2C.c: 95:     break;
  5732  001E5A  EF4E  F00F         	goto	l157
  5733  001E5E                     l3075:
  5734                           
  5735                           ;I2C.c: 97:       LCD_Cmd(0x80 + col - 1);
  5736  001E5E  500A               	movf	LCD_Goto@col^0,w,c
  5737  001E60  0F7F               	addlw	127
  5738  001E62  EC63  F010         	call	_LCD_Cmd
  5739                           
  5740                           ;I2C.c: 98:   }
  5741  001E66  EF4E  F00F         	goto	l157
  5742  001E6A                     l3077:
  5743  001E6A  5007               	movf	LCD_Goto@row^0,w,c
  5744  001E6C  6E08               	movwf	??_LCD_Goto^0,c
  5745  001E6E  6A09               	clrf	(??_LCD_Goto+1)^0,c
  5746                           
  5747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5748                           ; Switch size 1, requested type "simple"
  5749                           ; Number of cases is 1, Range of values is 0 to 0
  5750                           ; switch strategies available:
  5751                           ; Name         Instructions Cycles
  5752                           ; simple_byte            4     3 (average)
  5753                           ;	Chosen strategy is simple_byte
  5754  001E70  5009               	movf	(??_LCD_Goto+1)^0,w,c
  5755  001E72  0A00               	xorlw	0	; case 0
  5756  001E74  B4D8               	btfsc	status,2,c
  5757  001E76  EF3F  F00F         	goto	l3215
  5758  001E7A  EF2F  F00F         	goto	l3075
  5759  001E7E                     l3215:
  5760                           
  5761                           ; Switch size 1, requested type "simple"
  5762                           ; Number of cases is 3, Range of values is 2 to 4
  5763                           ; switch strategies available:
  5764                           ; Name         Instructions Cycles
  5765                           ; simple_byte           10     6 (average)
  5766                           ;	Chosen strategy is simple_byte
  5767  001E7E  5008               	movf	??_LCD_Goto^0,w,c
  5768  001E80  0A02               	xorlw	2	; case 2
  5769  001E82  B4D8               	btfsc	status,2,c
  5770  001E84  EF1D  F00F         	goto	l3069
  5771  001E88  0A01               	xorlw	1	; case 3
  5772  001E8A  B4D8               	btfsc	status,2,c
  5773  001E8C  EF23  F00F         	goto	l3071
  5774  001E90  0A07               	xorlw	7	; case 4
  5775  001E92  B4D8               	btfsc	status,2,c
  5776  001E94  EF29  F00F         	goto	l3073
  5777  001E98  EF2F  F00F         	goto	l3075
  5778  001E9C                     l157:
  5779  001E9C  0012               	return		;funcret
  5780  001E9E                     __end_of_LCD_Goto:
  5781                           	callstack 0
  5782                           
  5783 ;; *************** function _LCD_Begin *****************
  5784 ;; Defined at:
  5785 ;;		line 120 in file "I2C.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;  _i2c_addr       1    wreg     unsigned char 
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;  _i2c_addr       1    8[COMRAM] unsigned char 
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  1    wreg      void 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2, status,0, cstack
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5799 ;;      Params:         0       0       0       0       0       0       0       0       0
  5800 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5801 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5802 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5803 ;;Total ram usage:        3 bytes
  5804 ;; Hardware stack levels used: 1
  5805 ;; Hardware stack levels required when called: 4
  5806 ;; This function calls:
  5807 ;;		_Expander_Write
  5808 ;;		_LCD_Cmd
  5809 ;; This function is called by:
  5810 ;;		_main
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text36
  5815  0017BC                     __ptext36:
  5816                           	callstack 0
  5817  0017BC                     _LCD_Begin:
  5818                           	callstack 26
  5819                           
  5820                           ;incstack = 0
  5821                           ;LCD_Begin@_i2c_addr stored from wreg
  5822  0017BC  6E09               	movwf	LCD_Begin@_i2c_addr^0,c
  5823  0017BE                     
  5824                           ;I2C.c: 120: void LCD_Begin(uint8_t _i2c_addr);I2C.c: 121: {;I2C.c: 122:   i2c_addr = _i
      +                          2c_addr;
  5825  0017BE  C009  F0D9         	movff	LCD_Begin@_i2c_addr,_i2c_addr
  5826  0017C2                     
  5827                           ;I2C.c: 123:   Expander_Write(0);
  5828  0017C2  0E00               	movlw	0
  5829  0017C4  ECF2  F011         	call	_Expander_Write
  5830  0017C8                     
  5831                           ;I2C.c: 125:   _delay((unsigned long)((40)*(27000000/4000.0)));
  5832  0017C8  0E02               	movlw	2
  5833  0017CA  6E08               	movwf	(??_LCD_Begin+1)^0,c
  5834  0017CC  0E5F               	movlw	95
  5835  0017CE  6E07               	movwf	??_LCD_Begin^0,c
  5836  0017D0  0EA3               	movlw	163
  5837  0017D2                     u2727:
  5838  0017D2  2EE8               	decfsz	wreg,f,c
  5839  0017D4  D7FE               	bra	u2727
  5840  0017D6  2E07               	decfsz	??_LCD_Begin^0,f,c
  5841  0017D8  D7FC               	bra	u2727
  5842  0017DA  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  5843  0017DC  D7FA               	bra	u2727
  5844  0017DE  F000               	nop	
  5845                           
  5846                           ;I2C.c: 126:   LCD_Cmd(3);
  5847  0017E0  0E03               	movlw	3
  5848  0017E2  EC63  F010         	call	_LCD_Cmd
  5849  0017E6                     
  5850                           ;I2C.c: 127:   _delay((unsigned long)((5)*(27000000/4000.0)));
  5851  0017E6  0E2C               	movlw	44
  5852  0017E8  6E07               	movwf	??_LCD_Begin^0,c
  5853  0017EA  0ED4               	movlw	212
  5854  0017EC                     u2737:
  5855  0017EC  2EE8               	decfsz	wreg,f,c
  5856  0017EE  D7FE               	bra	u2737
  5857  0017F0  2E07               	decfsz	??_LCD_Begin^0,f,c
  5858  0017F2  D7FC               	bra	u2737
  5859  0017F4                     
  5860                           ;I2C.c: 128:   LCD_Cmd(3);
  5861  0017F4  0E03               	movlw	3
  5862  0017F6  EC63  F010         	call	_LCD_Cmd
  5863                           
  5864                           ;I2C.c: 129:   _delay((unsigned long)((5)*(27000000/4000.0)));
  5865  0017FA  0E2C               	movlw	44
  5866  0017FC  6E07               	movwf	??_LCD_Begin^0,c
  5867  0017FE  0ED4               	movlw	212
  5868  001800                     u2747:
  5869  001800  2EE8               	decfsz	wreg,f,c
  5870  001802  D7FE               	bra	u2747
  5871  001804  2E07               	decfsz	??_LCD_Begin^0,f,c
  5872  001806  D7FC               	bra	u2747
  5873  001808                     
  5874                           ;I2C.c: 130:   LCD_Cmd(3);
  5875  001808  0E03               	movlw	3
  5876  00180A  EC63  F010         	call	_LCD_Cmd
  5877  00180E                     
  5878                           ;I2C.c: 131:   _delay((unsigned long)((5)*(27000000/4000.0)));
  5879  00180E  0E2C               	movlw	44
  5880  001810  6E07               	movwf	??_LCD_Begin^0,c
  5881  001812  0ED4               	movlw	212
  5882  001814                     u2757:
  5883  001814  2EE8               	decfsz	wreg,f,c
  5884  001816  D7FE               	bra	u2757
  5885  001818  2E07               	decfsz	??_LCD_Begin^0,f,c
  5886  00181A  D7FC               	bra	u2757
  5887                           
  5888                           ;I2C.c: 132:   LCD_Cmd(0x02);
  5889  00181C  0E02               	movlw	2
  5890  00181E  EC63  F010         	call	_LCD_Cmd
  5891  001822                     
  5892                           ;I2C.c: 133:   _delay((unsigned long)((5)*(27000000/4000.0)));
  5893  001822  0E2C               	movlw	44
  5894  001824  6E07               	movwf	??_LCD_Begin^0,c
  5895  001826  0ED4               	movlw	212
  5896  001828                     u2767:
  5897  001828  2EE8               	decfsz	wreg,f,c
  5898  00182A  D7FE               	bra	u2767
  5899  00182C  2E07               	decfsz	??_LCD_Begin^0,f,c
  5900  00182E  D7FC               	bra	u2767
  5901  001830                     
  5902                           ;I2C.c: 134:   LCD_Cmd(0x20 | (2 << 2));
  5903  001830  0E28               	movlw	40
  5904  001832  EC63  F010         	call	_LCD_Cmd
  5905                           
  5906                           ;I2C.c: 135:   _delay((unsigned long)((50)*(27000000/4000.0)));
  5907  001836  0E02               	movlw	2
  5908  001838  6E08               	movwf	(??_LCD_Begin+1)^0,c
  5909  00183A  0EB7               	movlw	183
  5910  00183C  6E07               	movwf	??_LCD_Begin^0,c
  5911  00183E  0E4C               	movlw	76
  5912  001840                     u2777:
  5913  001840  2EE8               	decfsz	wreg,f,c
  5914  001842  D7FE               	bra	u2777
  5915  001844  2E07               	decfsz	??_LCD_Begin^0,f,c
  5916  001846  D7FC               	bra	u2777
  5917  001848  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  5918  00184A  D7FA               	bra	u2777
  5919  00184C  D000               	nop2	
  5920  00184E                     
  5921                           ;I2C.c: 136:   LCD_Cmd(0x0C);
  5922  00184E  0E0C               	movlw	12
  5923  001850  EC63  F010         	call	_LCD_Cmd
  5924  001854                     
  5925                           ;I2C.c: 137:   _delay((unsigned long)((50)*(27000000/4000.0)));
  5926  001854  0E02               	movlw	2
  5927  001856  6E08               	movwf	(??_LCD_Begin+1)^0,c
  5928  001858  0EB7               	movlw	183
  5929  00185A  6E07               	movwf	??_LCD_Begin^0,c
  5930  00185C  0E4C               	movlw	76
  5931  00185E                     u2787:
  5932  00185E  2EE8               	decfsz	wreg,f,c
  5933  001860  D7FE               	bra	u2787
  5934  001862  2E07               	decfsz	??_LCD_Begin^0,f,c
  5935  001864  D7FC               	bra	u2787
  5936  001866  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  5937  001868  D7FA               	bra	u2787
  5938  00186A  D000               	nop2	
  5939                           
  5940                           ;I2C.c: 138:   LCD_Cmd(0x01);
  5941  00186C  0E01               	movlw	1
  5942  00186E  EC63  F010         	call	_LCD_Cmd
  5943  001872                     
  5944                           ;I2C.c: 139:   _delay((unsigned long)((50)*(27000000/4000.0)));
  5945  001872  0E02               	movlw	2
  5946  001874  6E08               	movwf	(??_LCD_Begin+1)^0,c
  5947  001876  0EB7               	movlw	183
  5948  001878  6E07               	movwf	??_LCD_Begin^0,c
  5949  00187A  0E4C               	movlw	76
  5950  00187C                     u2797:
  5951  00187C  2EE8               	decfsz	wreg,f,c
  5952  00187E  D7FE               	bra	u2797
  5953  001880  2E07               	decfsz	??_LCD_Begin^0,f,c
  5954  001882  D7FC               	bra	u2797
  5955  001884  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  5956  001886  D7FA               	bra	u2797
  5957  001888  D000               	nop2	
  5958  00188A                     
  5959                           ;I2C.c: 140:   LCD_Cmd(0x04 | 0x02);
  5960  00188A  0E06               	movlw	6
  5961  00188C  EC63  F010         	call	_LCD_Cmd
  5962                           
  5963                           ;I2C.c: 141:   _delay((unsigned long)((50)*(27000000/4000.0)));
  5964  001890  0E02               	movlw	2
  5965  001892  6E08               	movwf	(??_LCD_Begin+1)^0,c
  5966  001894  0EB7               	movlw	183
  5967  001896  6E07               	movwf	??_LCD_Begin^0,c
  5968  001898  0E4C               	movlw	76
  5969  00189A                     u2807:
  5970  00189A  2EE8               	decfsz	wreg,f,c
  5971  00189C  D7FE               	bra	u2807
  5972  00189E  2E07               	decfsz	??_LCD_Begin^0,f,c
  5973  0018A0  D7FC               	bra	u2807
  5974  0018A2  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  5975  0018A4  D7FA               	bra	u2807
  5976  0018A6  D000               	nop2	
  5977  0018A8  0012               	return		;funcret
  5978  0018AA                     __end_of_LCD_Begin:
  5979                           	callstack 0
  5980                           
  5981 ;; *************** function _LCD_Cmd *****************
  5982 ;; Defined at:
  5983 ;;		line 74 in file "I2C.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  Command         1    wreg     unsigned char 
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;  Command         1    5[COMRAM] unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1    wreg      void 
  5990 ;; Registers used:
  5991 ;;		wreg, status,2, status,0, cstack
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5997 ;;      Params:         0       0       0       0       0       0       0       0       0
  5998 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5999 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6000 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6001 ;;Total ram usage:        2 bytes
  6002 ;; Hardware stack levels used: 1
  6003 ;; Hardware stack levels required when called: 3
  6004 ;; This function calls:
  6005 ;;		_LCD_Write_Nibble
  6006 ;; This function is called by:
  6007 ;;		_main
  6008 ;;		_LCD_Goto
  6009 ;;		_LCD_Begin
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           	psect	text37
  6014  0020C6                     __ptext37:
  6015                           	callstack 0
  6016  0020C6                     _LCD_Cmd:
  6017                           	callstack 26
  6018                           
  6019                           ;incstack = 0
  6020                           ;LCD_Cmd@Command stored from wreg
  6021  0020C6  6E06               	movwf	LCD_Cmd@Command^0,c
  6022  0020C8                     
  6023                           ;I2C.c: 74: void LCD_Cmd(uint8_t Command);I2C.c: 75: {;I2C.c: 76:   RS = 0;
  6024  0020C8  0100               	movlb	0	; () banked
  6025  0020CA  91DA               	bcf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  6026  0020CC                     
  6027                           ; BSR set to: 0
  6028                           ;I2C.c: 77:   LCD_Write_Nibble(Command & 0xF0);
  6029  0020CC  5006               	movf	LCD_Cmd@Command^0,w,c
  6030  0020CE  0BF0               	andlw	240
  6031  0020D0  EC43  F011         	call	_LCD_Write_Nibble
  6032                           
  6033                           ;I2C.c: 78:   LCD_Write_Nibble((Command << 4) & 0xF0);
  6034  0020D4  3806               	swapf	LCD_Cmd@Command^0,w,c
  6035  0020D6  0BF0               	andlw	240
  6036  0020D8  0BF0               	andlw	240
  6037  0020DA  EC43  F011         	call	_LCD_Write_Nibble
  6038  0020DE                     
  6039                           ;I2C.c: 79:   if((Command == 0x01) || (Command == 0x02))
  6040  0020DE  0406               	decf	LCD_Cmd@Command^0,w,c
  6041  0020E0  B4D8               	btfsc	status,2,c
  6042  0020E2  EF75  F010         	goto	u2591
  6043  0020E6  EF77  F010         	goto	u2590
  6044  0020EA                     u2591:
  6045  0020EA  EF80  F010         	goto	l3039
  6046  0020EE                     u2590:
  6047  0020EE  0E02               	movlw	2
  6048  0020F0  1806               	xorwf	LCD_Cmd@Command^0,w,c
  6049  0020F2  A4D8               	btfss	status,2,c
  6050  0020F4  EF7E  F010         	goto	u2601
  6051  0020F8  EF80  F010         	goto	u2600
  6052  0020FC                     u2601:
  6053  0020FC  EF88  F010         	goto	l148
  6054  002100                     u2600:
  6055  002100                     l3039:
  6056                           
  6057                           ;I2C.c: 80:     _delay((unsigned long)((2)*(27000000/4000.0)));
  6058  002100  0E12               	movlw	18
  6059  002102  6E05               	movwf	??_LCD_Cmd^0,c
  6060  002104  0E87               	movlw	135
  6061  002106                     u2817:
  6062  002106  2EE8               	decfsz	wreg,f,c
  6063  002108  D7FE               	bra	u2817
  6064  00210A  2E05               	decfsz	??_LCD_Cmd^0,f,c
  6065  00210C  D7FC               	bra	u2817
  6066  00210E  F000               	nop	
  6067  002110                     l148:
  6068  002110  0012               	return		;funcret
  6069  002112                     __end_of_LCD_Cmd:
  6070                           	callstack 0
  6071                           
  6072 ;; *************** function _LCD_Write_Nibble *****************
  6073 ;; Defined at:
  6074 ;;		line 63 in file "I2C.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  n               1    wreg     unsigned char 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  n               1    3[COMRAM] unsigned char 
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  1    wreg      void 
  6081 ;; Registers used:
  6082 ;;		wreg, status,2, status,0, cstack
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6088 ;;      Params:         0       0       0       0       0       0       0       0       0
  6089 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6091 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6092 ;;Total ram usage:        1 bytes
  6093 ;; Hardware stack levels used: 1
  6094 ;; Hardware stack levels required when called: 2
  6095 ;; This function calls:
  6096 ;;		_Expander_Write
  6097 ;; This function is called by:
  6098 ;;		_LCD_Cmd
  6099 ;;		_LCD_Print
  6100 ;;		_LCD_PutC
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text38
  6105  002286                     __ptext38:
  6106                           	callstack 0
  6107  002286                     _LCD_Write_Nibble:
  6108                           	callstack 27
  6109                           
  6110                           ;incstack = 0
  6111                           ;LCD_Write_Nibble@n stored from wreg
  6112  002286  6E04               	movwf	LCD_Write_Nibble@n^0,c
  6113  002288                     
  6114                           ;I2C.c: 63: void LCD_Write_Nibble(uint8_t n);I2C.c: 64: {;I2C.c: 65:   n |= RS;
  6115  002288  0E00               	movlw	0
  6116  00228A  0100               	movlb	0	; () banked
  6117  00228C  B1DA               	btfsc	(_RS/(0+8))& (0+255),_RS& (0+7),b
  6118  00228E  0E01               	movlw	1
  6119  002290  1204               	iorwf	LCD_Write_Nibble@n^0,f,c
  6120  002292                     
  6121                           ; BSR set to: 0
  6122                           ;I2C.c: 66:   Expander_Write(n & 0xFB);
  6123  002292  5004               	movf	LCD_Write_Nibble@n^0,w,c
  6124  002294  0BFB               	andlw	251
  6125  002296  ECF2  F011         	call	_Expander_Write
  6126  00229A                     
  6127                           ;I2C.c: 67:   _delay((unsigned long)((1)*(27000000/4000000.0)));
  6128  00229A  D000               	nop2		;2 cycle nop
  6129  00229C  D000               	nop2		;2 cycle nop
  6130  00229E  D000               	nop2		;2 cycle nop
  6131  0022A0                     
  6132                           ;I2C.c: 68:   Expander_Write(n | 0x04);
  6133  0022A0  5004               	movf	LCD_Write_Nibble@n^0,w,c
  6134  0022A2  0904               	iorlw	4
  6135  0022A4  ECF2  F011         	call	_Expander_Write
  6136  0022A8                     
  6137                           ;I2C.c: 69:   _delay((unsigned long)((1)*(27000000/4000000.0)));
  6138  0022A8  D000               	nop2		;2 cycle nop
  6139  0022AA  D000               	nop2		;2 cycle nop
  6140  0022AC  D000               	nop2		;2 cycle nop
  6141  0022AE                     
  6142                           ;I2C.c: 70:   Expander_Write(n & 0xFB);
  6143  0022AE  5004               	movf	LCD_Write_Nibble@n^0,w,c
  6144  0022B0  0BFB               	andlw	251
  6145  0022B2  ECF2  F011         	call	_Expander_Write
  6146  0022B6                     
  6147                           ;I2C.c: 71:   _delay((unsigned long)((100)*(27000000/4000000.0)));
  6148  0022B6  0EE1               	movlw	225
  6149  0022B8                     u2827:
  6150  0022B8  2EE8               	decfsz	wreg,f,c
  6151  0022BA  D7FE               	bra	u2827
  6152  0022BC  0012               	return		;funcret
  6153  0022BE                     __end_of_LCD_Write_Nibble:
  6154                           	callstack 0
  6155                           
  6156 ;; *************** function _Expander_Write *****************
  6157 ;; Defined at:
  6158 ;;		line 55 in file "I2C.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;  value           1    wreg     unsigned char 
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;  value           1    2[COMRAM] unsigned char 
  6163 ;; Return value:  Size  Location     Type
  6164 ;;                  1    wreg      void 
  6165 ;; Registers used:
  6166 ;;		wreg, status,2, status,0, cstack
  6167 ;; Tracked objects:
  6168 ;;		On entry : 0/0
  6169 ;;		On exit  : 0/0
  6170 ;;		Unchanged: 0/0
  6171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6172 ;;      Params:         0       0       0       0       0       0       0       0       0
  6173 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6175 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6176 ;;Total ram usage:        1 bytes
  6177 ;; Hardware stack levels used: 1
  6178 ;; Hardware stack levels required when called: 1
  6179 ;; This function calls:
  6180 ;;		_I2CLCD_Start
  6181 ;;		_I2CLCD_Stop
  6182 ;;		_I2CLCD_Write
  6183 ;; This function is called by:
  6184 ;;		_LCD_Write_Nibble
  6185 ;;		_LCD_Begin
  6186 ;;		_Backlight
  6187 ;;		_noBacklight
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           	psect	text39
  6192  0023E4                     __ptext39:
  6193                           	callstack 0
  6194  0023E4                     _Expander_Write:
  6195                           	callstack 27
  6196                           
  6197                           ;incstack = 0
  6198                           ;Expander_Write@value stored from wreg
  6199  0023E4  6E03               	movwf	Expander_Write@value^0,c
  6200  0023E6                     
  6201                           ;I2C.c: 55: void Expander_Write(uint8_t value);I2C.c: 56: {;I2C.c: 57:   I2CLCD_Start();
  6202  0023E6  ECCF  F011         	call	_I2CLCD_Start	;wreg free
  6203                           
  6204                           ;I2C.c: 58:   I2CLCD_Write(i2c_addr);
  6205  0023EA  0100               	movlb	0	; () banked
  6206  0023EC  51D9               	movf	_i2c_addr& (0+255),w,b
  6207  0023EE  EC90  F011         	call	_I2CLCD_Write
  6208                           
  6209                           ;I2C.c: 59:   I2CLCD_Write(value | backlight_val);
  6210  0023F2  5003               	movf	Expander_Write@value^0,w,c
  6211  0023F4  0100               	movlb	0	; () banked
  6212  0023F6  11DB               	iorwf	_backlight_val& (0+255),w,b
  6213  0023F8  EC90  F011         	call	_I2CLCD_Write
  6214                           
  6215                           ;I2C.c: 60:   I2CLCD_Stop();
  6216  0023FC  ECBB  F011         	call	_I2CLCD_Stop	;wreg free
  6217  002400  0012               	return		;funcret
  6218  002402                     __end_of_Expander_Write:
  6219                           	callstack 0
  6220                           
  6221 ;; *************** function _I2CLCD_Write *****************
  6222 ;; Defined at:
  6223 ;;		line 27 in file "I2C.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  i2c_data        1    wreg     unsigned char 
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;  i2c_data        1    1[COMRAM] unsigned char 
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  1    wreg      void 
  6230 ;; Registers used:
  6231 ;;		wreg, status,2, status,0
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6237 ;;      Params:         0       0       0       0       0       0       0       0       0
  6238 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6239 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6240 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6241 ;;Total ram usage:        2 bytes
  6242 ;; Hardware stack levels used: 1
  6243 ;; This function calls:
  6244 ;;		Nothing
  6245 ;; This function is called by:
  6246 ;;		_Expander_Write
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text40
  6251  002320                     __ptext40:
  6252                           	callstack 0
  6253  002320                     _I2CLCD_Write:
  6254                           	callstack 27
  6255                           
  6256                           ;incstack = 0
  6257                           ;I2CLCD_Write@i2c_data stored from wreg
  6258  002320  6E02               	movwf	I2CLCD_Write@i2c_data^0,c
  6259  002322                     l115:
  6260  002322  B4C7               	btfsc	199,2,c	;volatile
  6261  002324  EF96  F011         	goto	u2571
  6262  002328  EF98  F011         	goto	u2570
  6263  00232C                     u2571:
  6264  00232C  EF91  F011         	goto	l115
  6265  002330                     u2570:
  6266  002330  CFC5 F001          	movff	4037,??_I2CLCD_Write	;volatile
  6267  002334  0E1F               	movlw	31
  6268  002336  1601               	andwf	??_I2CLCD_Write^0,f,c
  6269  002338  A4D8               	btfss	status,2,c
  6270  00233A  EFA1  F011         	goto	u2581
  6271  00233E  EFA3  F011         	goto	u2580
  6272  002342                     u2581:
  6273  002342  EF91  F011         	goto	l115
  6274  002346                     u2580:
  6275  002346                     
  6276                           ;I2C.c: 30:   SSPBUF = i2c_data;
  6277  002346  C002  FFC9         	movff	I2CLCD_Write@i2c_data,4041	;volatile
  6278  00234A  0012               	return		;funcret
  6279  00234C                     __end_of_I2CLCD_Write:
  6280                           	callstack 0
  6281                           
  6282 ;; *************** function _I2CLCD_Stop *****************
  6283 ;; Defined at:
  6284 ;;		line 21 in file "I2C.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;		None
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;		None
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  1    wreg      void 
  6291 ;; Registers used:
  6292 ;;		wreg, status,2, status,0
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6298 ;;      Params:         0       0       0       0       0       0       0       0       0
  6299 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6300 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6301 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6302 ;;Total ram usage:        1 bytes
  6303 ;; Hardware stack levels used: 1
  6304 ;; This function calls:
  6305 ;;		Nothing
  6306 ;; This function is called by:
  6307 ;;		_Expander_Write
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           	psect	text41
  6312  002376                     __ptext41:
  6313                           	callstack 0
  6314  002376                     _I2CLCD_Stop:
  6315                           	callstack 27
  6316  002376                     l109:
  6317  002376  B4C7               	btfsc	199,2,c	;volatile
  6318  002378  EFC0  F011         	goto	u2551
  6319  00237C  EFC2  F011         	goto	u2550
  6320  002380                     u2551:
  6321  002380  EFBB  F011         	goto	l109
  6322  002384                     u2550:
  6323  002384  CFC5 F001          	movff	4037,??_I2CLCD_Stop	;volatile
  6324  002388  0E1F               	movlw	31
  6325  00238A  1601               	andwf	??_I2CLCD_Stop^0,f,c
  6326  00238C  A4D8               	btfss	status,2,c
  6327  00238E  EFCB  F011         	goto	u2561
  6328  002392  EFCD  F011         	goto	u2560
  6329  002396                     u2561:
  6330  002396  EFBB  F011         	goto	l109
  6331  00239A                     u2560:
  6332  00239A                     
  6333                           ;I2C.c: 24:   PEN = 1;
  6334  00239A  84C5               	bsf	4037,2,c	;volatile
  6335  00239C  0012               	return		;funcret
  6336  00239E                     __end_of_I2CLCD_Stop:
  6337                           	callstack 0
  6338                           
  6339 ;; *************** function _I2CLCD_Start *****************
  6340 ;; Defined at:
  6341 ;;		line 15 in file "I2C.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;		None
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      void 
  6348 ;; Registers used:
  6349 ;;		wreg, status,2, status,0
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6355 ;;      Params:         0       0       0       0       0       0       0       0       0
  6356 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6357 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6358 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6359 ;;Total ram usage:        1 bytes
  6360 ;; Hardware stack levels used: 1
  6361 ;; This function calls:
  6362 ;;		Nothing
  6363 ;; This function is called by:
  6364 ;;		_Expander_Write
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text42
  6369  00239E                     __ptext42:
  6370                           	callstack 0
  6371  00239E                     _I2CLCD_Start:
  6372                           	callstack 27
  6373  00239E                     l103:
  6374  00239E  B4C7               	btfsc	199,2,c	;volatile
  6375  0023A0  EFD4  F011         	goto	u2531
  6376  0023A4  EFD6  F011         	goto	u2530
  6377  0023A8                     u2531:
  6378  0023A8  EFCF  F011         	goto	l103
  6379  0023AC                     u2530:
  6380  0023AC  CFC5 F001          	movff	4037,??_I2CLCD_Start	;volatile
  6381  0023B0  0E1F               	movlw	31
  6382  0023B2  1601               	andwf	??_I2CLCD_Start^0,f,c
  6383  0023B4  A4D8               	btfss	status,2,c
  6384  0023B6  EFDF  F011         	goto	u2541
  6385  0023BA  EFE1  F011         	goto	u2540
  6386  0023BE                     u2541:
  6387  0023BE  EFCF  F011         	goto	l103
  6388  0023C2                     u2540:
  6389  0023C2                     
  6390                           ;I2C.c: 18:   SEN = 1;
  6391  0023C2  80C5               	bsf	4037,0,c	;volatile
  6392  0023C4  0012               	return		;funcret
  6393  0023C6                     __end_of_I2CLCD_Start:
  6394                           	callstack 0
  6395                           
  6396 ;; *************** function _I2CLCD_Init *****************
  6397 ;; Defined at:
  6398 ;;		line 7 in file "I2C.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  i2c_clk_freq    4   13[COMRAM] unsigned long 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;		None
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  1    wreg      void 
  6405 ;; Registers used:
  6406 ;;		wreg, status,2, status,0, cstack
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6412 ;;      Params:         4       0       0       0       0       0       0       0       0
  6413 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6414 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6415 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6416 ;;Total ram usage:        8 bytes
  6417 ;; Hardware stack levels used: 1
  6418 ;; Hardware stack levels required when called: 1
  6419 ;; This function calls:
  6420 ;;		___lldiv
  6421 ;; This function is called by:
  6422 ;;		_main
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text43
  6427  00201C                     __ptext43:
  6428                           	callstack 0
  6429  00201C                     _I2CLCD_Init:
  6430                           	callstack 29
  6431  00201C                     
  6432                           ;I2C.c: 7: void I2CLCD_Init(uint32_t i2c_clk_freq);I2C.c: 8: {;I2C.c: 9:   SSPCON1 = 0x2
      +                          8;
  6433  00201C  0E28               	movlw	40
  6434  00201E  6EC6               	movwf	198,c	;volatile
  6435                           
  6436                           ;I2C.c: 10:   SSPCON2 = 0x00;
  6437  002020  0E00               	movlw	0
  6438  002022  6EC5               	movwf	197,c	;volatile
  6439  002024                     
  6440                           ;I2C.c: 11:   SSPADD = (27000000/(4 * i2c_clk_freq)) - 1;
  6441  002024  0EC0               	movlw	192
  6442  002026  6E01               	movwf	___lldiv@dividend^0,c
  6443  002028  0EFC               	movlw	252
  6444  00202A  6E02               	movwf	(___lldiv@dividend+1)^0,c
  6445  00202C  0E9B               	movlw	155
  6446  00202E  6E03               	movwf	(___lldiv@dividend+2)^0,c
  6447  002030  0E01               	movlw	1
  6448  002032  6E04               	movwf	(___lldiv@dividend+3)^0,c
  6449  002034  C00E  F012         	movff	I2CLCD_Init@i2c_clk_freq,??_I2CLCD_Init
  6450  002038  C00F  F013         	movff	I2CLCD_Init@i2c_clk_freq+1,??_I2CLCD_Init+1
  6451  00203C  C010  F014         	movff	I2CLCD_Init@i2c_clk_freq+2,??_I2CLCD_Init+2
  6452  002040  C011  F015         	movff	I2CLCD_Init@i2c_clk_freq+3,??_I2CLCD_Init+3
  6453  002044  0E02               	movlw	2
  6454  002046                     u2425:
  6455  002046  90D8               	bcf	status,0,c
  6456  002048  3612               	rlcf	??_I2CLCD_Init^0,f,c
  6457  00204A  3613               	rlcf	(??_I2CLCD_Init+1)^0,f,c
  6458  00204C  3614               	rlcf	(??_I2CLCD_Init+2)^0,f,c
  6459  00204E  3615               	rlcf	(??_I2CLCD_Init+3)^0,f,c
  6460  002050  2EE8               	decfsz	wreg,f,c
  6461  002052  EF23  F010         	goto	u2425
  6462  002056  C012  F005         	movff	??_I2CLCD_Init,___lldiv@divisor
  6463  00205A  C013  F006         	movff	??_I2CLCD_Init+1,___lldiv@divisor+1
  6464  00205E  C014  F007         	movff	??_I2CLCD_Init+2,___lldiv@divisor+2
  6465  002062  C015  F008         	movff	??_I2CLCD_Init+3,___lldiv@divisor+3
  6466  002066  EC2E  F00E         	call	___lldiv	;wreg free
  6467  00206A  0401               	decf	?___lldiv^0,w,c
  6468  00206C  6EC8               	movwf	200,c	;volatile
  6469  00206E                     
  6470                           ;I2C.c: 12:   SSPSTAT = 0;
  6471  00206E  0E00               	movlw	0
  6472  002070  6EC7               	movwf	199,c	;volatile
  6473  002072  0012               	return		;funcret
  6474  002074                     __end_of_I2CLCD_Init:
  6475                           	callstack 0
  6476                           
  6477 ;; *************** function ___lldiv *****************
  6478 ;; Defined at:
  6479 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;  dividend        4    0[COMRAM] unsigned long 
  6482 ;;  divisor         4    4[COMRAM] unsigned long 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  quotient        4    8[COMRAM] unsigned long 
  6485 ;;  counter         1   12[COMRAM] unsigned char 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  4    0[COMRAM] unsigned long 
  6488 ;; Registers used:
  6489 ;;		wreg, status,2, status,0
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6495 ;;      Params:         8       0       0       0       0       0       0       0       0
  6496 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6498 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6499 ;;Total ram usage:       13 bytes
  6500 ;; Hardware stack levels used: 1
  6501 ;; This function calls:
  6502 ;;		Nothing
  6503 ;; This function is called by:
  6504 ;;		_I2CLCD_Init
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text44
  6509  001C5C                     __ptext44:
  6510                           	callstack 0
  6511  001C5C                     ___lldiv:
  6512                           	callstack 29
  6513  001C5C  0E00               	movlw	0
  6514  001C5E  6E09               	movwf	___lldiv@quotient^0,c
  6515  001C60  0E00               	movlw	0
  6516  001C62  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  6517  001C64  0E00               	movlw	0
  6518  001C66  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  6519  001C68  0E00               	movlw	0
  6520  001C6A  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  6521  001C6C  5005               	movf	___lldiv@divisor^0,w,c
  6522  001C6E  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  6523  001C70  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  6524  001C72  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  6525  001C74  B4D8               	btfsc	status,2,c
  6526  001C76  EF3F  F00E         	goto	u2381
  6527  001C7A  EF41  F00E         	goto	u2380
  6528  001C7E                     u2381:
  6529  001C7E  EF77  F00E         	goto	l322
  6530  001C82                     u2380:
  6531  001C82  0E01               	movlw	1
  6532  001C84  6E0D               	movwf	___lldiv@counter^0,c
  6533  001C86  EF4B  F00E         	goto	l2731
  6534  001C8A                     l2729:
  6535  001C8A  90D8               	bcf	status,0,c
  6536  001C8C  3605               	rlcf	___lldiv@divisor^0,f,c
  6537  001C8E  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  6538  001C90  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  6539  001C92  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  6540  001C94  2A0D               	incf	___lldiv@counter^0,f,c
  6541  001C96                     l2731:
  6542  001C96  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  6543  001C98  EF50  F00E         	goto	u2391
  6544  001C9C  EF52  F00E         	goto	u2390
  6545  001CA0                     u2391:
  6546  001CA0  EF45  F00E         	goto	l2729
  6547  001CA4                     u2390:
  6548  001CA4                     l2733:
  6549  001CA4  90D8               	bcf	status,0,c
  6550  001CA6  3609               	rlcf	___lldiv@quotient^0,f,c
  6551  001CA8  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  6552  001CAA  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  6553  001CAC  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  6554  001CAE  5005               	movf	___lldiv@divisor^0,w,c
  6555  001CB0  5C01               	subwf	___lldiv@dividend^0,w,c
  6556  001CB2  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6557  001CB4  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  6558  001CB6  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6559  001CB8  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  6560  001CBA  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6561  001CBC  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  6562  001CBE  A0D8               	btfss	status,0,c
  6563  001CC0  EF64  F00E         	goto	u2401
  6564  001CC4  EF66  F00E         	goto	u2400
  6565  001CC8                     u2401:
  6566  001CC8  EF6F  F00E         	goto	l2741
  6567  001CCC                     u2400:
  6568  001CCC  5005               	movf	___lldiv@divisor^0,w,c
  6569  001CCE  5E01               	subwf	___lldiv@dividend^0,f,c
  6570  001CD0  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6571  001CD2  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  6572  001CD4  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6573  001CD6  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  6574  001CD8  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6575  001CDA  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  6576  001CDC  8009               	bsf	___lldiv@quotient^0,0,c
  6577  001CDE                     l2741:
  6578  001CDE  90D8               	bcf	status,0,c
  6579  001CE0  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  6580  001CE2  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  6581  001CE4  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  6582  001CE6  3205               	rrcf	___lldiv@divisor^0,f,c
  6583  001CE8  2E0D               	decfsz	___lldiv@counter^0,f,c
  6584  001CEA  EF52  F00E         	goto	l2733
  6585  001CEE                     l322:
  6586  001CEE  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6587  001CF2  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6588  001CF6  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6589  001CFA  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6590  001CFE  0012               	return		;funcret
  6591  001D00                     __end_of___lldiv:
  6592                           	callstack 0
  6593                           
  6594                           	psect	rparam
  6595  0000                     
  6596                           	psect	idloc
  6597                           
  6598                           ;Config register IDLOC0 @ 0x200000
  6599                           ;	unspecified, using default values
  6600  200000                     	org	2097152
  6601  200000  FF                 	db	255
  6602                           
  6603                           ;Config register IDLOC1 @ 0x200001
  6604                           ;	unspecified, using default values
  6605  200001                     	org	2097153
  6606  200001  FF                 	db	255
  6607                           
  6608                           ;Config register IDLOC2 @ 0x200002
  6609                           ;	unspecified, using default values
  6610  200002                     	org	2097154
  6611  200002  FF                 	db	255
  6612                           
  6613                           ;Config register IDLOC3 @ 0x200003
  6614                           ;	unspecified, using default values
  6615  200003                     	org	2097155
  6616  200003  FF                 	db	255
  6617                           
  6618                           ;Config register IDLOC4 @ 0x200004
  6619                           ;	unspecified, using default values
  6620  200004                     	org	2097156
  6621  200004  FF                 	db	255
  6622                           
  6623                           ;Config register IDLOC5 @ 0x200005
  6624                           ;	unspecified, using default values
  6625  200005                     	org	2097157
  6626  200005  FF                 	db	255
  6627                           
  6628                           ;Config register IDLOC6 @ 0x200006
  6629                           ;	unspecified, using default values
  6630  200006                     	org	2097158
  6631  200006  FF                 	db	255
  6632                           
  6633                           ;Config register IDLOC7 @ 0x200007
  6634                           ;	unspecified, using default values
  6635  200007                     	org	2097159
  6636  200007  FF                 	db	255
  6637                           
  6638                           	psect	config
  6639                           
  6640                           ;Config register CONFIG1L @ 0x300000
  6641                           ;	PLL Prescaler Selection bits
  6642                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  6643                           ;	System Clock Postscaler Selection bits
  6644                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  6645                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  6646                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  6647  300000                     	org	3145728
  6648  300000  00                 	db	0
  6649                           
  6650                           ;Config register CONFIG1H @ 0x300001
  6651                           ;	Oscillator Selection bits
  6652                           ;	FOSC = HS, HS oscillator (HS)
  6653                           ;	Fail-Safe Clock Monitor Enable bit
  6654                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6655                           ;	Internal/External Oscillator Switchover bit
  6656                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6657  300001                     	org	3145729
  6658  300001  0C                 	db	12
  6659                           
  6660                           ;Config register CONFIG2L @ 0x300002
  6661                           ;	Power-up Timer Enable bit
  6662                           ;	PWRT = ON, PWRT enabled
  6663                           ;	Brown-out Reset Enable bits
  6664                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6665                           ;	Brown-out Reset Voltage bits
  6666                           ;	BORV = 3, Minimum setting 2.05V
  6667                           ;	USB Voltage Regulator Enable bit
  6668                           ;	VREGEN = OFF, USB voltage regulator disabled
  6669  300002                     	org	3145730
  6670  300002  1E                 	db	30
  6671                           
  6672                           ;Config register CONFIG2H @ 0x300003
  6673                           ;	Watchdog Timer Enable bit
  6674                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6675                           ;	Watchdog Timer Postscale Select bits
  6676                           ;	WDTPS = 32768, 1:32768
  6677  300003                     	org	3145731
  6678  300003  1E                 	db	30
  6679                           
  6680                           ; Padding undefined space
  6681  300004                     	org	3145732
  6682  300004  FF                 	db	255
  6683                           
  6684                           ;Config register CONFIG3H @ 0x300005
  6685                           ;	CCP2 MUX bit
  6686                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  6687                           ;	PORTB A/D Enable bit
  6688                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6689                           ;	Low-Power Timer 1 Oscillator Enable bit
  6690                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6691                           ;	MCLR Pin Enable bit
  6692                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6693  300005                     	org	3145733
  6694  300005  81                 	db	129
  6695                           
  6696                           ;Config register CONFIG4L @ 0x300006
  6697                           ;	Stack Full/Underflow Reset Enable bit
  6698                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6699                           ;	Single-Supply ICSP Enable bit
  6700                           ;	LVP = OFF, Single-Supply ICSP disabled
  6701                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  6702                           ;	ICPRT = OFF, ICPORT disabled
  6703                           ;	Extended Instruction Set Enable bit
  6704                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6705                           ;	Background Debugger Enable bit
  6706                           ;	DEBUG = 0x1, unprogrammed default
  6707  300006                     	org	3145734
  6708  300006  81                 	db	129
  6709                           
  6710                           ; Padding undefined space
  6711  300007                     	org	3145735
  6712  300007  FF                 	db	255
  6713                           
  6714                           ;Config register CONFIG5L @ 0x300008
  6715                           ;	Code Protection bit
  6716                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  6717                           ;	Code Protection bit
  6718                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  6719                           ;	Code Protection bit
  6720                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  6721                           ;	Code Protection bit
  6722                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  6723  300008                     	org	3145736
  6724  300008  0F                 	db	15
  6725                           
  6726                           ;Config register CONFIG5H @ 0x300009
  6727                           ;	Boot Block Code Protection bit
  6728                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  6729                           ;	Data EEPROM Code Protection bit
  6730                           ;	CPD = OFF, Data EEPROM is not code-protected
  6731  300009                     	org	3145737
  6732  300009  C0                 	db	192
  6733                           
  6734                           ;Config register CONFIG6L @ 0x30000A
  6735                           ;	Write Protection bit
  6736                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  6737                           ;	Write Protection bit
  6738                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  6739                           ;	Write Protection bit
  6740                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  6741                           ;	Write Protection bit
  6742                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  6743  30000A                     	org	3145738
  6744  30000A  0F                 	db	15
  6745                           
  6746                           ;Config register CONFIG6H @ 0x30000B
  6747                           ;	Configuration Register Write Protection bit
  6748                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  6749                           ;	Boot Block Write Protection bit
  6750                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  6751                           ;	Data EEPROM Write Protection bit
  6752                           ;	WRTD = OFF, Data EEPROM is not write-protected
  6753  30000B                     	org	3145739
  6754  30000B  E0                 	db	224
  6755                           
  6756                           ;Config register CONFIG7L @ 0x30000C
  6757                           ;	Table Read Protection bit
  6758                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6759                           ;	Table Read Protection bit
  6760                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6761                           ;	Table Read Protection bit
  6762                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6763                           ;	Table Read Protection bit
  6764                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  6765  30000C                     	org	3145740
  6766  30000C  0F                 	db	15
  6767                           
  6768                           ;Config register CONFIG7H @ 0x30000D
  6769                           ;	Boot Block Table Read Protection bit
  6770                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  6771  30000D                     	org	3145741
  6772  30000D  40                 	db	64
  6773                           tosu	equ	0xFFF
  6774                           tosh	equ	0xFFE
  6775                           tosl	equ	0xFFD
  6776                           stkptr	equ	0xFFC
  6777                           pclatu	equ	0xFFB
  6778                           pclath	equ	0xFFA
  6779                           pcl	equ	0xFF9
  6780                           tblptru	equ	0xFF8
  6781                           tblptrh	equ	0xFF7
  6782                           tblptrl	equ	0xFF6
  6783                           tablat	equ	0xFF5
  6784                           prodh	equ	0xFF4
  6785                           prodl	equ	0xFF3
  6786                           indf0	equ	0xFEF
  6787                           postinc0	equ	0xFEE
  6788                           postdec0	equ	0xFED
  6789                           preinc0	equ	0xFEC
  6790                           plusw0	equ	0xFEB
  6791                           fsr0h	equ	0xFEA
  6792                           fsr0l	equ	0xFE9
  6793                           wreg	equ	0xFE8
  6794                           indf1	equ	0xFE7
  6795                           postinc1	equ	0xFE6
  6796                           postdec1	equ	0xFE5
  6797                           preinc1	equ	0xFE4
  6798                           plusw1	equ	0xFE3
  6799                           fsr1h	equ	0xFE2
  6800                           fsr1l	equ	0xFE1
  6801                           bsr	equ	0xFE0
  6802                           indf2	equ	0xFDF
  6803                           postinc2	equ	0xFDE
  6804                           postdec2	equ	0xFDD
  6805                           preinc2	equ	0xFDC
  6806                           plusw2	equ	0xFDB
  6807                           fsr2h	equ	0xFDA
  6808                           fsr2l	equ	0xFD9
  6809                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    0
    Data        1
    BSS         92
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     29     124
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), UID(BANK0[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), UID(BANK0[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> data_buffer(BANK0[16]), temp(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S836$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S836$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    MFRC522_ReadCardSerial@str	PTR unsigned char  size(2) Largest target is 16
		 -> UID(BANK0[16]), 

    MFRC522_IsCard@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType(BANK0[1]), 

    MFRC522_AntiColl@serNum	PTR unsigned char  size(2) Largest target is 16
		 -> UID(BANK0[16]), 

    MFRC522_CRC@dataOut	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_CRC@dataIn	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_Request@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType(BANK0[1]), 

    MFRC522_ToCard@backData	PTR unsigned char  size(2) Largest target is 16
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), UID(BANK0[16]), TagType(BANK0[1]), 

    MFRC522_ToCard@backLen	PTR unsigned int  size(2) Largest target is 2
		 -> MFRC522_AntiColl@unLen(COMRAM[2]), MFRC522_Halt@unLen(COMRAM[2]), MFRC522_SelectTag@recvBits(COMRAM[2]), MFRC522_Request@backBits(COMRAM[2]), 

    MFRC522_ToCard@sendData	PTR unsigned char  size(2) Largest target is 16
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), UID(BANK0[16]), TagType(BANK0[1]), 

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 16
		 -> data_buffer(BANK0[16]), temp(BANK0[16]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _MFRC522_ReadCardSerial->_MFRC522_AntiColl
    _MFRC522_AntiColl->_MFRC522_ToCard
    _MFRC522_IsCard->_MFRC522_Request
    _MFRC522_Request->_MFRC522_ToCard
    _MFRC522_Reset->_MFRC522_Wr
    _MFRC522_AntennaOn->_MFRC522_Set_Bit
    _MFRC522_AntennaOff->_MFRC522_Clear_Bit
    _MFRC522_Halt->_MFRC522_ToCard
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_ToCard->_MFRC522_Set_Bit
    _MFRC522_CRC->_MFRC522_Clear_Bit
    _MFRC522_CRC->_MFRC522_Set_Bit
    _MFRC522_Set_Bit->_MFRC522_Rd
    _MFRC522_Clear_Bit->_MFRC522_Rd
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble
    _LCD_Write_Nibble->_Expander_Write
    _Expander_Write->_I2CLCD_Write
    _I2CLCD_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   72732
                                             92 COMRAM     2     2      0
                                             25 BANK0      4     4      0
                        _I2CLCD_Init
                          _LCD_Begin
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                   _MFRC522_AntiColl
                       _MFRC522_Halt
                       _MFRC522_Init
                     _MFRC522_IsCard
             _MFRC522_ReadCardSerial
                          _port_Init
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   12048
                                              6 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11391
                                             90 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   11032
                                             63 COMRAM    27    21      6
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    24     11    4647
                                             27 COMRAM    35    24     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              6     4      2     388
                                              6 COMRAM     6     4      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4814
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     394
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MFRC522_ReadCardSerial                               3     1      2   12065
                                             39 COMRAM     2     0      2
                   _MFRC522_AntiColl
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntiColl                                     8     6      2   11922
                                             31 COMRAM     8     6      2
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_IsCard                                       2     0      2    9592
                                             37 COMRAM     2     0      2
                    _MFRC522_Request
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Request                                      6     4      2    9494
                                             31 COMRAM     6     4      2
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Init                                         0     0      0    7318
                 _MFRC522_AntennaOff
                  _MFRC522_AntennaOn
                      _MFRC522_Reset
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Reset                                        0     0      0    1453
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOn                                    1     1      0    2174
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOff                                   0     0      0    2238
                  _MFRC522_Clear_Bit
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Halt                                         6     6      0   16650
                                             31 COMRAM     6     6      0
                        _MFRC522_CRC
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
 ---------------------------------------------------------------------------------
 (3) _MFRC522_ToCard                                      19    12      7    7783
                                             12 COMRAM    19    12      7
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_CRC                                          7     2      5    6480
                                             12 COMRAM     7     2      5
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit                                      3     2      1    2010
                                              9 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit                                    3     2      1    2238
                                              9 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr                                           5     4      1    1453
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd                                           9     9      0     163
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            6     4      2     710
                                              4 COMRAM     6     4      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Goto                                             4     3      1     797
                                              6 COMRAM     4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     375
                                              6 COMRAM     3     3      0
                     _Expander_Write
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              2     2      0     282
                                              4 COMRAM     2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Nibble                                     1     1      0     158
                                              3 COMRAM     1     1      0
                     _Expander_Write
 ---------------------------------------------------------------------------------
 (3) _Expander_Write                                       1     1      0      62
                                              2 COMRAM     1     1      0
                       _I2CLCD_Start
                        _I2CLCD_Stop
                       _I2CLCD_Write
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Write                                         2     2      0      31
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Stop                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Start                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2CLCD_Init                                          8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2CLCD_Init
     ___lldiv
   _LCD_Begin
     _Expander_Write
       _I2CLCD_Start
       _I2CLCD_Stop
       _I2CLCD_Write
     _LCD_Cmd
       _LCD_Write_Nibble
         _Expander_Write
   _LCD_Cmd
   _LCD_Goto
     _LCD_Cmd
   _LCD_Print
     _LCD_Write_Nibble
   _MFRC522_AntiColl
     _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Wr
     _MFRC522_ToCard
       _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Set_Bit
         _MFRC522_Rd
         _MFRC522_Wr
       _MFRC522_Wr
     _MFRC522_Wr
   _MFRC522_Halt
     _MFRC522_CRC
       _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Set_Bit
       _MFRC522_Wr
     _MFRC522_Clear_Bit
     _MFRC522_ToCard
   _MFRC522_Init
     _MFRC522_AntennaOff
       _MFRC522_Clear_Bit
     _MFRC522_AntennaOn
       _MFRC522_Rd
       _MFRC522_Set_Bit
     _MFRC522_Reset
       _MFRC522_Wr
     _MFRC522_Wr
   _MFRC522_IsCard
     _MFRC522_Request
       _MFRC522_ToCard
       _MFRC522_Wr
   _MFRC522_ReadCardSerial
     _MFRC522_AntiColl
   _port_Init
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _xtoa
           _isalpha
           _isupper
           _pad
           _toupper
             _islower
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     1D      7C       5       77.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITBIGSFRhhhh       36      0       0      20        0.0%
BITBIGSFRhhlh       2F      0       0      21        0.0%
BITBIGSFRll         23      0       0      26        0.0%
BITBIGSFRlh          6      0       0      25        0.0%
BITBIGSFRhlh         6      0       0      23        0.0%
BITBIGSFRhhll        1      0       0      22        0.0%
BITBIGSFRhll         1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DA      27        0.0%
DATA                 0      0      DA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Mar 22 18:20:52 2022

                   MFRC522_Rd@i 0008                    MFRC522_CRC@i 0013                    MFRC522_CRC@n 0012  
                   MFRC522_Wr@i 0005                              l60 148C                              l67 2466  
                            _RS 06D0                             l100 2072                             l103 239E  
                           l111 239A                             l112 239C                             l200 241A  
                           l105 23C2                             l106 23C4                             l115 2322  
                           l203 2432                             l212 2460                             l109 2376  
                           l117 2346                             l118 234A                             l142 22BC  
                           l206 2374                             l231 12B8                             l215 1FC2  
                           l209 2444                             l322 1CEE                             l139 2400  
                           l243 12BA                             l227 1118                             l148 2110  
                           l157 1E9C                             l166 1BA6                             l190 1AF0  
                           l238 1260                             l246 1F02                             l422 17BA  
                           l255 1D52                             l280 2454                             l272 1C58  
                           l329 1CFE                             l169 18A8                             l249 1F04  
                           l409 1656                             l259 1D9E                             l188 1AB0  
                           l196 1E2E                             l276 1C5A                             l189 1AEA  
                           l197 1E32                             l269 201A                             l285 23E2  
                           l973 20C4                             _PEN 007E2A                             _SEN 007E28  
                           _UID 009B                             _abs 219A                             _led 0068  
                           _pad 1974                             wreg 000FE8                  ??_MFRC522_Halt 0020  
                ??_MFRC522_Init 000D                 __end_of_LCD_Cmd 2112                            l1011 1A38  
                          l1006 19BA                            l1111 1972                            l1009 19FC  
                          l1017 08B0                            l1122 2468                            l1042 0B2A  
                          l1019 08B8                            ?_abs 0013                            l1044 0B32  
                          l2101 192C                            l1037 0AF0                            l1133 214C  
                          l1061 0D30                            l1142 224C                            l1070 102C  
                          l1119 2198                            l2111 22E6                            l1063 0D94  
                          l1128 22F2                            l1136 2154                            l1080 1F66  
                          l2201 1DEE                            l2121 2178                            l2105 22BE  
                          l1090 2214                            l3003 239E                            l3011 2322  
                          l2211 1E1C                            l2115 2156                            l2107 22CA  
                          l2123 2216                            l1084 21D0                            l3005 23AC  
                          l3013 2330                            l3021 229A                            l2141 1A44  
                          l2213 1E1E                            l2205 1DF2                            l2221 1502  
                          l2117 2162                            l2109 22CE                            l2301 19A6  
                          l3101 12DE                            l3007 2376                            l3015 23E6  
                          l3023 22A0                            l3031 20C8                            l2143 1A46  
                          l2207 1E14                            l2231 1544                            l2223 1506  
                          l2215 14D0                            l1087 21D8                            l2119 2174  
                          l2311 1A0C                            l2303 19B2                            l1079 1F5E  
                          l3111 1322                            l3103 12F4                            l1096 2284  
                          l3009 2384                            l3025 22A8                            l3017 2288  
                          l3033 20CC                            l3041 17BE                            l2161 1A90  
                          l2153 1A64                            l2145 1A48                            l2209 1E1A  
                          l2241 159E                            l2233 1562                            l2225 1514  
                          l2217 14D4                            l2313 1A20                            l2305 19C6  
                          l2401 0A8C                            l2321 224E                            l3121 1352  
                          l3113 1328                            l3105 12FE                            l3027 22AE  
                          l3019 2292                            l3035 20DE                            l3051 1808  
                          l3043 17C2                            l2171 1AB8                            l2163 1AA8  
                          l2155 1A86                            l2147 1A5C                            l2139 1A3C  
                          l2243 15CC                            l2235 156A                            l2251 1606  
                          l2227 1534                            l2219 14E2                            l2091 18AA  
                          l2307 19DA                            l2403 0A92                            l2411 0AC8  
                          l3131 13D2                            l3123 1370                            l3115 132A  
                          l3107 130A                            l3029 22B6                            l3037 20EE  
                          l3061 1854                            l3053 180E                            l3045 17C8  
                          l2173 1AD0                            l2157 1A88                            l2181 1DA2  
                          l2341 2404                            l3213 106C                            l2253 1616  
                          l2245 15EC                            l2237 157E                            l2229 1538  
                          l2261 165C                            l2317 219A                            l2093 18BC  
                          l2309 19DE                            l2405 0AA4                            l2325 21DA  
                          l2333 2112                            l2421 0B1E                            l3133 13E6  
                          l3125 1380                            l3117 1336                            l3109 130C  
                          l3039 2100                            l3063 1872                            l3055 1822  
                          l3047 17E6                            l3215 1E7E                            l3071 1E46  
                          l2175 1AD2                            l2159 1A8E                            l2191 1DB2  
                          l2183 1DA6                            l2343 2404                            l2351 2426  
                          l2511 10CE                            l2503 1058                            l2255 1636  
                          l2247 15EE                            l2239 158C                            l2271 16BC  
                          l2263 166A                            l2319 21B4                            l2095 18CE  
                          l2407 0AB0                            l2335 2140                            l2431 0B80  
                          l2423 0B48                            l2415 0AF2                            l3151 1470  
                          l3135 1410                            l3127 1394                            l3119 1342  
                          l3065 188A                            l3057 1830                            l3049 17F4  
                          l3073 1E52                            l2177 1AEE                            l2169 1AB2  
                          l2193 1DD4                            l2185 1DAE                            l2345 240C  
                          l2521 1114                            l2513 10D2                            l2505 1082  
                          l2249 1600                            l2281 1732                            l2273 16DA  
                          l2265 168A                            l2097 18D8                            l2409 0AB8  
                          l2361 0888                            l2353 0810                            l2329 2112  
                          l2433 0B86                            l2425 0B50                            l2417 0B02  
                          l2601 0F04                            l3153 148E                            l3145 1434  
                          l3137 141A                            l3129 13C2                            l3059 184E  
                          l3075 1E5E                            l3067 1E36                            l3091 1B6A  
                          l3083 1AF2                            l2195 1DDA                            l2347 241E  
                          l2531 115A                            l2523 1120                            l2515 10EE  
                          l2507 10AC                            l2291 179A                            l2283 1752  
                          l2275 16E2                            l2267 168E                            l2259 1658  
                          l2099 18F6                            l2371 08E0                            l2363 088A  
                          l2355 0830                            l2451 0C24                            l2443 0BC6  
                          l2435 0B8E                            l2427 0B70                            l2419 0B04  
                          l2611 0FAE                            l2603 0F12                            l3147 145E  
                          l3139 142C                            l3155 14AA                            l3069 1E3A  
                          l3077 1E6A                            l3085 1AF6                            l2197 1DDC  
                          l2349 241E                            l2701 1D14                            l2541 11A8  
                          l2533 1164                            l2525 1126                            l2517 10F8  
                          l2509 10B8                            l2285 1764                            l2277 16F6  
                          l2269 169C                            l2381 097E                            l2373 08E6  
                          l2365 08A4                            l2357 0858                            l2453 0C38  
                          l2437 0BAA                            l2461 0CB2                            l2429 0B78  
                          l2621 0FEA                            l2613 0FBC                            l2605 0F4E  
                          l3157 14C2                            l3149 146A                            l3093 12BC  
                          l3087 1AFE                            l2199 1DDE                            l2711 1D46  
                          l2703 1D1C                            l2551 1224                            l2543 11AC  
                          l2535 1176                            l2527 1138                            l2519 110A  
                          l2279 1704                            l2287 176A                            l2295 1974  
                          l2391 0A26                            l2383 0984                            l2375 08EE  
                          l2367 08C0                            l2359 0878                            l2471 0D40  
                          l2463 0CCE                            l2455 0C48                            l2439 0BBA  
                          l2615 0FD0                            l3159 14C4                            l3095 12C0  
                          l3089 1B68                            l2721 1D7A                            l2713 1D50  
                          l2705 1D2E                            l2561 126C                            l2553 1238  
                          l2545 11BE                            l2537 1190                            l2529 1146  
                          l2289 177A                            l2297 1984                            l2393 0A40  
                          l2385 098A                            l2377 08F6                            l2369 08D2  
                          l2473 0D46                            l2465 0CEC                            l2457 0C4E  
                          l2449 0BF2                            l2609 0F8A                            l2625 0FF6  
                          l3097 12D4                            l2731 1C96                            l2723 1C5C  
                          l2715 1D5A                            l2707 1D32                            l2563 1280  
                          l2555 1248                            l2547 11D0                            l2539 1194  
                          l2651 1BD2                            l2643 1BA8                            l2299 1998  
                          l2395 0A5A                            l2379 08FC                            l2387 09EE  
                          l2475 0D56                            l2467 0D06                            l2459 0C54  
                          l2627 101A                            l2619 0FDC                            l3099 12DA  
                          l2741 1CDE                            l2733 1CA4                            l2725 1C6C  
                          l2717 1D5C                            l2709 1D34                            l2565 1284  
                          l2557 124C                            l2549 11E0                            l2653 1BDC  
                          l2645 1BAC                            l2389 0A08                            l2397 0A6A  
                          l2477 0D6C                            l2469 0D20                            l2581 0DC8  
                          l2743 1CE8                            l2735 1CAE                            l2727 1C82  
                          l2719 1D6C                            l2567 12A0                            l2559 125C  
                          l2495 1030                            l2671 1C54                            l2663 1C14  
                          l2655 1C00                            l2647 1BB6                            l2823 23C6  
                          l2399 0A7C                            l2591 0E6E                            l2583 0DDA  
                          l2751 1F42                            l2737 1CCC                            l2729 1C8A  
                          l2569 12B4                            l2497 1040                            l2681 2434  
                          l2817 2446                            l2665 1C24                            l2657 1C10  
                          l2649 1BC2                            l2825 23D2                            l2753 2462  
                          l2585 0DDE                            l2577 0D96                            l2745 1F06  
                          l2841 20B2                            l2833 2074                            l2739 1CDC  
                          l2755 201C                            l2499 104C                            l2851 1FEE  
                          l2683 2456                            l2675 234C                            l2691 1EDA  
                          l2667 1C26                            l2595 0EA6                            l2587 0E02  
                          l2579 0DBA                            l2747 1F0E                            l2835 2086  
                          l2757 2024                            l2853 2010                            l2845 1FC4  
                          l2677 2364                            l2693 1EEA                            l2685 1EA0  
                          l2669 1C36                            l2597 0ECA                            l2589 0E26  
                          l2749 1F1C                            l2837 208E                            ?_pad 0011  
                          l2759 206E                            l2847 1FCC                            l2679 236E  
                          l2695 1EFE                            l2687 1EAA                            l2599 0EEE  
                          l2839 2096                            l2849 1FE4                            l2689 1EB6  
                          l2699 1D00                            l2787 1F68                            l2789 1F7A  
             ?_LCD_Write_Nibble 0001                            STR_1 0801                            STR_2 080C  
                          STR_3 080C                            STR_4 0809                            u2000 0BF2  
                          u2001 0BEE                            u2010 0C24                            u2011 0C20  
                          u2100 110A                            u2020 0C8C                            u2101 1106  
                          u2110 1138                            u2030 0CCE                            u2111 1134  
                          u2031 0CCA                            u2200 125C                            u2120 1146  
                          u1400 2248                            u2040 0CEC                            u2201 1258  
                          u2121 1142                            u2041 0CE8                            u2025 0C7A  
                          u2210 12A0                            u2130 115A                            u1330 18BC  
                          u2050 0D06                            u2211 129C                            u2131 1156  
                          u1331 18B8                            u2051 0D02                            u1500 1ACA  
                          u2140 1176                            u2300 1C10                            u1340 18CE  
                          u2060 0D20                            u2220 0DBA                            u1501 1AC2  
                          u2141 1172                            u2301 1C0C                            u1341 18CA  
                          u2061 0D1C                            u2221 0DB6                            u1510 1AEA  
                          u2150 1190                            u2310 1C36                            u1350 18F6  
                          u2070 0D30                            u2230 0E02                            u1511 1AE6  
                          u2151 118C                            u2311 1C32                            u1351 18F2  
                          u2071 0D2C                            u2231 0DFE                            u2400 1CCC  
                          u1520 1DC4                            u2160 11A8                            u2320 1C54  
                          u1360 192C                            u2080 0D40                            u2240 0E26  
                          u2401 1CC8                            u1521 1DBC                            u2161 11A4  
                          u2321 1C50                            u1601 153E                            u1361 1928  
                          u2081 0D3C                            u2241 0E22                            u2170 11BE  
                          u2090 10EE                            u2330 1EEA                            u1610 1562  
                          u1370 22E6                            u2250 0ECA                            u2410 1F5E  
                          u2171 11BA                            u2091 10EA                            u2331 1EE6  
                          u1611 155E                            u1371 22E2                            u2251 0EC6  
                          u2411 1F5A                            u1508 1ACC                            u1540 1DEE  
                          u2180 11E0                            u2340 1EFE                            u1620 158C  
                          u1700 177A                            u1380 2198                            u2260 0EEE  
                          u1541 1DEA                            u2181 11DC                            u2341 1EFA  
                          u1621 1588                            u1701 1776                            u1381 2194  
                          u2261 0EEA                            u1470 1A76                            u1550 1E04  
                          u2350 1D46                            u2190 1248                            u1630 15CC  
                          u1710 1984                            u1390 2246                            u2270 0FAE  
                          u1471 1A6E                            u1551 1DFC                            u2351 1D42  
                          u2191 1244                            u1631 15C8                            u1711 1980  
                          u1391 2240                            u2271 0FAA                            u2600 2100  
                          u2360 1D6C                            u1640 1616                            u1720 19A6  
                          u1800 2140                            u2425 2046                            u2601 20FC  
                          u2361 1D68                            u1641 1612                            u1721 19A2  
                          u1801 213C                            u2530 23AC                            u2610 1B2A  
                          u1490 1AA8                            u1570 1E2E                            u1538 1DC6  
                          u2370 1D7A                            u1650 166A                            u1730 19FC  
                          u1810 0840                            u2531 23A8                            u1491 1AA4  
                          u1571 1E2A                            u2371 1D76                            u1651 1666  
                          u1731 19F8                            u1811 083A                            u2380 1C82  
                          u2540 23C2                            u2620 1B5C                            u1580 14E2  
                          u1660 169C                            u1740 1A0C                            u1900 0A40  
                          u1820 0842                            u2381 1C7E                            u2541 23BE  
                          u1581 14DE                            u1661 1698                            u1741 1A08  
                          u1901 0A3C                            u2390 1CA4                            u2550 2384  
                          u2630 1B96                            u1590 1514                            u1670 16DA  
                          u1750 21B4                            u1910 0A5A                            u1830 0858  
                          u2391 1CA0                            u2551 2380                            u1591 1510  
                          u1671 16D6                            u1751 21B0                            u1911 0A56  
                          u1831 0854                            u2560 239A                            u2640 1BA6  
                          u1488 1A78                            u1568 1E06                            u1680 1704  
                          u1920 0A6A                            u1840 0888                            u1760 227E  
                          u2561 2396                            u2641 1BA2                            u2617 1B20  
                          u1681 1700                            u1921 0A66                            u1841 0884  
                          u1761 2278                            u2570 2330                            u1690 1732  
                          u1930 0A7C                            u1850 08A4                            u1770 2280  
                          u2650 1370                            u2571 232C                            u2627 1B52  
                          u1691 172E                            u1931 0A78                            u1851 08A0  
                          u2707 1498                            u2651 136C                            u2580 2346  
                          u1940 0A8C                            u1860 08D2                            u1780 220E  
                          u2660 142C                            u2581 2342                            u2637 1B8C  
                          u1941 0A88                            u1861 08CE                            u1781 2208  
                          u2717 14B4                            u2661 1428                            u2590 20EE  
                          u1950 0AA4                            u1870 08E0                            u1790 2210  
                          u2670 148C                            u2591 20EA                            u2807 189A  
                          u2727 17D2                            u1951 0AA0                            u1871 08DC  
                          u2671 1488                            u1880 0A08                            u1960 0B02  
                          u2817 2106                            u2737 17EC                            u1881 0A04  
                          u1961 0AFE                            u1890 0A26                            u1970 0B1E  
                          u2827 22B8                            u2747 1800                            u1891 0A22  
                          u1971 0B1A                            u1980 0B48                            u2757 1814  
                          u1981 0B44                            u1990 0BAA                            u2767 1828  
                          u1991 0BA6                            u2687 12E8                            u2777 1840  
                          u2697 1316                            u2787 185E                            _RCEN 007E2B  
                          u2797 187C                            _RSEN 007E29              ??_LCD_Write_Nibble 0004  
                          abs@a 0013                            _dbuf 006B                            _main 12BC  
                          _dtoa 0810                            _prec 0064                            _temp 008B  
         MFRC522_AntiColl@unLen 0024                            _nout 0060                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001A                            fsr2l 000FD9                            _xtoa 0AF2  
                          prodh 000FF4                            prodl 000FF3                            start 0000  
              _MFRC522_AntiColl 1BA8                     LCD_Goto@col 000A                     LCD_Goto@row 0007  
                  ___param_bank 000000                 ??_MFRC522_Reset 0006                           ??_abs 0015  
                         ??_pad 0017                __end_of_LCD_Goto 1E9E                 __end_of___aodiv 1658  
                         ?_main 0001                           ?_dtoa 001C                 __end_of___aomod 17BC  
                         _ACKEN 007E2C                           _ACKDT 007E2D         ?_MFRC522_ReadCardSerial 0028  
               __end_of___lldiv 1D00                           ?_xtoa 001C                           _LATB7 007C57  
                  vfpfcnvrt@fmt 0042                    vfpfcnvrt@llu 0052                           _flags 0066  
                         _fputc 18AA                 __end_of_isalpha 2216                           _fputs 2156  
        MFRC522_AntiColl@serNum 0020                           pad@fp 0011                           _width 0062  
                         _putch 2468                           main@i 00D7                           dtoa@d 001E  
                         dtoa@i 003E                           dtoa@n 0036                           dtoa@p 0030  
                         dtoa@s 0034                           dtoa@w 0032                 __end_of_islower 224E  
               __end_of_isupper 2286                           tablat 000FF5               _MFRC522_Clear_Bit 2402  
                         status 000FD8                 __end_of_sprintf 20C6                           xtoa@c 003D  
                         xtoa@d 001E                           xtoa@i 003B                           xtoa@n 0033  
                         xtoa@p 002F                           xtoa@w 0031                           xtoa@x 0026  
            ?_MFRC522_Clear_Bit 000A                 __end_of_toupper 2156               _MFRC522_AntennaOn 2434  
               __initialization 22F4                    __end_of_main 14D0                    __end_of_dtoa 0AF2  
            ?_MFRC522_AntennaOn 0001             ??_MFRC522_Clear_Bit 000B                    __end_of_xtoa 0D96  
              ??_MFRC522_IsCard 0028       MFRC522_ReadCardSerial@str 0028  __end_of_MFRC522_ReadCardSerial 23E4  
              ??_MFRC522_ToCard 0014                          ??_main 005D                          ??_dtoa 0026  
           ??_MFRC522_AntennaOn 000D               __end_of_LCD_Begin 18AA                          ??_xtoa 0027  
                 __activetblptr 000002                       ??_LCD_Cmd 0005                 MFRC522_ToCard@i 001D  
               MFRC522_ToCard@n 001F           MFRC522_ToCard@backLen 0012               __end_of_LCD_Print 1BA8  
            MFRC522_Rd@ucResult 0006                 MFRC522_Wr@value 0001       __end_of_MFRC522_Clear_Bit 241C  
         MFRC522_ToCard@_status 0019           MFRC522_ToCard@command 001C                          ?_fputc 0001  
                        ?_fputs 000A                          ?_putch 0001           MFRC522_ToCard@sendLen 000F  
         MFRC522_ToCard@waitIRq 0018                          _SSPADD 000FC8                          _TRISB7 007C9F  
                        _SSPBUF 000FC9       __end_of_MFRC522_AntennaOn 2446                    vfprintf@cfmt 005B  
                     ??___aodiv 0011                       ??___aomod 0011            __end_of_MFRC522_Halt 201C  
          __end_of_MFRC522_Init 1FC4         MFRC522_AntiColl@_status 0026                       ??___lldiv 0009  
                        clear_0 2310                          isa$std 000001                          pad@buf 0013  
                        _status 006A                          dtoa@fp 001C                          _strlen 22BE  
                        fputc@c 0001                          fputs@c 000E                          fputs@i 000F  
                        fputs@s 000A                       ??_isalpha 0003                       ??_islower 0003  
                  __mediumconst 0000                          tblptrh 000FF7                       ??_isupper 0003  
                        tblptrl 000FF6                          tblptru 000FF8                          putch@c 0001  
              __end_of_vfprintf 1F68                       ??_sprintf 005D                          xtoa@fp 001C  
                     ??_toupper 0009                      __accesstop 0060         __end_of__initialization 2316  
                     ?_LCD_Goto 0007                   ___rparam_used 000001          MFRC522_Request@TagType 0020  
                  ??_MFRC522_Rd 0001                    ??_MFRC522_Wr 0002              _MFRC522_AntennaOff 2456  
       I2CLCD_Init@i2c_clk_freq 000E                   _backlight_val 00DB                  __pcstackCOMRAM 0001  
                  __pidataBANK0 246A                   ??_I2CLCD_Init 0012                   ??_I2CLCD_Stop 0001  
           ?_MFRC522_AntennaOff 0001                   __end_of_fputc 1974                   __end_of_fputs 219A  
                LCD_Cmd@Command 0006                   __end_of_putch 246A                MFRC522_Halt@buff 0020  
        MFRC522_Request@_status 0023                MFRC522_Rd@ucAddr 0004          MFRC522_Request@reqMode 0022  
      __end_of_MFRC522_AntiColl 1C5C               ??_MFRC522_Set_Bit 000B              __end_of_MFRC522_Rd 1AF2  
            __end_of_MFRC522_Wr 1E34               ??_MFRC522_Request 0022                         ??_fputc 0005  
                       ??_fputs 000E            ??_MFRC522_AntennaOff 000D                         ??_putch 0001  
                    __pbssBANK0 0060                      ??_LCD_Goto 0008          MFRC522_ToCard@backData 0010  
             MFRC522_CRC@dataIn 000D              MFRC522_Set_Bit@tmp 000B               MFRC522_CRC@length 000F  
              MFRC522_Wr@ucAddr 0004          MFRC522_ToCard@lastBits 001A                         ?_strlen 0001  
           __end_of_I2CLCD_Init 2074                         _LCD_Cmd 20C6             __end_of_I2CLCD_Stop 239E  
        MFRC522_ToCard@sendData 000D                         _SSPCON1 000FC6                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7                         _TagType 00BB                         __Hparam 0000  
                       __Lparam 0000            MFRC522_Clear_Bit@tmp 000B             Expander_Write@value 0003  
          I2CLCD_Write@i2c_data 0002                         ___aodiv 14D0                         ___aomod 1658  
                       ___lldiv 1C5C                       ?_vfprintf 00BC                    __psmallconst 0800  
                       __pcinit 22F4           __end_of_MFRC522_Reset 2376                         __ramtop 0800  
                       __ptext0 12BC                         __ptext1 2074                         __ptext2 1F06  
                       __ptext3 0D96                         __ptext4 0AF2                         __ptext5 2112  
                       __ptext6 2216                         __ptext7 224E                         __ptext8 21DA  
                       __ptext9 0810                  _Expander_Write 23E4                         _isalpha 21DA  
                       _islower 2216                         _isupper 224E                       _LCD_Begin 17BC  
                     _LCD_Print 1AF2                         _sprintf 2074                    _MFRC522_Halt 1FC4  
                  _MFRC522_Init 1F68                         _toupper 2112            end_of_initialization 2316  
                       fputc@fp 0003                   __Lmediumconst 0000                         fputs@fp 000C  
               ___lldiv@divisor 0005                 ___lldiv@counter 000D               __end_of_port_Init 2468  
             __end_of_vfpfcnvrt 102E                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                     _I2CLCD_Init 201C  
                    ??_vfprintf 005B                     _I2CLCD_Stop 2376               LCD_Write_Nibble@n 0004  
                       strlen@a 0003                         strlen@s 0001          __end_of_Expander_Write 2402  
                 ?_I2CLCD_Start 0001                       _PORTDbits 000F83                   ?_I2CLCD_Write 0001  
                     _TRISDbits 000F95                      ?_LCD_Begin 0001                      ?_LCD_Print 0005  
                 ??_MFRC522_CRC 0012                _LCD_Write_Nibble 2286                      LCD_Print@i 000A  
               _MFRC522_Set_Bit 241C         MFRC522_Request@backBits 0024             MFRC522_ToCard@irqEn 001B  
                   vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 004A  
               _MFRC522_Request 1E9E                  ??_I2CLCD_Start 0001                  ??_I2CLCD_Write 0001  
               ?_Expander_Write 0001                   __pbitbssBANK0 06D0                  __end_of_strlen 22F4  
           start_initialization 22F4               MFRC522_Halt@unLen 0024               ?_MFRC522_AntiColl 0020  
             MFRC522_Rd@address 0003               MFRC522_AntiColl@i 0027                     __end_of_abs 21DA  
                   __end_of_pad 1A3A              ??_MFRC522_AntiColl 0022        ??_MFRC522_ReadCardSerial 002A  
                   vfprintf@fmt 00BE             __end_of_MFRC522_CRC 1DA0                     __pdataBANK0 00DB  
                      ??_strlen 0003                        ?_LCD_Cmd 0001                   __pcstackBANK0 00BC  
              ___aodiv@dividend 0001                     ??_LCD_Begin 0007                     _data_buffer 00AB  
                   ??_LCD_Print 0007                       __pnvBANK0 00D9         __end_of_MFRC522_Set_Bit 2434  
                     _main$1289 00D5              MFRC522_CRC@dataOut 0010         __end_of_MFRC522_Request 1F06  
           MFRC522_Set_Bit@addr 000C               MFRC522_Wr@address 0003             MFRC522_Set_Bit@mask 000A  
                      ?___aodiv 0001                        ?___aomod 0001                ___aodiv@quotient 0013  
                      ?___lldiv 0001                LCD_Print@LCD_Str 0005                     __smallconst 0800  
                      ?_isalpha 0001                        ?_islower 0001                        ?_isupper 0001  
                      ?_sprintf 00C2                        ?_toupper 0007            __end_of_I2CLCD_Start 23C6  
                      _LCD_Goto 1E34                     _MFRC522_CRC 1D00            __end_of_I2CLCD_Write 234C  
                      _LATDbits 000F8C                    ?_I2CLCD_Init 000E                    ?_I2CLCD_Stop 0001  
                     _port_Init 2462                       _vfpfcnvrt 0D96                  _MFRC522_IsCard 2446  
                _MFRC522_ToCard 102E                      vfpfcnvrt@c 005A        __end_of_LCD_Write_Nibble 22BE  
                      _i2c_addr 00D9                ?_MFRC522_Set_Bit 000A                        __Hrparam 0000  
         MFRC522_Clear_Bit@addr 000C                ?_MFRC522_Request 0020           MFRC522_Clear_Bit@mask 000A  
                    vfprintf@ap 00C0                        __Lrparam 0000                      vfprintf@fp 00BC  
              ??_Expander_Write 0003                      ?_port_Init 0001                      ?_vfpfcnvrt 0040  
               ___aodiv@divisor 0009                 ___aodiv@counter 0011          __end_of_MFRC522_IsCard 2456  
                    sprintf@fmt 00C4          __end_of_MFRC522_ToCard 12BC          _MFRC522_ReadCardSerial 23C6  
                      _dtoa$929 002E                        __ptext10 1974                        __ptext11 22BE  
                      __ptext20 1BA8                        __ptext12 2156                        __ptext21 2446  
                      __ptext13 18AA                        __ptext30 241C                        __ptext22 1E9E  
                      __ptext14 2468                        __ptext31 2402                        __ptext23 1F68  
                      __ptext15 219A                        __ptext40 2320                        __ptext32 1DA0  
                      __ptext24 234C                        __ptext16 1658                        __ptext41 2376  
                      __ptext33 1A3A                        __ptext25 2434                        __ptext17 14D0  
                      __ptext42 239E                        __ptext34 1AF2                        __ptext26 2456  
                      __ptext18 2462                        __ptext43 201C                        __ptext35 1E34  
                      __ptext27 1FC4                        __ptext19 23C6                        __ptext44 1C5C  
                      __ptext36 17BC                        __ptext28 102E                        __ptext37 20C6  
                      __ptext29 1D00                        __ptext38 2286                        __ptext39 23E4  
   MFRC522_AntiColl@serNumCheck 0023                      _MFRC522_Rd 1A3A                      _MFRC522_Wr 1DA0  
                      isa$xinst 000000                        _vfprintf 1F06                   _MFRC522_Reset 234C  
              ___aomod@dividend 0001                 ?_MFRC522_IsCard 0026                 ?_MFRC522_ToCard 000D  
                      isalpha@c 0001              LCD_Begin@_i2c_addr 0009                       sprintf@ap 00C8  
                      islower@c 0001                ___lldiv@dividend 0001                        isupper@c 0001  
         MFRC522_IsCard@TagType 0026                     ??_port_Init 0001                 ___aomod@divisor 0009  
                   ??_vfpfcnvrt 0046                 ___aomod@counter 0011                  ?_MFRC522_Reset 0001  
                  _I2CLCD_Start 239E                    _I2CLCD_Write 2320                        sprintf@f 00CA  
                      sprintf@s 00C2                ___lldiv@quotient 0009                        toupper@c 0007  
    __end_of_MFRC522_AntennaOff 2462                   ?_MFRC522_Halt 0001                   ?_MFRC522_Init 0001  
                  ___aodiv@sign 0012                    ?_MFRC522_CRC 000D                     ?_MFRC522_Rd 0001  
                   ?_MFRC522_Wr 0001                    ___aomod@sign 0012  
