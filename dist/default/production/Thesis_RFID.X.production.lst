

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 24 18:47:25 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75  0000                     
    76                           ; Version 2.40
    77                           ; Generated 17/11/2021 GMT
    78                           ; 
    79                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F4550 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112                           	psect	idataCOMRAM
   113  0024E6                     __pidataCOMRAM:
   114                           	callstack 0
   115                           
   116                           ;initializer for _backlight_val
   117  0024E6  08                 	db	8
   118  0000                     _SSPSTAT	set	4039
   119  0000                     _SSPADD	set	4040
   120  0000                     _PIR1bits	set	3998
   121                           
   122                           	psect	nvBANK0
   123  0000E7                     __pnvBANK0:
   124                           	callstack 0
   125  0000E7                     _i2c_addr:
   126                           	callstack 0
   127  0000E7                     	ds	1
   128  0000                     _ACKEN	set	32300
   129  0000                     _ACKDT	set	32301
   130  0000                     _RCEN	set	32299
   131  0000                     _RSEN	set	32297
   132  0000                     _PEN	set	32298
   133  0000                     _SEN	set	32296
   134  0000                     _PORTDbits	set	3971
   135  0000                     _LATAbits	set	3977
   136  0000                     _TRISCbits	set	3988
   137  0000                     _LATB7	set	31831
   138  0000                     _TRISDbits	set	3989
   139  0000                     _PIE1bits	set	3997
   140  0000                     _IPR1bits	set	3999
   141  0000                     _RCSTAbits	set	4011
   142  0000                     _SPBRG	set	4015
   143  0000                     _SPBRGH	set	4016
   144  0000                     _BAUDCONbits	set	4024
   145  0000                     _TXREG	set	4013
   146  0000                     _TXSTAbits	set	4012
   147  0000                     _SSPCON2	set	4037
   148  0000                     _SSPCON1	set	4038
   149  0000                     _INTCONbits	set	4082
   150  0000                     _LATDbits	set	3980
   151  0000                     _SSPBUF	set	4041
   152  0000                     _TRISAbits	set	3986
   153                           
   154                           	psect	smallconst
   155  000800                     __psmallconst:
   156                           	callstack 0
   157  000800  00                 	db	0
   158  000801                     STR_1:
   159  000801  57                 	db	87	;'W'
   160  000802  65                 	db	101	;'e'
   161  000803  6C                 	db	108	;'l'
   162  000804  63                 	db	99	;'c'
   163  000805  6F                 	db	111	;'o'
   164  000806  6D                 	db	109	;'m'
   165  000807  65                 	db	101	;'e'
   166  000808  00                 	db	0
   167  000809                     STR_2:
   168  000809  49                 	db	73	;'I'
   169  00080A  44                 	db	68	;'D'
   170  00080B  3A                 	db	58	;':'
   171  00080C  00                 	db	0
   172  00080D                     STR_3:
   173  00080D  25                 	db	37
   174  00080E  58                 	db	88	;'X'
   175  00080F  00                 	db	0
   176  000810  00                 	db	0	; dummy byte at the end
   177  0000                     
   178                           ; #config settings
   179                           
   180                           	psect	cinit
   181  0022DE                     __pcinit:
   182                           	callstack 0
   183  0022DE                     start_initialization:
   184                           	callstack 0
   185  0022DE                     __initialization:
   186                           	callstack 0
   187                           
   188                           ; Initialize objects allocated to COMRAM (1 bytes)
   189                           ; load TBLPTR registers with __pidataCOMRAM
   190  0022DE  0EE6               	movlw	low __pidataCOMRAM
   191  0022E0  6EF6               	movwf	tblptrl,c
   192  0022E2  0E24               	movlw	high __pidataCOMRAM
   193  0022E4  6EF7               	movwf	tblptrh,c
   194  0022E6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   195  0022E8  6EF8               	movwf	tblptru,c
   196  0022EA  0009               	tblrd		*+	;fetch initializer
   197  0022EC  CFF5 F05C          	movff	tablat,__pdataCOMRAM
   198                           
   199                           ; Clear objects allocated to BANK0 (110 bytes)
   200  0022F0  EE00  F060         	lfsr	0,__pbssBANK0
   201  0022F4  0E6E               	movlw	110
   202  0022F6                     clear_0:
   203  0022F6  6AEE               	clrf	postinc0,c
   204  0022F8  06E8               	decf	wreg,f,c
   205  0022FA  E1FD               	bnz	clear_0
   206                           
   207                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   208  0022FC  6A5B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   209  0022FE                     end_of_initialization:
   210                           	callstack 0
   211  0022FE                     __end_of__initialization:
   212                           	callstack 0
   213  0022FE  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   214  002300  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   215  002302  0E00               	movlw	low (__Lmediumconst shr (0+16))
   216  002304  6EF8               	movwf	tblptru,c
   217  002306  0100               	movlb	0
   218  002308  EFE9  F007         	goto	_main	;jump to C main() function
   219                           
   220                           	psect	bitbssCOMRAM
   221  0002D8                     __pbitbssCOMRAM:
   222                           	callstack 0
   223  0002D8                     _RS:
   224                           	callstack 0
   225  0002D8                     	ds	1
   226                           
   227                           	psect	dataCOMRAM
   228  00005C                     __pdataCOMRAM:
   229                           	callstack 0
   230  00005C                     _backlight_val:
   231                           	callstack 0
   232  00005C                     	ds	1
   233                           
   234                           	psect	bssBANK0
   235  000060                     __pbssBANK0:
   236                           	callstack 0
   237  000060                     _temp:
   238                           	callstack 0
   239  000060                     	ds	16
   240  000070                     _nout:
   241                           	callstack 0
   242  000070                     	ds	2
   243  000072                     _width:
   244                           	callstack 0
   245  000072                     	ds	2
   246  000074                     _prec:
   247                           	callstack 0
   248  000074                     	ds	2
   249  000076                     _flags:
   250                           	callstack 0
   251  000076                     	ds	2
   252  000078                     _led:
   253                           	callstack 0
   254  000078                     	ds	2
   255  00007A                     _status_2:
   256                           	callstack 0
   257  00007A                     	ds	1
   258  00007B                     _status_1:
   259                           	callstack 0
   260  00007B                     	ds	1
   261  00007C                     _dbuf:
   262                           	callstack 0
   263  00007C                     	ds	32
   264  00009C                     _UID_2:
   265                           	callstack 0
   266  00009C                     	ds	16
   267  0000AC                     _UID_1:
   268                           	callstack 0
   269  0000AC                     	ds	16
   270  0000BC                     _data_buffer:
   271                           	callstack 0
   272  0000BC                     	ds	16
   273  0000CC                     _TagType2:
   274                           	callstack 0
   275  0000CC                     	ds	1
   276  0000CD                     _TagType1:
   277                           	callstack 0
   278  0000CD                     	ds	1
   279                           
   280                           	psect	cstackBANK0
   281  0000CE                     __pcstackBANK0:
   282                           	callstack 0
   283  0000CE                     ?_sprintf:
   284                           	callstack 0
   285  0000CE                     sprintf@s:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x0
   289  0000CE                     	ds	2
   290  0000D0                     sprintf@fmt:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x2
   294  0000D0                     	ds	4
   295  0000D4                     sprintf@ap:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x6
   299  0000D4                     	ds	2
   300  0000D6                     sprintf@f:
   301                           	callstack 0
   302                           
   303                           ; 11 bytes @ 0x8
   304  0000D6                     	ds	11
   305  0000E1                     ??_main:
   306                           
   307                           ; 1 bytes @ 0x13
   308  0000E1                     	ds	2
   309  0000E3                     main@i:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x15
   313  0000E3                     	ds	2
   314  0000E5                     main@i_523:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x17
   318  0000E5                     	ds	2
   319                           
   320                           	psect	cstackCOMRAM
   321  000001                     __pcstackCOMRAM:
   322                           	callstack 0
   323  000001                     ??_low_isr:
   324  000001                     
   325                           ; 1 bytes @ 0x0
   326  000001                     	ds	1
   327  000002                     ??_I2CLCD_Start:
   328  000002                     ??_I2CLCD_Stop:
   329  000002                     ??_I2CLCD_Write:
   330  000002                     ??_MFRC522_Rd:
   331  000002                     ??_MFRC522_Rd2:
   332  000002                     ?_strlen:
   333                           	callstack 0
   334  000002                     ?_isupper:
   335                           	callstack 0
   336  000002                     ?_isalpha:
   337                           	callstack 0
   338  000002                     ?_islower:
   339                           	callstack 0
   340  000002                     ?___lldiv:
   341                           	callstack 0
   342  000002                     MFRC522_Wr@value:
   343                           	callstack 0
   344  000002                     MFRC522_Wr2@value:
   345                           	callstack 0
   346  000002                     uart_init@gen_reg:
   347                           	callstack 0
   348  000002                     isalpha@c:
   349                           	callstack 0
   350  000002                     isupper@c:
   351                           	callstack 0
   352  000002                     fputc@c:
   353                           	callstack 0
   354  000002                     strlen@s:
   355                           	callstack 0
   356  000002                     islower@c:
   357                           	callstack 0
   358  000002                     ___lldiv@dividend:
   359                           	callstack 0
   360                           
   361                           ; 4 bytes @ 0x1
   362  000002                     	ds	1
   363  000003                     ??_MFRC522_Wr:
   364  000003                     ??_MFRC522_Wr2:
   365  000003                     I2CLCD_Write@i2c_data:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x2
   369  000003                     	ds	1
   370  000004                     ??_isupper:
   371  000004                     ??_isalpha:
   372  000004                     ??_islower:
   373  000004                     Expander_Write@value:
   374                           	callstack 0
   375  000004                     MFRC522_Rd@address:
   376                           	callstack 0
   377  000004                     MFRC522_Rd2@address:
   378                           	callstack 0
   379  000004                     MFRC522_Wr@address:
   380                           	callstack 0
   381  000004                     MFRC522_Wr2@address:
   382                           	callstack 0
   383  000004                     uart_init@sync:
   384                           	callstack 0
   385  000004                     fputc@fp:
   386                           	callstack 0
   387  000004                     strlen@a:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x3
   391  000004                     	ds	1
   392  000005                     LCD_Write_Nibble@n:
   393                           	callstack 0
   394  000005                     MFRC522_Wr@ucAddr:
   395                           	callstack 0
   396  000005                     MFRC522_Wr2@ucAddr:
   397                           	callstack 0
   398  000005                     MFRC522_Rd@ucAddr:
   399                           	callstack 0
   400  000005                     MFRC522_Rd2@ucAddr:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x4
   404  000005                     	ds	1
   405  000006                     ??_LCD_Cmd:
   406  000006                     ??_fputc:
   407  000006                     MFRC522_Wr@i:
   408                           	callstack 0
   409  000006                     MFRC522_Wr2@i:
   410                           	callstack 0
   411  000006                     uart_init@brgh:
   412                           	callstack 0
   413  000006                     LCD_Print@LCD_Str:
   414                           	callstack 0
   415  000006                     ___lldiv@divisor:
   416                           	callstack 0
   417                           
   418                           ; 4 bytes @ 0x5
   419  000006                     	ds	1
   420  000007                     LCD_Cmd@Command:
   421                           	callstack 0
   422  000007                     MFRC522_Rd@ucResult:
   423                           	callstack 0
   424  000007                     MFRC522_Rd2@ucResult:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x6
   428  000007                     	ds	1
   429  000008                     ??_LCD_Begin:
   430  000008                     ??_LCD_Print:
   431  000008                     ?_toupper:
   432                           	callstack 0
   433  000008                     LCD_Goto@row:
   434                           	callstack 0
   435  000008                     uart_init@brg16:
   436                           	callstack 0
   437  000008                     toupper@c:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x7
   441  000008                     	ds	1
   442  000009                     ??_LCD_Goto:
   443  000009                     MFRC522_Rd@i:
   444                           	callstack 0
   445  000009                     MFRC522_Rd2@i:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x8
   449  000009                     	ds	1
   450  00000A                     ??_toupper:
   451  00000A                     LCD_Begin@_i2c_addr:
   452                           	callstack 0
   453  00000A                     ___lldiv@quotient:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0x9
   457  00000A                     	ds	1
   458  00000B                     LCD_Goto@col:
   459                           	callstack 0
   460  00000B                     LCD_Print@i:
   461                           	callstack 0
   462  00000B                     MFRC522_Clear_Bit@mask:
   463                           	callstack 0
   464  00000B                     MFRC522_Clear_Bit2@mask:
   465                           	callstack 0
   466  00000B                     MFRC522_Set_Bit@mask:
   467                           	callstack 0
   468  00000B                     MFRC522_Set_Bit2@mask:
   469                           	callstack 0
   470  00000B                     fputs@s:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xA
   474  00000B                     	ds	1
   475  00000C                     MFRC522_Clear_Bit@tmp:
   476                           	callstack 0
   477  00000C                     MFRC522_Clear_Bit2@tmp:
   478                           	callstack 0
   479  00000C                     MFRC522_Set_Bit@tmp:
   480                           	callstack 0
   481  00000C                     MFRC522_Set_Bit2@tmp:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0xB
   485  00000C                     	ds	1
   486  00000D                     MFRC522_Clear_Bit@addr:
   487                           	callstack 0
   488  00000D                     MFRC522_Clear_Bit2@addr:
   489                           	callstack 0
   490  00000D                     MFRC522_Set_Bit@addr:
   491                           	callstack 0
   492  00000D                     MFRC522_Set_Bit2@addr:
   493                           	callstack 0
   494  00000D                     fputs@fp:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0xC
   498  00000D                     	ds	1
   499  00000E                     ___lldiv@counter:
   500                           	callstack 0
   501  00000E                     MFRC522_ToCard@sendData:
   502                           	callstack 0
   503  00000E                     MFRC522_ToCard2@sendData:
   504                           	callstack 0
   505  00000E                     MFRC522_CRC@dataIn:
   506                           	callstack 0
   507  00000E                     MFRC522_CRC2@dataIn:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0xD
   511  00000E                     	ds	1
   512  00000F                     fputs@c:
   513                           	callstack 0
   514  00000F                     I2CLCD_Init@i2c_clk_freq:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0xE
   518  00000F                     	ds	1
   519  000010                     MFRC522_ToCard@sendLen:
   520                           	callstack 0
   521  000010                     MFRC522_ToCard2@sendLen:
   522                           	callstack 0
   523  000010                     MFRC522_CRC@length:
   524                           	callstack 0
   525  000010                     MFRC522_CRC2@length:
   526                           	callstack 0
   527  000010                     fputs@i:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0xF
   531  000010                     	ds	1
   532  000011                     MFRC522_ToCard@backData:
   533                           	callstack 0
   534  000011                     MFRC522_ToCard2@backData:
   535                           	callstack 0
   536  000011                     MFRC522_CRC@dataOut:
   537                           	callstack 0
   538  000011                     MFRC522_CRC2@dataOut:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x10
   542  000011                     	ds	1
   543  000012                     ?_pad:
   544                           	callstack 0
   545  000012                     pad@fp:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x11
   549  000012                     	ds	1
   550  000013                     ??_I2CLCD_Init:
   551  000013                     MFRC522_CRC@n:
   552                           	callstack 0
   553  000013                     MFRC522_CRC2@n:
   554                           	callstack 0
   555  000013                     MFRC522_ToCard@backLen:
   556                           	callstack 0
   557  000013                     MFRC522_ToCard2@backLen:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x12
   561  000013                     	ds	1
   562  000014                     MFRC522_CRC@i:
   563                           	callstack 0
   564  000014                     MFRC522_CRC2@i:
   565                           	callstack 0
   566  000014                     pad@buf:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x13
   570  000014                     	ds	1
   571  000015                     ??_MFRC522_ToCard:
   572  000015                     ??_MFRC522_ToCard2:
   573                           
   574                           ; 1 bytes @ 0x14
   575  000015                     	ds	1
   576  000016                     pad@p:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x15
   580  000016                     	ds	2
   581  000018                     ??_pad:
   582                           
   583                           ; 1 bytes @ 0x17
   584  000018                     	ds	1
   585  000019                     MFRC522_ToCard@waitIRq:
   586                           	callstack 0
   587  000019                     MFRC522_ToCard2@waitIRq:
   588                           	callstack 0
   589  000019                     pad@i:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x18
   593  000019                     	ds	1
   594  00001A                     MFRC522_ToCard@_status:
   595                           	callstack 0
   596  00001A                     MFRC522_ToCard2@_status:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x19
   600  00001A                     	ds	1
   601  00001B                     MFRC522_ToCard@lastBits:
   602                           	callstack 0
   603  00001B                     MFRC522_ToCard2@lastBits:
   604                           	callstack 0
   605  00001B                     pad@w:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x1A
   609  00001B                     	ds	1
   610  00001C                     MFRC522_ToCard@irqEn:
   611                           	callstack 0
   612  00001C                     MFRC522_ToCard2@irqEn:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0x1B
   616  00001C                     	ds	1
   617  00001D                     ?_xtoa:
   618                           	callstack 0
   619  00001D                     MFRC522_ToCard@command:
   620                           	callstack 0
   621  00001D                     MFRC522_ToCard2@command:
   622                           	callstack 0
   623  00001D                     xtoa@fp:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x1C
   627  00001D                     	ds	1
   628  00001E                     MFRC522_ToCard@i:
   629                           	callstack 0
   630  00001E                     MFRC522_ToCard2@i:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x1D
   634  00001E                     	ds	1
   635  00001F                     xtoa@d:
   636                           	callstack 0
   637                           
   638                           ; 8 bytes @ 0x1E
   639  00001F                     	ds	1
   640  000020                     MFRC522_ToCard@n:
   641                           	callstack 0
   642  000020                     MFRC522_ToCard2@n:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x1F
   646  000020                     	ds	1
   647  000021                     MFRC522_Request@TagType:
   648                           	callstack 0
   649  000021                     MFRC522_Request2@TagType:
   650                           	callstack 0
   651  000021                     MFRC522_AntiColl@serNum:
   652                           	callstack 0
   653  000021                     MFRC522_AntiColl2@serNum:
   654                           	callstack 0
   655  000021                     MFRC522_Halt@buff:
   656                           	callstack 0
   657                           
   658                           ; 4 bytes @ 0x20
   659  000021                     	ds	2
   660  000023                     MFRC522_Request@reqMode:
   661                           	callstack 0
   662  000023                     MFRC522_Request2@reqMode:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x22
   666  000023                     	ds	1
   667  000024                     MFRC522_Request@_status:
   668                           	callstack 0
   669  000024                     MFRC522_Request2@_status:
   670                           	callstack 0
   671  000024                     MFRC522_AntiColl@serNumCheck:
   672                           	callstack 0
   673  000024                     MFRC522_AntiColl2@serNumCheck:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x23
   677  000024                     	ds	1
   678  000025                     MFRC522_Request@backBits:
   679                           	callstack 0
   680  000025                     MFRC522_Request2@backBits:
   681                           	callstack 0
   682  000025                     MFRC522_Halt@unLen:
   683                           	callstack 0
   684  000025                     MFRC522_AntiColl@unLen:
   685                           	callstack 0
   686  000025                     MFRC522_AntiColl2@unLen:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x24
   690  000025                     	ds	2
   691  000027                     MFRC522_AntiColl@_status:
   692                           	callstack 0
   693  000027                     MFRC522_AntiColl2@_status:
   694                           	callstack 0
   695  000027                     xtoa@x:
   696                           	callstack 0
   697  000027                     MFRC522_IsCard@TagType:
   698                           	callstack 0
   699  000027                     MFRC522_IsCard2@TagType:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x26
   703  000027                     	ds	1
   704  000028                     ??_xtoa:
   705  000028                     MFRC522_AntiColl@i:
   706                           	callstack 0
   707  000028                     MFRC522_AntiColl2@i:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x27
   711  000028                     	ds	1
   712  000029                     MFRC522_ReadCardSerial@str:
   713                           	callstack 0
   714  000029                     MFRC522_ReadCardSerial2@str:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x28
   718  000029                     	ds	2
   719  00002B                     
   720                           ; 1 bytes @ 0x2A
   721  00002B                     	ds	5
   722  000030                     xtoa@p:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x2F
   726  000030                     	ds	2
   727  000032                     xtoa@w:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x31
   731  000032                     	ds	2
   732  000034                     xtoa@n:
   733                           	callstack 0
   734                           
   735                           ; 8 bytes @ 0x33
   736  000034                     	ds	8
   737  00003C                     xtoa@i:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x3B
   741  00003C                     	ds	2
   742  00003E                     xtoa@c:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x3D
   746  00003E                     	ds	2
   747  000040                     ?_vfpfcnvrt:
   748                           	callstack 0
   749  000040                     vfpfcnvrt@fp:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x3F
   753  000040                     	ds	2
   754  000042                     vfpfcnvrt@fmt:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x41
   758  000042                     	ds	2
   759  000044                     vfpfcnvrt@ap:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x43
   763  000044                     	ds	2
   764  000046                     ??_vfpfcnvrt:
   765                           
   766                           ; 1 bytes @ 0x45
   767  000046                     	ds	4
   768  00004A                     vfpfcnvrt@llu:
   769                           	callstack 0
   770                           
   771                           ; 8 bytes @ 0x49
   772  00004A                     	ds	8
   773  000052                     vfpfcnvrt@c:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x51
   777  000052                     	ds	1
   778  000053                     ?_vfprintf:
   779                           	callstack 0
   780  000053                     vfprintf@fp:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x52
   784  000053                     	ds	2
   785  000055                     vfprintf@fmt:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x54
   789  000055                     	ds	2
   790  000057                     vfprintf@ap:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x56
   794  000057                     	ds	2
   795  000059                     vfprintf@cfmt:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x58
   799  000059                     	ds	2
   800  00005B                     
   801                           ; 1 bytes @ 0x5A
   802 ;;
   803 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   804 ;;
   805 ;; *************** function _main *****************
   806 ;; Defined at:
   807 ;;		line 53 in file "main.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  i               2   23[BANK0 ] int 
   812 ;;  i               2   21[BANK0 ] int 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   822 ;;      Params:         0       0       0       0       0       0       0       0       0
   823 ;;      Locals:         0       4       0       0       0       0       0       0       0
   824 ;;      Temps:          0       2       0       0       0       0       0       0       0
   825 ;;      Totals:         0       6       0       0       0       0       0       0       0
   826 ;;Total ram usage:        6 bytes
   827 ;; Hardware stack levels required when called: 10
   828 ;; This function calls:
   829 ;;		_I2CLCD_Init
   830 ;;		_LCD_Begin
   831 ;;		_LCD_Cmd
   832 ;;		_LCD_Goto
   833 ;;		_LCD_Print
   834 ;;		_MFRC522_AntiColl
   835 ;;		_MFRC522_AntiColl2
   836 ;;		_MFRC522_Halt
   837 ;;		_MFRC522_Init
   838 ;;		_MFRC522_IsCard
   839 ;;		_MFRC522_IsCard2
   840 ;;		_MFRC522_ReadCardSerial
   841 ;;		_MFRC522_ReadCardSerial2
   842 ;;		_sprintf
   843 ;;		_strlen
   844 ;;		_uart_init
   845 ;; This function is called by:
   846 ;;		Startup code after reset
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text0
   851  000FD2                     __ptext0:
   852                           	callstack 0
   853  000FD2                     _main:
   854                           	callstack 21
   855  000FD2                     
   856                           ;main.c: 54:     I2CLCD_Init(100000);
   857  000FD2  0EA0               	movlw	160
   858  000FD4  6E0F               	movwf	I2CLCD_Init@i2c_clk_freq^0,c
   859  000FD6  0E86               	movlw	134
   860  000FD8  6E10               	movwf	(I2CLCD_Init@i2c_clk_freq+1)^0,c
   861  000FDA  0E01               	movlw	1
   862  000FDC  6E11               	movwf	(I2CLCD_Init@i2c_clk_freq+2)^0,c
   863  000FDE  0E00               	movlw	0
   864  000FE0  6E12               	movwf	(I2CLCD_Init@i2c_clk_freq+3)^0,c
   865  000FE2  EC07  F010         	call	_I2CLCD_Init	;wreg free
   866                           
   867                           ;main.c: 55:     LCD_Begin(0x4E);
   868  000FE6  0E4E               	movlw	78
   869  000FE8  EC09  F00A         	call	_LCD_Begin
   870                           
   871                           ;main.c: 56:     MFRC522_Init();
   872  000FEC  EC61  F00D         	call	_MFRC522_Init	;wreg free
   873  000FF0                     
   874                           ;main.c: 57:     uart_init(129, 0, 0, 1);
   875  000FF0  0E00               	movlw	0
   876  000FF2  6E03               	movwf	(uart_init@gen_reg+1)^0,c
   877  000FF4  0E81               	movlw	129
   878  000FF6  6E02               	movwf	uart_init@gen_reg^0,c
   879  000FF8  0E00               	movlw	0
   880  000FFA  6E05               	movwf	(uart_init@sync+1)^0,c
   881  000FFC  0E00               	movlw	0
   882  000FFE  6E04               	movwf	uart_init@sync^0,c
   883  001000  0E00               	movlw	0
   884  001002  6E07               	movwf	(uart_init@brgh+1)^0,c
   885  001004  0E00               	movlw	0
   886  001006  6E06               	movwf	uart_init@brgh^0,c
   887  001008  0E00               	movlw	0
   888  00100A  6E09               	movwf	(uart_init@brg16+1)^0,c
   889  00100C  0E01               	movlw	1
   890  00100E  6E08               	movwf	uart_init@brg16^0,c
   891  001010  ECC5  F010         	call	_uart_init	;wreg free
   892  001014                     
   893                           ;main.c: 58:     _delay((unsigned long)((500)*(27000000/4000.0)));
   894  001014  0E12               	movlw	18
   895  001016  0100               	movlb	0	; () banked
   896  001018  6FE2               	movwf	(??_main+1)& (0+255),b
   897  00101A  0E20               	movlw	32
   898  00101C  6FE1               	movwf	??_main& (0+255),b
   899  00101E  0E0F               	movlw	15
   900  001020                     u2827:
   901  001020  2EE8               	decfsz	wreg,f,c
   902  001022  D7FE               	bra	u2827
   903  001024  2FE1               	decfsz	??_main& (0+255),f,b
   904  001026  D7FC               	bra	u2827
   905  001028  2FE2               	decfsz	(??_main+1)& (0+255),f,b
   906  00102A  D7FA               	bra	u2827
   907  00102C  D000               	nop2	
   908  00102E                     
   909                           ;main.c: 60:     LCD_Goto(1, 1);
   910  00102E  0E01               	movlw	1
   911  001030  6E08               	movwf	LCD_Goto@row^0,c
   912  001032  0E01               	movlw	1
   913  001034  EC39  F00F         	call	_LCD_Goto
   914  001038                     
   915                           ;main.c: 61:     LCD_Print("Welcome");
   916  001038  0E01               	movlw	low STR_1
   917  00103A  6E06               	movwf	LCD_Print@LCD_Str^0,c
   918  00103C  0E08               	movlw	high STR_1
   919  00103E  6E07               	movwf	(LCD_Print@LCD_Str+1)^0,c
   920  001040  ECB4  F00C         	call	_LCD_Print	;wreg free
   921  001044                     
   922                           ;main.c: 63:     _delay((unsigned long)((1000)*(27000000/4000.0)));
   923  001044  0E23               	movlw	35
   924  001046  0100               	movlb	0	; () banked
   925  001048  6FE2               	movwf	(??_main+1)& (0+255),b
   926  00104A  0E3F               	movlw	63
   927  00104C  6FE1               	movwf	??_main& (0+255),b
   928  00104E  0E22               	movlw	34
   929  001050                     u2837:
   930  001050  2EE8               	decfsz	wreg,f,c
   931  001052  D7FE               	bra	u2837
   932  001054  2FE1               	decfsz	??_main& (0+255),f,b
   933  001056  D7FC               	bra	u2837
   934  001058  2FE2               	decfsz	(??_main+1)& (0+255),f,b
   935  00105A  D7FA               	bra	u2837
   936  00105C  F000               	nop	
   937  00105E                     
   938                           ;main.c: 64:     LCD_Cmd(0x01);
   939  00105E  0E01               	movlw	1
   940  001060  EC5C  F010         	call	_LCD_Cmd
   941  001064                     l3522:
   942                           
   943                           ;main.c: 67:         MFRC522_IsCard(&TagType1);
   944  001064  0ECD               	movlw	low _TagType1
   945  001066  6E27               	movwf	MFRC522_IsCard@TagType^0,c
   946  001068  0E00               	movlw	high _TagType1
   947  00106A  6E28               	movwf	(MFRC522_IsCard@TagType+1)^0,c
   948  00106C  EC5E  F012         	call	_MFRC522_IsCard	;wreg free
   949  001070                     
   950                           ;main.c: 68:         MFRC522_ReadCardSerial(&UID_1);
   951  001070  0EAC               	movlw	low _UID_1
   952  001072  6E29               	movwf	MFRC522_ReadCardSerial@str^0,c
   953  001074  0E00               	movlw	high _UID_1
   954  001076  6E2A               	movwf	(MFRC522_ReadCardSerial@str+1)^0,c
   955  001078  ECE8  F011         	call	_MFRC522_ReadCardSerial	;wreg free
   956  00107C                     
   957                           ;main.c: 69:         status_1 = MFRC522_AntiColl(&UID_1);
   958  00107C  0EAC               	movlw	low _UID_1
   959  00107E  6E21               	movwf	MFRC522_AntiColl@serNum^0,c
   960  001080  0E00               	movlw	high _UID_1
   961  001082  6E22               	movwf	(MFRC522_AntiColl@serNum+1)^0,c
   962  001084  EC5A  F00C         	call	_MFRC522_AntiColl	;wreg free
   963  001088  0100               	movlb	0	; () banked
   964  00108A  6F7B               	movwf	_status_1& (0+255),b
   965  00108C                     
   966                           ; BSR set to: 0
   967                           ;main.c: 71:         MFRC522_IsCard2(&TagType2);
   968  00108C  0ECC               	movlw	low _TagType2
   969  00108E  6E27               	movwf	MFRC522_IsCard2@TagType^0,c
   970  001090  0E00               	movlw	high _TagType2
   971  001092  6E28               	movwf	(MFRC522_IsCard2@TagType+1)^0,c
   972  001094  EC56  F012         	call	_MFRC522_IsCard2	;wreg free
   973  001098                     
   974                           ;main.c: 72:         MFRC522_ReadCardSerial2(&UID_2);
   975  001098  0E9C               	movlw	low _UID_2
   976  00109A  6E29               	movwf	MFRC522_ReadCardSerial2@str^0,c
   977  00109C  0E00               	movlw	high _UID_2
   978  00109E  6E2A               	movwf	(MFRC522_ReadCardSerial2@str+1)^0,c
   979  0010A0  ECD9  F011         	call	_MFRC522_ReadCardSerial2	;wreg free
   980  0010A4                     
   981                           ;main.c: 73:         status_2 = MFRC522_AntiColl2(&UID_2);
   982  0010A4  0E9C               	movlw	low _UID_2
   983  0010A6  6E21               	movwf	MFRC522_AntiColl2@serNum^0,c
   984  0010A8  0E00               	movlw	high _UID_2
   985  0010AA  6E22               	movwf	(MFRC522_AntiColl2@serNum+1)^0,c
   986  0010AC  EC00  F00C         	call	_MFRC522_AntiColl2	;wreg free
   987  0010B0  0100               	movlb	0	; () banked
   988  0010B2  6F7A               	movwf	_status_2& (0+255),b
   989  0010B4                     
   990                           ; BSR set to: 0
   991                           ;main.c: 75:         if (strlen(UID_1) == 1 || strlen(UID_2) == 1){
   992  0010B4  0EAC               	movlw	low _UID_1
   993  0010B6  6E02               	movwf	strlen@s^0,c
   994  0010B8  0E00               	movlw	high _UID_1
   995  0010BA  6E03               	movwf	(strlen@s+1)^0,c
   996  0010BC  EC39  F011         	call	_strlen	;wreg free
   997  0010C0  0402               	decf	?_strlen^0,w,c
   998  0010C2  1003               	iorwf	(?_strlen+1)^0,w,c
   999  0010C4  B4D8               	btfsc	status,2,c
  1000  0010C6  EF67  F008         	goto	u2761
  1001  0010CA  EF69  F008         	goto	u2760
  1002  0010CE                     u2761:
  1003  0010CE  EF78  F008         	goto	l3538
  1004  0010D2                     u2760:
  1005  0010D2  0E9C               	movlw	low _UID_2
  1006  0010D4  6E02               	movwf	strlen@s^0,c
  1007  0010D6  0E00               	movlw	high _UID_2
  1008  0010D8  6E03               	movwf	(strlen@s+1)^0,c
  1009  0010DA  EC39  F011         	call	_strlen	;wreg free
  1010  0010DE  0402               	decf	?_strlen^0,w,c
  1011  0010E0  1003               	iorwf	(?_strlen+1)^0,w,c
  1012  0010E2  A4D8               	btfss	status,2,c
  1013  0010E4  EF76  F008         	goto	u2771
  1014  0010E8  EF78  F008         	goto	u2770
  1015  0010EC                     u2771:
  1016  0010EC  EF86  F008         	goto	l3542
  1017  0010F0                     u2770:
  1018  0010F0                     l3538:
  1019                           
  1020                           ;main.c: 76:             LCD_Cmd(0x01);
  1021  0010F0  0E01               	movlw	1
  1022  0010F2  EC5C  F010         	call	_LCD_Cmd
  1023                           
  1024                           ;main.c: 77:             LCD_Goto(1, 1);
  1025  0010F6  0E01               	movlw	1
  1026  0010F8  6E08               	movwf	LCD_Goto@row^0,c
  1027  0010FA  0E01               	movlw	1
  1028  0010FC  EC39  F00F         	call	_LCD_Goto
  1029  001100                     
  1030                           ;main.c: 78:             LCD_Print("ID:");
  1031  001100  0E09               	movlw	low STR_2
  1032  001102  6E06               	movwf	LCD_Print@LCD_Str^0,c
  1033  001104  0E08               	movlw	high STR_2
  1034  001106  6E07               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1035  001108  ECB4  F00C         	call	_LCD_Print	;wreg free
  1036  00110C                     l3542:
  1037                           
  1038                           ;main.c: 81:         LCD_Goto(1, 2);
  1039  00110C  0E02               	movlw	2
  1040  00110E  6E08               	movwf	LCD_Goto@row^0,c
  1041  001110  0E01               	movlw	1
  1042  001112  EC39  F00F         	call	_LCD_Goto
  1043  001116                     
  1044                           ;main.c: 83:         if(status_1 == 0) {
  1045  001116  0100               	movlb	0	; () banked
  1046  001118  517B               	movf	_status_1& (0+255),w,b
  1047  00111A  A4D8               	btfss	status,2,c
  1048  00111C  EF92  F008         	goto	u2781
  1049  001120  EF94  F008         	goto	u2780
  1050  001124                     u2781:
  1051  001124  EFD3  F008         	goto	l3562
  1052  001128                     u2780:
  1053  001128                     
  1054                           ; BSR set to: 0
  1055                           ;main.c: 84:             for(int i = 0; i < 5; i++)
  1056  001128  0E00               	movlw	0
  1057  00112A  6FE4               	movwf	(main@i+1)& (0+255),b
  1058  00112C  0E00               	movlw	0
  1059  00112E  6FE3               	movwf	main@i& (0+255),b
  1060  001130                     l3552:
  1061                           
  1062                           ; BSR set to: 0
  1063                           ;main.c: 85:             {;main.c: 86:                 sprintf(data_buffer, "%X", UID_1[
      +                          i]);
  1064  001130  0EBC               	movlw	low _data_buffer
  1065  001132  6FCE               	movwf	sprintf@s& (0+255),b
  1066  001134  0E00               	movlw	high _data_buffer
  1067  001136  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1068  001138  0E0D               	movlw	low STR_3
  1069  00113A  6FD0               	movwf	sprintf@fmt& (0+255),b
  1070  00113C  0E08               	movlw	high STR_3
  1071  00113E  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1072  001140  0EAC               	movlw	low _UID_1
  1073  001142  25E3               	addwf	main@i& (0+255),w,b
  1074  001144  6ED9               	movwf	fsr2l,c
  1075  001146  0E00               	movlw	high _UID_1
  1076  001148  21E4               	addwfc	(main@i+1)& (0+255),w,b
  1077  00114A  6EDA               	movwf	fsr2h,c
  1078  00114C  50DF               	movf	indf2,w,c
  1079  00114E  6FE1               	movwf	??_main& (0+255),b
  1080  001150  51E1               	movf	??_main& (0+255),w,b
  1081  001152  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  1082  001154  6BD3               	clrf	(?_sprintf+5)& (0+255),b
  1083  001156  EC33  F010         	call	_sprintf	;wreg free
  1084  00115A                     
  1085                           ;main.c: 87:                 LCD_Print(data_buffer);
  1086  00115A  0EBC               	movlw	low _data_buffer
  1087  00115C  6E06               	movwf	LCD_Print@LCD_Str^0,c
  1088  00115E  0E00               	movlw	high _data_buffer
  1089  001160  6E07               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1090  001162  ECB4  F00C         	call	_LCD_Print	;wreg free
  1091  001166                     
  1092                           ;main.c: 88:             }
  1093  001166  0100               	movlb	0	; () banked
  1094  001168  4BE3               	infsnz	main@i& (0+255),f,b
  1095  00116A  2BE4               	incf	(main@i+1)& (0+255),f,b
  1096  00116C                     
  1097                           ; BSR set to: 0
  1098  00116C  BFE4               	btfsc	(main@i+1)& (0+255),7,b
  1099  00116E  EFC2  F008         	goto	u2791
  1100  001172  51E4               	movf	(main@i+1)& (0+255),w,b
  1101  001174  E109               	bnz	u2790
  1102  001176  0E05               	movlw	5
  1103  001178  5DE3               	subwf	main@i& (0+255),w,b
  1104  00117A  A0D8               	btfss	status,0,c
  1105  00117C  EFC2  F008         	goto	u2791
  1106  001180  EFC4  F008         	goto	u2790
  1107  001184                     u2791:
  1108  001184  EF98  F008         	goto	l3552
  1109  001188                     u2790:
  1110  001188                     l3560:
  1111                           
  1112                           ; BSR set to: 0
  1113                           ;main.c: 89:             _delay((unsigned long)((1000)*(27000000/4000.0)));
  1114  001188  0E23               	movlw	35
  1115  00118A  0100               	movlb	0	; () banked
  1116  00118C  6FE2               	movwf	(??_main+1)& (0+255),b
  1117  00118E  0E3F               	movlw	63
  1118  001190  6FE1               	movwf	??_main& (0+255),b
  1119  001192  0E22               	movlw	34
  1120  001194                     u2847:
  1121  001194  2EE8               	decfsz	wreg,f,c
  1122  001196  D7FE               	bra	u2847
  1123  001198  2FE1               	decfsz	??_main& (0+255),f,b
  1124  00119A  D7FC               	bra	u2847
  1125  00119C  2FE2               	decfsz	(??_main+1)& (0+255),f,b
  1126  00119E  D7FA               	bra	u2847
  1127  0011A0  F000               	nop	
  1128                           
  1129                           ;main.c: 90:         }
  1130  0011A2  EF32  F008         	goto	l3522
  1131  0011A6                     l3562:
  1132                           
  1133                           ; BSR set to: 0
  1134  0011A6  517A               	movf	_status_2& (0+255),w,b
  1135  0011A8  A4D8               	btfss	status,2,c
  1136  0011AA  EFD9  F008         	goto	u2801
  1137  0011AE  EFDB  F008         	goto	u2800
  1138  0011B2                     u2801:
  1139  0011B2  EF0D  F009         	goto	l3580
  1140  0011B6                     u2800:
  1141  0011B6                     
  1142                           ; BSR set to: 0
  1143                           ;main.c: 92:             for(int i = 0; i < 5; i++)
  1144  0011B6  0E00               	movlw	0
  1145  0011B8  6FE6               	movwf	(main@i_523+1)& (0+255),b
  1146  0011BA  0E00               	movlw	0
  1147  0011BC  6FE5               	movwf	main@i_523& (0+255),b
  1148  0011BE                     l3570:
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;main.c: 93:             {;main.c: 94:                 sprintf(data_buffer, "%X", UID_2[
      +                          i]);
  1152  0011BE  0EBC               	movlw	low _data_buffer
  1153  0011C0  6FCE               	movwf	sprintf@s& (0+255),b
  1154  0011C2  0E00               	movlw	high _data_buffer
  1155  0011C4  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1156  0011C6  0E0D               	movlw	low STR_3
  1157  0011C8  6FD0               	movwf	sprintf@fmt& (0+255),b
  1158  0011CA  0E08               	movlw	high STR_3
  1159  0011CC  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1160  0011CE  0E9C               	movlw	low _UID_2
  1161  0011D0  25E5               	addwf	main@i_523& (0+255),w,b
  1162  0011D2  6ED9               	movwf	fsr2l,c
  1163  0011D4  0E00               	movlw	high _UID_2
  1164  0011D6  21E6               	addwfc	(main@i_523+1)& (0+255),w,b
  1165  0011D8  6EDA               	movwf	fsr2h,c
  1166  0011DA  50DF               	movf	indf2,w,c
  1167  0011DC  6FE1               	movwf	??_main& (0+255),b
  1168  0011DE  51E1               	movf	??_main& (0+255),w,b
  1169  0011E0  6FD2               	movwf	(?_sprintf+4)& (0+255),b
  1170  0011E2  6BD3               	clrf	(?_sprintf+5)& (0+255),b
  1171  0011E4  EC33  F010         	call	_sprintf	;wreg free
  1172  0011E8                     
  1173                           ;main.c: 95:                 LCD_Print(data_buffer);
  1174  0011E8  0EBC               	movlw	low _data_buffer
  1175  0011EA  6E06               	movwf	LCD_Print@LCD_Str^0,c
  1176  0011EC  0E00               	movlw	high _data_buffer
  1177  0011EE  6E07               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1178  0011F0  ECB4  F00C         	call	_LCD_Print	;wreg free
  1179  0011F4                     
  1180                           ;main.c: 96:             }
  1181  0011F4  0100               	movlb	0	; () banked
  1182  0011F6  4BE5               	infsnz	main@i_523& (0+255),f,b
  1183  0011F8  2BE6               	incf	(main@i_523+1)& (0+255),f,b
  1184  0011FA                     
  1185                           ; BSR set to: 0
  1186  0011FA  BFE6               	btfsc	(main@i_523+1)& (0+255),7,b
  1187  0011FC  EF09  F009         	goto	u2811
  1188  001200  51E6               	movf	(main@i_523+1)& (0+255),w,b
  1189  001202  E109               	bnz	u2810
  1190  001204  0E05               	movlw	5
  1191  001206  5DE5               	subwf	main@i_523& (0+255),w,b
  1192  001208  A0D8               	btfss	status,0,c
  1193  00120A  EF09  F009         	goto	u2811
  1194  00120E  EF0B  F009         	goto	u2810
  1195  001212                     u2811:
  1196  001212  EFDF  F008         	goto	l3570
  1197  001216                     u2810:
  1198  001216  EFC4  F008         	goto	l3560
  1199  00121A                     l3580:
  1200                           
  1201                           ; BSR set to: 0
  1202                           ;main.c: 100:             _delay((unsigned long)((50)*(27000000/4000.0)));
  1203  00121A  0E02               	movlw	2
  1204  00121C  0100               	movlb	0	; () banked
  1205  00121E  6FE2               	movwf	(??_main+1)& (0+255),b
  1206  001220  0EB7               	movlw	183
  1207  001222  6FE1               	movwf	??_main& (0+255),b
  1208  001224  0E4C               	movlw	76
  1209  001226                     u2857:
  1210  001226  2EE8               	decfsz	wreg,f,c
  1211  001228  D7FE               	bra	u2857
  1212  00122A  2FE1               	decfsz	??_main& (0+255),f,b
  1213  00122C  D7FC               	bra	u2857
  1214  00122E  2FE2               	decfsz	(??_main+1)& (0+255),f,b
  1215  001230  D7FA               	bra	u2857
  1216  001232  F000               	nop	
  1217  001234                     
  1218                           ;main.c: 101:             LATB7 = 0;
  1219  001234  9E8A               	bcf	3978,7,c	;volatile
  1220  001236                     
  1221                           ;main.c: 102:             MFRC522_Halt();
  1222  001236  EC0E  F00D         	call	_MFRC522_Halt	;wreg free
  1223  00123A  EF32  F008         	goto	l3522
  1224  00123E  EF1D  F000         	goto	start
  1225  001242                     __end_of_main:
  1226                           	callstack 0
  1227                           
  1228 ;; *************** function _uart_init *****************
  1229 ;; Defined at:
  1230 ;;		line 24 in file "main.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;  gen_reg         2    1[COMRAM] unsigned short 
  1233 ;;  sync            2    3[COMRAM] unsigned int 
  1234 ;;  brgh            2    5[COMRAM] unsigned int 
  1235 ;;  brg16           2    7[COMRAM] unsigned int 
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2, status,0, prodl, prodh
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1247 ;;      Params:         8       0       0       0       0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1250 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1251 ;;Total ram usage:        8 bytes
  1252 ;; Hardware stack levels used: 1
  1253 ;; Hardware stack levels required when called: 2
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text1
  1262  00218A                     __ptext1:
  1263                           	callstack 0
  1264  00218A                     _uart_init:
  1265                           	callstack 28
  1266  00218A                     
  1267                           ;main.c: 25:     TRISCbits.RC7 = 1;
  1268  00218A  8E94               	bsf	148,7,c	;volatile
  1269                           
  1270                           ;main.c: 26:     TRISCbits.RC6 = 1;
  1271  00218C  8C94               	bsf	148,6,c	;volatile
  1272  00218E                     
  1273                           ;main.c: 28:     SPBRGH = (gen_reg & 0xFF00) >> 8;
  1274  00218E  5003               	movf	(uart_init@gen_reg+1)^0,w,c
  1275  002190  6EB0               	movwf	176,c	;volatile
  1276  002192                     
  1277                           ;main.c: 29:     SPBRG = gen_reg * 0x00FF;
  1278  002192  5002               	movf	uart_init@gen_reg^0,w,c
  1279  002194  0D01               	mullw	1
  1280  002196  50F3               	movf	243,w,c
  1281  002198  0800               	sublw	0
  1282  00219A  6EAF               	movwf	175,c	;volatile
  1283  00219C                     
  1284                           ;main.c: 31:     RCSTAbits.CREN = 1;
  1285  00219C  88AB               	bsf	171,4,c	;volatile
  1286  00219E                     
  1287                           ;main.c: 32:     RCSTAbits.SPEN = 1;
  1288  00219E  8EAB               	bsf	171,7,c	;volatile
  1289  0021A0                     
  1290                           ;main.c: 33:     BAUDCONbits.BRG16 = brg16;
  1291  0021A0  B008               	btfsc	uart_init@brg16^0,0,c
  1292  0021A2  D002               	bra	u2565
  1293  0021A4  96B8               	bcf	184,3,c	;volatile
  1294  0021A6  D001               	bra	u2566
  1295  0021A8                     u2565:
  1296  0021A8  86B8               	bsf	184,3,c	;volatile
  1297  0021AA                     u2566:
  1298  0021AA                     
  1299                           ;main.c: 35:     TXSTAbits.SYNC = sync;
  1300  0021AA  B004               	btfsc	uart_init@sync^0,0,c
  1301  0021AC  D002               	bra	u2575
  1302  0021AE  98AC               	bcf	172,4,c	;volatile
  1303  0021B0  D001               	bra	u2576
  1304  0021B2                     u2575:
  1305  0021B2  88AC               	bsf	172,4,c	;volatile
  1306  0021B4                     u2576:
  1307  0021B4                     
  1308                           ;main.c: 36:     TXSTAbits.BRGH = brgh;
  1309  0021B4  B006               	btfsc	uart_init@brgh^0,0,c
  1310  0021B6  D002               	bra	u2585
  1311  0021B8  94AC               	bcf	172,2,c	;volatile
  1312  0021BA  D001               	bra	u2586
  1313  0021BC                     u2585:
  1314  0021BC  84AC               	bsf	172,2,c	;volatile
  1315  0021BE                     u2586:
  1316  0021BE                     
  1317                           ;main.c: 37:     TXSTAbits.TXEN = 1;
  1318  0021BE  8AAC               	bsf	172,5,c	;volatile
  1319  0021C0                     
  1320                           ;main.c: 39:     IPR1bits.RCIP = 1;
  1321  0021C0  8A9F               	bsf	159,5,c	;volatile
  1322  0021C2                     
  1323                           ;main.c: 40:     PIE1bits.RCIE = 1;
  1324  0021C2  8A9D               	bsf	157,5,c	;volatile
  1325  0021C4  0012               	return		;funcret
  1326  0021C6                     __end_of_uart_init:
  1327                           	callstack 0
  1328                           
  1329 ;; *************** function _sprintf *****************
  1330 ;; Defined at:
  1331 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1334 ;;		 -> data_buffer(16), 
  1335 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1336 ;;		 -> STR_4(3), STR_3(3), 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  f              11    8[BANK0 ] struct _IO_FILE
  1339 ;;  ap              2    6[BANK0 ] PTR void [1]
  1340 ;;		 -> ?_sprintf(2), 
  1341 ;;  ret             2    0        int 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  2    0[BANK0 ] int 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1351 ;;      Params:         0       6       0       0       0       0       0       0       0
  1352 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1354 ;;      Totals:         0      19       0       0       0       0       0       0       0
  1355 ;;Total ram usage:       19 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 9
  1358 ;; This function calls:
  1359 ;;		_vfprintf
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text2
  1366  002066                     __ptext2:
  1367                           	callstack 0
  1368  002066                     _sprintf:
  1369                           	callstack 21
  1370  002066  0ED2               	movlw	low (?_sprintf+4)
  1371  002068  0100               	movlb	0	; () banked
  1372  00206A  6FD4               	movwf	sprintf@ap& (0+255),b
  1373  00206C  0E00               	movlw	high (?_sprintf+4)
  1374  00206E  6FD5               	movwf	(sprintf@ap+1)& (0+255),b
  1375  002070  C0CE  F0D6         	movff	sprintf@s,sprintf@f
  1376  002074  C0CF  F0D7         	movff	sprintf@s+1,sprintf@f+1
  1377  002078                     
  1378                           ; BSR set to: 0
  1379  002078  0E00               	movlw	0
  1380  00207A  6FDA               	movwf	(sprintf@f+4)& (0+255),b
  1381  00207C  0E00               	movlw	0
  1382  00207E  6FD9               	movwf	(sprintf@f+3)& (0+255),b
  1383  002080                     
  1384                           ; BSR set to: 0
  1385  002080  0E00               	movlw	0
  1386  002082  6FE0               	movwf	(sprintf@f+10)& (0+255),b
  1387  002084  0E00               	movlw	0
  1388  002086  6FDF               	movwf	(sprintf@f+9)& (0+255),b
  1389  002088                     
  1390                           ; BSR set to: 0
  1391  002088  0ED6               	movlw	low sprintf@f
  1392  00208A  6E53               	movwf	vfprintf@fp^0,c
  1393  00208C  0E00               	movlw	high sprintf@f
  1394  00208E  6E54               	movwf	(vfprintf@fp+1)^0,c
  1395  002090  C0D0  F055         	movff	sprintf@fmt,vfprintf@fmt
  1396  002094  C0D1  F056         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1397  002098  0ED4               	movlw	low sprintf@ap
  1398  00209A  6E57               	movwf	vfprintf@ap^0,c
  1399  00209C  0E00               	movlw	high sprintf@ap
  1400  00209E  6E58               	movwf	(vfprintf@ap+1)^0,c
  1401  0020A0  ECD6  F00F         	call	_vfprintf	;wreg free
  1402  0020A4  0100               	movlb	0	; () banked
  1403  0020A6  51D9               	movf	(sprintf@f+3)& (0+255),w,b
  1404  0020A8  25CE               	addwf	sprintf@s& (0+255),w,b
  1405  0020AA  6ED9               	movwf	fsr2l,c
  1406  0020AC  51DA               	movf	(sprintf@f+4)& (0+255),w,b
  1407  0020AE  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  1408  0020B0  6EDA               	movwf	fsr2h,c
  1409  0020B2  0E00               	movlw	0
  1410  0020B4  6EDF               	movwf	indf2,c
  1411  0020B6                     
  1412                           ; BSR set to: 0
  1413  0020B6  0012               	return		;funcret
  1414  0020B8                     __end_of_sprintf:
  1415                           	callstack 0
  1416                           
  1417 ;; *************** function _vfprintf *****************
  1418 ;; Defined at:
  1419 ;;		line 1390 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  1422 ;;		 -> sprintf@f(11), 
  1423 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  1424 ;;		 -> STR_4(3), STR_3(3), 
  1425 ;;  ap              2   86[COMRAM] PTR PTR void 
  1426 ;;		 -> sprintf@ap(2), 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  1429 ;;		 -> STR_4(3), STR_3(3), 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  2   82[COMRAM] int 
  1432 ;; Registers used:
  1433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1439 ;;      Params:         6       0       0       0       0       0       0       0       0
  1440 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1442 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1443 ;;Total ram usage:        8 bytes
  1444 ;; Hardware stack levels used: 1
  1445 ;; Hardware stack levels required when called: 8
  1446 ;; This function calls:
  1447 ;;		_vfpfcnvrt
  1448 ;; This function is called by:
  1449 ;;		_sprintf
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text3
  1454  001FAC                     __ptext3:
  1455                           	callstack 0
  1456  001FAC                     _vfprintf:
  1457                           	callstack 21
  1458  001FAC                     
  1459                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1460  001FAC  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  1461  001FB0  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1462  001FB4                     
  1463                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1464  001FB4  0E00               	movlw	0
  1465  001FB6  0100               	movlb	0	; () banked
  1466  001FB8  6F71               	movwf	(_nout+1)& (0+255),b
  1467  001FBA  0E00               	movlw	0
  1468  001FBC  6F70               	movwf	_nout& (0+255),b
  1469                           
  1470                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1471  001FBE  EFF4  F00F         	goto	l3154
  1472  001FC2                     l3152:
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1476  001FC2  C053  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1477  001FC6  C054  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1478  001FCA  0E59               	movlw	low vfprintf@cfmt
  1479  001FCC  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1480  001FCE  0E00               	movlw	high vfprintf@cfmt
  1481  001FD0  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1482  001FD2  C057  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1483  001FD6  C058  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1484  001FDA  EC21  F009         	call	_vfpfcnvrt	;wreg free
  1485  001FDE  5040               	movf	?_vfpfcnvrt^0,w,c
  1486  001FE0  0100               	movlb	0	; () banked
  1487  001FE2  2770               	addwf	_nout& (0+255),f,b
  1488  001FE4  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1489  001FE6  2371               	addwfc	(_nout+1)& (0+255),f,b
  1490  001FE8                     l3154:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1494  001FE8  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  1495  001FEC  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1496  001FF0                     	if	0	;tblptru may be non-zero
  1497  001FF0                     	endif
  1498  001FF0                     	if	0	;tblptru may be non-zero
  1499  001FF0                     	endif
  1500  001FF0  0008               	tblrd		*
  1501  001FF2  50F5               	movf	tablat,w,c
  1502  001FF4  0900               	iorlw	0
  1503  001FF6  A4D8               	btfss	status,2,c
  1504  001FF8  EF00  F010         	goto	u2551
  1505  001FFC  EF02  F010         	goto	u2550
  1506  002000                     u2551:
  1507  002000  EFE1  F00F         	goto	l3152
  1508  002004                     u2550:
  1509  002004                     
  1510                           ; BSR set to: 0
  1511                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1512  002004  C070  F053         	movff	_nout,?_vfprintf
  1513  002008  C071  F054         	movff	_nout+1,?_vfprintf+1
  1514  00200C                     
  1515                           ; BSR set to: 0
  1516  00200C  0012               	return		;funcret
  1517  00200E                     __end_of_vfprintf:
  1518                           	callstack 0
  1519                           
  1520 ;; *************** function _vfpfcnvrt *****************
  1521 ;; Defined at:
  1522 ;;		line 692 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1525 ;;		 -> sprintf@f(11), 
  1526 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1527 ;;		 -> vfprintf@cfmt(2), 
  1528 ;;  ap              2   67[COMRAM] PTR PTR void 
  1529 ;;		 -> sprintf@ap(2), 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  llu             8   73[COMRAM] unsigned long long 
  1532 ;;  ll              8    0        long long 
  1533 ;;  f               4    0        long long 
  1534 ;;  vp              3    0        PTR void 
  1535 ;;  ct              3    0        unsigned char [3]
  1536 ;;  cp              3    0        PTR unsigned char 
  1537 ;;  i               2    0        int 
  1538 ;;  done            2    0        int 
  1539 ;;  c               1   81[COMRAM] unsigned char 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  2   63[COMRAM] int 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1549 ;;      Params:         6       0       0       0       0       0       0       0       0
  1550 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1551 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1552 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1553 ;;Total ram usage:       19 bytes
  1554 ;; Hardware stack levels used: 1
  1555 ;; Hardware stack levels required when called: 7
  1556 ;; This function calls:
  1557 ;;		_fputc
  1558 ;;		_xtoa
  1559 ;; This function is called by:
  1560 ;;		_vfprintf
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text4
  1565  001242                     __ptext4:
  1566                           	callstack 0
  1567  001242                     _vfpfcnvrt:
  1568                           	callstack 21
  1569  001242                     
  1570                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;D:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;D:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1571  001242  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1572  001246  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1573  00124A  CFDE FFF6          	movff	postinc2,tblptrl
  1574  00124E  CFDD FFF7          	movff	postdec2,tblptrh
  1575  001252                     	if	0	;tblptru may be non-zero
  1576  001252                     	endif
  1577  001252                     	if	0	;tblptru may be non-zero
  1578  001252                     	endif
  1579  001252  0008               	tblrd		*
  1580  001254  50F5               	movf	tablat,w,c
  1581  001256  0A25               	xorlw	37
  1582  001258  A4D8               	btfss	status,2,c
  1583  00125A  EF31  F009         	goto	u2301
  1584  00125E  EF33  F009         	goto	u2300
  1585  001262                     u2301:
  1586  001262  EFED  F009         	goto	l2954
  1587  001266                     u2300:
  1588  001266                     
  1589                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1590  001266  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1591  00126A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1592  00126E  2ADE               	incf	postinc2,f,c
  1593  001270  0E00               	movlw	0
  1594  001272  22DD               	addwfc	postdec2,f,c
  1595  001274                     
  1596                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1597  001274  0E00               	movlw	0
  1598  001276  0100               	movlb	0	; () banked
  1599  001278  6F73               	movwf	(_width+1)& (0+255),b
  1600  00127A  0E00               	movlw	0
  1601  00127C  6F72               	movwf	_width& (0+255),b
  1602  00127E  C072  F076         	movff	_width,_flags
  1603  001282  C073  F077         	movff	_width+1,_flags+1
  1604  001286                     
  1605                           ; BSR set to: 0
  1606                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1607  001286  6974               	setf	_prec& (0+255),b
  1608  001288  6975               	setf	(_prec+1)& (0+255),b
  1609  00128A                     
  1610                           ; BSR set to: 0
  1611                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1612  00128A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1613  00128E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1614  001292  CFDE FFF6          	movff	postinc2,tblptrl
  1615  001296  CFDD FFF7          	movff	postdec2,tblptrh
  1616  00129A                     	if	0	;tblptru may be non-zero
  1617  00129A                     	endif
  1618  00129A                     	if	0	;tblptru may be non-zero
  1619  00129A                     	endif
  1620  00129A  0008               	tblrd		*
  1621  00129C  50F5               	movf	tablat,w,c
  1622  00129E  0A78               	xorlw	120
  1623  0012A0  B4D8               	btfsc	status,2,c
  1624  0012A2  EF55  F009         	goto	u2311
  1625  0012A6  EF57  F009         	goto	u2310
  1626  0012AA                     u2311:
  1627  0012AA  EF69  F009         	goto	l2928
  1628  0012AE                     u2310:
  1629  0012AE                     
  1630                           ; BSR set to: 0
  1631  0012AE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1632  0012B2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1633  0012B6  CFDE FFF6          	movff	postinc2,tblptrl
  1634  0012BA  CFDD FFF7          	movff	postdec2,tblptrh
  1635  0012BE                     	if	0	;tblptru may be non-zero
  1636  0012BE                     	endif
  1637  0012BE                     	if	0	;tblptru may be non-zero
  1638  0012BE                     	endif
  1639  0012BE  0008               	tblrd		*
  1640  0012C0  50F5               	movf	tablat,w,c
  1641  0012C2  0A58               	xorlw	88
  1642  0012C4  A4D8               	btfss	status,2,c
  1643  0012C6  EF67  F009         	goto	u2321
  1644  0012CA  EF69  F009         	goto	u2320
  1645  0012CE                     u2321:
  1646  0012CE  EFB7  F009         	goto	l2938
  1647  0012D2                     u2320:
  1648  0012D2                     l2928:
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  1652  0012D2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1653  0012D6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1654  0012DA  CFDE FFF6          	movff	postinc2,tblptrl
  1655  0012DE  CFDD FFF7          	movff	postdec2,tblptrh
  1656  0012E2                     	if	0	;tblptru may be non-zero
  1657  0012E2                     	endif
  1658  0012E2                     	if	0	;tblptru may be non-zero
  1659  0012E2                     	endif
  1660  0012E2  0008               	tblrd		*
  1661  0012E4  CFF5 F052          	movff	tablat,vfpfcnvrt@c
  1662  0012E8                     
  1663                           ; BSR set to: 0
  1664                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  1665  0012E8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1666  0012EC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1667  0012F0  2ADE               	incf	postinc2,f,c
  1668  0012F2  0E00               	movlw	0
  1669  0012F4  22DD               	addwfc	postdec2,f,c
  1670  0012F6                     
  1671                           ; BSR set to: 0
  1672                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1673  0012F6  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1674  0012FA  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1675  0012FE  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1676  001302  0E02               	movlw	2
  1677  001304  26DE               	addwf	postinc2,f,c
  1678  001306  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1679  00130A  0E00               	movlw	0
  1680  00130C  22DD               	addwfc	postdec2,f,c
  1681  00130E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1682  001312  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1683  001316  CFDE F048          	movff	postinc2,??_vfpfcnvrt+2
  1684  00131A  CFDD F049          	movff	postdec2,??_vfpfcnvrt+3
  1685  00131E  C048  F04A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1686  001322  C049  F04B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1687  001326  6A4C               	clrf	(vfpfcnvrt@llu+2)^0,c
  1688  001328  6A4D               	clrf	(vfpfcnvrt@llu+3)^0,c
  1689  00132A  6A4E               	clrf	(vfpfcnvrt@llu+4)^0,c
  1690  00132C  6A4F               	clrf	(vfpfcnvrt@llu+5)^0,c
  1691  00132E  6A50               	clrf	(vfpfcnvrt@llu+6)^0,c
  1692  001330  6A51               	clrf	(vfpfcnvrt@llu+7)^0,c
  1693  001332                     
  1694                           ; BSR set to: 0
  1695                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  1696  001332  C040  F01D         	movff	vfpfcnvrt@fp,xtoa@fp
  1697  001336  C041  F01E         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1698  00133A  C04A  F01F         	movff	vfpfcnvrt@llu,xtoa@d
  1699  00133E  C04B  F020         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1700  001342  C04C  F021         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1701  001346  C04D  F022         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1702  00134A  C04E  F023         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1703  00134E  C04F  F024         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1704  001352  C050  F025         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1705  001356  C051  F026         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1706  00135A  C052  F027         	movff	vfpfcnvrt@c,xtoa@x
  1707  00135E  EC09  F004         	call	_xtoa	;wreg free
  1708  001362  C01D  F040         	movff	?_xtoa,?_vfpfcnvrt
  1709  001366  C01E  F041         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1710  00136A  EF08  F00A         	goto	l1195
  1711  00136E                     l2938:
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1715  00136E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1716  001372  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1717  001376  CFDE FFF6          	movff	postinc2,tblptrl
  1718  00137A  CFDD FFF7          	movff	postdec2,tblptrh
  1719  00137E                     	if	0	;tblptru may be non-zero
  1720  00137E                     	endif
  1721  00137E                     	if	0	;tblptru may be non-zero
  1722  00137E                     	endif
  1723  00137E  0008               	tblrd		*
  1724  001380  50F5               	movf	tablat,w,c
  1725  001382  0A25               	xorlw	37
  1726  001384  A4D8               	btfss	status,2,c
  1727  001386  EFC7  F009         	goto	u2331
  1728  00138A  EFC9  F009         	goto	u2330
  1729  00138E                     u2331:
  1730  00138E  EFE0  F009         	goto	l2948
  1731  001392                     u2330:
  1732  001392                     
  1733                           ; BSR set to: 0
  1734                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1735  001392  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1736  001396  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1737  00139A  2ADE               	incf	postinc2,f,c
  1738  00139C  0E00               	movlw	0
  1739  00139E  22DD               	addwfc	postdec2,f,c
  1740  0013A0                     
  1741                           ; BSR set to: 0
  1742                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1743  0013A0  0E00               	movlw	0
  1744  0013A2  6E03               	movwf	(fputc@c+1)^0,c
  1745  0013A4  0E25               	movlw	37
  1746  0013A6  6E02               	movwf	fputc@c^0,c
  1747  0013A8  C040  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1748  0013AC  C041  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1749  0013B0  EC80  F00A         	call	_fputc	;wreg free
  1750  0013B4                     l2944:
  1751                           
  1752                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1753  0013B4  0E00               	movlw	0
  1754  0013B6  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1755  0013B8  0E01               	movlw	1
  1756  0013BA  6E40               	movwf	?_vfpfcnvrt^0,c
  1757  0013BC  EF08  F00A         	goto	l1195
  1758  0013C0                     l2948:
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1762  0013C0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1763  0013C4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1764  0013C8  2ADE               	incf	postinc2,f,c
  1765  0013CA  0E00               	movlw	0
  1766  0013CC  22DD               	addwfc	postdec2,f,c
  1767  0013CE                     
  1768                           ; BSR set to: 0
  1769                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1770  0013CE  0E00               	movlw	0
  1771  0013D0  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1772  0013D2  0E00               	movlw	0
  1773  0013D4  6E40               	movwf	?_vfpfcnvrt^0,c
  1774  0013D6  EF08  F00A         	goto	l1195
  1775  0013DA                     l2954:
  1776                           
  1777                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1778  0013DA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1779  0013DE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1780  0013E2  CFDE FFF6          	movff	postinc2,tblptrl
  1781  0013E6  CFDD FFF7          	movff	postdec2,tblptrh
  1782  0013EA                     	if	0	;tblptru may be non-zero
  1783  0013EA                     	endif
  1784  0013EA                     	if	0	;tblptru may be non-zero
  1785  0013EA                     	endif
  1786  0013EA  0008               	tblrd		*
  1787  0013EC  50F5               	movf	tablat,w,c
  1788  0013EE  6E02               	movwf	fputc@c^0,c
  1789  0013F0  6A03               	clrf	(fputc@c+1)^0,c
  1790  0013F2  C040  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1791  0013F6  C041  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1792  0013FA  EC80  F00A         	call	_fputc	;wreg free
  1793  0013FE                     
  1794                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1795  0013FE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1796  001402  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1797  001406  2ADE               	incf	postinc2,f,c
  1798  001408  0E00               	movlw	0
  1799  00140A  22DD               	addwfc	postdec2,f,c
  1800  00140C  EFDA  F009         	goto	l2944
  1801  001410                     l1195:
  1802  001410  0012               	return		;funcret
  1803  001412                     __end_of_vfpfcnvrt:
  1804                           	callstack 0
  1805                           
  1806 ;; *************** function _xtoa *****************
  1807 ;; Defined at:
  1808 ;;		line 645 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1811 ;;		 -> sprintf@f(11), 
  1812 ;;  d               8   30[COMRAM] unsigned long long 
  1813 ;;  x               1   38[COMRAM] unsigned char 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  n               8   51[COMRAM] unsigned long long 
  1816 ;;  c               2   61[COMRAM] int 
  1817 ;;  i               2   59[COMRAM] int 
  1818 ;;  w               2   49[COMRAM] int 
  1819 ;;  p               2   47[COMRAM] int 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  2   28[COMRAM] int 
  1822 ;; Registers used:
  1823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1829 ;;      Params:        11       0       0       0       0       0       0       0       0
  1830 ;;      Locals:        16       0       0       0       0       0       0       0       0
  1831 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1832 ;;      Totals:        35       0       0       0       0       0       0       0       0
  1833 ;;Total ram usage:       35 bytes
  1834 ;; Hardware stack levels used: 1
  1835 ;; Hardware stack levels required when called: 6
  1836 ;; This function calls:
  1837 ;;		_isalpha
  1838 ;;		_isupper
  1839 ;;		_pad
  1840 ;;		_toupper
  1841 ;; This function is called by:
  1842 ;;		_vfpfcnvrt
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text5
  1847  000812                     __ptext5:
  1848                           	callstack 0
  1849  000812                     _xtoa:
  1850                           	callstack 21
  1851  000812                     
  1852                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;D:\Program Files\Microchip\xc8\v2.36\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;D:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  1853  000812  0100               	movlb	0	; () banked
  1854  000814  BF75               	btfsc	(_prec+1)& (0+255),7,b
  1855  000816  EF0F  F004         	goto	u1911
  1856  00081A  EF11  F004         	goto	u1910
  1857  00081E                     u1911:
  1858  00081E  EF12  F004         	goto	l2676
  1859  000822                     u1910:
  1860  000822                     
  1861                           ; BSR set to: 0
  1862                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  1863  000822  9376               	bcf	_flags& (0+255),1,b
  1864  000824                     l2676:
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  1868  000824  BF75               	btfsc	(_prec+1)& (0+255),7,b
  1869  000826  EF1F  F004         	goto	u1920
  1870  00082A  5175               	movf	(_prec+1)& (0+255),w,b
  1871  00082C  E106               	bnz	u1921
  1872  00082E  0574               	decf	_prec& (0+255),w,b
  1873  000830  B0D8               	btfsc	status,0,c
  1874  000832  EF1D  F004         	goto	u1921
  1875  000836  EF1F  F004         	goto	u1920
  1876  00083A                     u1921:
  1877  00083A  EF25  F004         	goto	l1167
  1878  00083E                     u1920:
  1879  00083E                     
  1880                           ; BSR set to: 0
  1881  00083E  0E00               	movlw	0
  1882  000840  6E31               	movwf	(xtoa@p+1)^0,c
  1883  000842  0E01               	movlw	1
  1884  000844  6E30               	movwf	xtoa@p^0,c
  1885  000846  EF29  F004         	goto	l1169
  1886  00084A                     l1167:
  1887                           
  1888                           ; BSR set to: 0
  1889  00084A  C074  F030         	movff	_prec,xtoa@p
  1890  00084E  C075  F031         	movff	_prec+1,xtoa@p+1
  1891  000852                     l1169:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  1895  000852  C072  F032         	movff	_width,xtoa@w
  1896  000856  C073  F033         	movff	_width+1,xtoa@w+1
  1897                           
  1898                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  1899  00085A  A976               	btfss	_flags& (0+255),4,b
  1900  00085C  EF32  F004         	goto	u1931
  1901  000860  EF34  F004         	goto	u1930
  1902  000864                     u1931:
  1903  000864  EF38  F004         	goto	l2682
  1904  000868                     u1930:
  1905  000868                     
  1906                           ; BSR set to: 0
  1907                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  1908  000868  0EFE               	movlw	254
  1909  00086A  2632               	addwf	xtoa@w^0,f,c
  1910  00086C  0EFF               	movlw	255
  1911  00086E  2233               	addwfc	(xtoa@w+1)^0,f,c
  1912  000870                     l2682:
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 661:     n = d;
  1916  000870  C01F  F034         	movff	xtoa@d,xtoa@n
  1917  000874  C020  F035         	movff	xtoa@d+1,xtoa@n+1
  1918  000878  C021  F036         	movff	xtoa@d+2,xtoa@n+2
  1919  00087C  C022  F037         	movff	xtoa@d+3,xtoa@n+3
  1920  000880  C023  F038         	movff	xtoa@d+4,xtoa@n+4
  1921  000884  C024  F039         	movff	xtoa@d+5,xtoa@n+5
  1922  000888  C025  F03A         	movff	xtoa@d+6,xtoa@n+6
  1923  00088C  C026  F03B         	movff	xtoa@d+7,xtoa@n+7
  1924  000890                     
  1925                           ; BSR set to: 0
  1926                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  1927  000890  0E00               	movlw	0
  1928  000892  6E3D               	movwf	(xtoa@i+1)^0,c
  1929  000894  0E1F               	movlw	31
  1930  000896  6E3C               	movwf	xtoa@i^0,c
  1931  000898                     
  1932                           ; BSR set to: 0
  1933                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  1934  000898  0E00               	movlw	0
  1935  00089A  6F9B               	movwf	(_dbuf+31)& (0+255),b
  1936                           
  1937                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1938  00089C  EFE9  F004         	goto	l2718
  1939  0008A0                     l2688:
  1940                           
  1941                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 665:         --i;
  1942  0008A0  063C               	decf	xtoa@i^0,f,c
  1943  0008A2  A0D8               	btfss	status,0,c
  1944  0008A4  063D               	decf	(xtoa@i+1)^0,f,c
  1945  0008A6                     
  1946                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  1947  0008A6  0E0F               	movlw	15
  1948  0008A8  1434               	andwf	xtoa@n^0,w,c
  1949  0008AA  6E3E               	movwf	xtoa@c^0,c
  1950  0008AC  6A3F               	clrf	(xtoa@c+1)^0,c
  1951  0008AE                     
  1952                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  1953  0008AE  BE3F               	btfsc	(xtoa@c+1)^0,7,c
  1954  0008B0  EF63  F004         	goto	u1941
  1955  0008B4  503F               	movf	(xtoa@c+1)^0,w,c
  1956  0008B6  E109               	bnz	u1940
  1957  0008B8  0E0A               	movlw	10
  1958  0008BA  5C3E               	subwf	xtoa@c^0,w,c
  1959  0008BC  A0D8               	btfss	status,0,c
  1960  0008BE  EF63  F004         	goto	u1941
  1961  0008C2  EF65  F004         	goto	u1940
  1962  0008C6                     u1941:
  1963  0008C6  EF6D  F004         	goto	l2696
  1964  0008CA                     u1940:
  1965  0008CA  0E57               	movlw	87
  1966  0008CC  243E               	addwf	xtoa@c^0,w,c
  1967  0008CE  6E3E               	movwf	xtoa@c^0,c
  1968  0008D0  0E00               	movlw	0
  1969  0008D2  203F               	addwfc	(xtoa@c+1)^0,w,c
  1970  0008D4  6E3F               	movwf	(xtoa@c+1)^0,c
  1971  0008D6  EF73  F004         	goto	l2700
  1972  0008DA                     l2696:
  1973  0008DA  0E30               	movlw	48
  1974  0008DC  243E               	addwf	xtoa@c^0,w,c
  1975  0008DE  6E3E               	movwf	xtoa@c^0,c
  1976  0008E0  0E00               	movlw	0
  1977  0008E2  203F               	addwfc	(xtoa@c+1)^0,w,c
  1978  0008E4  6E3F               	movwf	(xtoa@c+1)^0,c
  1979  0008E6                     l2700:
  1980  0008E6  0EBF               	movlw	191
  1981  0008E8  6E28               	movwf	??_xtoa^0,c
  1982  0008EA  0EFF               	movlw	255
  1983  0008EC  6E29               	movwf	(??_xtoa+1)^0,c
  1984  0008EE  5027               	movf	xtoa@x^0,w,c
  1985  0008F0  6E2A               	movwf	(??_xtoa+2)^0,c
  1986  0008F2  6A2B               	clrf	(??_xtoa+3)^0,c
  1987  0008F4  5028               	movf	??_xtoa^0,w,c
  1988  0008F6  262A               	addwf	(??_xtoa+2)^0,f,c
  1989  0008F8  5029               	movf	(??_xtoa+1)^0,w,c
  1990  0008FA  222B               	addwfc	(??_xtoa+3)^0,f,c
  1991  0008FC  502B               	movf	(??_xtoa+3)^0,w,c
  1992  0008FE  E107               	bnz	u1951
  1993  000900  0E1A               	movlw	26
  1994  000902  5C2A               	subwf	(??_xtoa+2)^0,w,c
  1995  000904  B0D8               	btfsc	status,0,c
  1996  000906  EF87  F004         	goto	u1951
  1997  00090A  EF89  F004         	goto	u1950
  1998  00090E                     u1951:
  1999  00090E  EFAC  F004         	goto	l2710
  2000  000912                     u1950:
  2001  000912  0E9F               	movlw	159
  2002  000914  6E28               	movwf	??_xtoa^0,c
  2003  000916  0EFF               	movlw	255
  2004  000918  6E29               	movwf	(??_xtoa+1)^0,c
  2005  00091A  0E20               	movlw	32
  2006  00091C  103E               	iorwf	xtoa@c^0,w,c
  2007  00091E  6E2A               	movwf	(??_xtoa+2)^0,c
  2008  000920  0E00               	movlw	0
  2009  000922  103F               	iorwf	(xtoa@c+1)^0,w,c
  2010  000924  6E2B               	movwf	(??_xtoa+3)^0,c
  2011  000926  5028               	movf	??_xtoa^0,w,c
  2012  000928  262A               	addwf	(??_xtoa+2)^0,f,c
  2013  00092A  5029               	movf	(??_xtoa+1)^0,w,c
  2014  00092C  222B               	addwfc	(??_xtoa+3)^0,f,c
  2015  00092E  502B               	movf	(??_xtoa+3)^0,w,c
  2016  000930  E107               	bnz	u1961
  2017  000932  0E1A               	movlw	26
  2018  000934  5C2A               	subwf	(??_xtoa+2)^0,w,c
  2019  000936  B0D8               	btfsc	status,0,c
  2020  000938  EFA0  F004         	goto	u1961
  2021  00093C  EFA2  F004         	goto	u1960
  2022  000940                     u1961:
  2023  000940  EFAC  F004         	goto	l2710
  2024  000944                     u1960:
  2025  000944                     
  2026                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  2027  000944  C03E  F008         	movff	xtoa@c,toupper@c
  2028  000948  C03F  F009         	movff	xtoa@c+1,toupper@c+1
  2029  00094C  EC81  F010         	call	_toupper	;wreg free
  2030  000950  C008  F03E         	movff	?_toupper,xtoa@c
  2031  000954  C009  F03F         	movff	?_toupper+1,xtoa@c+1
  2032  000958                     l2710:
  2033                           
  2034                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  2035  000958  0E7C               	movlw	low _dbuf
  2036  00095A  243C               	addwf	xtoa@i^0,w,c
  2037  00095C  6ED9               	movwf	fsr2l,c
  2038  00095E  0E00               	movlw	high _dbuf
  2039  000960  203D               	addwfc	(xtoa@i+1)^0,w,c
  2040  000962  6EDA               	movwf	fsr2h,c
  2041  000964  C03E  FFDF         	movff	xtoa@c,indf2
  2042  000968                     
  2043                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 672:         --p;
  2044  000968  0630               	decf	xtoa@p^0,f,c
  2045  00096A  A0D8               	btfss	status,0,c
  2046  00096C  0631               	decf	(xtoa@p+1)^0,f,c
  2047  00096E                     
  2048                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 673:         --w;
  2049  00096E  0632               	decf	xtoa@w^0,f,c
  2050  000970  A0D8               	btfss	status,0,c
  2051  000972  0633               	decf	(xtoa@w+1)^0,f,c
  2052  000974                     
  2053                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  2054  000974  C034  F028         	movff	xtoa@n,??_xtoa
  2055  000978  C035  F029         	movff	xtoa@n+1,??_xtoa+1
  2056  00097C  C036  F02A         	movff	xtoa@n+2,??_xtoa+2
  2057  000980  C037  F02B         	movff	xtoa@n+3,??_xtoa+3
  2058  000984  C038  F02C         	movff	xtoa@n+4,??_xtoa+4
  2059  000988  C039  F02D         	movff	xtoa@n+5,??_xtoa+5
  2060  00098C  C03A  F02E         	movff	xtoa@n+6,??_xtoa+6
  2061  000990  C03B  F02F         	movff	xtoa@n+7,??_xtoa+7
  2062  000994  0E05               	movlw	5
  2063  000996  EFD6  F004         	goto	u1970
  2064  00099A                     u1975:
  2065  00099A  90D8               	bcf	status,0,c
  2066  00099C  322F               	rrcf	(??_xtoa+7)^0,f,c
  2067  00099E  322E               	rrcf	(??_xtoa+6)^0,f,c
  2068  0009A0  322D               	rrcf	(??_xtoa+5)^0,f,c
  2069  0009A2  322C               	rrcf	(??_xtoa+4)^0,f,c
  2070  0009A4  322B               	rrcf	(??_xtoa+3)^0,f,c
  2071  0009A6  322A               	rrcf	(??_xtoa+2)^0,f,c
  2072  0009A8  3229               	rrcf	(??_xtoa+1)^0,f,c
  2073  0009AA  3228               	rrcf	??_xtoa^0,f,c
  2074  0009AC                     u1970:
  2075  0009AC  2EE8               	decfsz	wreg,f,c
  2076  0009AE  EFCD  F004         	goto	u1975
  2077  0009B2  C028  F034         	movff	??_xtoa,xtoa@n
  2078  0009B6  C029  F035         	movff	??_xtoa+1,xtoa@n+1
  2079  0009BA  C02A  F036         	movff	??_xtoa+2,xtoa@n+2
  2080  0009BE  C02B  F037         	movff	??_xtoa+3,xtoa@n+3
  2081  0009C2  C02C  F038         	movff	??_xtoa+4,xtoa@n+4
  2082  0009C6  C02D  F039         	movff	??_xtoa+5,xtoa@n+5
  2083  0009CA  C02E  F03A         	movff	??_xtoa+6,xtoa@n+6
  2084  0009CE  C02F  F03B         	movff	??_xtoa+7,xtoa@n+7
  2085  0009D2                     l2718:
  2086                           
  2087                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2088  0009D2  BE3D               	btfsc	(xtoa@i+1)^0,7,c
  2089  0009D4  EFF5  F004         	goto	u1981
  2090  0009D8  503D               	movf	(xtoa@i+1)^0,w,c
  2091  0009DA  E109               	bnz	u1980
  2092  0009DC  0E02               	movlw	2
  2093  0009DE  5C3C               	subwf	xtoa@i^0,w,c
  2094  0009E0  A0D8               	btfss	status,0,c
  2095  0009E2  EFF5  F004         	goto	u1981
  2096  0009E6  EFF7  F004         	goto	u1980
  2097  0009EA                     u1981:
  2098  0009EA  EF28  F005         	goto	l1186
  2099  0009EE                     u1980:
  2100  0009EE  5034               	movf	xtoa@n^0,w,c
  2101  0009F0  1035               	iorwf	(xtoa@n+1)^0,w,c
  2102  0009F2  1036               	iorwf	(xtoa@n+2)^0,w,c
  2103  0009F4  1037               	iorwf	(xtoa@n+3)^0,w,c
  2104  0009F6  1038               	iorwf	(xtoa@n+4)^0,w,c
  2105  0009F8  1039               	iorwf	(xtoa@n+5)^0,w,c
  2106  0009FA  103A               	iorwf	(xtoa@n+6)^0,w,c
  2107  0009FC  103B               	iorwf	(xtoa@n+7)^0,w,c
  2108  0009FE  A4D8               	btfss	status,2,c
  2109  000A00  EF04  F005         	goto	u1991
  2110  000A04  EF06  F005         	goto	u1990
  2111  000A08                     u1991:
  2112  000A08  EF50  F004         	goto	l2688
  2113  000A0C                     u1990:
  2114  000A0C  BE31               	btfsc	(xtoa@p+1)^0,7,c
  2115  000A0E  EF13  F005         	goto	u2000
  2116  000A12  5031               	movf	(xtoa@p+1)^0,w,c
  2117  000A14  E106               	bnz	u2001
  2118  000A16  0430               	decf	xtoa@p^0,w,c
  2119  000A18  B0D8               	btfsc	status,0,c
  2120  000A1A  EF11  F005         	goto	u2001
  2121  000A1E  EF13  F005         	goto	u2000
  2122  000A22                     u2001:
  2123  000A22  EF50  F004         	goto	l2688
  2124  000A26                     u2000:
  2125  000A26  BE33               	btfsc	(xtoa@w+1)^0,7,c
  2126  000A28  EF1E  F005         	goto	u2011
  2127  000A2C  5033               	movf	(xtoa@w+1)^0,w,c
  2128  000A2E  E108               	bnz	u2010
  2129  000A30  0432               	decf	xtoa@w^0,w,c
  2130  000A32  A0D8               	btfss	status,0,c
  2131  000A34  EF1E  F005         	goto	u2011
  2132  000A38  EF20  F005         	goto	u2010
  2133  000A3C                     u2011:
  2134  000A3C  EF28  F005         	goto	l1186
  2135  000A40                     u2010:
  2136  000A40  0100               	movlb	0	; () banked
  2137  000A42  B376               	btfsc	_flags& (0+255),1,b
  2138  000A44  EF26  F005         	goto	u2021
  2139  000A48  EF28  F005         	goto	u2020
  2140  000A4C                     u2021:
  2141  000A4C  EF50  F004         	goto	l2688
  2142  000A50                     u2020:
  2143  000A50                     l1186:
  2144                           
  2145                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  2146  000A50  0100               	movlb	0	; () banked
  2147  000A52  A976               	btfss	_flags& (0+255),4,b
  2148  000A54  EF2E  F005         	goto	u2031
  2149  000A58  EF30  F005         	goto	u2030
  2150  000A5C                     u2031:
  2151  000A5C  EF46  F005         	goto	l2734
  2152  000A60                     u2030:
  2153  000A60                     
  2154                           ; BSR set to: 0
  2155                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 679:         --i;
  2156  000A60  063C               	decf	xtoa@i^0,f,c
  2157  000A62  A0D8               	btfss	status,0,c
  2158  000A64  063D               	decf	(xtoa@i+1)^0,f,c
  2159  000A66                     
  2160                           ; BSR set to: 0
  2161                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  2162  000A66  0E7C               	movlw	low _dbuf
  2163  000A68  243C               	addwf	xtoa@i^0,w,c
  2164  000A6A  6ED9               	movwf	fsr2l,c
  2165  000A6C  0E00               	movlw	high _dbuf
  2166  000A6E  203D               	addwfc	(xtoa@i+1)^0,w,c
  2167  000A70  6EDA               	movwf	fsr2h,c
  2168  000A72  C027  FFDF         	movff	xtoa@x,indf2
  2169  000A76                     
  2170                           ; BSR set to: 0
  2171                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 681:         --i;
  2172  000A76  063C               	decf	xtoa@i^0,f,c
  2173  000A78  A0D8               	btfss	status,0,c
  2174  000A7A  063D               	decf	(xtoa@i+1)^0,f,c
  2175                           
  2176                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  2177  000A7C  0E7C               	movlw	low _dbuf
  2178  000A7E  243C               	addwf	xtoa@i^0,w,c
  2179  000A80  6ED9               	movwf	fsr2l,c
  2180  000A82  0E00               	movlw	high _dbuf
  2181  000A84  203D               	addwfc	(xtoa@i+1)^0,w,c
  2182  000A86  6EDA               	movwf	fsr2h,c
  2183  000A88  0E30               	movlw	48
  2184  000A8A  6EDF               	movwf	indf2,c
  2185  000A8C                     l2734:
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  2189  000A8C  C01D  F012         	movff	xtoa@fp,pad@fp
  2190  000A90  C01E  F013         	movff	xtoa@fp+1,pad@fp+1
  2191  000A94  0E7C               	movlw	low _dbuf
  2192  000A96  243C               	addwf	xtoa@i^0,w,c
  2193  000A98  6E14               	movwf	pad@buf^0,c
  2194  000A9A  0E00               	movlw	high _dbuf
  2195  000A9C  203D               	addwfc	(xtoa@i+1)^0,w,c
  2196  000A9E  6E15               	movwf	(pad@buf+1)^0,c
  2197  000AA0  C032  F016         	movff	xtoa@w,pad@p
  2198  000AA4  C033  F017         	movff	xtoa@w+1,pad@p+1
  2199  000AA8  ECE5  F00A         	call	_pad	;wreg free
  2200  000AAC  C012  F01D         	movff	?_pad,?_xtoa
  2201  000AB0  C013  F01E         	movff	?_pad+1,?_xtoa+1
  2202  000AB4  0012               	return		;funcret
  2203  000AB6                     __end_of_xtoa:
  2204                           	callstack 0
  2205                           
  2206 ;; *************** function _toupper *****************
  2207 ;; Defined at:
  2208 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\toupper.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  c               2    7[COMRAM] int 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  2    7[COMRAM] int 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2222 ;;      Params:         2       0       0       0       0       0       0       0       0
  2223 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2224 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2225 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2226 ;;Total ram usage:        6 bytes
  2227 ;; Hardware stack levels used: 1
  2228 ;; Hardware stack levels required when called: 3
  2229 ;; This function calls:
  2230 ;;		_islower
  2231 ;; This function is called by:
  2232 ;;		_xtoa
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text6
  2237  002102                     __ptext6:
  2238                           	callstack 0
  2239  002102                     _toupper:
  2240                           	callstack 23
  2241  002102  0E9F               	movlw	159
  2242  002104  6E0A               	movwf	??_toupper^0,c
  2243  002106  0EFF               	movlw	255
  2244  002108  6E0B               	movwf	(??_toupper+1)^0,c
  2245  00210A  C008  F00C         	movff	toupper@c,??_toupper+2
  2246  00210E  C009  F00D         	movff	toupper@c+1,??_toupper+3
  2247  002112  500A               	movf	??_toupper^0,w,c
  2248  002114  260C               	addwf	(??_toupper+2)^0,f,c
  2249  002116  500B               	movf	(??_toupper+1)^0,w,c
  2250  002118  220D               	addwfc	(??_toupper+3)^0,f,c
  2251  00211A  500D               	movf	(??_toupper+3)^0,w,c
  2252  00211C  E107               	bnz	u1901
  2253  00211E  0E1A               	movlw	26
  2254  002120  5C0C               	subwf	(??_toupper+2)^0,w,c
  2255  002122  B0D8               	btfsc	status,0,c
  2256  002124  EF96  F010         	goto	u1901
  2257  002128  EF98  F010         	goto	u1900
  2258  00212C                     u1901:
  2259  00212C  EF9E  F010         	goto	l1248
  2260  002130                     u1900:
  2261  002130  0E5F               	movlw	95
  2262  002132  1408               	andwf	toupper@c^0,w,c
  2263  002134  6E08               	movwf	?_toupper^0,c
  2264  002136  6A09               	clrf	(?_toupper+1)^0,c
  2265  002138  EFA2  F010         	goto	l1251
  2266  00213C                     l1248:
  2267  00213C  C008  F008         	movff	toupper@c,?_toupper
  2268  002140  C009  F009         	movff	toupper@c+1,?_toupper+1
  2269  002144                     l1251:
  2270  002144  0012               	return		;funcret
  2271  002146                     __end_of_toupper:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _islower *****************
  2275 ;; Defined at:
  2276 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\islower.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  c               2    1[COMRAM] int 
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  2    1[COMRAM] int 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2290 ;;      Params:         2       0       0       0       0       0       0       0       0
  2291 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2292 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2293 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2294 ;;Total ram usage:        6 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; Hardware stack levels required when called: 2
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_toupper
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text7
  2305  002202                     __ptext7:
  2306                           	callstack 0
  2307  002202                     _islower:
  2308                           	callstack 23
  2309  002202  0E9F               	movlw	159
  2310  002204  6E04               	movwf	??_islower^0,c
  2311  002206  0EFF               	movlw	255
  2312  002208  6E05               	movwf	(??_islower+1)^0,c
  2313  00220A  C002  F006         	movff	islower@c,??_islower+2
  2314  00220E  C003  F007         	movff	islower@c+1,??_islower+3
  2315  002212  5004               	movf	??_islower^0,w,c
  2316  002214  2606               	addwf	(??_islower+2)^0,f,c
  2317  002216  5005               	movf	(??_islower+1)^0,w,c
  2318  002218  2207               	addwfc	(??_islower+3)^0,f,c
  2319  00221A  5007               	movf	(??_islower+3)^0,w,c
  2320  00221C  E10A               	bnz	u1520
  2321  00221E  0E1A               	movlw	26
  2322  002220  5C06               	subwf	(??_islower+2)^0,w,c
  2323  002222  A0D8               	btfss	status,0,c
  2324  002224  EF16  F011         	goto	u1521
  2325  002228  EF19  F011         	goto	u1520
  2326  00222C                     u1521:
  2327  00222C  0E01               	movlw	1
  2328  00222E  EF1A  F011         	goto	u1530
  2329  002232                     u1520:
  2330  002232  0E00               	movlw	0
  2331  002234                     u1530:
  2332  002234  6E02               	movwf	?_islower^0,c
  2333  002236  6A03               	clrf	(?_islower+1)^0,c
  2334  002238  0012               	return		;funcret
  2335  00223A                     __end_of_islower:
  2336                           	callstack 0
  2337                           
  2338 ;; *************** function _pad *****************
  2339 ;; Defined at:
  2340 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2343 ;;		 -> sprintf@f(11), 
  2344 ;;  buf             2   19[COMRAM] PTR unsigned char 
  2345 ;;		 -> dbuf(32), 
  2346 ;;  p               2   21[COMRAM] int 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  w               2   26[COMRAM] int 
  2349 ;;  i               2   24[COMRAM] int 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  2   17[COMRAM] int 
  2352 ;; Registers used:
  2353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2359 ;;      Params:         6       0       0       0       0       0       0       0       0
  2360 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2361 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2362 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2363 ;;Total ram usage:       11 bytes
  2364 ;; Hardware stack levels used: 1
  2365 ;; Hardware stack levels required when called: 5
  2366 ;; This function calls:
  2367 ;;		_fputc
  2368 ;;		_fputs
  2369 ;;		_strlen
  2370 ;; This function is called by:
  2371 ;;		_xtoa
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text8
  2376  0015CA                     __ptext8:
  2377                           	callstack 0
  2378  0015CA                     _pad:
  2379                           	callstack 21
  2380  0015CA                     
  2381                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2382  0015CA  0100               	movlb	0	; () banked
  2383  0015CC  A176               	btfss	_flags& (0+255),0,b
  2384  0015CE  EFEB  F00A         	goto	u1821
  2385  0015D2  EFED  F00A         	goto	u1820
  2386  0015D6                     u1821:
  2387  0015D6  EFF7  F00A         	goto	l2610
  2388  0015DA                     u1820:
  2389  0015DA                     
  2390                           ; BSR set to: 0
  2391                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2392  0015DA  C014  F00B         	movff	pad@buf,fputs@s
  2393  0015DE  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2394  0015E2  C012  F00D         	movff	pad@fp,fputs@fp
  2395  0015E6  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2396  0015EA  ECA3  F010         	call	_fputs	;wreg free
  2397  0015EE                     l2610:
  2398                           
  2399                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2400  0015EE  BE17               	btfsc	(pad@p+1)^0,7,c
  2401  0015F0  EFFC  F00A         	goto	u1831
  2402  0015F4  EFFE  F00A         	goto	u1830
  2403  0015F8                     u1831:
  2404  0015F8  EF04  F00B         	goto	l2614
  2405  0015FC                     u1830:
  2406  0015FC  C016  F01B         	movff	pad@p,pad@w
  2407  001600  C017  F01C         	movff	pad@p+1,pad@w+1
  2408  001604  EF08  F00B         	goto	l1157
  2409  001608                     l2614:
  2410  001608  0E00               	movlw	0
  2411  00160A  6E1C               	movwf	(pad@w+1)^0,c
  2412  00160C  0E00               	movlw	0
  2413  00160E  6E1B               	movwf	pad@w^0,c
  2414  001610                     l1157:
  2415                           
  2416                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2417  001610  0E00               	movlw	0
  2418  001612  6E1A               	movwf	(pad@i+1)^0,c
  2419  001614  0E00               	movlw	0
  2420  001616  6E19               	movwf	pad@i^0,c
  2421                           
  2422                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2423  001618  EF1A  F00B         	goto	l2620
  2424  00161C                     l2616:
  2425                           
  2426                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2427  00161C  0E00               	movlw	0
  2428  00161E  6E03               	movwf	(fputc@c+1)^0,c
  2429  001620  0E20               	movlw	32
  2430  001622  6E02               	movwf	fputc@c^0,c
  2431  001624  C012  F004         	movff	pad@fp,fputc@fp
  2432  001628  C013  F005         	movff	pad@fp+1,fputc@fp+1
  2433  00162C  EC80  F00A         	call	_fputc	;wreg free
  2434  001630                     
  2435                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2436  001630  4A19               	infsnz	pad@i^0,f,c
  2437  001632  2A1A               	incf	(pad@i+1)^0,f,c
  2438  001634                     l2620:
  2439                           
  2440                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2441  001634  501B               	movf	pad@w^0,w,c
  2442  001636  5C19               	subwf	pad@i^0,w,c
  2443  001638  501A               	movf	(pad@i+1)^0,w,c
  2444  00163A  0A80               	xorlw	128
  2445  00163C  6E18               	movwf	??_pad^0,c
  2446  00163E  501C               	movf	(pad@w+1)^0,w,c
  2447  001640  0A80               	xorlw	128
  2448  001642  5818               	subwfb	??_pad^0,w,c
  2449  001644  A0D8               	btfss	status,0,c
  2450  001646  EF27  F00B         	goto	u1841
  2451  00164A  EF29  F00B         	goto	u1840
  2452  00164E                     u1841:
  2453  00164E  EF0E  F00B         	goto	l2616
  2454  001652                     u1840:
  2455  001652                     
  2456                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2457  001652  0100               	movlb	0	; () banked
  2458  001654  B176               	btfsc	_flags& (0+255),0,b
  2459  001656  EF2F  F00B         	goto	u1851
  2460  00165A  EF31  F00B         	goto	u1850
  2461  00165E                     u1851:
  2462  00165E  EF3B  F00B         	goto	l2624
  2463  001662                     u1850:
  2464  001662                     
  2465                           ; BSR set to: 0
  2466                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2467  001662  C014  F00B         	movff	pad@buf,fputs@s
  2468  001666  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2469  00166A  C012  F00D         	movff	pad@fp,fputs@fp
  2470  00166E  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2471  001672  ECA3  F010         	call	_fputs	;wreg free
  2472  001676                     l2624:
  2473                           
  2474                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2475  001676  C014  F002         	movff	pad@buf,strlen@s
  2476  00167A  C015  F003         	movff	pad@buf+1,strlen@s+1
  2477  00167E  EC39  F011         	call	_strlen	;wreg free
  2478  001682  501B               	movf	pad@w^0,w,c
  2479  001684  2402               	addwf	?_strlen^0,w,c
  2480  001686  6E12               	movwf	?_pad^0,c
  2481  001688  501C               	movf	(pad@w+1)^0,w,c
  2482  00168A  2003               	addwfc	(?_strlen+1)^0,w,c
  2483  00168C  6E13               	movwf	(?_pad+1)^0,c
  2484  00168E  0012               	return		;funcret
  2485  001690                     __end_of_pad:
  2486                           	callstack 0
  2487                           
  2488 ;; *************** function _strlen *****************
  2489 ;; Defined at:
  2490 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;  s               2    1[COMRAM] PTR const unsigned char 
  2493 ;;		 -> dbuf(32), UID_2(16), UID_1(16), 
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  a               2    3[COMRAM] PTR const unsigned char 
  2496 ;;		 -> dbuf(32), UID_2(16), UID_1(16), 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  2    1[COMRAM] unsigned int 
  2499 ;; Registers used:
  2500 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2506 ;;      Params:         2       0       0       0       0       0       0       0       0
  2507 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2509 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2510 ;;Total ram usage:        4 bytes
  2511 ;; Hardware stack levels used: 1
  2512 ;; Hardware stack levels required when called: 2
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_main
  2517 ;;		_pad
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text9
  2522  002272                     __ptext9:
  2523                           	callstack 0
  2524  002272                     _strlen:
  2525                           	callstack 28
  2526  002272  C002  F004         	movff	strlen@s,strlen@a
  2527  002276  C003  F005         	movff	strlen@s+1,strlen@a+1
  2528  00227A  EF41  F011         	goto	l2424
  2529  00227E                     l2422:
  2530  00227E  4A02               	infsnz	strlen@s^0,f,c
  2531  002280  2A03               	incf	(strlen@s+1)^0,f,c
  2532  002282                     l2424:
  2533  002282  C002  FFD9         	movff	strlen@s,fsr2l
  2534  002286  C003  FFDA         	movff	strlen@s+1,fsr2h
  2535  00228A  50DF               	movf	indf2,w,c
  2536  00228C  A4D8               	btfss	status,2,c
  2537  00228E  EF4B  F011         	goto	u1501
  2538  002292  EF4D  F011         	goto	u1500
  2539  002296                     u1501:
  2540  002296  EF3F  F011         	goto	l2422
  2541  00229A                     u1500:
  2542  00229A  5004               	movf	strlen@a^0,w,c
  2543  00229C  5C02               	subwf	strlen@s^0,w,c
  2544  00229E  6E02               	movwf	?_strlen^0,c
  2545  0022A0  5005               	movf	(strlen@a+1)^0,w,c
  2546  0022A2  5803               	subwfb	(strlen@s+1)^0,w,c
  2547  0022A4  6E03               	movwf	(?_strlen+1)^0,c
  2548  0022A6  0012               	return		;funcret
  2549  0022A8                     __end_of_strlen:
  2550                           	callstack 0
  2551                           
  2552 ;; *************** function _fputs *****************
  2553 ;; Defined at:
  2554 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  s               2   10[COMRAM] PTR const unsigned char 
  2557 ;;		 -> dbuf(32), 
  2558 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  2559 ;;		 -> sprintf@f(11), 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  i               2   15[COMRAM] int 
  2562 ;;  c               1   14[COMRAM] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  2   10[COMRAM] int 
  2565 ;; Registers used:
  2566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2572 ;;      Params:         4       0       0       0       0       0       0       0       0
  2573 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2575 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2576 ;;Total ram usage:        7 bytes
  2577 ;; Hardware stack levels used: 1
  2578 ;; Hardware stack levels required when called: 4
  2579 ;; This function calls:
  2580 ;;		_fputc
  2581 ;; This function is called by:
  2582 ;;		_pad
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text10
  2587  002146                     __ptext10:
  2588                           	callstack 0
  2589  002146                     _fputs:
  2590                           	callstack 21
  2591  002146  0E00               	movlw	0
  2592  002148  6E11               	movwf	(fputs@i+1)^0,c
  2593  00214A  0E00               	movlw	0
  2594  00214C  6E10               	movwf	fputs@i^0,c
  2595  00214E  EFB4  F010         	goto	l2436
  2596  002152                     l2432:
  2597  002152  C00F  F002         	movff	fputs@c,fputc@c
  2598  002156  6A03               	clrf	(fputc@c+1)^0,c
  2599  002158  C00D  F004         	movff	fputs@fp,fputc@fp
  2600  00215C  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  2601  002160  EC80  F00A         	call	_fputc	;wreg free
  2602  002164  4A10               	infsnz	fputs@i^0,f,c
  2603  002166  2A11               	incf	(fputs@i+1)^0,f,c
  2604  002168                     l2436:
  2605  002168  5010               	movf	fputs@i^0,w,c
  2606  00216A  240B               	addwf	fputs@s^0,w,c
  2607  00216C  6ED9               	movwf	fsr2l,c
  2608  00216E  5011               	movf	(fputs@i+1)^0,w,c
  2609  002170  200C               	addwfc	(fputs@s+1)^0,w,c
  2610  002172  6EDA               	movwf	fsr2h,c
  2611  002174  50DF               	movf	indf2,w,c
  2612  002176  6E0F               	movwf	fputs@c^0,c
  2613  002178  500F               	movf	fputs@c^0,w,c
  2614  00217A  A4D8               	btfss	status,2,c
  2615  00217C  EFC2  F010         	goto	u1511
  2616  002180  EFC4  F010         	goto	u1510
  2617  002184                     u1511:
  2618  002184  EFA9  F010         	goto	l2432
  2619  002188                     u1510:
  2620  002188  0012               	return		;funcret
  2621  00218A                     __end_of_fputs:
  2622                           	callstack 0
  2623                           
  2624 ;; *************** function _fputc *****************
  2625 ;; Defined at:
  2626 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  c               2    1[COMRAM] int 
  2629 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2630 ;;		 -> sprintf@f(11), 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  2    1[COMRAM] int 
  2635 ;; Registers used:
  2636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2642 ;;      Params:         4       0       0       0       0       0       0       0       0
  2643 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2644 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2645 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2646 ;;Total ram usage:        9 bytes
  2647 ;; Hardware stack levels used: 1
  2648 ;; Hardware stack levels required when called: 3
  2649 ;; This function calls:
  2650 ;;		_putch
  2651 ;; This function is called by:
  2652 ;;		_pad
  2653 ;;		_vfpfcnvrt
  2654 ;;		_fputs
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text11
  2659  001500                     __ptext11:
  2660                           	callstack 0
  2661  001500                     _fputc:
  2662                           	callstack 21
  2663  001500  5004               	movf	fputc@fp^0,w,c
  2664  001502  1005               	iorwf	(fputc@fp+1)^0,w,c
  2665  001504  B4D8               	btfsc	status,2,c
  2666  001506  EF87  F00A         	goto	u1461
  2667  00150A  EF89  F00A         	goto	u1460
  2668  00150E                     u1461:
  2669  00150E  EF92  F00A         	goto	l2410
  2670  001512                     u1460:
  2671  001512  5004               	movf	fputc@fp^0,w,c
  2672  001514  1005               	iorwf	(fputc@fp+1)^0,w,c
  2673  001516  A4D8               	btfss	status,2,c
  2674  001518  EF90  F00A         	goto	u1471
  2675  00151C  EF92  F00A         	goto	u1470
  2676  001520                     u1471:
  2677  001520  EF97  F00A         	goto	l2412
  2678  001524                     u1470:
  2679  001524                     l2410:
  2680  001524  5002               	movf	fputc@c^0,w,c
  2681  001526  EC72  F012         	call	_putch
  2682  00152A  EFE4  F00A         	goto	l1226
  2683  00152E                     l2412:
  2684  00152E  EE20 F009          	lfsr	2,9
  2685  001532  5004               	movf	fputc@fp^0,w,c
  2686  001534  26D9               	addwf	fsr2l,f,c
  2687  001536  5005               	movf	(fputc@fp+1)^0,w,c
  2688  001538  22DA               	addwfc	fsr2h,f,c
  2689  00153A  50DE               	movf	postinc2,w,c
  2690  00153C  10DE               	iorwf	postinc2,w,c
  2691  00153E  B4D8               	btfsc	status,2,c
  2692  001540  EFA4  F00A         	goto	u1481
  2693  001544  EFA6  F00A         	goto	u1480
  2694  001548                     u1481:
  2695  001548  EFC1  F00A         	goto	l2416
  2696  00154C                     u1480:
  2697  00154C  EE20 F009          	lfsr	2,9
  2698  001550  5004               	movf	fputc@fp^0,w,c
  2699  001552  26D9               	addwf	fsr2l,f,c
  2700  001554  5005               	movf	(fputc@fp+1)^0,w,c
  2701  001556  22DA               	addwfc	fsr2h,f,c
  2702  001558  EE10 F003          	lfsr	1,3
  2703  00155C  5004               	movf	fputc@fp^0,w,c
  2704  00155E  26E1               	addwf	fsr1l,f,c
  2705  001560  5005               	movf	(fputc@fp+1)^0,w,c
  2706  001562  22E2               	addwfc	fsr1h,f,c
  2707  001564  50DE               	movf	postinc2,w,c
  2708  001566  5CE6               	subwf	postinc1,w,c
  2709  001568  50E6               	movf	postinc1,w,c
  2710  00156A  0A80               	xorlw	128
  2711  00156C  6E0A               	movwf	(??_fputc+4)^0,c
  2712  00156E  50DE               	movf	postinc2,w,c
  2713  001570  0A80               	xorlw	128
  2714  001572  580A               	subwfb	(??_fputc+4)^0,w,c
  2715  001574  B0D8               	btfsc	status,0,c
  2716  001576  EFBF  F00A         	goto	u1491
  2717  00157A  EFC1  F00A         	goto	u1490
  2718  00157E                     u1491:
  2719  00157E  EFE4  F00A         	goto	l1226
  2720  001582                     u1490:
  2721  001582                     l2416:
  2722  001582  EE20 F003          	lfsr	2,3
  2723  001586  5004               	movf	fputc@fp^0,w,c
  2724  001588  26D9               	addwf	fsr2l,f,c
  2725  00158A  5005               	movf	(fputc@fp+1)^0,w,c
  2726  00158C  22DA               	addwfc	fsr2h,f,c
  2727  00158E  CFDE F006          	movff	postinc2,??_fputc
  2728  001592  CFDD F007          	movff	postdec2,??_fputc+1
  2729  001596  C004  FFD9         	movff	fputc@fp,fsr2l
  2730  00159A  C005  FFDA         	movff	fputc@fp+1,fsr2h
  2731  00159E  CFDE F008          	movff	postinc2,??_fputc+2
  2732  0015A2  CFDD F009          	movff	postdec2,??_fputc+3
  2733  0015A6  5006               	movf	??_fputc^0,w,c
  2734  0015A8  2408               	addwf	(??_fputc+2)^0,w,c
  2735  0015AA  6ED9               	movwf	fsr2l,c
  2736  0015AC  5007               	movf	(??_fputc+1)^0,w,c
  2737  0015AE  2009               	addwfc	(??_fputc+3)^0,w,c
  2738  0015B0  6EDA               	movwf	fsr2h,c
  2739  0015B2  C002  FFDF         	movff	fputc@c,indf2
  2740  0015B6  EE20 F003          	lfsr	2,3
  2741  0015BA  5004               	movf	fputc@fp^0,w,c
  2742  0015BC  26D9               	addwf	fsr2l,f,c
  2743  0015BE  5005               	movf	(fputc@fp+1)^0,w,c
  2744  0015C0  22DA               	addwfc	fsr2h,f,c
  2745  0015C2  2ADE               	incf	postinc2,f,c
  2746  0015C4  0E00               	movlw	0
  2747  0015C6  22DD               	addwfc	postdec2,f,c
  2748  0015C8                     l1226:
  2749  0015C8  0012               	return		;funcret
  2750  0015CA                     __end_of_fputc:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function _putch *****************
  2754 ;; Defined at:
  2755 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  c               1    wreg     unsigned char 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  c               1    0[COMRAM] unsigned char 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2769 ;;      Params:         0       0       0       0       0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2772 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2773 ;;Total ram usage:        0 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 2
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_fputc
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text12
  2784  0024E4                     __ptext12:
  2785                           	callstack 0
  2786  0024E4                     _putch:
  2787                           	callstack 21
  2788  0024E4  0012               	return		;funcret
  2789  0024E6                     __end_of_putch:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function _isupper *****************
  2793 ;; Defined at:
  2794 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  c               2    1[COMRAM] int 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  2    1[COMRAM] int 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2808 ;;      Params:         2       0       0       0       0       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2810 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2811 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2812 ;;Total ram usage:        6 bytes
  2813 ;; Hardware stack levels used: 1
  2814 ;; Hardware stack levels required when called: 2
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_xtoa
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text13
  2823  00223A                     __ptext13:
  2824                           	callstack 0
  2825  00223A                     _isupper:
  2826                           	callstack 24
  2827  00223A  0EBF               	movlw	191
  2828  00223C  6E04               	movwf	??_isupper^0,c
  2829  00223E  0EFF               	movlw	255
  2830  002240  6E05               	movwf	(??_isupper+1)^0,c
  2831  002242  C002  F006         	movff	isupper@c,??_isupper+2
  2832  002246  C003  F007         	movff	isupper@c+1,??_isupper+3
  2833  00224A  5004               	movf	??_isupper^0,w,c
  2834  00224C  2606               	addwf	(??_isupper+2)^0,f,c
  2835  00224E  5005               	movf	(??_isupper+1)^0,w,c
  2836  002250  2207               	addwfc	(??_isupper+3)^0,f,c
  2837  002252  5007               	movf	(??_isupper+3)^0,w,c
  2838  002254  E10A               	bnz	u1860
  2839  002256  0E1A               	movlw	26
  2840  002258  5C06               	subwf	(??_isupper+2)^0,w,c
  2841  00225A  A0D8               	btfss	status,0,c
  2842  00225C  EF32  F011         	goto	u1861
  2843  002260  EF35  F011         	goto	u1860
  2844  002264                     u1861:
  2845  002264  0E01               	movlw	1
  2846  002266  EF36  F011         	goto	u1870
  2847  00226A                     u1860:
  2848  00226A  0E00               	movlw	0
  2849  00226C                     u1870:
  2850  00226C  6E02               	movwf	?_isupper^0,c
  2851  00226E  6A03               	clrf	(?_isupper+1)^0,c
  2852  002270  0012               	return		;funcret
  2853  002272                     __end_of_isupper:
  2854                           	callstack 0
  2855                           
  2856 ;; *************** function _isalpha *****************
  2857 ;; Defined at:
  2858 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isalpha.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  c               2    1[COMRAM] int 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  2    1[COMRAM] int 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2872 ;;      Params:         2       0       0       0       0       0       0       0       0
  2873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2874 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2875 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2876 ;;Total ram usage:        6 bytes
  2877 ;; Hardware stack levels used: 1
  2878 ;; Hardware stack levels required when called: 2
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_xtoa
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text14
  2887  0021C6                     __ptext14:
  2888                           	callstack 0
  2889  0021C6                     _isalpha:
  2890                           	callstack 24
  2891  0021C6  0E9F               	movlw	159
  2892  0021C8  6E04               	movwf	??_isalpha^0,c
  2893  0021CA  0EFF               	movlw	255
  2894  0021CC  6E05               	movwf	(??_isalpha+1)^0,c
  2895  0021CE  0E20               	movlw	32
  2896  0021D0  1002               	iorwf	isalpha@c^0,w,c
  2897  0021D2  6E06               	movwf	(??_isalpha+2)^0,c
  2898  0021D4  0E00               	movlw	0
  2899  0021D6  1003               	iorwf	(isalpha@c+1)^0,w,c
  2900  0021D8  6E07               	movwf	(??_isalpha+3)^0,c
  2901  0021DA  5004               	movf	??_isalpha^0,w,c
  2902  0021DC  2606               	addwf	(??_isalpha+2)^0,f,c
  2903  0021DE  5005               	movf	(??_isalpha+1)^0,w,c
  2904  0021E0  2207               	addwfc	(??_isalpha+3)^0,f,c
  2905  0021E2  5007               	movf	(??_isalpha+3)^0,w,c
  2906  0021E4  E10A               	bnz	u1880
  2907  0021E6  0E1A               	movlw	26
  2908  0021E8  5C06               	subwf	(??_isalpha+2)^0,w,c
  2909  0021EA  A0D8               	btfss	status,0,c
  2910  0021EC  EFFA  F010         	goto	u1881
  2911  0021F0  EFFD  F010         	goto	u1880
  2912  0021F4                     u1881:
  2913  0021F4  0E01               	movlw	1
  2914  0021F6  EFFE  F010         	goto	u1890
  2915  0021FA                     u1880:
  2916  0021FA  0E00               	movlw	0
  2917  0021FC                     u1890:
  2918  0021FC  6E02               	movwf	?_isalpha^0,c
  2919  0021FE  6A03               	clrf	(?_isalpha+1)^0,c
  2920  002200  0012               	return		;funcret
  2921  002202                     __end_of_isalpha:
  2922                           	callstack 0
  2923                           
  2924 ;; *************** function _MFRC522_ReadCardSerial2 *****************
  2925 ;; Defined at:
  2926 ;;		line 600 in file "rc522.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  str             2   40[COMRAM] PTR unsigned char 
  2929 ;;		 -> UID_2(16), 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  _status         1    0        unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      unsigned char 
  2934 ;; Registers used:
  2935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2941 ;;      Params:         2       0       0       0       0       0       0       0       0
  2942 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2944 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2945 ;;Total ram usage:        2 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; Hardware stack levels required when called: 6
  2948 ;; This function calls:
  2949 ;;		_MFRC522_AntiColl2
  2950 ;; This function is called by:
  2951 ;;		_main
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text15
  2956  0023B2                     __ptext15:
  2957                           	callstack 0
  2958  0023B2                     _MFRC522_ReadCardSerial2:
  2959                           	callstack 24
  2960  0023B2  C029  F021         	movff	MFRC522_ReadCardSerial2@str,MFRC522_AntiColl2@serNum
  2961  0023B6  C02A  F022         	movff	MFRC522_ReadCardSerial2@str+1,MFRC522_AntiColl2@serNum+1
  2962  0023BA  EC00  F00C         	call	_MFRC522_AntiColl2	;wreg free
  2963  0023BE                     
  2964                           ;rc522.c: 604:     str[5] = 0;
  2965  0023BE  EE20 F005          	lfsr	2,5
  2966  0023C2  5029               	movf	MFRC522_ReadCardSerial2@str^0,w,c
  2967  0023C4  26D9               	addwf	fsr2l,f,c
  2968  0023C6  502A               	movf	(MFRC522_ReadCardSerial2@str+1)^0,w,c
  2969  0023C8  22DA               	addwfc	fsr2h,f,c
  2970  0023CA  0E00               	movlw	0
  2971  0023CC  6EDF               	movwf	indf2,c
  2972  0023CE  0012               	return		;funcret
  2973  0023D0                     __end_of_MFRC522_ReadCardSerial2:
  2974                           	callstack 0
  2975                           
  2976 ;; *************** function _MFRC522_AntiColl2 *****************
  2977 ;; Defined at:
  2978 ;;		line 548 in file "rc522.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  serNum          2   32[COMRAM] PTR unsigned char 
  2981 ;;		 -> UID_2(16), 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;  unLen           2   36[COMRAM] unsigned int 
  2984 ;;  i               1   39[COMRAM] unsigned char 
  2985 ;;  _status         1   38[COMRAM] unsigned char 
  2986 ;;  serNumCheck     1   35[COMRAM] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      unsigned char 
  2989 ;; Registers used:
  2990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2996 ;;      Params:         2       0       0       0       0       0       0       0       0
  2997 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2998 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2999 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3000 ;;Total ram usage:        8 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; Hardware stack levels required when called: 5
  3003 ;; This function calls:
  3004 ;;		_MFRC522_Clear_Bit2
  3005 ;;		_MFRC522_ToCard2
  3006 ;;		_MFRC522_Wr2
  3007 ;; This function is called by:
  3008 ;;		_main
  3009 ;;		_MFRC522_ReadCardSerial2
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text16
  3014  001800                     __ptext16:
  3015                           	callstack 0
  3016  001800                     _MFRC522_AntiColl2:
  3017                           	callstack 24
  3018  001800                     
  3019                           ;rc522.c: 548: char MFRC522_AntiColl2(char *serNum);rc522.c: 549: {;rc522.c: 550:     ch
      +                          ar _status;;rc522.c: 551:     char i;;rc522.c: 552:     char serNumCheck = 0;
  3020  001800  0E00               	movlw	0
  3021  001802  6E24               	movwf	MFRC522_AntiColl2@serNumCheck^0,c
  3022  001804                     
  3023                           ;rc522.c: 553:     unsigned unLen;;rc522.c: 554:     MFRC522_Wr2(0x0D, 0x00);
  3024  001804  0E00               	movlw	0
  3025  001806  6E02               	movwf	MFRC522_Wr2@value^0,c
  3026  001808  0E0D               	movlw	13
  3027  00180A  ECA5  F00E         	call	_MFRC522_Wr2
  3028  00180E                     
  3029                           ;rc522.c: 555:     serNum[0] = 0x93;
  3030  00180E  C021  FFD9         	movff	MFRC522_AntiColl2@serNum,fsr2l
  3031  001812  C022  FFDA         	movff	MFRC522_AntiColl2@serNum+1,fsr2h
  3032  001816  0E93               	movlw	147
  3033  001818  6EDF               	movwf	indf2,c
  3034  00181A                     
  3035                           ;rc522.c: 556:     serNum[1] = 0x20;
  3036  00181A  EE20 F001          	lfsr	2,1
  3037  00181E  5021               	movf	MFRC522_AntiColl2@serNum^0,w,c
  3038  001820  26D9               	addwf	fsr2l,f,c
  3039  001822  5022               	movf	(MFRC522_AntiColl2@serNum+1)^0,w,c
  3040  001824  22DA               	addwfc	fsr2h,f,c
  3041  001826  0E20               	movlw	32
  3042  001828  6EDF               	movwf	indf2,c
  3043  00182A                     
  3044                           ;rc522.c: 557:     MFRC522_Clear_Bit2(0x08, 0x08);
  3045  00182A  0E08               	movlw	8
  3046  00182C  6E0B               	movwf	MFRC522_Clear_Bit2@mask^0,c
  3047  00182E  0E08               	movlw	8
  3048  001830  EC05  F012         	call	_MFRC522_Clear_Bit2
  3049  001834                     
  3050                           ;rc522.c: 558:     _status = MFRC522_ToCard2(0x0C, serNum, 2, serNum, &unLen);
  3051  001834  C021  F00E         	movff	MFRC522_AntiColl2@serNum,MFRC522_ToCard2@sendData
  3052  001838  C022  F00F         	movff	MFRC522_AntiColl2@serNum+1,MFRC522_ToCard2@sendData+1
  3053  00183C  0E02               	movlw	2
  3054  00183E  6E10               	movwf	MFRC522_ToCard2@sendLen^0,c
  3055  001840  C021  F011         	movff	MFRC522_AntiColl2@serNum,MFRC522_ToCard2@backData
  3056  001844  C022  F012         	movff	MFRC522_AntiColl2@serNum+1,MFRC522_ToCard2@backData+1
  3057  001848  0E25               	movlw	low MFRC522_AntiColl2@unLen
  3058  00184A  6E13               	movwf	MFRC522_ToCard2@backLen^0,c
  3059  00184C  0E00               	movlw	high MFRC522_AntiColl2@unLen
  3060  00184E  6E14               	movwf	(MFRC522_ToCard2@backLen+1)^0,c
  3061  001850  0E0C               	movlw	12
  3062  001852  EC5B  F005         	call	_MFRC522_ToCard2
  3063  001856  6E27               	movwf	MFRC522_AntiColl2@_status^0,c
  3064  001858                     
  3065                           ;rc522.c: 559:     if(_status == 0)
  3066  001858  5027               	movf	MFRC522_AntiColl2@_status^0,w,c
  3067  00185A  A4D8               	btfss	status,2,c
  3068  00185C  EF32  F00C         	goto	u2391
  3069  001860  EF34  F00C         	goto	u2390
  3070  001864                     u2391:
  3071  001864  EF58  F00C         	goto	l415
  3072  001868                     u2390:
  3073  001868                     
  3074                           ;rc522.c: 560:     {;rc522.c: 561:         for(i=0; i<5; i++)
  3075  001868  0E00               	movlw	0
  3076  00186A  6E28               	movwf	MFRC522_AntiColl2@i^0,c
  3077  00186C                     l3024:
  3078                           
  3079                           ;rc522.c: 562:         {;rc522.c: 563:             serNumCheck ^= serNum[i];
  3080  00186C  5028               	movf	MFRC522_AntiColl2@i^0,w,c
  3081  00186E  2421               	addwf	MFRC522_AntiColl2@serNum^0,w,c
  3082  001870  6ED9               	movwf	fsr2l,c
  3083  001872  0E00               	movlw	0
  3084  001874  2022               	addwfc	(MFRC522_AntiColl2@serNum+1)^0,w,c
  3085  001876  6EDA               	movwf	fsr2h,c
  3086  001878  50DF               	movf	indf2,w,c
  3087  00187A  1A24               	xorwf	MFRC522_AntiColl2@serNumCheck^0,f,c
  3088  00187C                     
  3089                           ;rc522.c: 564:         }
  3090  00187C  2A28               	incf	MFRC522_AntiColl2@i^0,f,c
  3091  00187E  0E04               	movlw	4
  3092  001880  6428               	cpfsgt	MFRC522_AntiColl2@i^0,c
  3093  001882  EF45  F00C         	goto	u2401
  3094  001886  EF47  F00C         	goto	u2400
  3095  00188A                     u2401:
  3096  00188A  EF36  F00C         	goto	l3024
  3097  00188E                     u2400:
  3098  00188E                     
  3099                           ;rc522.c: 565:         if(serNumCheck != serNum[5])
  3100  00188E  EE20 F005          	lfsr	2,5
  3101  001892  5021               	movf	MFRC522_AntiColl2@serNum^0,w,c
  3102  001894  26D9               	addwf	fsr2l,f,c
  3103  001896  5022               	movf	(MFRC522_AntiColl2@serNum+1)^0,w,c
  3104  001898  22DA               	addwfc	fsr2h,f,c
  3105  00189A  5024               	movf	MFRC522_AntiColl2@serNumCheck^0,w,c
  3106  00189C  18DE               	xorwf	postinc2,w,c
  3107  00189E  B4D8               	btfsc	status,2,c
  3108  0018A0  EF54  F00C         	goto	u2411
  3109  0018A4  EF56  F00C         	goto	u2410
  3110  0018A8                     u2411:
  3111  0018A8  EF58  F00C         	goto	l415
  3112  0018AC                     u2410:
  3113  0018AC                     
  3114                           ;rc522.c: 566:         {;rc522.c: 567:             _status = 2;
  3115  0018AC  0E02               	movlw	2
  3116  0018AE  6E27               	movwf	MFRC522_AntiColl2@_status^0,c
  3117  0018B0                     l415:
  3118                           
  3119                           ;rc522.c: 570:     return _status;
  3120  0018B0  5027               	movf	MFRC522_AntiColl2@_status^0,w,c
  3121  0018B2  0012               	return		;funcret
  3122  0018B4                     __end_of_MFRC522_AntiColl2:
  3123                           	callstack 0
  3124                           
  3125 ;; *************** function _MFRC522_ReadCardSerial *****************
  3126 ;; Defined at:
  3127 ;;		line 589 in file "rc522.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  str             2   40[COMRAM] PTR unsigned char 
  3130 ;;		 -> UID_1(16), 
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;  _status         1    0        unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      unsigned char 
  3135 ;; Registers used:
  3136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3142 ;;      Params:         2       0       0       0       0       0       0       0       0
  3143 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3144 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3145 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3146 ;;Total ram usage:        2 bytes
  3147 ;; Hardware stack levels used: 1
  3148 ;; Hardware stack levels required when called: 6
  3149 ;; This function calls:
  3150 ;;		_MFRC522_AntiColl
  3151 ;; This function is called by:
  3152 ;;		_main
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text17
  3157  0023D0                     __ptext17:
  3158                           	callstack 0
  3159  0023D0                     _MFRC522_ReadCardSerial:
  3160                           	callstack 24
  3161  0023D0  C029  F021         	movff	MFRC522_ReadCardSerial@str,MFRC522_AntiColl@serNum
  3162  0023D4  C02A  F022         	movff	MFRC522_ReadCardSerial@str+1,MFRC522_AntiColl@serNum+1
  3163  0023D8  EC5A  F00C         	call	_MFRC522_AntiColl	;wreg free
  3164  0023DC                     
  3165                           ;rc522.c: 593:     str[5] = 0;
  3166  0023DC  EE20 F005          	lfsr	2,5
  3167  0023E0  5029               	movf	MFRC522_ReadCardSerial@str^0,w,c
  3168  0023E2  26D9               	addwf	fsr2l,f,c
  3169  0023E4  502A               	movf	(MFRC522_ReadCardSerial@str+1)^0,w,c
  3170  0023E6  22DA               	addwfc	fsr2h,f,c
  3171  0023E8  0E00               	movlw	0
  3172  0023EA  6EDF               	movwf	indf2,c
  3173  0023EC  0012               	return		;funcret
  3174  0023EE                     __end_of_MFRC522_ReadCardSerial:
  3175                           	callstack 0
  3176                           
  3177 ;; *************** function _MFRC522_AntiColl *****************
  3178 ;; Defined at:
  3179 ;;		line 523 in file "rc522.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  serNum          2   32[COMRAM] PTR unsigned char 
  3182 ;;		 -> UID_1(16), 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  unLen           2   36[COMRAM] unsigned int 
  3185 ;;  i               1   39[COMRAM] unsigned char 
  3186 ;;  _status         1   38[COMRAM] unsigned char 
  3187 ;;  serNumCheck     1   35[COMRAM] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      unsigned char 
  3190 ;; Registers used:
  3191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3197 ;;      Params:         2       0       0       0       0       0       0       0       0
  3198 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3199 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3200 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3201 ;;Total ram usage:        8 bytes
  3202 ;; Hardware stack levels used: 1
  3203 ;; Hardware stack levels required when called: 5
  3204 ;; This function calls:
  3205 ;;		_MFRC522_Clear_Bit
  3206 ;;		_MFRC522_ToCard
  3207 ;;		_MFRC522_Wr
  3208 ;; This function is called by:
  3209 ;;		_main
  3210 ;;		_MFRC522_ReadCardSerial
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text18
  3215  0018B4                     __ptext18:
  3216                           	callstack 0
  3217  0018B4                     _MFRC522_AntiColl:
  3218                           	callstack 24
  3219  0018B4                     
  3220                           ;rc522.c: 523: char MFRC522_AntiColl(char *serNum);rc522.c: 524: {;rc522.c: 525:     cha
      +                          r _status;;rc522.c: 526:     char i;;rc522.c: 527:     char serNumCheck = 0;
  3221  0018B4  0E00               	movlw	0
  3222  0018B6  6E24               	movwf	MFRC522_AntiColl@serNumCheck^0,c
  3223  0018B8                     
  3224                           ;rc522.c: 528:     unsigned unLen;;rc522.c: 529:     MFRC522_Wr(0x0D, 0x00);
  3225  0018B8  0E00               	movlw	0
  3226  0018BA  6E02               	movwf	MFRC522_Wr@value^0,c
  3227  0018BC  0E0D               	movlw	13
  3228  0018BE  ECEF  F00E         	call	_MFRC522_Wr
  3229  0018C2                     
  3230                           ;rc522.c: 530:     serNum[0] = 0x93;
  3231  0018C2  C021  FFD9         	movff	MFRC522_AntiColl@serNum,fsr2l
  3232  0018C6  C022  FFDA         	movff	MFRC522_AntiColl@serNum+1,fsr2h
  3233  0018CA  0E93               	movlw	147
  3234  0018CC  6EDF               	movwf	indf2,c
  3235  0018CE                     
  3236                           ;rc522.c: 531:     serNum[1] = 0x20;
  3237  0018CE  EE20 F001          	lfsr	2,1
  3238  0018D2  5021               	movf	MFRC522_AntiColl@serNum^0,w,c
  3239  0018D4  26D9               	addwf	fsr2l,f,c
  3240  0018D6  5022               	movf	(MFRC522_AntiColl@serNum+1)^0,w,c
  3241  0018D8  22DA               	addwfc	fsr2h,f,c
  3242  0018DA  0E20               	movlw	32
  3243  0018DC  6EDF               	movwf	indf2,c
  3244  0018DE                     
  3245                           ;rc522.c: 532:     MFRC522_Clear_Bit(0x08, 0x08);
  3246  0018DE  0E08               	movlw	8
  3247  0018E0  6E0B               	movwf	MFRC522_Clear_Bit@mask^0,c
  3248  0018E2  0E08               	movlw	8
  3249  0018E4  EC12  F012         	call	_MFRC522_Clear_Bit
  3250  0018E8                     
  3251                           ;rc522.c: 533:     _status = MFRC522_ToCard(0x0C, serNum, 2, serNum, &unLen);
  3252  0018E8  C021  F00E         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@sendData
  3253  0018EC  C022  F00F         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@sendData+1
  3254  0018F0  0E02               	movlw	2
  3255  0018F2  6E10               	movwf	MFRC522_ToCard@sendLen^0,c
  3256  0018F4  C021  F011         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@backData
  3257  0018F8  C022  F012         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@backData+1
  3258  0018FC  0E25               	movlw	low MFRC522_AntiColl@unLen
  3259  0018FE  6E13               	movwf	MFRC522_ToCard@backLen^0,c
  3260  001900  0E00               	movlw	high MFRC522_AntiColl@unLen
  3261  001902  6E14               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  3262  001904  0E0C               	movlw	12
  3263  001906  ECA2  F006         	call	_MFRC522_ToCard
  3264  00190A  6E27               	movwf	MFRC522_AntiColl@_status^0,c
  3265  00190C                     
  3266                           ;rc522.c: 534:     if(_status == 0)
  3267  00190C  5027               	movf	MFRC522_AntiColl@_status^0,w,c
  3268  00190E  A4D8               	btfss	status,2,c
  3269  001910  EF8C  F00C         	goto	u2361
  3270  001914  EF8E  F00C         	goto	u2360
  3271  001918                     u2361:
  3272  001918  EFB2  F00C         	goto	l408
  3273  00191C                     u2360:
  3274  00191C                     
  3275                           ;rc522.c: 535:     {;rc522.c: 536:         for(i=0; i<5; i++)
  3276  00191C  0E00               	movlw	0
  3277  00191E  6E28               	movwf	MFRC522_AntiColl@i^0,c
  3278  001920                     l2992:
  3279                           
  3280                           ;rc522.c: 537:         {;rc522.c: 538:             serNumCheck ^= serNum[i];
  3281  001920  5028               	movf	MFRC522_AntiColl@i^0,w,c
  3282  001922  2421               	addwf	MFRC522_AntiColl@serNum^0,w,c
  3283  001924  6ED9               	movwf	fsr2l,c
  3284  001926  0E00               	movlw	0
  3285  001928  2022               	addwfc	(MFRC522_AntiColl@serNum+1)^0,w,c
  3286  00192A  6EDA               	movwf	fsr2h,c
  3287  00192C  50DF               	movf	indf2,w,c
  3288  00192E  1A24               	xorwf	MFRC522_AntiColl@serNumCheck^0,f,c
  3289  001930                     
  3290                           ;rc522.c: 539:         }
  3291  001930  2A28               	incf	MFRC522_AntiColl@i^0,f,c
  3292  001932  0E04               	movlw	4
  3293  001934  6428               	cpfsgt	MFRC522_AntiColl@i^0,c
  3294  001936  EF9F  F00C         	goto	u2371
  3295  00193A  EFA1  F00C         	goto	u2370
  3296  00193E                     u2371:
  3297  00193E  EF90  F00C         	goto	l2992
  3298  001942                     u2370:
  3299  001942                     
  3300                           ;rc522.c: 540:         if(serNumCheck != serNum[5])
  3301  001942  EE20 F005          	lfsr	2,5
  3302  001946  5021               	movf	MFRC522_AntiColl@serNum^0,w,c
  3303  001948  26D9               	addwf	fsr2l,f,c
  3304  00194A  5022               	movf	(MFRC522_AntiColl@serNum+1)^0,w,c
  3305  00194C  22DA               	addwfc	fsr2h,f,c
  3306  00194E  5024               	movf	MFRC522_AntiColl@serNumCheck^0,w,c
  3307  001950  18DE               	xorwf	postinc2,w,c
  3308  001952  B4D8               	btfsc	status,2,c
  3309  001954  EFAE  F00C         	goto	u2381
  3310  001958  EFB0  F00C         	goto	u2380
  3311  00195C                     u2381:
  3312  00195C  EFB2  F00C         	goto	l408
  3313  001960                     u2380:
  3314  001960                     
  3315                           ;rc522.c: 541:         {;rc522.c: 542:             _status = 2;
  3316  001960  0E02               	movlw	2
  3317  001962  6E27               	movwf	MFRC522_AntiColl@_status^0,c
  3318  001964                     l408:
  3319                           
  3320                           ;rc522.c: 545:     return _status;
  3321  001964  5027               	movf	MFRC522_AntiColl@_status^0,w,c
  3322  001966  0012               	return		;funcret
  3323  001968                     __end_of_MFRC522_AntiColl:
  3324                           	callstack 0
  3325                           
  3326 ;; *************** function _MFRC522_IsCard2 *****************
  3327 ;; Defined at:
  3328 ;;		line 581 in file "rc522.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  TagType         2   38[COMRAM] PTR unsigned char 
  3331 ;;		 -> TagType2(1), 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      unsigned char 
  3336 ;; Registers used:
  3337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3343 ;;      Params:         2       0       0       0       0       0       0       0       0
  3344 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3346 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3347 ;;Total ram usage:        2 bytes
  3348 ;; Hardware stack levels used: 1
  3349 ;; Hardware stack levels required when called: 6
  3350 ;; This function calls:
  3351 ;;		_MFRC522_Request2
  3352 ;; This function is called by:
  3353 ;;		_main
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text19
  3358  0024AC                     __ptext19:
  3359                           	callstack 0
  3360  0024AC                     _MFRC522_IsCard2:
  3361                           	callstack 24
  3362  0024AC                     
  3363                           ;rc522.c: 581: char MFRC522_IsCard2(char *TagType);rc522.c: 582: {;rc522.c: 583:     if(
      +                          MFRC522_Request2(0x26, TagType) == 0)
  3364  0024AC  C027  F021         	movff	MFRC522_IsCard2@TagType,MFRC522_Request2@TagType
  3365  0024B0  C028  F022         	movff	MFRC522_IsCard2@TagType+1,MFRC522_Request2@TagType+1
  3366  0024B4  0E26               	movlw	38
  3367  0024B6  EC6E  F00F         	call	_MFRC522_Request2
  3368  0024BA  0012               	return		;funcret
  3369  0024BC                     __end_of_MFRC522_IsCard2:
  3370                           	callstack 0
  3371                           
  3372 ;; *************** function _MFRC522_Request2 *****************
  3373 ;; Defined at:
  3374 ;;		line 397 in file "rc522.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  reqMode         1    wreg     unsigned char 
  3377 ;;  TagType         2   32[COMRAM] PTR unsigned char 
  3378 ;;		 -> TagType2(1), 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  reqMode         1   34[COMRAM] unsigned char 
  3381 ;;  backBits        2   36[COMRAM] unsigned int 
  3382 ;;  _status         1   35[COMRAM] unsigned char 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      unsigned char 
  3385 ;; Registers used:
  3386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3392 ;;      Params:         2       0       0       0       0       0       0       0       0
  3393 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3394 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3395 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3396 ;;Total ram usage:        6 bytes
  3397 ;; Hardware stack levels used: 1
  3398 ;; Hardware stack levels required when called: 5
  3399 ;; This function calls:
  3400 ;;		_MFRC522_ToCard2
  3401 ;;		_MFRC522_Wr2
  3402 ;; This function is called by:
  3403 ;;		_MFRC522_IsCard2
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text20
  3408  001EDC                     __ptext20:
  3409                           	callstack 0
  3410  001EDC                     _MFRC522_Request2:
  3411                           	callstack 24
  3412                           
  3413                           ;incstack = 0
  3414                           ;MFRC522_Request2@reqMode stored from wreg
  3415  001EDC  6E23               	movwf	MFRC522_Request2@reqMode^0,c
  3416  001EDE                     
  3417                           ;rc522.c: 397: char MFRC522_Request2(char reqMode, char *TagType);rc522.c: 398: {;rc522.
      +                          c: 399:     char _status;;rc522.c: 400:     unsigned backBits;;rc522.c: 401:     MFRC522
      +                          _Wr2(0x0D, 0x07);
  3418  001EDE  0E07               	movlw	7
  3419  001EE0  6E02               	movwf	MFRC522_Wr2@value^0,c
  3420  001EE2  0E0D               	movlw	13
  3421  001EE4  ECA5  F00E         	call	_MFRC522_Wr2
  3422  001EE8                     
  3423                           ;rc522.c: 402:     TagType[0] = reqMode;
  3424  001EE8  C021  FFD9         	movff	MFRC522_Request2@TagType,fsr2l
  3425  001EEC  C022  FFDA         	movff	MFRC522_Request2@TagType+1,fsr2h
  3426  001EF0  C023  FFDF         	movff	MFRC522_Request2@reqMode,indf2
  3427  001EF4                     
  3428                           ;rc522.c: 403:     _status = MFRC522_ToCard2(0x0C, TagType, 1, TagType, &backBits);
  3429  001EF4  C021  F00E         	movff	MFRC522_Request2@TagType,MFRC522_ToCard2@sendData
  3430  001EF8  C022  F00F         	movff	MFRC522_Request2@TagType+1,MFRC522_ToCard2@sendData+1
  3431  001EFC  0E01               	movlw	1
  3432  001EFE  6E10               	movwf	MFRC522_ToCard2@sendLen^0,c
  3433  001F00  C021  F011         	movff	MFRC522_Request2@TagType,MFRC522_ToCard2@backData
  3434  001F04  C022  F012         	movff	MFRC522_Request2@TagType+1,MFRC522_ToCard2@backData+1
  3435  001F08  0E25               	movlw	low MFRC522_Request2@backBits
  3436  001F0A  6E13               	movwf	MFRC522_ToCard2@backLen^0,c
  3437  001F0C  0E00               	movlw	high MFRC522_Request2@backBits
  3438  001F0E  6E14               	movwf	(MFRC522_ToCard2@backLen+1)^0,c
  3439  001F10  0E0C               	movlw	12
  3440  001F12  EC5B  F005         	call	_MFRC522_ToCard2
  3441  001F16  6E24               	movwf	MFRC522_Request2@_status^0,c
  3442  001F18                     
  3443                           ;rc522.c: 404:     if((_status != 0) || (backBits != 0x10))
  3444  001F18  5024               	movf	MFRC522_Request2@_status^0,w,c
  3445  001F1A  A4D8               	btfss	status,2,c
  3446  001F1C  EF92  F00F         	goto	u2441
  3447  001F20  EF94  F00F         	goto	u2440
  3448  001F24                     u2441:
  3449  001F24  EF9E  F00F         	goto	l3074
  3450  001F28                     u2440:
  3451  001F28  0E10               	movlw	16
  3452  001F2A  1825               	xorwf	MFRC522_Request2@backBits^0,w,c
  3453  001F2C  1026               	iorwf	(MFRC522_Request2@backBits+1)^0,w,c
  3454  001F2E  B4D8               	btfsc	status,2,c
  3455  001F30  EF9C  F00F         	goto	u2451
  3456  001F34  EF9E  F00F         	goto	u2450
  3457  001F38                     u2451:
  3458  001F38  EFA0  F00F         	goto	l365
  3459  001F3C                     u2450:
  3460  001F3C                     l3074:
  3461                           
  3462                           ;rc522.c: 405:     {;rc522.c: 406:         _status = 2;
  3463  001F3C  0E02               	movlw	2
  3464  001F3E  6E24               	movwf	MFRC522_Request2@_status^0,c
  3465  001F40                     l365:
  3466                           
  3467                           ;rc522.c: 408:     return _status;
  3468  001F40  5024               	movf	MFRC522_Request2@_status^0,w,c
  3469  001F42  0012               	return		;funcret
  3470  001F44                     __end_of_MFRC522_Request2:
  3471                           	callstack 0
  3472                           
  3473 ;; *************** function _MFRC522_IsCard *****************
  3474 ;; Defined at:
  3475 ;;		line 573 in file "rc522.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  TagType         2   38[COMRAM] PTR unsigned char 
  3478 ;;		 -> TagType1(1), 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      unsigned char 
  3483 ;; Registers used:
  3484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3490 ;;      Params:         2       0       0       0       0       0       0       0       0
  3491 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3493 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3494 ;;Total ram usage:        2 bytes
  3495 ;; Hardware stack levels used: 1
  3496 ;; Hardware stack levels required when called: 6
  3497 ;; This function calls:
  3498 ;;		_MFRC522_Request
  3499 ;; This function is called by:
  3500 ;;		_main
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           	psect	text21
  3505  0024BC                     __ptext21:
  3506                           	callstack 0
  3507  0024BC                     _MFRC522_IsCard:
  3508                           	callstack 24
  3509  0024BC                     
  3510                           ;rc522.c: 573: char MFRC522_IsCard(char *TagType);rc522.c: 574: {;rc522.c: 575:     if(M
      +                          FRC522_Request(0x26, TagType) == 0)
  3511  0024BC  C027  F021         	movff	MFRC522_IsCard@TagType,MFRC522_Request@TagType
  3512  0024C0  C028  F022         	movff	MFRC522_IsCard@TagType+1,MFRC522_Request@TagType+1
  3513  0024C4  0E26               	movlw	38
  3514  0024C6  ECA2  F00F         	call	_MFRC522_Request
  3515  0024CA  0012               	return		;funcret
  3516  0024CC                     __end_of_MFRC522_IsCard:
  3517                           	callstack 0
  3518                           
  3519 ;; *************** function _MFRC522_Request *****************
  3520 ;; Defined at:
  3521 ;;		line 383 in file "rc522.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  reqMode         1    wreg     unsigned char 
  3524 ;;  TagType         2   32[COMRAM] PTR unsigned char 
  3525 ;;		 -> TagType1(1), 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  reqMode         1   34[COMRAM] unsigned char 
  3528 ;;  backBits        2   36[COMRAM] unsigned int 
  3529 ;;  _status         1   35[COMRAM] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      unsigned char 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3539 ;;      Params:         2       0       0       0       0       0       0       0       0
  3540 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3542 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3543 ;;Total ram usage:        6 bytes
  3544 ;; Hardware stack levels used: 1
  3545 ;; Hardware stack levels required when called: 5
  3546 ;; This function calls:
  3547 ;;		_MFRC522_ToCard
  3548 ;;		_MFRC522_Wr
  3549 ;; This function is called by:
  3550 ;;		_MFRC522_IsCard
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text22
  3555  001F44                     __ptext22:
  3556                           	callstack 0
  3557  001F44                     _MFRC522_Request:
  3558                           	callstack 24
  3559                           
  3560                           ;incstack = 0
  3561                           ;MFRC522_Request@reqMode stored from wreg
  3562  001F44  6E23               	movwf	MFRC522_Request@reqMode^0,c
  3563  001F46                     
  3564                           ;rc522.c: 383: char MFRC522_Request(char reqMode, char *TagType);rc522.c: 384: {;rc522.c
      +                          : 385:     char _status;;rc522.c: 386:     unsigned backBits;;rc522.c: 387:     MFRC522_
      +                          Wr(0x0D, 0x07);
  3565  001F46  0E07               	movlw	7
  3566  001F48  6E02               	movwf	MFRC522_Wr@value^0,c
  3567  001F4A  0E0D               	movlw	13
  3568  001F4C  ECEF  F00E         	call	_MFRC522_Wr
  3569  001F50                     
  3570                           ;rc522.c: 388:     TagType[0] = reqMode;
  3571  001F50  C021  FFD9         	movff	MFRC522_Request@TagType,fsr2l
  3572  001F54  C022  FFDA         	movff	MFRC522_Request@TagType+1,fsr2h
  3573  001F58  C023  FFDF         	movff	MFRC522_Request@reqMode,indf2
  3574  001F5C                     
  3575                           ;rc522.c: 389:     _status = MFRC522_ToCard(0x0C, TagType, 1, TagType, &backBits);
  3576  001F5C  C021  F00E         	movff	MFRC522_Request@TagType,MFRC522_ToCard@sendData
  3577  001F60  C022  F00F         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@sendData+1
  3578  001F64  0E01               	movlw	1
  3579  001F66  6E10               	movwf	MFRC522_ToCard@sendLen^0,c
  3580  001F68  C021  F011         	movff	MFRC522_Request@TagType,MFRC522_ToCard@backData
  3581  001F6C  C022  F012         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@backData+1
  3582  001F70  0E25               	movlw	low MFRC522_Request@backBits
  3583  001F72  6E13               	movwf	MFRC522_ToCard@backLen^0,c
  3584  001F74  0E00               	movlw	high MFRC522_Request@backBits
  3585  001F76  6E14               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  3586  001F78  0E0C               	movlw	12
  3587  001F7A  ECA2  F006         	call	_MFRC522_ToCard
  3588  001F7E  6E24               	movwf	MFRC522_Request@_status^0,c
  3589  001F80                     
  3590                           ;rc522.c: 390:     if((_status != 0) || (backBits != 0x10))
  3591  001F80  5024               	movf	MFRC522_Request@_status^0,w,c
  3592  001F82  A4D8               	btfss	status,2,c
  3593  001F84  EFC6  F00F         	goto	u2421
  3594  001F88  EFC8  F00F         	goto	u2420
  3595  001F8C                     u2421:
  3596  001F8C  EFD2  F00F         	goto	l3060
  3597  001F90                     u2420:
  3598  001F90  0E10               	movlw	16
  3599  001F92  1825               	xorwf	MFRC522_Request@backBits^0,w,c
  3600  001F94  1026               	iorwf	(MFRC522_Request@backBits+1)^0,w,c
  3601  001F96  B4D8               	btfsc	status,2,c
  3602  001F98  EFD0  F00F         	goto	u2431
  3603  001F9C  EFD2  F00F         	goto	u2430
  3604  001FA0                     u2431:
  3605  001FA0  EFD4  F00F         	goto	l359
  3606  001FA4                     u2430:
  3607  001FA4                     l3060:
  3608                           
  3609                           ;rc522.c: 391:     {;rc522.c: 392:         _status = 2;
  3610  001FA4  0E02               	movlw	2
  3611  001FA6  6E24               	movwf	MFRC522_Request@_status^0,c
  3612  001FA8                     l359:
  3613                           
  3614                           ;rc522.c: 394:     return _status;
  3615  001FA8  5024               	movf	MFRC522_Request@_status^0,w,c
  3616  001FAA  0012               	return		;funcret
  3617  001FAC                     __end_of_MFRC522_Request:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function _MFRC522_Init *****************
  3621 ;; Defined at:
  3622 ;;		line 171 in file "rc522.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3636 ;;      Params:         0       0       0       0       0       0       0       0       0
  3637 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3639 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; Hardware stack levels required when called: 5
  3643 ;; This function calls:
  3644 ;;		_MFRC522_AntennaOff
  3645 ;;		_MFRC522_AntennaOff2
  3646 ;;		_MFRC522_AntennaOn
  3647 ;;		_MFRC522_AntennaOn2
  3648 ;;		_MFRC522_Reset
  3649 ;;		_MFRC522_Wr
  3650 ;;		_MFRC522_Wr2
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text23
  3657  001AC2                     __ptext23:
  3658                           	callstack 0
  3659  001AC2                     _MFRC522_Init:
  3660                           	callstack 25
  3661  001AC2                     
  3662                           ;rc522.c: 173:     TRISDbits.RD2 = 0;
  3663  001AC2  9495               	bcf	149,2,c	;volatile
  3664                           
  3665                           ;rc522.c: 174:     TRISDbits.RD1 = 0;
  3666  001AC4  9295               	bcf	149,1,c	;volatile
  3667                           
  3668                           ;rc522.c: 175:     TRISAbits.RA0 = 0;
  3669  001AC6  9092               	bcf	146,0,c	;volatile
  3670                           
  3671                           ;rc522.c: 176:     TRISAbits.RA1 = 0;
  3672  001AC8  9292               	bcf	146,1,c	;volatile
  3673                           
  3674                           ;rc522.c: 177:     TRISDbits.RD3 = 1;
  3675  001ACA  8695               	bsf	149,3,c	;volatile
  3676                           
  3677                           ;rc522.c: 178:     TRISDbits.RD4 = 0;
  3678  001ACC  9895               	bcf	149,4,c	;volatile
  3679                           
  3680                           ;rc522.c: 179:     LATDbits.LD1 = 0;
  3681  001ACE  928C               	bcf	140,1,c	;volatile
  3682                           
  3683                           ;rc522.c: 180:     LATDbits.LD2 = 0;
  3684  001AD0  948C               	bcf	140,2,c	;volatile
  3685                           
  3686                           ;rc522.c: 181:     LATAbits.LA0 = 1;
  3687  001AD2  8089               	bsf	137,0,c	;volatile
  3688                           
  3689                           ;rc522.c: 182:     LATAbits.LA1 = 1;
  3690  001AD4  8289               	bsf	137,1,c	;volatile
  3691                           
  3692                           ;rc522.c: 183:     LATDbits.LD4 = 1;
  3693  001AD6  888C               	bsf	140,4,c	;volatile
  3694  001AD8                     
  3695                           ;rc522.c: 184:     MFRC522_Reset();
  3696  001AD8  EC9C  F011         	call	_MFRC522_Reset	;wreg free
  3697                           
  3698                           ;rc522.c: 185:     MFRC522_Wr(0x2A, 0x8D);
  3699  001ADC  0E8D               	movlw	141
  3700  001ADE  6E02               	movwf	MFRC522_Wr@value^0,c
  3701  001AE0  0E2A               	movlw	42
  3702  001AE2  ECEF  F00E         	call	_MFRC522_Wr
  3703                           
  3704                           ;rc522.c: 186:     MFRC522_Wr(0x2B, 0x3E);
  3705  001AE6  0E3E               	movlw	62
  3706  001AE8  6E02               	movwf	MFRC522_Wr@value^0,c
  3707  001AEA  0E2B               	movlw	43
  3708  001AEC  ECEF  F00E         	call	_MFRC522_Wr
  3709                           
  3710                           ;rc522.c: 187:     MFRC522_Wr(0x2D, 30);
  3711  001AF0  0E1E               	movlw	30
  3712  001AF2  6E02               	movwf	MFRC522_Wr@value^0,c
  3713  001AF4  0E2D               	movlw	45
  3714  001AF6  ECEF  F00E         	call	_MFRC522_Wr
  3715                           
  3716                           ;rc522.c: 188:     MFRC522_Wr(0x2C, 0);
  3717  001AFA  0E00               	movlw	0
  3718  001AFC  6E02               	movwf	MFRC522_Wr@value^0,c
  3719  001AFE  0E2C               	movlw	44
  3720  001B00  ECEF  F00E         	call	_MFRC522_Wr
  3721                           
  3722                           ;rc522.c: 189:     MFRC522_Wr(0x15, 0x40);
  3723  001B04  0E40               	movlw	64
  3724  001B06  6E02               	movwf	MFRC522_Wr@value^0,c
  3725  001B08  0E15               	movlw	21
  3726  001B0A  ECEF  F00E         	call	_MFRC522_Wr
  3727                           
  3728                           ;rc522.c: 190:     MFRC522_Wr(0x11, 0x3D);
  3729  001B0E  0E3D               	movlw	61
  3730  001B10  6E02               	movwf	MFRC522_Wr@value^0,c
  3731  001B12  0E11               	movlw	17
  3732  001B14  ECEF  F00E         	call	_MFRC522_Wr
  3733                           
  3734                           ;rc522.c: 191:     MFRC522_AntennaOff();
  3735  001B18  EC6C  F012         	call	_MFRC522_AntennaOff	;wreg free
  3736                           
  3737                           ;rc522.c: 192:     MFRC522_AntennaOn();
  3738  001B1C  EC4D  F012         	call	_MFRC522_AntennaOn	;wreg free
  3739                           
  3740                           ;rc522.c: 193:     MFRC522_Wr2(0x2A, 0x8D);
  3741  001B20  0E8D               	movlw	141
  3742  001B22  6E02               	movwf	MFRC522_Wr2@value^0,c
  3743  001B24  0E2A               	movlw	42
  3744  001B26  ECA5  F00E         	call	_MFRC522_Wr2
  3745                           
  3746                           ;rc522.c: 194:     MFRC522_Wr2(0x2B, 0x3E);
  3747  001B2A  0E3E               	movlw	62
  3748  001B2C  6E02               	movwf	MFRC522_Wr2@value^0,c
  3749  001B2E  0E2B               	movlw	43
  3750  001B30  ECA5  F00E         	call	_MFRC522_Wr2
  3751                           
  3752                           ;rc522.c: 195:     MFRC522_Wr2(0x2D, 30);
  3753  001B34  0E1E               	movlw	30
  3754  001B36  6E02               	movwf	MFRC522_Wr2@value^0,c
  3755  001B38  0E2D               	movlw	45
  3756  001B3A  ECA5  F00E         	call	_MFRC522_Wr2
  3757                           
  3758                           ;rc522.c: 196:     MFRC522_Wr2(0x2C, 0);
  3759  001B3E  0E00               	movlw	0
  3760  001B40  6E02               	movwf	MFRC522_Wr2@value^0,c
  3761  001B42  0E2C               	movlw	44
  3762  001B44  ECA5  F00E         	call	_MFRC522_Wr2
  3763                           
  3764                           ;rc522.c: 197:     MFRC522_Wr2(0x15, 0x40);
  3765  001B48  0E40               	movlw	64
  3766  001B4A  6E02               	movwf	MFRC522_Wr2@value^0,c
  3767  001B4C  0E15               	movlw	21
  3768  001B4E  ECA5  F00E         	call	_MFRC522_Wr2
  3769                           
  3770                           ;rc522.c: 198:     MFRC522_Wr2(0x11, 0x3D);
  3771  001B52  0E3D               	movlw	61
  3772  001B54  6E02               	movwf	MFRC522_Wr2@value^0,c
  3773  001B56  0E11               	movlw	17
  3774  001B58  ECA5  F00E         	call	_MFRC522_Wr2
  3775                           
  3776                           ;rc522.c: 199:     MFRC522_AntennaOff2();
  3777  001B5C  EC66  F012         	call	_MFRC522_AntennaOff2	;wreg free
  3778                           
  3779                           ;rc522.c: 200:     MFRC522_AntennaOn2();
  3780  001B60  EC44  F012         	call	_MFRC522_AntennaOn2	;wreg free
  3781  001B64  0012               	return		;funcret
  3782  001B66                     __end_of_MFRC522_Init:
  3783                           	callstack 0
  3784                           
  3785 ;; *************** function _MFRC522_Reset *****************
  3786 ;; Defined at:
  3787 ;;		line 135 in file "rc522.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;		None
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3801 ;;      Params:         0       0       0       0       0       0       0       0       0
  3802 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3803 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3804 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3805 ;;Total ram usage:        0 bytes
  3806 ;; Hardware stack levels used: 1
  3807 ;; Hardware stack levels required when called: 3
  3808 ;; This function calls:
  3809 ;;		_MFRC522_Wr
  3810 ;; This function is called by:
  3811 ;;		_MFRC522_Init
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text24
  3816  002338                     __ptext24:
  3817                           	callstack 0
  3818  002338                     _MFRC522_Reset:
  3819                           	callstack 26
  3820  002338                     
  3821                           ;rc522.c: 137:     LATDbits.LD4 = 1;
  3822  002338  888C               	bsf	140,4,c	;volatile
  3823                           
  3824                           ;rc522.c: 138:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  3825  00233A  D000               	nop2		;2 cycle nop
  3826  00233C  D000               	nop2		;2 cycle nop
  3827  00233E  D000               	nop2		;2 cycle nop
  3828                           
  3829                           ;rc522.c: 139:     LATDbits.LD4 = 0;
  3830  002340  988C               	bcf	140,4,c	;volatile
  3831                           
  3832                           ;rc522.c: 140:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  3833  002342  D000               	nop2		;2 cycle nop
  3834  002344  D000               	nop2		;2 cycle nop
  3835  002346  D000               	nop2		;2 cycle nop
  3836                           
  3837                           ;rc522.c: 141:     LATDbits.LD4 = 1;
  3838  002348  888C               	bsf	140,4,c	;volatile
  3839                           
  3840                           ;rc522.c: 142:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  3841  00234A  D000               	nop2		;2 cycle nop
  3842  00234C  D000               	nop2		;2 cycle nop
  3843  00234E  D000               	nop2		;2 cycle nop
  3844  002350                     
  3845                           ;rc522.c: 143:     MFRC522_Wr(0x01, 0x0F);
  3846  002350  0E0F               	movlw	15
  3847  002352  6E02               	movwf	MFRC522_Wr@value^0,c
  3848  002354  0E01               	movlw	1
  3849  002356  ECEF  F00E         	call	_MFRC522_Wr
  3850  00235A                     
  3851                           ;rc522.c: 144:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  3852  00235A  D000               	nop2		;2 cycle nop
  3853  00235C  D000               	nop2		;2 cycle nop
  3854  00235E  D000               	nop2		;2 cycle nop
  3855  002360  0012               	return		;funcret
  3856  002362                     __end_of_MFRC522_Reset:
  3857                           	callstack 0
  3858                           
  3859 ;; *************** function _MFRC522_AntennaOn2 *****************
  3860 ;; Defined at:
  3861 ;;		line 154 in file "rc522.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;		None
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;  stt             1    0        unsigned char 
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      void 
  3868 ;; Registers used:
  3869 ;;		wreg, status,2, status,0, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3875 ;;      Params:         0       0       0       0       0       0       0       0       0
  3876 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3878 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3879 ;;Total ram usage:        0 bytes
  3880 ;; Hardware stack levels used: 1
  3881 ;; Hardware stack levels required when called: 4
  3882 ;; This function calls:
  3883 ;;		_MFRC522_Rd2
  3884 ;;		_MFRC522_Set_Bit2
  3885 ;; This function is called by:
  3886 ;;		_MFRC522_Init
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text25
  3891  002488                     __ptext25:
  3892                           	callstack 0
  3893  002488                     _MFRC522_AntennaOn2:
  3894                           	callstack 25
  3895  002488  0E14               	movlw	20
  3896  00248A  EC48  F00B         	call	_MFRC522_Rd2
  3897                           
  3898                           ;rc522.c: 158:     MFRC522_Set_Bit2(0x14, 0x03);
  3899  00248E  0E03               	movlw	3
  3900  002490  6E0B               	movwf	MFRC522_Set_Bit2@mask^0,c
  3901  002492  0E14               	movlw	20
  3902  002494  EC2C  F012         	call	_MFRC522_Set_Bit2
  3903  002498  0012               	return		;funcret
  3904  00249A                     __end_of_MFRC522_AntennaOn2:
  3905                           	callstack 0
  3906                           
  3907 ;; *************** function _MFRC522_AntennaOn *****************
  3908 ;; Defined at:
  3909 ;;		line 147 in file "rc522.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  stt             1    0        unsigned char 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2, status,0, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3923 ;;      Params:         0       0       0       0       0       0       0       0       0
  3924 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3925 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3926 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3927 ;;Total ram usage:        0 bytes
  3928 ;; Hardware stack levels used: 1
  3929 ;; Hardware stack levels required when called: 4
  3930 ;; This function calls:
  3931 ;;		_MFRC522_Rd
  3932 ;;		_MFRC522_Set_Bit
  3933 ;; This function is called by:
  3934 ;;		_MFRC522_Init
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text26
  3939  00249A                     __ptext26:
  3940                           	callstack 0
  3941  00249A                     _MFRC522_AntennaOn:
  3942                           	callstack 25
  3943  00249A  0E14               	movlw	20
  3944  00249C  ECA4  F00B         	call	_MFRC522_Rd
  3945                           
  3946                           ;rc522.c: 151:     MFRC522_Set_Bit(0x14, 0x03);
  3947  0024A0  0E03               	movlw	3
  3948  0024A2  6E0B               	movwf	MFRC522_Set_Bit@mask^0,c
  3949  0024A4  0E14               	movlw	20
  3950  0024A6  EC38  F012         	call	_MFRC522_Set_Bit
  3951  0024AA  0012               	return		;funcret
  3952  0024AC                     __end_of_MFRC522_AntennaOn:
  3953                           	callstack 0
  3954                           
  3955 ;; *************** function _MFRC522_AntennaOff2 *****************
  3956 ;; Defined at:
  3957 ;;		line 166 in file "rc522.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3974 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; Hardware stack levels required when called: 4
  3978 ;; This function calls:
  3979 ;;		_MFRC522_Clear_Bit2
  3980 ;; This function is called by:
  3981 ;;		_MFRC522_Init
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text27
  3986  0024CC                     __ptext27:
  3987                           	callstack 0
  3988  0024CC                     _MFRC522_AntennaOff2:
  3989                           	callstack 25
  3990  0024CC                     
  3991                           ;rc522.c: 168:     MFRC522_Clear_Bit2(0x14, 0x03);
  3992  0024CC  0E03               	movlw	3
  3993  0024CE  6E0B               	movwf	MFRC522_Clear_Bit2@mask^0,c
  3994  0024D0  0E14               	movlw	20
  3995  0024D2  EC05  F012         	call	_MFRC522_Clear_Bit2
  3996  0024D6  0012               	return		;funcret
  3997  0024D8                     __end_of_MFRC522_AntennaOff2:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function _MFRC522_AntennaOff *****************
  4001 ;; Defined at:
  4002 ;;		line 161 in file "rc522.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2, status,0, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4016 ;;      Params:         0       0       0       0       0       0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4019 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4020 ;;Total ram usage:        0 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 4
  4023 ;; This function calls:
  4024 ;;		_MFRC522_Clear_Bit
  4025 ;; This function is called by:
  4026 ;;		_MFRC522_Init
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text28
  4031  0024D8                     __ptext28:
  4032                           	callstack 0
  4033  0024D8                     _MFRC522_AntennaOff:
  4034                           	callstack 25
  4035  0024D8                     
  4036                           ;rc522.c: 163:     MFRC522_Clear_Bit(0x14, 0x03);
  4037  0024D8  0E03               	movlw	3
  4038  0024DA  6E0B               	movwf	MFRC522_Clear_Bit@mask^0,c
  4039  0024DC  0E14               	movlw	20
  4040  0024DE  EC12  F012         	call	_MFRC522_Clear_Bit
  4041  0024E2  0012               	return		;funcret
  4042  0024E4                     __end_of_MFRC522_AntennaOff:
  4043                           	callstack 0
  4044                           
  4045 ;; *************** function _MFRC522_Halt *****************
  4046 ;; Defined at:
  4047 ;;		line 507 in file "rc522.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;		None
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  buff            4   32[COMRAM] unsigned char [4]
  4052 ;;  unLen           2   36[COMRAM] unsigned int 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      void 
  4055 ;; Registers used:
  4056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4062 ;;      Params:         0       0       0       0       0       0       0       0       0
  4063 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4065 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4066 ;;Total ram usage:        6 bytes
  4067 ;; Hardware stack levels used: 1
  4068 ;; Hardware stack levels required when called: 5
  4069 ;; This function calls:
  4070 ;;		_MFRC522_CRC
  4071 ;;		_MFRC522_CRC2
  4072 ;;		_MFRC522_Clear_Bit
  4073 ;;		_MFRC522_Clear_Bit2
  4074 ;;		_MFRC522_ToCard
  4075 ;;		_MFRC522_ToCard2
  4076 ;; This function is called by:
  4077 ;;		_main
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text29
  4082  001A1C                     __ptext29:
  4083                           	callstack 0
  4084  001A1C                     _MFRC522_Halt:
  4085                           	callstack 25
  4086  001A1C                     
  4087                           ;rc522.c: 509:     unsigned unLen;;rc522.c: 510:     char buff[4];;rc522.c: 511:     buf
      +                          f[0] = 0x50;
  4088  001A1C  0E50               	movlw	80
  4089  001A1E  6E21               	movwf	MFRC522_Halt@buff^0,c
  4090                           
  4091                           ;rc522.c: 512:     buff[1] = 0;
  4092  001A20  0E00               	movlw	0
  4093  001A22  6E22               	movwf	(MFRC522_Halt@buff+1)^0,c
  4094  001A24                     
  4095                           ;rc522.c: 513:     MFRC522_CRC(buff, 2, &buff[2]);
  4096  001A24  0E21               	movlw	low MFRC522_Halt@buff
  4097  001A26  6E0E               	movwf	MFRC522_CRC@dataIn^0,c
  4098  001A28  0E00               	movlw	high MFRC522_Halt@buff
  4099  001A2A  6E0F               	movwf	(MFRC522_CRC@dataIn+1)^0,c
  4100  001A2C  0E02               	movlw	2
  4101  001A2E  6E10               	movwf	MFRC522_CRC@length^0,c
  4102  001A30  0E23               	movlw	low (MFRC522_Halt@buff+2)
  4103  001A32  6E11               	movwf	MFRC522_CRC@dataOut^0,c
  4104  001A34  0E00               	movlw	high (MFRC522_Halt@buff+2)
  4105  001A36  6E12               	movwf	(MFRC522_CRC@dataOut+1)^0,c
  4106  001A38  EC55  F00E         	call	_MFRC522_CRC	;wreg free
  4107  001A3C                     
  4108                           ;rc522.c: 514:     MFRC522_CRC2(buff, 2, &buff[2]);
  4109  001A3C  0E21               	movlw	low MFRC522_Halt@buff
  4110  001A3E  6E0E               	movwf	MFRC522_CRC2@dataIn^0,c
  4111  001A40  0E00               	movlw	high MFRC522_Halt@buff
  4112  001A42  6E0F               	movwf	(MFRC522_CRC2@dataIn+1)^0,c
  4113  001A44  0E02               	movlw	2
  4114  001A46  6E10               	movwf	MFRC522_CRC2@length^0,c
  4115  001A48  0E23               	movlw	low (MFRC522_Halt@buff+2)
  4116  001A4A  6E11               	movwf	MFRC522_CRC2@dataOut^0,c
  4117  001A4C  0E00               	movlw	high (MFRC522_Halt@buff+2)
  4118  001A4E  6E12               	movwf	(MFRC522_CRC2@dataOut+1)^0,c
  4119  001A50  EC05  F00E         	call	_MFRC522_CRC2	;wreg free
  4120  001A54                     
  4121                           ;rc522.c: 515:     MFRC522_Clear_Bit(0x08, 0x80);
  4122  001A54  0E80               	movlw	128
  4123  001A56  6E0B               	movwf	MFRC522_Clear_Bit@mask^0,c
  4124  001A58  0E08               	movlw	8
  4125  001A5A  EC12  F012         	call	_MFRC522_Clear_Bit
  4126  001A5E                     
  4127                           ;rc522.c: 516:     MFRC522_Clear_Bit2(0x08, 0x80);
  4128  001A5E  0E80               	movlw	128
  4129  001A60  6E0B               	movwf	MFRC522_Clear_Bit2@mask^0,c
  4130  001A62  0E08               	movlw	8
  4131  001A64  EC05  F012         	call	_MFRC522_Clear_Bit2
  4132  001A68                     
  4133                           ;rc522.c: 517:     MFRC522_ToCard(0x0C, buff, 4, buff, &unLen);
  4134  001A68  0E21               	movlw	low MFRC522_Halt@buff
  4135  001A6A  6E0E               	movwf	MFRC522_ToCard@sendData^0,c
  4136  001A6C  0E00               	movlw	high MFRC522_Halt@buff
  4137  001A6E  6E0F               	movwf	(MFRC522_ToCard@sendData+1)^0,c
  4138  001A70  0E04               	movlw	4
  4139  001A72  6E10               	movwf	MFRC522_ToCard@sendLen^0,c
  4140  001A74  0E21               	movlw	low MFRC522_Halt@buff
  4141  001A76  6E11               	movwf	MFRC522_ToCard@backData^0,c
  4142  001A78  0E00               	movlw	high MFRC522_Halt@buff
  4143  001A7A  6E12               	movwf	(MFRC522_ToCard@backData+1)^0,c
  4144  001A7C  0E25               	movlw	low MFRC522_Halt@unLen
  4145  001A7E  6E13               	movwf	MFRC522_ToCard@backLen^0,c
  4146  001A80  0E00               	movlw	high MFRC522_Halt@unLen
  4147  001A82  6E14               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  4148  001A84  0E0C               	movlw	12
  4149  001A86  ECA2  F006         	call	_MFRC522_ToCard
  4150  001A8A                     
  4151                           ;rc522.c: 518:     MFRC522_ToCard2(0x0C, buff, 4, buff, &unLen);
  4152  001A8A  0E21               	movlw	low MFRC522_Halt@buff
  4153  001A8C  6E0E               	movwf	MFRC522_ToCard2@sendData^0,c
  4154  001A8E  0E00               	movlw	high MFRC522_Halt@buff
  4155  001A90  6E0F               	movwf	(MFRC522_ToCard2@sendData+1)^0,c
  4156  001A92  0E04               	movlw	4
  4157  001A94  6E10               	movwf	MFRC522_ToCard2@sendLen^0,c
  4158  001A96  0E21               	movlw	low MFRC522_Halt@buff
  4159  001A98  6E11               	movwf	MFRC522_ToCard2@backData^0,c
  4160  001A9A  0E00               	movlw	high MFRC522_Halt@buff
  4161  001A9C  6E12               	movwf	(MFRC522_ToCard2@backData+1)^0,c
  4162  001A9E  0E25               	movlw	low MFRC522_Halt@unLen
  4163  001AA0  6E13               	movwf	MFRC522_ToCard2@backLen^0,c
  4164  001AA2  0E00               	movlw	high MFRC522_Halt@unLen
  4165  001AA4  6E14               	movwf	(MFRC522_ToCard2@backLen+1)^0,c
  4166  001AA6  0E0C               	movlw	12
  4167  001AA8  EC5B  F005         	call	_MFRC522_ToCard2
  4168  001AAC                     
  4169                           ;rc522.c: 519:     MFRC522_Clear_Bit(0x08, 0x08);
  4170  001AAC  0E08               	movlw	8
  4171  001AAE  6E0B               	movwf	MFRC522_Clear_Bit@mask^0,c
  4172  001AB0  0E08               	movlw	8
  4173  001AB2  EC12  F012         	call	_MFRC522_Clear_Bit
  4174  001AB6                     
  4175                           ;rc522.c: 520:     MFRC522_Clear_Bit2(0x08, 0x08);
  4176  001AB6  0E08               	movlw	8
  4177  001AB8  6E0B               	movwf	MFRC522_Clear_Bit2@mask^0,c
  4178  001ABA  0E08               	movlw	8
  4179  001ABC  EC05  F012         	call	_MFRC522_Clear_Bit2
  4180  001AC0  0012               	return		;funcret
  4181  001AC2                     __end_of_MFRC522_Halt:
  4182                           	callstack 0
  4183                           
  4184 ;; *************** function _MFRC522_ToCard2 *****************
  4185 ;; Defined at:
  4186 ;;		line 293 in file "rc522.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  command         1    wreg     unsigned char 
  4189 ;;  sendData        2   13[COMRAM] PTR unsigned char 
  4190 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag2@buffer(9), UID_2(16), TagType2(1), 
  4191 ;;  sendLen         1   15[COMRAM] unsigned char 
  4192 ;;  backData        2   16[COMRAM] PTR unsigned char 
  4193 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag2@buffer(9), UID_2(16), TagType2(1), 
  4194 ;;  backLen         2   18[COMRAM] PTR unsigned int 
  4195 ;;		 -> MFRC522_AntiColl2@unLen(2), MFRC522_Halt@unLen(2), MFRC522_SelectTag2@recvBits(2), MFRC522_Request2@backBits(2),
      + 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  command         1   28[COMRAM] unsigned char 
  4198 ;;  i               2   29[COMRAM] unsigned int 
  4199 ;;  n               1   31[COMRAM] unsigned char 
  4200 ;;  irqEn           1   27[COMRAM] unsigned char 
  4201 ;;  lastBits        1   26[COMRAM] unsigned char 
  4202 ;;  _status         1   25[COMRAM] unsigned char 
  4203 ;;  waitIRq         1   24[COMRAM] unsigned char 
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  1    wreg      unsigned char 
  4206 ;; Registers used:
  4207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4213 ;;      Params:         7       0       0       0       0       0       0       0       0
  4214 ;;      Locals:         8       0       0       0       0       0       0       0       0
  4215 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4216 ;;      Totals:        19       0       0       0       0       0       0       0       0
  4217 ;;Total ram usage:       19 bytes
  4218 ;; Hardware stack levels used: 1
  4219 ;; Hardware stack levels required when called: 4
  4220 ;; This function calls:
  4221 ;;		_MFRC522_Clear_Bit2
  4222 ;;		_MFRC522_Rd2
  4223 ;;		_MFRC522_Set_Bit2
  4224 ;;		_MFRC522_Wr2
  4225 ;; This function is called by:
  4226 ;;		_MFRC522_Request2
  4227 ;;		_MFRC522_Halt
  4228 ;;		_MFRC522_AntiColl2
  4229 ;;		_MFRC522_SelectTag2
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233                           	psect	text30
  4234  000AB6                     __ptext30:
  4235                           	callstack 0
  4236  000AB6                     _MFRC522_ToCard2:
  4237                           	callstack 24
  4238                           
  4239                           ;incstack = 0
  4240                           ;MFRC522_ToCard2@command stored from wreg
  4241  000AB6  6E1D               	movwf	MFRC522_ToCard2@command^0,c
  4242  000AB8                     
  4243                           ;rc522.c: 293: char MFRC522_ToCard2(char command, char *sendData, char sendLen, char *ba
      +                          ckData, unsigned *backLen);rc522.c: 294: {;rc522.c: 295:     char _status = 2;
  4244  000AB8  0E02               	movlw	2
  4245  000ABA  6E1A               	movwf	MFRC522_ToCard2@_status^0,c
  4246                           
  4247                           ;rc522.c: 296:     char irqEn = 0x00;
  4248  000ABC  0E00               	movlw	0
  4249  000ABE  6E1C               	movwf	MFRC522_ToCard2@irqEn^0,c
  4250                           
  4251                           ;rc522.c: 297:     char waitIRq = 0x00;
  4252  000AC0  0E00               	movlw	0
  4253  000AC2  6E19               	movwf	MFRC522_ToCard2@waitIRq^0,c
  4254                           
  4255                           ;rc522.c: 298:     char lastBits;;rc522.c: 299:     char n;;rc522.c: 300:     unsigned i
      +                          ;;rc522.c: 302:     switch(command)
  4256  000AC4  EF70  F005         	goto	l2842
  4257  000AC8                     l2836:
  4258                           
  4259                           ;rc522.c: 305:             irqEn = 0x12;
  4260  000AC8  0E12               	movlw	18
  4261  000ACA  6E1C               	movwf	MFRC522_ToCard2@irqEn^0,c
  4262                           
  4263                           ;rc522.c: 306:             waitIRq = 0x10;
  4264  000ACC  0E10               	movlw	16
  4265  000ACE  6E19               	movwf	MFRC522_ToCard2@waitIRq^0,c
  4266                           
  4267                           ;rc522.c: 307:             break;
  4268  000AD0  EF85  F005         	goto	l2844
  4269  000AD4                     l2838:
  4270                           
  4271                           ;rc522.c: 310:             irqEn = 0x77;
  4272  000AD4  0E77               	movlw	119
  4273  000AD6  6E1C               	movwf	MFRC522_ToCard2@irqEn^0,c
  4274                           
  4275                           ;rc522.c: 311:             waitIRq = 0x30;
  4276  000AD8  0E30               	movlw	48
  4277  000ADA  6E19               	movwf	MFRC522_ToCard2@waitIRq^0,c
  4278                           
  4279                           ;rc522.c: 312:             break;
  4280  000ADC  EF85  F005         	goto	l2844
  4281  000AE0                     l2842:
  4282  000AE0  501D               	movf	MFRC522_ToCard2@command^0,w,c
  4283  000AE2  6E15               	movwf	??_MFRC522_ToCard2^0,c
  4284  000AE4  6A16               	clrf	(??_MFRC522_ToCard2+1)^0,c
  4285                           
  4286                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4287                           ; Switch size 1, requested type "simple"
  4288                           ; Number of cases is 1, Range of values is 0 to 0
  4289                           ; switch strategies available:
  4290                           ; Name         Instructions Cycles
  4291                           ; simple_byte            4     3 (average)
  4292                           ;	Chosen strategy is simple_byte
  4293  000AE6  5016               	movf	(??_MFRC522_ToCard2+1)^0,w,c
  4294  000AE8  0A00               	xorlw	0	; case 0
  4295  000AEA  B4D8               	btfsc	status,2,c
  4296  000AEC  EF7A  F005         	goto	l3646
  4297  000AF0  EF85  F005         	goto	l2844
  4298  000AF4                     l3646:
  4299                           
  4300                           ; Switch size 1, requested type "simple"
  4301                           ; Number of cases is 2, Range of values is 12 to 14
  4302                           ; switch strategies available:
  4303                           ; Name         Instructions Cycles
  4304                           ; simple_byte            7     4 (average)
  4305                           ;	Chosen strategy is simple_byte
  4306  000AF4  5015               	movf	??_MFRC522_ToCard2^0,w,c
  4307  000AF6  0A0C               	xorlw	12	; case 12
  4308  000AF8  B4D8               	btfsc	status,2,c
  4309  000AFA  EF6A  F005         	goto	l2838
  4310  000AFE  0A02               	xorlw	2	; case 14
  4311  000B00  B4D8               	btfsc	status,2,c
  4312  000B02  EF64  F005         	goto	l2836
  4313  000B06  EF85  F005         	goto	l2844
  4314  000B0A                     l2844:
  4315                           
  4316                           ;rc522.c: 317:     MFRC522_Wr2(0x02, irqEn | 0x80);
  4317  000B0A  501C               	movf	MFRC522_ToCard2@irqEn^0,w,c
  4318  000B0C  0980               	iorlw	128
  4319  000B0E  6E02               	movwf	MFRC522_Wr2@value^0,c
  4320  000B10  0E02               	movlw	2
  4321  000B12  ECA5  F00E         	call	_MFRC522_Wr2
  4322                           
  4323                           ;rc522.c: 318:     MFRC522_Clear_Bit2(0x04, 0x80);
  4324  000B16  0E80               	movlw	128
  4325  000B18  6E0B               	movwf	MFRC522_Clear_Bit2@mask^0,c
  4326  000B1A  0E04               	movlw	4
  4327  000B1C  EC05  F012         	call	_MFRC522_Clear_Bit2
  4328                           
  4329                           ;rc522.c: 319:     MFRC522_Set_Bit2(0x0A, 0x80);
  4330  000B20  0E80               	movlw	128
  4331  000B22  6E0B               	movwf	MFRC522_Set_Bit2@mask^0,c
  4332  000B24  0E0A               	movlw	10
  4333  000B26  EC2C  F012         	call	_MFRC522_Set_Bit2
  4334                           
  4335                           ;rc522.c: 320:     MFRC522_Wr2(0x01, 0x00);
  4336  000B2A  0E00               	movlw	0
  4337  000B2C  6E02               	movwf	MFRC522_Wr2@value^0,c
  4338  000B2E  0E01               	movlw	1
  4339  000B30  ECA5  F00E         	call	_MFRC522_Wr2
  4340  000B34                     
  4341                           ;rc522.c: 322:     for(i=0; i<sendLen; i++)
  4342  000B34  0E00               	movlw	0
  4343  000B36  6E1F               	movwf	(MFRC522_ToCard2@i+1)^0,c
  4344  000B38  0E00               	movlw	0
  4345  000B3A  6E1E               	movwf	MFRC522_ToCard2@i^0,c
  4346  000B3C  EFAD  F005         	goto	l2852
  4347  000B40                     l2848:
  4348                           
  4349                           ;rc522.c: 323:     {;rc522.c: 324:         MFRC522_Wr2(0x09, sendData[i]);
  4350  000B40  501E               	movf	MFRC522_ToCard2@i^0,w,c
  4351  000B42  240E               	addwf	MFRC522_ToCard2@sendData^0,w,c
  4352  000B44  6ED9               	movwf	fsr2l,c
  4353  000B46  501F               	movf	(MFRC522_ToCard2@i+1)^0,w,c
  4354  000B48  200F               	addwfc	(MFRC522_ToCard2@sendData+1)^0,w,c
  4355  000B4A  6EDA               	movwf	fsr2h,c
  4356  000B4C  50DF               	movf	indf2,w,c
  4357  000B4E  6E02               	movwf	MFRC522_Wr2@value^0,c
  4358  000B50  0E09               	movlw	9
  4359  000B52  ECA5  F00E         	call	_MFRC522_Wr2
  4360  000B56                     
  4361                           ;rc522.c: 325:     }
  4362  000B56  4A1E               	infsnz	MFRC522_ToCard2@i^0,f,c
  4363  000B58  2A1F               	incf	(MFRC522_ToCard2@i+1)^0,f,c
  4364  000B5A                     l2852:
  4365  000B5A  5010               	movf	MFRC522_ToCard2@sendLen^0,w,c
  4366  000B5C  6E15               	movwf	??_MFRC522_ToCard2^0,c
  4367  000B5E  6A16               	clrf	(??_MFRC522_ToCard2+1)^0,c
  4368  000B60  5015               	movf	??_MFRC522_ToCard2^0,w,c
  4369  000B62  5C1E               	subwf	MFRC522_ToCard2@i^0,w,c
  4370  000B64  5016               	movf	(??_MFRC522_ToCard2+1)^0,w,c
  4371  000B66  581F               	subwfb	(MFRC522_ToCard2@i+1)^0,w,c
  4372  000B68  A0D8               	btfss	status,0,c
  4373  000B6A  EFB9  F005         	goto	u2171
  4374  000B6E  EFBB  F005         	goto	u2170
  4375  000B72                     u2171:
  4376  000B72  EFA0  F005         	goto	l2848
  4377  000B76                     u2170:
  4378  000B76                     
  4379                           ;rc522.c: 326:     MFRC522_Wr2(0x01, command);
  4380  000B76  C01D  F002         	movff	MFRC522_ToCard2@command,MFRC522_Wr2@value
  4381  000B7A  0E01               	movlw	1
  4382  000B7C  ECA5  F00E         	call	_MFRC522_Wr2
  4383  000B80                     
  4384                           ;rc522.c: 327:     if(command == 0x0C)
  4385  000B80  0E0C               	movlw	12
  4386  000B82  181D               	xorwf	MFRC522_ToCard2@command^0,w,c
  4387  000B84  A4D8               	btfss	status,2,c
  4388  000B86  EFC7  F005         	goto	u2181
  4389  000B8A  EFC9  F005         	goto	u2180
  4390  000B8E                     u2181:
  4391  000B8E  EFCE  F005         	goto	l2860
  4392  000B92                     u2180:
  4393  000B92                     
  4394                           ;rc522.c: 328:     {;rc522.c: 329:         MFRC522_Set_Bit2(0x0D, 0x80);
  4395  000B92  0E80               	movlw	128
  4396  000B94  6E0B               	movwf	MFRC522_Set_Bit2@mask^0,c
  4397  000B96  0E0D               	movlw	13
  4398  000B98  EC2C  F012         	call	_MFRC522_Set_Bit2
  4399  000B9C                     l2860:
  4400                           
  4401                           ;rc522.c: 331:     i = 0xFFFF;
  4402  000B9C  681E               	setf	MFRC522_ToCard2@i^0,c
  4403  000B9E  681F               	setf	(MFRC522_ToCard2@i+1)^0,c
  4404  000BA0                     l340:
  4405                           
  4406                           ;rc522.c: 333:     {;rc522.c: 334:         n = MFRC522_Rd2(0x04);
  4407  000BA0  0E04               	movlw	4
  4408  000BA2  EC48  F00B         	call	_MFRC522_Rd2
  4409  000BA6  6E20               	movwf	MFRC522_ToCard2@n^0,c
  4410  000BA8                     
  4411                           ;rc522.c: 335:         i--;
  4412  000BA8  061E               	decf	MFRC522_ToCard2@i^0,f,c
  4413  000BAA  A0D8               	btfss	status,0,c
  4414  000BAC  061F               	decf	(MFRC522_ToCard2@i+1)^0,f,c
  4415  000BAE                     
  4416                           ;rc522.c: 336:     }while(i && !(n & 0x01) && !(n & waitIRq));
  4417  000BAE  501E               	movf	MFRC522_ToCard2@i^0,w,c
  4418  000BB0  101F               	iorwf	(MFRC522_ToCard2@i+1)^0,w,c
  4419  000BB2  B4D8               	btfsc	status,2,c
  4420  000BB4  EFDE  F005         	goto	u2191
  4421  000BB8  EFE0  F005         	goto	u2190
  4422  000BBC                     u2191:
  4423  000BBC  EFF1  F005         	goto	l2870
  4424  000BC0                     u2190:
  4425  000BC0  B020               	btfsc	MFRC522_ToCard2@n^0,0,c
  4426  000BC2  EFE5  F005         	goto	u2201
  4427  000BC6  EFE7  F005         	goto	u2200
  4428  000BCA                     u2201:
  4429  000BCA  EFF1  F005         	goto	l2870
  4430  000BCE                     u2200:
  4431  000BCE  5020               	movf	MFRC522_ToCard2@n^0,w,c
  4432  000BD0  1419               	andwf	MFRC522_ToCard2@waitIRq^0,w,c
  4433  000BD2  0900               	iorlw	0
  4434  000BD4  B4D8               	btfsc	status,2,c
  4435  000BD6  EFEF  F005         	goto	u2211
  4436  000BDA  EFF1  F005         	goto	u2210
  4437  000BDE                     u2211:
  4438  000BDE  EFD0  F005         	goto	l340
  4439  000BE2                     u2210:
  4440  000BE2                     l2870:
  4441                           
  4442                           ;rc522.c: 338:     MFRC522_Clear_Bit2(0x0D, 0x80);
  4443  000BE2  0E80               	movlw	128
  4444  000BE4  6E0B               	movwf	MFRC522_Clear_Bit2@mask^0,c
  4445  000BE6  0E0D               	movlw	13
  4446  000BE8  EC05  F012         	call	_MFRC522_Clear_Bit2
  4447  000BEC                     
  4448                           ;rc522.c: 339:     if(i != 0)
  4449  000BEC  501E               	movf	MFRC522_ToCard2@i^0,w,c
  4450  000BEE  101F               	iorwf	(MFRC522_ToCard2@i+1)^0,w,c
  4451  000BF0  B4D8               	btfsc	status,2,c
  4452  000BF2  EFFD  F005         	goto	u2221
  4453  000BF6  EFFF  F005         	goto	u2220
  4454  000BFA                     u2221:
  4455  000BFA  EFA0  F006         	goto	l344
  4456  000BFE                     u2220:
  4457  000BFE                     
  4458                           ;rc522.c: 340:     {;rc522.c: 341:         if(!(MFRC522_Rd2(0x06) & 0x1B))
  4459  000BFE  0E06               	movlw	6
  4460  000C00  EC48  F00B         	call	_MFRC522_Rd2
  4461  000C04  6E15               	movwf	??_MFRC522_ToCard2^0,c
  4462  000C06  0E1B               	movlw	27
  4463  000C08  1615               	andwf	??_MFRC522_ToCard2^0,f,c
  4464  000C0A  A4D8               	btfss	status,2,c
  4465  000C0C  EF0A  F006         	goto	u2231
  4466  000C10  EF0C  F006         	goto	u2230
  4467  000C14                     u2231:
  4468  000C14  EF9E  F006         	goto	l2908
  4469  000C18                     u2230:
  4470  000C18                     
  4471                           ;rc522.c: 342:         {;rc522.c: 343:             _status = 0;
  4472  000C18  0E00               	movlw	0
  4473  000C1A  6E1A               	movwf	MFRC522_ToCard2@_status^0,c
  4474  000C1C                     
  4475                           ;rc522.c: 344:             if(n & irqEn & 0x01)
  4476  000C1C  5020               	movf	MFRC522_ToCard2@n^0,w,c
  4477  000C1E  141C               	andwf	MFRC522_ToCard2@irqEn^0,w,c
  4478  000C20  6E15               	movwf	??_MFRC522_ToCard2^0,c
  4479  000C22  A015               	btfss	??_MFRC522_ToCard2^0,0,c
  4480  000C24  EF16  F006         	goto	u2241
  4481  000C28  EF18  F006         	goto	u2240
  4482  000C2C                     u2241:
  4483  000C2C  EF1A  F006         	goto	l2882
  4484  000C30                     u2240:
  4485  000C30                     
  4486                           ;rc522.c: 345:             {;rc522.c: 346:                 _status = 1;
  4487  000C30  0E01               	movlw	1
  4488  000C32  6E1A               	movwf	MFRC522_ToCard2@_status^0,c
  4489  000C34                     l2882:
  4490                           
  4491                           ;rc522.c: 348:             if(command == 0x0C)
  4492  000C34  0E0C               	movlw	12
  4493  000C36  181D               	xorwf	MFRC522_ToCard2@command^0,w,c
  4494  000C38  A4D8               	btfss	status,2,c
  4495  000C3A  EF21  F006         	goto	u2251
  4496  000C3E  EF23  F006         	goto	u2250
  4497  000C42                     u2251:
  4498  000C42  EFA0  F006         	goto	l344
  4499  000C46                     u2250:
  4500  000C46                     
  4501                           ;rc522.c: 349:             {;rc522.c: 350:                 n = MFRC522_Rd2(0x0A);
  4502  000C46  0E0A               	movlw	10
  4503  000C48  EC48  F00B         	call	_MFRC522_Rd2
  4504  000C4C  6E20               	movwf	MFRC522_ToCard2@n^0,c
  4505                           
  4506                           ;rc522.c: 351:                 lastBits = MFRC522_Rd2(0x0C) & 0x07;
  4507  000C4E  0E0C               	movlw	12
  4508  000C50  EC48  F00B         	call	_MFRC522_Rd2
  4509  000C54  0B07               	andlw	7
  4510  000C56  6E1B               	movwf	MFRC522_ToCard2@lastBits^0,c
  4511  000C58                     
  4512                           ;rc522.c: 352:                 if(lastBits)
  4513  000C58  501B               	movf	MFRC522_ToCard2@lastBits^0,w,c
  4514  000C5A  B4D8               	btfsc	status,2,c
  4515  000C5C  EF32  F006         	goto	u2261
  4516  000C60  EF34  F006         	goto	u2260
  4517  000C64                     u2261:
  4518  000C64  EF56  F006         	goto	l2890
  4519  000C68                     u2260:
  4520  000C68                     
  4521                           ;rc522.c: 353:                 {;rc522.c: 354:                     *backLen = (n-1) * 8 
      +                          + lastBits;
  4522  000C68  0EF8               	movlw	248
  4523  000C6A  6E15               	movwf	??_MFRC522_ToCard2^0,c
  4524  000C6C  0EFF               	movlw	255
  4525  000C6E  6E16               	movwf	(??_MFRC522_ToCard2+1)^0,c
  4526  000C70  501B               	movf	MFRC522_ToCard2@lastBits^0,w,c
  4527  000C72  C020  F017         	movff	MFRC522_ToCard2@n,??_MFRC522_ToCard2+2
  4528  000C76  6A18               	clrf	(??_MFRC522_ToCard2+3)^0,c
  4529  000C78  90D8               	bcf	status,0,c
  4530  000C7A  3617               	rlcf	(??_MFRC522_ToCard2+2)^0,f,c
  4531  000C7C  3618               	rlcf	(??_MFRC522_ToCard2+3)^0,f,c
  4532  000C7E  90D8               	bcf	status,0,c
  4533  000C80  3617               	rlcf	(??_MFRC522_ToCard2+2)^0,f,c
  4534  000C82  3618               	rlcf	(??_MFRC522_ToCard2+3)^0,f,c
  4535  000C84  90D8               	bcf	status,0,c
  4536  000C86  3617               	rlcf	(??_MFRC522_ToCard2+2)^0,f,c
  4537  000C88  3618               	rlcf	(??_MFRC522_ToCard2+3)^0,f,c
  4538  000C8A  2617               	addwf	(??_MFRC522_ToCard2+2)^0,f,c
  4539  000C8C  0E00               	movlw	0
  4540  000C8E  2218               	addwfc	(??_MFRC522_ToCard2+3)^0,f,c
  4541  000C90  5015               	movf	??_MFRC522_ToCard2^0,w,c
  4542  000C92  2617               	addwf	(??_MFRC522_ToCard2+2)^0,f,c
  4543  000C94  5016               	movf	(??_MFRC522_ToCard2+1)^0,w,c
  4544  000C96  2218               	addwfc	(??_MFRC522_ToCard2+3)^0,f,c
  4545  000C98  C013  FFD9         	movff	MFRC522_ToCard2@backLen,fsr2l
  4546  000C9C  C014  FFDA         	movff	MFRC522_ToCard2@backLen+1,fsr2h
  4547  000CA0  C017  FFDE         	movff	??_MFRC522_ToCard2+2,postinc2
  4548  000CA4  C018  FFDD         	movff	??_MFRC522_ToCard2+3,postdec2
  4549                           
  4550                           ;rc522.c: 355:                 }
  4551  000CA8  EF60  F006         	goto	l2892
  4552  000CAC                     l2890:
  4553                           
  4554                           ;rc522.c: 357:                 {;rc522.c: 358:                     *backLen = n * 8;
  4555  000CAC  5020               	movf	MFRC522_ToCard2@n^0,w,c
  4556  000CAE  0D08               	mullw	8
  4557  000CB0  C013  FFD9         	movff	MFRC522_ToCard2@backLen,fsr2l
  4558  000CB4  C014  FFDA         	movff	MFRC522_ToCard2@backLen+1,fsr2h
  4559  000CB8  CFF3 FFDE          	movff	prodl,postinc2
  4560  000CBC  CFF4 FFDD          	movff	prodh,postdec2
  4561  000CC0                     l2892:
  4562                           
  4563                           ;rc522.c: 360:                 if(n == 0)
  4564  000CC0  5020               	movf	MFRC522_ToCard2@n^0,w,c
  4565  000CC2  A4D8               	btfss	status,2,c
  4566  000CC4  EF66  F006         	goto	u2271
  4567  000CC8  EF68  F006         	goto	u2270
  4568  000CCC                     u2271:
  4569  000CCC  EF6A  F006         	goto	l2896
  4570  000CD0                     u2270:
  4571  000CD0                     
  4572                           ;rc522.c: 361:                 {;rc522.c: 362:                     n = 1;
  4573  000CD0  0E01               	movlw	1
  4574  000CD2  6E20               	movwf	MFRC522_ToCard2@n^0,c
  4575  000CD4                     l2896:
  4576                           
  4577                           ;rc522.c: 364:                 if(n > 16)
  4578  000CD4  0E10               	movlw	16
  4579  000CD6  6420               	cpfsgt	MFRC522_ToCard2@n^0,c
  4580  000CD8  EF70  F006         	goto	u2281
  4581  000CDC  EF72  F006         	goto	u2280
  4582  000CE0                     u2281:
  4583  000CE0  EF74  F006         	goto	l351
  4584  000CE4                     u2280:
  4585  000CE4                     
  4586                           ;rc522.c: 365:                 {;rc522.c: 366:                     n = 16;
  4587  000CE4  0E10               	movlw	16
  4588  000CE6  6E20               	movwf	MFRC522_ToCard2@n^0,c
  4589  000CE8                     l351:
  4590                           
  4591                           ;rc522.c: 368:                 for(i=0; i<n; i++)
  4592  000CE8  0E00               	movlw	0
  4593  000CEA  6E1F               	movwf	(MFRC522_ToCard2@i+1)^0,c
  4594  000CEC  0E00               	movlw	0
  4595  000CEE  6E1E               	movwf	MFRC522_ToCard2@i^0,c
  4596  000CF0  EF86  F006         	goto	l2904
  4597  000CF4                     l2900:
  4598                           
  4599                           ;rc522.c: 369:                 {;rc522.c: 370:                     backData[i] = MFRC522
      +                          _Rd2(0x09);
  4600  000CF4  501E               	movf	MFRC522_ToCard2@i^0,w,c
  4601  000CF6  2411               	addwf	MFRC522_ToCard2@backData^0,w,c
  4602  000CF8  6ED9               	movwf	fsr2l,c
  4603  000CFA  501F               	movf	(MFRC522_ToCard2@i+1)^0,w,c
  4604  000CFC  2012               	addwfc	(MFRC522_ToCard2@backData+1)^0,w,c
  4605  000CFE  6EDA               	movwf	fsr2h,c
  4606  000D00  0E09               	movlw	9
  4607  000D02  EC48  F00B         	call	_MFRC522_Rd2
  4608  000D06  6EDF               	movwf	indf2,c
  4609  000D08                     
  4610                           ;rc522.c: 371:                 }
  4611  000D08  4A1E               	infsnz	MFRC522_ToCard2@i^0,f,c
  4612  000D0A  2A1F               	incf	(MFRC522_ToCard2@i+1)^0,f,c
  4613  000D0C                     l2904:
  4614  000D0C  5020               	movf	MFRC522_ToCard2@n^0,w,c
  4615  000D0E  6E15               	movwf	??_MFRC522_ToCard2^0,c
  4616  000D10  6A16               	clrf	(??_MFRC522_ToCard2+1)^0,c
  4617  000D12  5015               	movf	??_MFRC522_ToCard2^0,w,c
  4618  000D14  5C1E               	subwf	MFRC522_ToCard2@i^0,w,c
  4619  000D16  5016               	movf	(??_MFRC522_ToCard2+1)^0,w,c
  4620  000D18  581F               	subwfb	(MFRC522_ToCard2@i+1)^0,w,c
  4621  000D1A  A0D8               	btfss	status,0,c
  4622  000D1C  EF92  F006         	goto	u2291
  4623  000D20  EF94  F006         	goto	u2290
  4624  000D24                     u2291:
  4625  000D24  EF7A  F006         	goto	l2900
  4626  000D28                     u2290:
  4627  000D28                     
  4628                           ;rc522.c: 372:                 backData[i] = 0;
  4629  000D28  501E               	movf	MFRC522_ToCard2@i^0,w,c
  4630  000D2A  2411               	addwf	MFRC522_ToCard2@backData^0,w,c
  4631  000D2C  6ED9               	movwf	fsr2l,c
  4632  000D2E  501F               	movf	(MFRC522_ToCard2@i+1)^0,w,c
  4633  000D30  2012               	addwfc	(MFRC522_ToCard2@backData+1)^0,w,c
  4634  000D32  6EDA               	movwf	fsr2h,c
  4635  000D34  0E00               	movlw	0
  4636  000D36  6EDF               	movwf	indf2,c
  4637  000D38  EFA0  F006         	goto	l344
  4638  000D3C                     l2908:
  4639                           
  4640                           ;rc522.c: 376:         {;rc522.c: 377:             _status = 2;
  4641  000D3C  0E02               	movlw	2
  4642  000D3E  6E1A               	movwf	MFRC522_ToCard2@_status^0,c
  4643  000D40                     l344:
  4644                           
  4645                           ;rc522.c: 380:     return _status;
  4646  000D40  501A               	movf	MFRC522_ToCard2@_status^0,w,c
  4647  000D42  0012               	return		;funcret
  4648  000D44                     __end_of_MFRC522_ToCard2:
  4649                           	callstack 0
  4650                           
  4651 ;; *************** function _MFRC522_ToCard *****************
  4652 ;; Defined at:
  4653 ;;		line 203 in file "rc522.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;  command         1    wreg     unsigned char 
  4656 ;;  sendData        2   13[COMRAM] PTR unsigned char 
  4657 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), UID_1(16), TagType1(1), 
  4658 ;;  sendLen         1   15[COMRAM] unsigned char 
  4659 ;;  backData        2   16[COMRAM] PTR unsigned char 
  4660 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), UID_1(16), TagType1(1), 
  4661 ;;  backLen         2   18[COMRAM] PTR unsigned int 
  4662 ;;		 -> MFRC522_AntiColl@unLen(2), MFRC522_Halt@unLen(2), MFRC522_SelectTag@recvBits(2), MFRC522_Request@backBits(2), 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  command         1   28[COMRAM] unsigned char 
  4665 ;;  i               2   29[COMRAM] unsigned int 
  4666 ;;  n               1   31[COMRAM] unsigned char 
  4667 ;;  irqEn           1   27[COMRAM] unsigned char 
  4668 ;;  lastBits        1   26[COMRAM] unsigned char 
  4669 ;;  _status         1   25[COMRAM] unsigned char 
  4670 ;;  waitIRq         1   24[COMRAM] unsigned char 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      unsigned char 
  4673 ;; Registers used:
  4674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4680 ;;      Params:         7       0       0       0       0       0       0       0       0
  4681 ;;      Locals:         8       0       0       0       0       0       0       0       0
  4682 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4683 ;;      Totals:        19       0       0       0       0       0       0       0       0
  4684 ;;Total ram usage:       19 bytes
  4685 ;; Hardware stack levels used: 1
  4686 ;; Hardware stack levels required when called: 4
  4687 ;; This function calls:
  4688 ;;		_MFRC522_Clear_Bit
  4689 ;;		_MFRC522_Rd
  4690 ;;		_MFRC522_Set_Bit
  4691 ;;		_MFRC522_Wr
  4692 ;; This function is called by:
  4693 ;;		_MFRC522_Request
  4694 ;;		_MFRC522_Halt
  4695 ;;		_MFRC522_AntiColl
  4696 ;;		_MFRC522_SelectTag
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text31
  4701  000D44                     __ptext31:
  4702                           	callstack 0
  4703  000D44                     _MFRC522_ToCard:
  4704                           	callstack 24
  4705                           
  4706                           ;incstack = 0
  4707                           ;MFRC522_ToCard@command stored from wreg
  4708  000D44  6E1D               	movwf	MFRC522_ToCard@command^0,c
  4709  000D46                     
  4710                           ;rc522.c: 203: char MFRC522_ToCard(char command, char *sendData, char sendLen, char *bac
      +                          kData, unsigned *backLen);rc522.c: 204: {;rc522.c: 205:     char _status = 2;
  4711  000D46  0E02               	movlw	2
  4712  000D48  6E1A               	movwf	MFRC522_ToCard@_status^0,c
  4713                           
  4714                           ;rc522.c: 206:     char irqEn = 0x00;
  4715  000D4A  0E00               	movlw	0
  4716  000D4C  6E1C               	movwf	MFRC522_ToCard@irqEn^0,c
  4717                           
  4718                           ;rc522.c: 207:     char waitIRq = 0x00;
  4719  000D4E  0E00               	movlw	0
  4720  000D50  6E19               	movwf	MFRC522_ToCard@waitIRq^0,c
  4721                           
  4722                           ;rc522.c: 208:     char lastBits;;rc522.c: 209:     char n;;rc522.c: 210:     unsigned i
      +                          ;;rc522.c: 212:     switch(command)
  4723  000D52  EFB7  F006         	goto	l2760
  4724  000D56                     l2754:
  4725                           
  4726                           ;rc522.c: 215:             irqEn = 0x12;
  4727  000D56  0E12               	movlw	18
  4728  000D58  6E1C               	movwf	MFRC522_ToCard@irqEn^0,c
  4729                           
  4730                           ;rc522.c: 216:             waitIRq = 0x10;
  4731  000D5A  0E10               	movlw	16
  4732  000D5C  6E19               	movwf	MFRC522_ToCard@waitIRq^0,c
  4733                           
  4734                           ;rc522.c: 217:             break;
  4735  000D5E  EFCC  F006         	goto	l2762
  4736  000D62                     l2756:
  4737                           
  4738                           ;rc522.c: 220:             irqEn = 0x77;
  4739  000D62  0E77               	movlw	119
  4740  000D64  6E1C               	movwf	MFRC522_ToCard@irqEn^0,c
  4741                           
  4742                           ;rc522.c: 221:             waitIRq = 0x30;
  4743  000D66  0E30               	movlw	48
  4744  000D68  6E19               	movwf	MFRC522_ToCard@waitIRq^0,c
  4745                           
  4746                           ;rc522.c: 222:             break;
  4747  000D6A  EFCC  F006         	goto	l2762
  4748  000D6E                     l2760:
  4749  000D6E  501D               	movf	MFRC522_ToCard@command^0,w,c
  4750  000D70  6E15               	movwf	??_MFRC522_ToCard^0,c
  4751  000D72  6A16               	clrf	(??_MFRC522_ToCard+1)^0,c
  4752                           
  4753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4754                           ; Switch size 1, requested type "simple"
  4755                           ; Number of cases is 1, Range of values is 0 to 0
  4756                           ; switch strategies available:
  4757                           ; Name         Instructions Cycles
  4758                           ; simple_byte            4     3 (average)
  4759                           ;	Chosen strategy is simple_byte
  4760  000D74  5016               	movf	(??_MFRC522_ToCard+1)^0,w,c
  4761  000D76  0A00               	xorlw	0	; case 0
  4762  000D78  B4D8               	btfsc	status,2,c
  4763  000D7A  EFC1  F006         	goto	l3648
  4764  000D7E  EFCC  F006         	goto	l2762
  4765  000D82                     l3648:
  4766                           
  4767                           ; Switch size 1, requested type "simple"
  4768                           ; Number of cases is 2, Range of values is 12 to 14
  4769                           ; switch strategies available:
  4770                           ; Name         Instructions Cycles
  4771                           ; simple_byte            7     4 (average)
  4772                           ;	Chosen strategy is simple_byte
  4773  000D82  5015               	movf	??_MFRC522_ToCard^0,w,c
  4774  000D84  0A0C               	xorlw	12	; case 12
  4775  000D86  B4D8               	btfsc	status,2,c
  4776  000D88  EFB1  F006         	goto	l2756
  4777  000D8C  0A02               	xorlw	2	; case 14
  4778  000D8E  B4D8               	btfsc	status,2,c
  4779  000D90  EFAB  F006         	goto	l2754
  4780  000D94  EFCC  F006         	goto	l2762
  4781  000D98                     l2762:
  4782                           
  4783                           ;rc522.c: 227:     MFRC522_Wr(0x02, irqEn | 0x80);
  4784  000D98  501C               	movf	MFRC522_ToCard@irqEn^0,w,c
  4785  000D9A  0980               	iorlw	128
  4786  000D9C  6E02               	movwf	MFRC522_Wr@value^0,c
  4787  000D9E  0E02               	movlw	2
  4788  000DA0  ECEF  F00E         	call	_MFRC522_Wr
  4789                           
  4790                           ;rc522.c: 228:     MFRC522_Clear_Bit(0x04, 0x80);
  4791  000DA4  0E80               	movlw	128
  4792  000DA6  6E0B               	movwf	MFRC522_Clear_Bit@mask^0,c
  4793  000DA8  0E04               	movlw	4
  4794  000DAA  EC12  F012         	call	_MFRC522_Clear_Bit
  4795                           
  4796                           ;rc522.c: 229:     MFRC522_Set_Bit(0x0A, 0x80);
  4797  000DAE  0E80               	movlw	128
  4798  000DB0  6E0B               	movwf	MFRC522_Set_Bit@mask^0,c
  4799  000DB2  0E0A               	movlw	10
  4800  000DB4  EC38  F012         	call	_MFRC522_Set_Bit
  4801                           
  4802                           ;rc522.c: 230:     MFRC522_Wr(0x01, 0x00);
  4803  000DB8  0E00               	movlw	0
  4804  000DBA  6E02               	movwf	MFRC522_Wr@value^0,c
  4805  000DBC  0E01               	movlw	1
  4806  000DBE  ECEF  F00E         	call	_MFRC522_Wr
  4807  000DC2                     
  4808                           ;rc522.c: 232:     for(i=0; i<sendLen; i++)
  4809  000DC2  0E00               	movlw	0
  4810  000DC4  6E1F               	movwf	(MFRC522_ToCard@i+1)^0,c
  4811  000DC6  0E00               	movlw	0
  4812  000DC8  6E1E               	movwf	MFRC522_ToCard@i^0,c
  4813  000DCA  EFF4  F006         	goto	l2770
  4814  000DCE                     l2766:
  4815                           
  4816                           ;rc522.c: 233:     {;rc522.c: 234:         MFRC522_Wr(0x09, sendData[i]);
  4817  000DCE  501E               	movf	MFRC522_ToCard@i^0,w,c
  4818  000DD0  240E               	addwf	MFRC522_ToCard@sendData^0,w,c
  4819  000DD2  6ED9               	movwf	fsr2l,c
  4820  000DD4  501F               	movf	(MFRC522_ToCard@i+1)^0,w,c
  4821  000DD6  200F               	addwfc	(MFRC522_ToCard@sendData+1)^0,w,c
  4822  000DD8  6EDA               	movwf	fsr2h,c
  4823  000DDA  50DF               	movf	indf2,w,c
  4824  000DDC  6E02               	movwf	MFRC522_Wr@value^0,c
  4825  000DDE  0E09               	movlw	9
  4826  000DE0  ECEF  F00E         	call	_MFRC522_Wr
  4827  000DE4                     
  4828                           ;rc522.c: 235:     }
  4829  000DE4  4A1E               	infsnz	MFRC522_ToCard@i^0,f,c
  4830  000DE6  2A1F               	incf	(MFRC522_ToCard@i+1)^0,f,c
  4831  000DE8                     l2770:
  4832  000DE8  5010               	movf	MFRC522_ToCard@sendLen^0,w,c
  4833  000DEA  6E15               	movwf	??_MFRC522_ToCard^0,c
  4834  000DEC  6A16               	clrf	(??_MFRC522_ToCard+1)^0,c
  4835  000DEE  5015               	movf	??_MFRC522_ToCard^0,w,c
  4836  000DF0  5C1E               	subwf	MFRC522_ToCard@i^0,w,c
  4837  000DF2  5016               	movf	(??_MFRC522_ToCard+1)^0,w,c
  4838  000DF4  581F               	subwfb	(MFRC522_ToCard@i+1)^0,w,c
  4839  000DF6  A0D8               	btfss	status,0,c
  4840  000DF8  EF00  F007         	goto	u2041
  4841  000DFC  EF02  F007         	goto	u2040
  4842  000E00                     u2041:
  4843  000E00  EFE7  F006         	goto	l2766
  4844  000E04                     u2040:
  4845  000E04                     
  4846                           ;rc522.c: 236:     MFRC522_Wr(0x01, command);
  4847  000E04  C01D  F002         	movff	MFRC522_ToCard@command,MFRC522_Wr@value
  4848  000E08  0E01               	movlw	1
  4849  000E0A  ECEF  F00E         	call	_MFRC522_Wr
  4850  000E0E                     
  4851                           ;rc522.c: 237:     if(command == 0x0C)
  4852  000E0E  0E0C               	movlw	12
  4853  000E10  181D               	xorwf	MFRC522_ToCard@command^0,w,c
  4854  000E12  A4D8               	btfss	status,2,c
  4855  000E14  EF0E  F007         	goto	u2051
  4856  000E18  EF10  F007         	goto	u2050
  4857  000E1C                     u2051:
  4858  000E1C  EF15  F007         	goto	l2778
  4859  000E20                     u2050:
  4860  000E20                     
  4861                           ;rc522.c: 238:     {;rc522.c: 239:         MFRC522_Set_Bit(0x0D, 0x80);
  4862  000E20  0E80               	movlw	128
  4863  000E22  6E0B               	movwf	MFRC522_Set_Bit@mask^0,c
  4864  000E24  0E0D               	movlw	13
  4865  000E26  EC38  F012         	call	_MFRC522_Set_Bit
  4866  000E2A                     l2778:
  4867                           
  4868                           ;rc522.c: 241:     i = 0xFFFF;
  4869  000E2A  681E               	setf	MFRC522_ToCard@i^0,c
  4870  000E2C  681F               	setf	(MFRC522_ToCard@i+1)^0,c
  4871  000E2E                     l312:
  4872                           
  4873                           ;rc522.c: 243:     {;rc522.c: 244:         n = MFRC522_Rd(0x04);
  4874  000E2E  0E04               	movlw	4
  4875  000E30  ECA4  F00B         	call	_MFRC522_Rd
  4876  000E34  6E20               	movwf	MFRC522_ToCard@n^0,c
  4877  000E36                     
  4878                           ;rc522.c: 245:         i--;
  4879  000E36  061E               	decf	MFRC522_ToCard@i^0,f,c
  4880  000E38  A0D8               	btfss	status,0,c
  4881  000E3A  061F               	decf	(MFRC522_ToCard@i+1)^0,f,c
  4882  000E3C                     
  4883                           ;rc522.c: 246:     }while(i && !(n & 0x01) && !(n & waitIRq));
  4884  000E3C  501E               	movf	MFRC522_ToCard@i^0,w,c
  4885  000E3E  101F               	iorwf	(MFRC522_ToCard@i+1)^0,w,c
  4886  000E40  B4D8               	btfsc	status,2,c
  4887  000E42  EF25  F007         	goto	u2061
  4888  000E46  EF27  F007         	goto	u2060
  4889  000E4A                     u2061:
  4890  000E4A  EF38  F007         	goto	l2788
  4891  000E4E                     u2060:
  4892  000E4E  B020               	btfsc	MFRC522_ToCard@n^0,0,c
  4893  000E50  EF2C  F007         	goto	u2071
  4894  000E54  EF2E  F007         	goto	u2070
  4895  000E58                     u2071:
  4896  000E58  EF38  F007         	goto	l2788
  4897  000E5C                     u2070:
  4898  000E5C  5020               	movf	MFRC522_ToCard@n^0,w,c
  4899  000E5E  1419               	andwf	MFRC522_ToCard@waitIRq^0,w,c
  4900  000E60  0900               	iorlw	0
  4901  000E62  B4D8               	btfsc	status,2,c
  4902  000E64  EF36  F007         	goto	u2081
  4903  000E68  EF38  F007         	goto	u2080
  4904  000E6C                     u2081:
  4905  000E6C  EF17  F007         	goto	l312
  4906  000E70                     u2080:
  4907  000E70                     l2788:
  4908                           
  4909                           ;rc522.c: 248:     MFRC522_Clear_Bit(0x0D, 0x80);
  4910  000E70  0E80               	movlw	128
  4911  000E72  6E0B               	movwf	MFRC522_Clear_Bit@mask^0,c
  4912  000E74  0E0D               	movlw	13
  4913  000E76  EC12  F012         	call	_MFRC522_Clear_Bit
  4914  000E7A                     
  4915                           ;rc522.c: 249:     if(i != 0)
  4916  000E7A  501E               	movf	MFRC522_ToCard@i^0,w,c
  4917  000E7C  101F               	iorwf	(MFRC522_ToCard@i+1)^0,w,c
  4918  000E7E  B4D8               	btfsc	status,2,c
  4919  000E80  EF44  F007         	goto	u2091
  4920  000E84  EF46  F007         	goto	u2090
  4921  000E88                     u2091:
  4922  000E88  EFE7  F007         	goto	l316
  4923  000E8C                     u2090:
  4924  000E8C                     
  4925                           ;rc522.c: 250:     {;rc522.c: 251:         if(!(MFRC522_Rd(0x06) & 0x1B))
  4926  000E8C  0E06               	movlw	6
  4927  000E8E  ECA4  F00B         	call	_MFRC522_Rd
  4928  000E92  6E15               	movwf	??_MFRC522_ToCard^0,c
  4929  000E94  0E1B               	movlw	27
  4930  000E96  1615               	andwf	??_MFRC522_ToCard^0,f,c
  4931  000E98  A4D8               	btfss	status,2,c
  4932  000E9A  EF51  F007         	goto	u2101
  4933  000E9E  EF53  F007         	goto	u2100
  4934  000EA2                     u2101:
  4935  000EA2  EFE5  F007         	goto	l2826
  4936  000EA6                     u2100:
  4937  000EA6                     
  4938                           ;rc522.c: 252:         {;rc522.c: 253:             _status = 0;
  4939  000EA6  0E00               	movlw	0
  4940  000EA8  6E1A               	movwf	MFRC522_ToCard@_status^0,c
  4941  000EAA                     
  4942                           ;rc522.c: 254:             if(n & irqEn & 0x01)
  4943  000EAA  5020               	movf	MFRC522_ToCard@n^0,w,c
  4944  000EAC  141C               	andwf	MFRC522_ToCard@irqEn^0,w,c
  4945  000EAE  6E15               	movwf	??_MFRC522_ToCard^0,c
  4946  000EB0  A015               	btfss	??_MFRC522_ToCard^0,0,c
  4947  000EB2  EF5D  F007         	goto	u2111
  4948  000EB6  EF5F  F007         	goto	u2110
  4949  000EBA                     u2111:
  4950  000EBA  EF61  F007         	goto	l2800
  4951  000EBE                     u2110:
  4952  000EBE                     
  4953                           ;rc522.c: 255:             {;rc522.c: 256:                 _status = 1;
  4954  000EBE  0E01               	movlw	1
  4955  000EC0  6E1A               	movwf	MFRC522_ToCard@_status^0,c
  4956  000EC2                     l2800:
  4957                           
  4958                           ;rc522.c: 258:             if(command == 0x0C)
  4959  000EC2  0E0C               	movlw	12
  4960  000EC4  181D               	xorwf	MFRC522_ToCard@command^0,w,c
  4961  000EC6  A4D8               	btfss	status,2,c
  4962  000EC8  EF68  F007         	goto	u2121
  4963  000ECC  EF6A  F007         	goto	u2120
  4964  000ED0                     u2121:
  4965  000ED0  EFE7  F007         	goto	l316
  4966  000ED4                     u2120:
  4967  000ED4                     
  4968                           ;rc522.c: 259:             {;rc522.c: 260:                 n = MFRC522_Rd(0x0A);
  4969  000ED4  0E0A               	movlw	10
  4970  000ED6  ECA4  F00B         	call	_MFRC522_Rd
  4971  000EDA  6E20               	movwf	MFRC522_ToCard@n^0,c
  4972                           
  4973                           ;rc522.c: 261:                 lastBits = MFRC522_Rd(0x0C) & 0x07;
  4974  000EDC  0E0C               	movlw	12
  4975  000EDE  ECA4  F00B         	call	_MFRC522_Rd
  4976  000EE2  0B07               	andlw	7
  4977  000EE4  6E1B               	movwf	MFRC522_ToCard@lastBits^0,c
  4978  000EE6                     
  4979                           ;rc522.c: 262:                 if(lastBits)
  4980  000EE6  501B               	movf	MFRC522_ToCard@lastBits^0,w,c
  4981  000EE8  B4D8               	btfsc	status,2,c
  4982  000EEA  EF79  F007         	goto	u2131
  4983  000EEE  EF7B  F007         	goto	u2130
  4984  000EF2                     u2131:
  4985  000EF2  EF9D  F007         	goto	l2808
  4986  000EF6                     u2130:
  4987  000EF6                     
  4988                           ;rc522.c: 263:                 {;rc522.c: 264:                     *backLen = (n-1) * 8 
      +                          + lastBits;
  4989  000EF6  0EF8               	movlw	248
  4990  000EF8  6E15               	movwf	??_MFRC522_ToCard^0,c
  4991  000EFA  0EFF               	movlw	255
  4992  000EFC  6E16               	movwf	(??_MFRC522_ToCard+1)^0,c
  4993  000EFE  501B               	movf	MFRC522_ToCard@lastBits^0,w,c
  4994  000F00  C020  F017         	movff	MFRC522_ToCard@n,??_MFRC522_ToCard+2
  4995  000F04  6A18               	clrf	(??_MFRC522_ToCard+3)^0,c
  4996  000F06  90D8               	bcf	status,0,c
  4997  000F08  3617               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  4998  000F0A  3618               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  4999  000F0C  90D8               	bcf	status,0,c
  5000  000F0E  3617               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  5001  000F10  3618               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  5002  000F12  90D8               	bcf	status,0,c
  5003  000F14  3617               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  5004  000F16  3618               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  5005  000F18  2617               	addwf	(??_MFRC522_ToCard+2)^0,f,c
  5006  000F1A  0E00               	movlw	0
  5007  000F1C  2218               	addwfc	(??_MFRC522_ToCard+3)^0,f,c
  5008  000F1E  5015               	movf	??_MFRC522_ToCard^0,w,c
  5009  000F20  2617               	addwf	(??_MFRC522_ToCard+2)^0,f,c
  5010  000F22  5016               	movf	(??_MFRC522_ToCard+1)^0,w,c
  5011  000F24  2218               	addwfc	(??_MFRC522_ToCard+3)^0,f,c
  5012  000F26  C013  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  5013  000F2A  C014  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  5014  000F2E  C017  FFDE         	movff	??_MFRC522_ToCard+2,postinc2
  5015  000F32  C018  FFDD         	movff	??_MFRC522_ToCard+3,postdec2
  5016                           
  5017                           ;rc522.c: 265:                 }
  5018  000F36  EFA7  F007         	goto	l2810
  5019  000F3A                     l2808:
  5020                           
  5021                           ;rc522.c: 267:                 {;rc522.c: 268:                     *backLen = n * 8;
  5022  000F3A  5020               	movf	MFRC522_ToCard@n^0,w,c
  5023  000F3C  0D08               	mullw	8
  5024  000F3E  C013  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  5025  000F42  C014  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  5026  000F46  CFF3 FFDE          	movff	prodl,postinc2
  5027  000F4A  CFF4 FFDD          	movff	prodh,postdec2
  5028  000F4E                     l2810:
  5029                           
  5030                           ;rc522.c: 270:                 if(n == 0)
  5031  000F4E  5020               	movf	MFRC522_ToCard@n^0,w,c
  5032  000F50  A4D8               	btfss	status,2,c
  5033  000F52  EFAD  F007         	goto	u2141
  5034  000F56  EFAF  F007         	goto	u2140
  5035  000F5A                     u2141:
  5036  000F5A  EFB1  F007         	goto	l2814
  5037  000F5E                     u2140:
  5038  000F5E                     
  5039                           ;rc522.c: 271:                 {;rc522.c: 272:                     n = 1;
  5040  000F5E  0E01               	movlw	1
  5041  000F60  6E20               	movwf	MFRC522_ToCard@n^0,c
  5042  000F62                     l2814:
  5043                           
  5044                           ;rc522.c: 274:                 if(n > 16)
  5045  000F62  0E10               	movlw	16
  5046  000F64  6420               	cpfsgt	MFRC522_ToCard@n^0,c
  5047  000F66  EFB7  F007         	goto	u2151
  5048  000F6A  EFB9  F007         	goto	u2150
  5049  000F6E                     u2151:
  5050  000F6E  EFBB  F007         	goto	l323
  5051  000F72                     u2150:
  5052  000F72                     
  5053                           ;rc522.c: 275:                 {;rc522.c: 276:                     n = 16;
  5054  000F72  0E10               	movlw	16
  5055  000F74  6E20               	movwf	MFRC522_ToCard@n^0,c
  5056  000F76                     l323:
  5057                           
  5058                           ;rc522.c: 278:                 for(i=0; i<n; i++)
  5059  000F76  0E00               	movlw	0
  5060  000F78  6E1F               	movwf	(MFRC522_ToCard@i+1)^0,c
  5061  000F7A  0E00               	movlw	0
  5062  000F7C  6E1E               	movwf	MFRC522_ToCard@i^0,c
  5063  000F7E  EFCD  F007         	goto	l2822
  5064  000F82                     l2818:
  5065                           
  5066                           ;rc522.c: 279:                 {;rc522.c: 280:                     backData[i] = MFRC522
      +                          _Rd(0x09);
  5067  000F82  501E               	movf	MFRC522_ToCard@i^0,w,c
  5068  000F84  2411               	addwf	MFRC522_ToCard@backData^0,w,c
  5069  000F86  6ED9               	movwf	fsr2l,c
  5070  000F88  501F               	movf	(MFRC522_ToCard@i+1)^0,w,c
  5071  000F8A  2012               	addwfc	(MFRC522_ToCard@backData+1)^0,w,c
  5072  000F8C  6EDA               	movwf	fsr2h,c
  5073  000F8E  0E09               	movlw	9
  5074  000F90  ECA4  F00B         	call	_MFRC522_Rd
  5075  000F94  6EDF               	movwf	indf2,c
  5076  000F96                     
  5077                           ;rc522.c: 281:                 }
  5078  000F96  4A1E               	infsnz	MFRC522_ToCard@i^0,f,c
  5079  000F98  2A1F               	incf	(MFRC522_ToCard@i+1)^0,f,c
  5080  000F9A                     l2822:
  5081  000F9A  5020               	movf	MFRC522_ToCard@n^0,w,c
  5082  000F9C  6E15               	movwf	??_MFRC522_ToCard^0,c
  5083  000F9E  6A16               	clrf	(??_MFRC522_ToCard+1)^0,c
  5084  000FA0  5015               	movf	??_MFRC522_ToCard^0,w,c
  5085  000FA2  5C1E               	subwf	MFRC522_ToCard@i^0,w,c
  5086  000FA4  5016               	movf	(??_MFRC522_ToCard+1)^0,w,c
  5087  000FA6  581F               	subwfb	(MFRC522_ToCard@i+1)^0,w,c
  5088  000FA8  A0D8               	btfss	status,0,c
  5089  000FAA  EFD9  F007         	goto	u2161
  5090  000FAE  EFDB  F007         	goto	u2160
  5091  000FB2                     u2161:
  5092  000FB2  EFC1  F007         	goto	l2818
  5093  000FB6                     u2160:
  5094  000FB6                     
  5095                           ;rc522.c: 282:                 backData[i] = 0;
  5096  000FB6  501E               	movf	MFRC522_ToCard@i^0,w,c
  5097  000FB8  2411               	addwf	MFRC522_ToCard@backData^0,w,c
  5098  000FBA  6ED9               	movwf	fsr2l,c
  5099  000FBC  501F               	movf	(MFRC522_ToCard@i+1)^0,w,c
  5100  000FBE  2012               	addwfc	(MFRC522_ToCard@backData+1)^0,w,c
  5101  000FC0  6EDA               	movwf	fsr2h,c
  5102  000FC2  0E00               	movlw	0
  5103  000FC4  6EDF               	movwf	indf2,c
  5104  000FC6  EFE7  F007         	goto	l316
  5105  000FCA                     l2826:
  5106                           
  5107                           ;rc522.c: 286:         {;rc522.c: 287:             _status = 2;
  5108  000FCA  0E02               	movlw	2
  5109  000FCC  6E1A               	movwf	MFRC522_ToCard@_status^0,c
  5110  000FCE                     l316:
  5111                           
  5112                           ;rc522.c: 290:     return _status;
  5113  000FCE  501A               	movf	MFRC522_ToCard@_status^0,w,c
  5114  000FD0  0012               	return		;funcret
  5115  000FD2                     __end_of_MFRC522_ToCard:
  5116                           	callstack 0
  5117                           
  5118 ;; *************** function _MFRC522_CRC2 *****************
  5119 ;; Defined at:
  5120 ;;		line 432 in file "rc522.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  dataIn          2   13[COMRAM] PTR unsigned char 
  5123 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag2@buffer(9), 
  5124 ;;  length          1   15[COMRAM] unsigned char 
  5125 ;;  dataOut         2   16[COMRAM] PTR unsigned char 
  5126 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag2@buffer(9), 
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;  i               1   19[COMRAM] unsigned char 
  5129 ;;  n               1   18[COMRAM] unsigned char 
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  1    wreg      void 
  5132 ;; Registers used:
  5133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5139 ;;      Params:         5       0       0       0       0       0       0       0       0
  5140 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5142 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5143 ;;Total ram usage:        7 bytes
  5144 ;; Hardware stack levels used: 1
  5145 ;; Hardware stack levels required when called: 4
  5146 ;; This function calls:
  5147 ;;		_MFRC522_Clear_Bit2
  5148 ;;		_MFRC522_Rd2
  5149 ;;		_MFRC522_Set_Bit2
  5150 ;;		_MFRC522_Wr2
  5151 ;; This function is called by:
  5152 ;;		_MFRC522_Halt
  5153 ;;		_MFRC522_SelectTag2
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text32
  5158  001C0A                     __ptext32:
  5159                           	callstack 0
  5160  001C0A                     _MFRC522_CRC2:
  5161                           	callstack 25
  5162  001C0A                     
  5163                           ;rc522.c: 432: void MFRC522_CRC2(char *dataIn, char length, char *dataOut);rc522.c: 433:
      +                           {;rc522.c: 434:     char i, n;;rc522.c: 435:     MFRC522_Clear_Bit2(0x05, 0x04);
  5164  001C0A  0E04               	movlw	4
  5165  001C0C  6E0B               	movwf	MFRC522_Clear_Bit2@mask^0,c
  5166  001C0E  0E05               	movlw	5
  5167  001C10  EC05  F012         	call	_MFRC522_Clear_Bit2
  5168                           
  5169                           ;rc522.c: 436:     MFRC522_Set_Bit2(0x0A, 0x80);
  5170  001C14  0E80               	movlw	128
  5171  001C16  6E0B               	movwf	MFRC522_Set_Bit2@mask^0,c
  5172  001C18  0E0A               	movlw	10
  5173  001C1A  EC2C  F012         	call	_MFRC522_Set_Bit2
  5174  001C1E                     
  5175                           ;rc522.c: 437:     for(i=0; i<length; i++)
  5176  001C1E  0E00               	movlw	0
  5177  001C20  6E14               	movwf	MFRC522_CRC2@i^0,c
  5178  001C22  EF1F  F00E         	goto	l3112
  5179  001C26                     l3106:
  5180                           
  5181                           ;rc522.c: 438:     {;rc522.c: 439:         MFRC522_Wr2(0x09, *dataIn++);
  5182  001C26  C00E  FFD9         	movff	MFRC522_CRC2@dataIn,fsr2l
  5183  001C2A  C00F  FFDA         	movff	MFRC522_CRC2@dataIn+1,fsr2h
  5184  001C2E  50DF               	movf	indf2,w,c
  5185  001C30  6E02               	movwf	MFRC522_Wr2@value^0,c
  5186  001C32  0E09               	movlw	9
  5187  001C34  ECA5  F00E         	call	_MFRC522_Wr2
  5188  001C38  4A0E               	infsnz	MFRC522_CRC2@dataIn^0,f,c
  5189  001C3A  2A0F               	incf	(MFRC522_CRC2@dataIn+1)^0,f,c
  5190  001C3C                     
  5191                           ;rc522.c: 440:     }
  5192  001C3C  2A14               	incf	MFRC522_CRC2@i^0,f,c
  5193  001C3E                     l3112:
  5194  001C3E  5010               	movf	MFRC522_CRC2@length^0,w,c
  5195  001C40  5C14               	subwf	MFRC522_CRC2@i^0,w,c
  5196  001C42  A0D8               	btfss	status,0,c
  5197  001C44  EF26  F00E         	goto	u2491
  5198  001C48  EF28  F00E         	goto	u2490
  5199  001C4C                     u2491:
  5200  001C4C  EF13  F00E         	goto	l3106
  5201  001C50                     u2490:
  5202  001C50                     
  5203                           ;rc522.c: 441:     MFRC522_Wr2(0x01, 0x03);
  5204  001C50  0E03               	movlw	3
  5205  001C52  6E02               	movwf	MFRC522_Wr2@value^0,c
  5206  001C54  0E01               	movlw	1
  5207  001C56  ECA5  F00E         	call	_MFRC522_Wr2
  5208  001C5A                     
  5209                           ;rc522.c: 442:     i = 0xFF;
  5210  001C5A  6814               	setf	MFRC522_CRC2@i^0,c
  5211  001C5C                     l384:
  5212                           
  5213                           ;rc522.c: 444:     {;rc522.c: 445:         n = MFRC522_Rd2( 0x05 );
  5214  001C5C  0E05               	movlw	5
  5215  001C5E  EC48  F00B         	call	_MFRC522_Rd2
  5216  001C62  6E13               	movwf	MFRC522_CRC2@n^0,c
  5217  001C64                     
  5218                           ;rc522.c: 446:         i--;
  5219  001C64  0614               	decf	MFRC522_CRC2@i^0,f,c
  5220  001C66                     
  5221                           ;rc522.c: 447:     }
  5222  001C66  5014               	movf	MFRC522_CRC2@i^0,w,c
  5223  001C68  B4D8               	btfsc	status,2,c
  5224  001C6A  EF39  F00E         	goto	u2501
  5225  001C6E  EF3B  F00E         	goto	u2500
  5226  001C72                     u2501:
  5227  001C72  EF42  F00E         	goto	l3124
  5228  001C76                     u2500:
  5229  001C76  A413               	btfss	MFRC522_CRC2@n^0,2,c
  5230  001C78  EF40  F00E         	goto	u2511
  5231  001C7C  EF42  F00E         	goto	u2510
  5232  001C80                     u2511:
  5233  001C80  EF2E  F00E         	goto	l384
  5234  001C84                     u2510:
  5235  001C84                     l3124:
  5236                           
  5237                           ;rc522.c: 449:     dataOut[0] = MFRC522_Rd2(0x22);
  5238  001C84  0E22               	movlw	34
  5239  001C86  EC48  F00B         	call	_MFRC522_Rd2
  5240  001C8A  C011  FFD9         	movff	MFRC522_CRC2@dataOut,fsr2l
  5241  001C8E  C012  FFDA         	movff	MFRC522_CRC2@dataOut+1,fsr2h
  5242  001C92  6EDF               	movwf	indf2,c
  5243                           
  5244                           ;rc522.c: 450:     dataOut[1] = MFRC522_Rd2(0x21);
  5245  001C94  EE20 F001          	lfsr	2,1
  5246  001C98  5011               	movf	MFRC522_CRC2@dataOut^0,w,c
  5247  001C9A  26D9               	addwf	fsr2l,f,c
  5248  001C9C  5012               	movf	(MFRC522_CRC2@dataOut+1)^0,w,c
  5249  001C9E  22DA               	addwfc	fsr2h,f,c
  5250  001CA0  0E21               	movlw	33
  5251  001CA2  EC48  F00B         	call	_MFRC522_Rd2
  5252  001CA6  6EDF               	movwf	indf2,c
  5253  001CA8  0012               	return		;funcret
  5254  001CAA                     __end_of_MFRC522_CRC2:
  5255                           	callstack 0
  5256                           
  5257 ;; *************** function _MFRC522_Set_Bit2 *****************
  5258 ;; Defined at:
  5259 ;;		line 128 in file "rc522.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;  addr            1    wreg     unsigned char 
  5262 ;;  mask            1   10[COMRAM] unsigned char 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  addr            1   12[COMRAM] unsigned char 
  5265 ;;  tmp             1   11[COMRAM] unsigned char 
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  1    wreg      void 
  5268 ;; Registers used:
  5269 ;;		wreg, status,2, status,0, cstack
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5275 ;;      Params:         1       0       0       0       0       0       0       0       0
  5276 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5278 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5279 ;;Total ram usage:        3 bytes
  5280 ;; Hardware stack levels used: 1
  5281 ;; Hardware stack levels required when called: 3
  5282 ;; This function calls:
  5283 ;;		_MFRC522_Rd2
  5284 ;;		_MFRC522_Wr2
  5285 ;; This function is called by:
  5286 ;;		_MFRC522_AntennaOn2
  5287 ;;		_MFRC522_ToCard2
  5288 ;;		_MFRC522_CRC2
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text33
  5293  002458                     __ptext33:
  5294                           	callstack 0
  5295  002458                     _MFRC522_Set_Bit2:
  5296                           	callstack 24
  5297                           
  5298                           ;incstack = 0
  5299                           ;MFRC522_Set_Bit2@addr stored from wreg
  5300  002458  6E0D               	movwf	MFRC522_Set_Bit2@addr^0,c
  5301  00245A                     
  5302                           ;rc522.c: 131:     tmp = MFRC522_Rd2(addr);
  5303  00245A  500D               	movf	MFRC522_Set_Bit2@addr^0,w,c
  5304  00245C  EC48  F00B         	call	_MFRC522_Rd2
  5305  002460  6E0C               	movwf	MFRC522_Set_Bit2@tmp^0,c
  5306  002462                     
  5307                           ;rc522.c: 132:     MFRC522_Wr2(addr, tmp | mask);
  5308  002462  500C               	movf	MFRC522_Set_Bit2@tmp^0,w,c
  5309  002464  100B               	iorwf	MFRC522_Set_Bit2@mask^0,w,c
  5310  002466  6E02               	movwf	MFRC522_Wr2@value^0,c
  5311  002468  500D               	movf	MFRC522_Set_Bit2@addr^0,w,c
  5312  00246A  ECA5  F00E         	call	_MFRC522_Wr2
  5313  00246E  0012               	return		;funcret
  5314  002470                     __end_of_MFRC522_Set_Bit2:
  5315                           	callstack 0
  5316                           
  5317 ;; *************** function _MFRC522_Clear_Bit2 *****************
  5318 ;; Defined at:
  5319 ;;		line 113 in file "rc522.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  addr            1    wreg     unsigned char 
  5322 ;;  mask            1   10[COMRAM] unsigned char 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  addr            1   12[COMRAM] unsigned char 
  5325 ;;  tmp             1   11[COMRAM] unsigned char 
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  1    wreg      void 
  5328 ;; Registers used:
  5329 ;;		wreg, status,2, status,0, cstack
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5335 ;;      Params:         1       0       0       0       0       0       0       0       0
  5336 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5338 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5339 ;;Total ram usage:        3 bytes
  5340 ;; Hardware stack levels used: 1
  5341 ;; Hardware stack levels required when called: 3
  5342 ;; This function calls:
  5343 ;;		_MFRC522_Rd2
  5344 ;;		_MFRC522_Wr2
  5345 ;; This function is called by:
  5346 ;;		_MFRC522_AntennaOff2
  5347 ;;		_MFRC522_ToCard2
  5348 ;;		_MFRC522_CRC2
  5349 ;;		_MFRC522_Halt
  5350 ;;		_MFRC522_AntiColl2
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           	psect	text34
  5355  00240A                     __ptext34:
  5356                           	callstack 0
  5357  00240A                     _MFRC522_Clear_Bit2:
  5358                           	callstack 24
  5359                           
  5360                           ;incstack = 0
  5361                           ;MFRC522_Clear_Bit2@addr stored from wreg
  5362  00240A  6E0D               	movwf	MFRC522_Clear_Bit2@addr^0,c
  5363  00240C                     
  5364                           ;rc522.c: 116:     tmp = MFRC522_Rd2(addr) ;
  5365  00240C  500D               	movf	MFRC522_Clear_Bit2@addr^0,w,c
  5366  00240E  EC48  F00B         	call	_MFRC522_Rd2
  5367  002412  6E0C               	movwf	MFRC522_Clear_Bit2@tmp^0,c
  5368  002414                     
  5369                           ;rc522.c: 117:     MFRC522_Wr2(addr, tmp&~mask);
  5370  002414  500B               	movf	MFRC522_Clear_Bit2@mask^0,w,c
  5371  002416  0AFF               	xorlw	255
  5372  002418  140C               	andwf	MFRC522_Clear_Bit2@tmp^0,w,c
  5373  00241A  6E02               	movwf	MFRC522_Wr2@value^0,c
  5374  00241C  500D               	movf	MFRC522_Clear_Bit2@addr^0,w,c
  5375  00241E  ECA5  F00E         	call	_MFRC522_Wr2
  5376  002422  0012               	return		;funcret
  5377  002424                     __end_of_MFRC522_Clear_Bit2:
  5378                           	callstack 0
  5379                           
  5380 ;; *************** function _MFRC522_Wr2 *****************
  5381 ;; Defined at:
  5382 ;;		line 81 in file "rc522.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;  address         1    wreg     unsigned char 
  5385 ;;  value           1    1[COMRAM] unsigned char 
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;  address         1    3[COMRAM] unsigned char 
  5388 ;;  i               1    5[COMRAM] unsigned char 
  5389 ;;  ucAddr          1    4[COMRAM] unsigned char 
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  1    wreg      void 
  5392 ;; Registers used:
  5393 ;;		wreg, status,2, status,0
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5399 ;;      Params:         1       0       0       0       0       0       0       0       0
  5400 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5401 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5402 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5403 ;;Total ram usage:        5 bytes
  5404 ;; Hardware stack levels used: 1
  5405 ;; Hardware stack levels required when called: 2
  5406 ;; This function calls:
  5407 ;;		Nothing
  5408 ;; This function is called by:
  5409 ;;		_MFRC522_Clear_Bit2
  5410 ;;		_MFRC522_Set_Bit2
  5411 ;;		_MFRC522_Init
  5412 ;;		_MFRC522_ToCard2
  5413 ;;		_MFRC522_Request2
  5414 ;;		_MFRC522_CRC2
  5415 ;;		_MFRC522_AntiColl2
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text35
  5420  001D4A                     __ptext35:
  5421                           	callstack 0
  5422  001D4A                     _MFRC522_Wr2:
  5423                           	callstack 26
  5424                           
  5425                           ;incstack = 0
  5426                           ;MFRC522_Wr2@address stored from wreg
  5427  001D4A  6E04               	movwf	MFRC522_Wr2@address^0,c
  5428  001D4C                     
  5429                           ;rc522.c: 81: void MFRC522_Wr2(unsigned char address, unsigned char value);rc522.c: 82: 
      +                          {;rc522.c: 83:     unsigned char i, ucAddr;;rc522.c: 84:     LATDbits.LD1 = 0;
  5430  001D4C  928C               	bcf	140,1,c	;volatile
  5431                           
  5432                           ;rc522.c: 85:     LATAbits.LA1 = 0;
  5433  001D4E  9289               	bcf	137,1,c	;volatile
  5434  001D50                     
  5435                           ;rc522.c: 86:     ucAddr = ((address << 1) & 0x7E);
  5436  001D50  5004               	movf	MFRC522_Wr2@address^0,w,c
  5437  001D52  2404               	addwf	MFRC522_Wr2@address^0,w,c
  5438  001D54  0B7E               	andlw	126
  5439  001D56  6E05               	movwf	MFRC522_Wr2@ucAddr^0,c
  5440  001D58                     
  5441                           ;rc522.c: 88:     for(i=8; i>0; i--)
  5442  001D58  0E08               	movlw	8
  5443  001D5A  6E06               	movwf	MFRC522_Wr2@i^0,c
  5444  001D5C                     l2582:
  5445                           
  5446                           ;rc522.c: 89:     {;rc522.c: 90:         LATDbits.LD2 = ((ucAddr&0x80) == 0x80);
  5447  001D5C  BE05               	btfsc	MFRC522_Wr2@ucAddr^0,7,c
  5448  001D5E  EFB3  F00E         	goto	u1761
  5449  001D62  EFB7  F00E         	goto	u1760
  5450  001D66                     u1761:
  5451  001D66  6A03               	clrf	??_MFRC522_Wr2^0,c
  5452  001D68  2A03               	incf	??_MFRC522_Wr2^0,f,c
  5453  001D6A  EFB8  F00E         	goto	u1778
  5454  001D6E                     u1760:
  5455  001D6E  6A03               	clrf	??_MFRC522_Wr2^0,c
  5456  001D70                     u1778:
  5457  001D70  4603               	rlncf	??_MFRC522_Wr2^0,f,c
  5458  001D72  4603               	rlncf	??_MFRC522_Wr2^0,f,c
  5459  001D74  508C               	movf	140,w,c	;volatile
  5460  001D76  1803               	xorwf	??_MFRC522_Wr2^0,w,c
  5461  001D78  0BFB               	andlw	-5
  5462  001D7A  1803               	xorwf	??_MFRC522_Wr2^0,w,c
  5463  001D7C  6E8C               	movwf	140,c	;volatile
  5464  001D7E                     
  5465                           ;rc522.c: 91:         LATDbits.LD1 = 1;
  5466  001D7E  828C               	bsf	140,1,c	;volatile
  5467                           
  5468                           ;rc522.c: 92:         ucAddr <<= 1;
  5469  001D80  90D8               	bcf	status,0,c
  5470  001D82  3605               	rlcf	MFRC522_Wr2@ucAddr^0,f,c
  5471  001D84                     
  5472                           ;rc522.c: 93:         LATDbits.LD1 = 0;
  5473  001D84  928C               	bcf	140,1,c	;volatile
  5474  001D86                     
  5475                           ;rc522.c: 94:     }
  5476  001D86  0606               	decf	MFRC522_Wr2@i^0,f,c
  5477  001D88  5006               	movf	MFRC522_Wr2@i^0,w,c
  5478  001D8A  A4D8               	btfss	status,2,c
  5479  001D8C  EFCA  F00E         	goto	u1781
  5480  001D90  EFCC  F00E         	goto	u1780
  5481  001D94                     u1781:
  5482  001D94  EFAE  F00E         	goto	l2582
  5483  001D98                     u1780:
  5484  001D98                     
  5485                           ;rc522.c: 95:     for(i=8; i>0; i--)
  5486  001D98  0E08               	movlw	8
  5487  001D9A  6E06               	movwf	MFRC522_Wr2@i^0,c
  5488  001D9C                     l2596:
  5489                           
  5490                           ;rc522.c: 96:     {;rc522.c: 97:         LATDbits.LD2 = ((value&0x80) == 0x80);
  5491  001D9C  BE02               	btfsc	MFRC522_Wr2@value^0,7,c
  5492  001D9E  EFD3  F00E         	goto	u1791
  5493  001DA2  EFD7  F00E         	goto	u1790
  5494  001DA6                     u1791:
  5495  001DA6  6A03               	clrf	??_MFRC522_Wr2^0,c
  5496  001DA8  2A03               	incf	??_MFRC522_Wr2^0,f,c
  5497  001DAA  EFD8  F00E         	goto	u1808
  5498  001DAE                     u1790:
  5499  001DAE  6A03               	clrf	??_MFRC522_Wr2^0,c
  5500  001DB0                     u1808:
  5501  001DB0  4603               	rlncf	??_MFRC522_Wr2^0,f,c
  5502  001DB2  4603               	rlncf	??_MFRC522_Wr2^0,f,c
  5503  001DB4  508C               	movf	140,w,c	;volatile
  5504  001DB6  1803               	xorwf	??_MFRC522_Wr2^0,w,c
  5505  001DB8  0BFB               	andlw	-5
  5506  001DBA  1803               	xorwf	??_MFRC522_Wr2^0,w,c
  5507  001DBC  6E8C               	movwf	140,c	;volatile
  5508  001DBE                     
  5509                           ;rc522.c: 98:         LATDbits.LD1 = 1;
  5510  001DBE  828C               	bsf	140,1,c	;volatile
  5511                           
  5512                           ;rc522.c: 99:         value <<= 1;
  5513  001DC0  90D8               	bcf	status,0,c
  5514  001DC2  3602               	rlcf	MFRC522_Wr2@value^0,f,c
  5515  001DC4                     
  5516                           ;rc522.c: 100:         LATDbits.LD1 = 0;
  5517  001DC4  928C               	bcf	140,1,c	;volatile
  5518  001DC6                     
  5519                           ;rc522.c: 101:     }
  5520  001DC6  0606               	decf	MFRC522_Wr2@i^0,f,c
  5521  001DC8  5006               	movf	MFRC522_Wr2@i^0,w,c
  5522  001DCA  A4D8               	btfss	status,2,c
  5523  001DCC  EFEA  F00E         	goto	u1811
  5524  001DD0  EFEC  F00E         	goto	u1810
  5525  001DD4                     u1811:
  5526  001DD4  EFCE  F00E         	goto	l2596
  5527  001DD8                     u1810:
  5528  001DD8                     
  5529                           ;rc522.c: 102:     LATAbits.LA1 = 1;
  5530  001DD8  8289               	bsf	137,1,c	;volatile
  5531                           
  5532                           ;rc522.c: 103:     LATDbits.LD1 = 1;
  5533  001DDA  828C               	bsf	140,1,c	;volatile
  5534  001DDC  0012               	return		;funcret
  5535  001DDE                     __end_of_MFRC522_Wr2:
  5536                           	callstack 0
  5537                           
  5538 ;; *************** function _MFRC522_Rd2 *****************
  5539 ;; Defined at:
  5540 ;;		line 29 in file "rc522.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  address         1    wreg     unsigned char 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  address         1    3[COMRAM] unsigned char 
  5545 ;;  i               2    8[COMRAM] unsigned int 
  5546 ;;  ucResult        2    6[COMRAM] unsigned int 
  5547 ;;  ucAddr          2    4[COMRAM] unsigned int 
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  1    wreg      unsigned char 
  5550 ;; Registers used:
  5551 ;;		wreg, status,2, status,0
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5557 ;;      Params:         0       0       0       0       0       0       0       0       0
  5558 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5559 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5560 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5561 ;;Total ram usage:        9 bytes
  5562 ;; Hardware stack levels used: 1
  5563 ;; Hardware stack levels required when called: 2
  5564 ;; This function calls:
  5565 ;;		Nothing
  5566 ;; This function is called by:
  5567 ;;		_MFRC522_Clear_Bit2
  5568 ;;		_MFRC522_Set_Bit2
  5569 ;;		_MFRC522_AntennaOn2
  5570 ;;		_MFRC522_ToCard2
  5571 ;;		_MFRC522_CRC2
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           	psect	text36
  5576  001690                     __ptext36:
  5577                           	callstack 0
  5578  001690                     _MFRC522_Rd2:
  5579                           	callstack 24
  5580                           
  5581                           ;incstack = 0
  5582                           ;MFRC522_Rd2@address stored from wreg
  5583  001690  6E04               	movwf	MFRC522_Rd2@address^0,c
  5584  001692                     
  5585                           ;rc522.c: 29: unsigned char MFRC522_Rd2(unsigned char address);rc522.c: 30: {;rc522.c: 3
      +                          1:     unsigned int i, ucAddr;;rc522.c: 32:     unsigned int ucResult = 0;
  5586  001692  0E00               	movlw	0
  5587  001694  6E08               	movwf	(MFRC522_Rd2@ucResult+1)^0,c
  5588  001696  0E00               	movlw	0
  5589  001698  6E07               	movwf	MFRC522_Rd2@ucResult^0,c
  5590  00169A                     
  5591                           ;rc522.c: 33:     LATDbits.LD1 = 0;
  5592  00169A  928C               	bcf	140,1,c	;volatile
  5593  00169C                     
  5594                           ;rc522.c: 34:     LATAbits.LA1 = 0;
  5595  00169C  9289               	bcf	137,1,c	;volatile
  5596  00169E                     
  5597                           ;rc522.c: 35:     ucAddr = ((address << 1) & 0x7E) | 0x80;
  5598  00169E  5004               	movf	MFRC522_Rd2@address^0,w,c
  5599  0016A0  2404               	addwf	MFRC522_Rd2@address^0,w,c
  5600  0016A2  0B7E               	andlw	126
  5601  0016A4  6E02               	movwf	??_MFRC522_Rd2^0,c
  5602  0016A6  6A03               	clrf	(??_MFRC522_Rd2+1)^0,c
  5603  0016A8  0E80               	movlw	128
  5604  0016AA  1002               	iorwf	??_MFRC522_Rd2^0,w,c
  5605  0016AC  6E05               	movwf	MFRC522_Rd2@ucAddr^0,c
  5606  0016AE  5003               	movf	(??_MFRC522_Rd2+1)^0,w,c
  5607  0016B0  6E06               	movwf	(MFRC522_Rd2@ucAddr+1)^0,c
  5608  0016B2                     
  5609                           ;rc522.c: 37:     for(i=8; i>0; i--)
  5610  0016B2  0E00               	movlw	0
  5611  0016B4  6E0A               	movwf	(MFRC522_Rd2@i+1)^0,c
  5612  0016B6  0E08               	movlw	8
  5613  0016B8  6E09               	movwf	MFRC522_Rd2@i^0,c
  5614  0016BA                     l2510:
  5615                           
  5616                           ;rc522.c: 38:     {;rc522.c: 39:         LATDbits.LD2 = ((ucAddr & 0x80) == 0x80);
  5617  0016BA  BE05               	btfsc	MFRC522_Rd2@ucAddr^0,7,c
  5618  0016BC  EF62  F00B         	goto	u1651
  5619  0016C0  EF66  F00B         	goto	u1650
  5620  0016C4                     u1651:
  5621  0016C4  6A02               	clrf	??_MFRC522_Rd2^0,c
  5622  0016C6  2A02               	incf	??_MFRC522_Rd2^0,f,c
  5623  0016C8  EF67  F00B         	goto	u1668
  5624  0016CC                     u1650:
  5625  0016CC  6A02               	clrf	??_MFRC522_Rd2^0,c
  5626  0016CE                     u1668:
  5627  0016CE  4602               	rlncf	??_MFRC522_Rd2^0,f,c
  5628  0016D0  4602               	rlncf	??_MFRC522_Rd2^0,f,c
  5629  0016D2  508C               	movf	140,w,c	;volatile
  5630  0016D4  1802               	xorwf	??_MFRC522_Rd2^0,w,c
  5631  0016D6  0BFB               	andlw	-5
  5632  0016D8  1802               	xorwf	??_MFRC522_Rd2^0,w,c
  5633  0016DA  6E8C               	movwf	140,c	;volatile
  5634  0016DC                     
  5635                           ;rc522.c: 40:         LATDbits.LD1 = 1;
  5636  0016DC  828C               	bsf	140,1,c	;volatile
  5637  0016DE                     
  5638                           ;rc522.c: 41:         ucAddr <<= 1;
  5639  0016DE  90D8               	bcf	status,0,c
  5640  0016E0  3605               	rlcf	MFRC522_Rd2@ucAddr^0,f,c
  5641  0016E2  3606               	rlcf	(MFRC522_Rd2@ucAddr+1)^0,f,c
  5642  0016E4                     
  5643                           ;rc522.c: 42:         LATDbits.LD1 = 0;
  5644  0016E4  928C               	bcf	140,1,c	;volatile
  5645  0016E6                     
  5646                           ;rc522.c: 43:     }
  5647  0016E6  0609               	decf	MFRC522_Rd2@i^0,f,c
  5648  0016E8  A0D8               	btfss	status,0,c
  5649  0016EA  060A               	decf	(MFRC522_Rd2@i+1)^0,f,c
  5650  0016EC  5009               	movf	MFRC522_Rd2@i^0,w,c
  5651  0016EE  100A               	iorwf	(MFRC522_Rd2@i+1)^0,w,c
  5652  0016F0  A4D8               	btfss	status,2,c
  5653  0016F2  EF7D  F00B         	goto	u1671
  5654  0016F6  EF7F  F00B         	goto	u1670
  5655  0016FA                     u1671:
  5656  0016FA  EF5D  F00B         	goto	l2510
  5657  0016FE                     u1670:
  5658  0016FE                     
  5659                           ;rc522.c: 44:     for(i=8; i>0; i--)
  5660  0016FE  0E00               	movlw	0
  5661  001700  6E0A               	movwf	(MFRC522_Rd2@i+1)^0,c
  5662  001702  0E08               	movlw	8
  5663  001704  6E09               	movwf	MFRC522_Rd2@i^0,c
  5664  001706                     l254:
  5665                           
  5666                           ;rc522.c: 45:     {;rc522.c: 46:         LATDbits.LD1 = 1;
  5667  001706  828C               	bsf	140,1,c	;volatile
  5668  001708                     
  5669                           ;rc522.c: 47:         ucResult <<= 1;
  5670  001708  90D8               	bcf	status,0,c
  5671  00170A  3607               	rlcf	MFRC522_Rd2@ucResult^0,f,c
  5672  00170C  3608               	rlcf	(MFRC522_Rd2@ucResult+1)^0,f,c
  5673  00170E                     
  5674                           ;rc522.c: 48:         ucResult |= (short)PORTDbits.RD3;
  5675  00170E  B683               	btfsc	131,3,c	;volatile
  5676  001710  EF8C  F00B         	goto	u1681
  5677  001714  EF90  F00B         	goto	u1680
  5678  001718                     u1681:
  5679  001718  6A02               	clrf	??_MFRC522_Rd2^0,c
  5680  00171A  2A02               	incf	??_MFRC522_Rd2^0,f,c
  5681  00171C  EF91  F00B         	goto	u1688
  5682  001720                     u1680:
  5683  001720  6A02               	clrf	??_MFRC522_Rd2^0,c
  5684  001722                     u1688:
  5685  001722  5002               	movf	??_MFRC522_Rd2^0,w,c
  5686  001724  1207               	iorwf	MFRC522_Rd2@ucResult^0,f,c
  5687  001726                     
  5688                           ;rc522.c: 49:         LATDbits.LD1 = 0;
  5689  001726  928C               	bcf	140,1,c	;volatile
  5690  001728                     
  5691                           ;rc522.c: 50:     }
  5692  001728  0609               	decf	MFRC522_Rd2@i^0,f,c
  5693  00172A  A0D8               	btfss	status,0,c
  5694  00172C  060A               	decf	(MFRC522_Rd2@i+1)^0,f,c
  5695  00172E  5009               	movf	MFRC522_Rd2@i^0,w,c
  5696  001730  100A               	iorwf	(MFRC522_Rd2@i+1)^0,w,c
  5697  001732  A4D8               	btfss	status,2,c
  5698  001734  EF9E  F00B         	goto	u1691
  5699  001738  EFA0  F00B         	goto	u1690
  5700  00173C                     u1691:
  5701  00173C  EF83  F00B         	goto	l254
  5702  001740                     u1690:
  5703  001740                     
  5704                           ;rc522.c: 51:     LATAbits.LA1 = 1;
  5705  001740  8289               	bsf	137,1,c	;volatile
  5706                           
  5707                           ;rc522.c: 52:     LATDbits.LD1 = 1;
  5708  001742  828C               	bsf	140,1,c	;volatile
  5709  001744                     
  5710                           ;rc522.c: 53:     return ucResult;
  5711  001744  5007               	movf	MFRC522_Rd2@ucResult^0,w,c
  5712  001746  0012               	return		;funcret
  5713  001748                     __end_of_MFRC522_Rd2:
  5714                           	callstack 0
  5715                           
  5716 ;; *************** function _MFRC522_CRC *****************
  5717 ;; Defined at:
  5718 ;;		line 411 in file "rc522.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  dataIn          2   13[COMRAM] PTR unsigned char 
  5721 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  5722 ;;  length          1   15[COMRAM] unsigned char 
  5723 ;;  dataOut         2   16[COMRAM] PTR unsigned char 
  5724 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;  i               1   19[COMRAM] unsigned char 
  5727 ;;  n               1   18[COMRAM] unsigned char 
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  1    wreg      void 
  5730 ;; Registers used:
  5731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5732 ;; Tracked objects:
  5733 ;;		On entry : 0/0
  5734 ;;		On exit  : 0/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5737 ;;      Params:         5       0       0       0       0       0       0       0       0
  5738 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5740 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5741 ;;Total ram usage:        7 bytes
  5742 ;; Hardware stack levels used: 1
  5743 ;; Hardware stack levels required when called: 4
  5744 ;; This function calls:
  5745 ;;		_MFRC522_Clear_Bit
  5746 ;;		_MFRC522_Rd
  5747 ;;		_MFRC522_Set_Bit
  5748 ;;		_MFRC522_Wr
  5749 ;; This function is called by:
  5750 ;;		_MFRC522_Halt
  5751 ;;		_MFRC522_SelectTag
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text37
  5756  001CAA                     __ptext37:
  5757                           	callstack 0
  5758  001CAA                     _MFRC522_CRC:
  5759                           	callstack 25
  5760  001CAA                     
  5761                           ;rc522.c: 411: void MFRC522_CRC(char *dataIn, char length, char *dataOut);rc522.c: 412: 
      +                          {;rc522.c: 413:     char i, n;;rc522.c: 414:     MFRC522_Clear_Bit(0x05, 0x04);
  5762  001CAA  0E04               	movlw	4
  5763  001CAC  6E0B               	movwf	MFRC522_Clear_Bit@mask^0,c
  5764  001CAE  0E05               	movlw	5
  5765  001CB0  EC12  F012         	call	_MFRC522_Clear_Bit
  5766                           
  5767                           ;rc522.c: 415:     MFRC522_Set_Bit(0x0A, 0x80);
  5768  001CB4  0E80               	movlw	128
  5769  001CB6  6E0B               	movwf	MFRC522_Set_Bit@mask^0,c
  5770  001CB8  0E0A               	movlw	10
  5771  001CBA  EC38  F012         	call	_MFRC522_Set_Bit
  5772  001CBE                     
  5773                           ;rc522.c: 416:     for(i=0; i<length; i++)
  5774  001CBE  0E00               	movlw	0
  5775  001CC0  6E14               	movwf	MFRC522_CRC@i^0,c
  5776  001CC2  EF6F  F00E         	goto	l3088
  5777  001CC6                     l3082:
  5778                           
  5779                           ;rc522.c: 417:     {;rc522.c: 418:         MFRC522_Wr(0x09, *dataIn++);
  5780  001CC6  C00E  FFD9         	movff	MFRC522_CRC@dataIn,fsr2l
  5781  001CCA  C00F  FFDA         	movff	MFRC522_CRC@dataIn+1,fsr2h
  5782  001CCE  50DF               	movf	indf2,w,c
  5783  001CD0  6E02               	movwf	MFRC522_Wr@value^0,c
  5784  001CD2  0E09               	movlw	9
  5785  001CD4  ECEF  F00E         	call	_MFRC522_Wr
  5786  001CD8  4A0E               	infsnz	MFRC522_CRC@dataIn^0,f,c
  5787  001CDA  2A0F               	incf	(MFRC522_CRC@dataIn+1)^0,f,c
  5788  001CDC                     
  5789                           ;rc522.c: 419:     }
  5790  001CDC  2A14               	incf	MFRC522_CRC@i^0,f,c
  5791  001CDE                     l3088:
  5792  001CDE  5010               	movf	MFRC522_CRC@length^0,w,c
  5793  001CE0  5C14               	subwf	MFRC522_CRC@i^0,w,c
  5794  001CE2  A0D8               	btfss	status,0,c
  5795  001CE4  EF76  F00E         	goto	u2461
  5796  001CE8  EF78  F00E         	goto	u2460
  5797  001CEC                     u2461:
  5798  001CEC  EF63  F00E         	goto	l3082
  5799  001CF0                     u2460:
  5800  001CF0                     
  5801                           ;rc522.c: 420:     MFRC522_Wr(0x01, 0x03);
  5802  001CF0  0E03               	movlw	3
  5803  001CF2  6E02               	movwf	MFRC522_Wr@value^0,c
  5804  001CF4  0E01               	movlw	1
  5805  001CF6  ECEF  F00E         	call	_MFRC522_Wr
  5806  001CFA                     
  5807                           ;rc522.c: 421:     i = 0xFF;
  5808  001CFA  6814               	setf	MFRC522_CRC@i^0,c
  5809  001CFC                     l374:
  5810                           
  5811                           ;rc522.c: 423:     {;rc522.c: 424:         n = MFRC522_Rd( 0x05 );
  5812  001CFC  0E05               	movlw	5
  5813  001CFE  ECA4  F00B         	call	_MFRC522_Rd
  5814  001D02  6E13               	movwf	MFRC522_CRC@n^0,c
  5815  001D04                     
  5816                           ;rc522.c: 425:         i--;
  5817  001D04  0614               	decf	MFRC522_CRC@i^0,f,c
  5818  001D06                     
  5819                           ;rc522.c: 426:     }
  5820  001D06  5014               	movf	MFRC522_CRC@i^0,w,c
  5821  001D08  B4D8               	btfsc	status,2,c
  5822  001D0A  EF89  F00E         	goto	u2471
  5823  001D0E  EF8B  F00E         	goto	u2470
  5824  001D12                     u2471:
  5825  001D12  EF92  F00E         	goto	l3100
  5826  001D16                     u2470:
  5827  001D16  A413               	btfss	MFRC522_CRC@n^0,2,c
  5828  001D18  EF90  F00E         	goto	u2481
  5829  001D1C  EF92  F00E         	goto	u2480
  5830  001D20                     u2481:
  5831  001D20  EF7E  F00E         	goto	l374
  5832  001D24                     u2480:
  5833  001D24                     l3100:
  5834                           
  5835                           ;rc522.c: 428:     dataOut[0] = MFRC522_Rd(0x22);
  5836  001D24  0E22               	movlw	34
  5837  001D26  ECA4  F00B         	call	_MFRC522_Rd
  5838  001D2A  C011  FFD9         	movff	MFRC522_CRC@dataOut,fsr2l
  5839  001D2E  C012  FFDA         	movff	MFRC522_CRC@dataOut+1,fsr2h
  5840  001D32  6EDF               	movwf	indf2,c
  5841                           
  5842                           ;rc522.c: 429:     dataOut[1] = MFRC522_Rd(0x21);
  5843  001D34  EE20 F001          	lfsr	2,1
  5844  001D38  5011               	movf	MFRC522_CRC@dataOut^0,w,c
  5845  001D3A  26D9               	addwf	fsr2l,f,c
  5846  001D3C  5012               	movf	(MFRC522_CRC@dataOut+1)^0,w,c
  5847  001D3E  22DA               	addwfc	fsr2h,f,c
  5848  001D40  0E21               	movlw	33
  5849  001D42  ECA4  F00B         	call	_MFRC522_Rd
  5850  001D46  6EDF               	movwf	indf2,c
  5851  001D48  0012               	return		;funcret
  5852  001D4A                     __end_of_MFRC522_CRC:
  5853                           	callstack 0
  5854                           
  5855 ;; *************** function _MFRC522_Set_Bit *****************
  5856 ;; Defined at:
  5857 ;;		line 121 in file "rc522.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  addr            1    wreg     unsigned char 
  5860 ;;  mask            1   10[COMRAM] unsigned char 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  addr            1   12[COMRAM] unsigned char 
  5863 ;;  tmp             1   11[COMRAM] unsigned char 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  1    wreg      void 
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, status,0, cstack
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5873 ;;      Params:         1       0       0       0       0       0       0       0       0
  5874 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5875 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5876 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5877 ;;Total ram usage:        3 bytes
  5878 ;; Hardware stack levels used: 1
  5879 ;; Hardware stack levels required when called: 3
  5880 ;; This function calls:
  5881 ;;		_MFRC522_Rd
  5882 ;;		_MFRC522_Wr
  5883 ;; This function is called by:
  5884 ;;		_MFRC522_AntennaOn
  5885 ;;		_MFRC522_ToCard
  5886 ;;		_MFRC522_CRC
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text38
  5891  002470                     __ptext38:
  5892                           	callstack 0
  5893  002470                     _MFRC522_Set_Bit:
  5894                           	callstack 24
  5895                           
  5896                           ;incstack = 0
  5897                           ;MFRC522_Set_Bit@addr stored from wreg
  5898  002470  6E0D               	movwf	MFRC522_Set_Bit@addr^0,c
  5899  002472                     
  5900                           ;rc522.c: 124:     tmp = MFRC522_Rd(addr);
  5901  002472  500D               	movf	MFRC522_Set_Bit@addr^0,w,c
  5902  002474  ECA4  F00B         	call	_MFRC522_Rd
  5903  002478  6E0C               	movwf	MFRC522_Set_Bit@tmp^0,c
  5904  00247A                     
  5905                           ;rc522.c: 125:     MFRC522_Wr(addr, tmp | mask);
  5906  00247A  500C               	movf	MFRC522_Set_Bit@tmp^0,w,c
  5907  00247C  100B               	iorwf	MFRC522_Set_Bit@mask^0,w,c
  5908  00247E  6E02               	movwf	MFRC522_Wr@value^0,c
  5909  002480  500D               	movf	MFRC522_Set_Bit@addr^0,w,c
  5910  002482  ECEF  F00E         	call	_MFRC522_Wr
  5911  002486  0012               	return		;funcret
  5912  002488                     __end_of_MFRC522_Set_Bit:
  5913                           	callstack 0
  5914                           
  5915 ;; *************** function _MFRC522_Clear_Bit *****************
  5916 ;; Defined at:
  5917 ;;		line 106 in file "rc522.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  addr            1    wreg     unsigned char 
  5920 ;;  mask            1   10[COMRAM] unsigned char 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;  addr            1   12[COMRAM] unsigned char 
  5923 ;;  tmp             1   11[COMRAM] unsigned char 
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  1    wreg      void 
  5926 ;; Registers used:
  5927 ;;		wreg, status,2, status,0, cstack
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5933 ;;      Params:         1       0       0       0       0       0       0       0       0
  5934 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5936 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5937 ;;Total ram usage:        3 bytes
  5938 ;; Hardware stack levels used: 1
  5939 ;; Hardware stack levels required when called: 3
  5940 ;; This function calls:
  5941 ;;		_MFRC522_Rd
  5942 ;;		_MFRC522_Wr
  5943 ;; This function is called by:
  5944 ;;		_MFRC522_AntennaOff
  5945 ;;		_MFRC522_ToCard
  5946 ;;		_MFRC522_CRC
  5947 ;;		_MFRC522_Halt
  5948 ;;		_MFRC522_AntiColl
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           	psect	text39
  5953  002424                     __ptext39:
  5954                           	callstack 0
  5955  002424                     _MFRC522_Clear_Bit:
  5956                           	callstack 24
  5957                           
  5958                           ;incstack = 0
  5959                           ;MFRC522_Clear_Bit@addr stored from wreg
  5960  002424  6E0D               	movwf	MFRC522_Clear_Bit@addr^0,c
  5961  002426                     
  5962                           ;rc522.c: 109:     tmp = MFRC522_Rd(addr) ;
  5963  002426  500D               	movf	MFRC522_Clear_Bit@addr^0,w,c
  5964  002428  ECA4  F00B         	call	_MFRC522_Rd
  5965  00242C  6E0C               	movwf	MFRC522_Clear_Bit@tmp^0,c
  5966  00242E                     
  5967                           ;rc522.c: 110:     MFRC522_Wr(addr, tmp&~mask);
  5968  00242E  500B               	movf	MFRC522_Clear_Bit@mask^0,w,c
  5969  002430  0AFF               	xorlw	255
  5970  002432  140C               	andwf	MFRC522_Clear_Bit@tmp^0,w,c
  5971  002434  6E02               	movwf	MFRC522_Wr@value^0,c
  5972  002436  500D               	movf	MFRC522_Clear_Bit@addr^0,w,c
  5973  002438  ECEF  F00E         	call	_MFRC522_Wr
  5974  00243C  0012               	return		;funcret
  5975  00243E                     __end_of_MFRC522_Clear_Bit:
  5976                           	callstack 0
  5977                           
  5978 ;; *************** function _MFRC522_Wr *****************
  5979 ;; Defined at:
  5980 ;;		line 56 in file "rc522.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  address         1    wreg     unsigned char 
  5983 ;;  value           1    1[COMRAM] unsigned char 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  address         1    3[COMRAM] unsigned char 
  5986 ;;  i               1    5[COMRAM] unsigned char 
  5987 ;;  ucAddr          1    4[COMRAM] unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1    wreg      void 
  5990 ;; Registers used:
  5991 ;;		wreg, status,2, status,0
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5997 ;;      Params:         1       0       0       0       0       0       0       0       0
  5998 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5999 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6000 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6001 ;;Total ram usage:        5 bytes
  6002 ;; Hardware stack levels used: 1
  6003 ;; Hardware stack levels required when called: 2
  6004 ;; This function calls:
  6005 ;;		Nothing
  6006 ;; This function is called by:
  6007 ;;		_MFRC522_Clear_Bit
  6008 ;;		_MFRC522_Set_Bit
  6009 ;;		_MFRC522_Reset
  6010 ;;		_MFRC522_Init
  6011 ;;		_MFRC522_ToCard
  6012 ;;		_MFRC522_Request
  6013 ;;		_MFRC522_CRC
  6014 ;;		_MFRC522_AntiColl
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text40
  6019  001DDE                     __ptext40:
  6020                           	callstack 0
  6021  001DDE                     _MFRC522_Wr:
  6022                           	callstack 26
  6023                           
  6024                           ;incstack = 0
  6025                           ;MFRC522_Wr@address stored from wreg
  6026  001DDE  6E04               	movwf	MFRC522_Wr@address^0,c
  6027  001DE0                     
  6028                           ;rc522.c: 56: void MFRC522_Wr(unsigned char address, unsigned char value);rc522.c: 57: {
      +                          ;rc522.c: 58:     unsigned char i, ucAddr;;rc522.c: 59:     LATDbits.LD1 = 0;
  6029  001DE0  928C               	bcf	140,1,c	;volatile
  6030                           
  6031                           ;rc522.c: 60:     LATAbits.LA0 = 0;
  6032  001DE2  9089               	bcf	137,0,c	;volatile
  6033  001DE4                     
  6034                           ;rc522.c: 61:     ucAddr = ((address << 1) & 0x7E);
  6035  001DE4  5004               	movf	MFRC522_Wr@address^0,w,c
  6036  001DE6  2404               	addwf	MFRC522_Wr@address^0,w,c
  6037  001DE8  0B7E               	andlw	126
  6038  001DEA  6E05               	movwf	MFRC522_Wr@ucAddr^0,c
  6039  001DEC                     
  6040                           ;rc522.c: 63:     for(i=8; i>0; i--)
  6041  001DEC  0E08               	movlw	8
  6042  001DEE  6E06               	movwf	MFRC522_Wr@i^0,c
  6043  001DF0                     l2548:
  6044                           
  6045                           ;rc522.c: 64:     {;rc522.c: 65:         LATDbits.LD2 = ((ucAddr&0x80) == 0x80);
  6046  001DF0  BE05               	btfsc	MFRC522_Wr@ucAddr^0,7,c
  6047  001DF2  EFFD  F00E         	goto	u1701
  6048  001DF6  EF01  F00F         	goto	u1700
  6049  001DFA                     u1701:
  6050  001DFA  6A03               	clrf	??_MFRC522_Wr^0,c
  6051  001DFC  2A03               	incf	??_MFRC522_Wr^0,f,c
  6052  001DFE  EF02  F00F         	goto	u1718
  6053  001E02                     u1700:
  6054  001E02  6A03               	clrf	??_MFRC522_Wr^0,c
  6055  001E04                     u1718:
  6056  001E04  4603               	rlncf	??_MFRC522_Wr^0,f,c
  6057  001E06  4603               	rlncf	??_MFRC522_Wr^0,f,c
  6058  001E08  508C               	movf	140,w,c	;volatile
  6059  001E0A  1803               	xorwf	??_MFRC522_Wr^0,w,c
  6060  001E0C  0BFB               	andlw	-5
  6061  001E0E  1803               	xorwf	??_MFRC522_Wr^0,w,c
  6062  001E10  6E8C               	movwf	140,c	;volatile
  6063  001E12                     
  6064                           ;rc522.c: 66:         LATDbits.LD1 = 1;
  6065  001E12  828C               	bsf	140,1,c	;volatile
  6066                           
  6067                           ;rc522.c: 67:         ucAddr <<= 1;
  6068  001E14  90D8               	bcf	status,0,c
  6069  001E16  3605               	rlcf	MFRC522_Wr@ucAddr^0,f,c
  6070  001E18                     
  6071                           ;rc522.c: 68:         LATDbits.LD1 = 0;
  6072  001E18  928C               	bcf	140,1,c	;volatile
  6073  001E1A                     
  6074                           ;rc522.c: 69:     }
  6075  001E1A  0606               	decf	MFRC522_Wr@i^0,f,c
  6076  001E1C  5006               	movf	MFRC522_Wr@i^0,w,c
  6077  001E1E  A4D8               	btfss	status,2,c
  6078  001E20  EF14  F00F         	goto	u1721
  6079  001E24  EF16  F00F         	goto	u1720
  6080  001E28                     u1721:
  6081  001E28  EFF8  F00E         	goto	l2548
  6082  001E2C                     u1720:
  6083  001E2C                     
  6084                           ;rc522.c: 70:     for(i=8; i>0; i--)
  6085  001E2C  0E08               	movlw	8
  6086  001E2E  6E06               	movwf	MFRC522_Wr@i^0,c
  6087  001E30                     l2562:
  6088                           
  6089                           ;rc522.c: 71:     {;rc522.c: 72:         LATDbits.LD2 = ((value&0x80) == 0x80);
  6090  001E30  BE02               	btfsc	MFRC522_Wr@value^0,7,c
  6091  001E32  EF1D  F00F         	goto	u1731
  6092  001E36  EF21  F00F         	goto	u1730
  6093  001E3A                     u1731:
  6094  001E3A  6A03               	clrf	??_MFRC522_Wr^0,c
  6095  001E3C  2A03               	incf	??_MFRC522_Wr^0,f,c
  6096  001E3E  EF22  F00F         	goto	u1748
  6097  001E42                     u1730:
  6098  001E42  6A03               	clrf	??_MFRC522_Wr^0,c
  6099  001E44                     u1748:
  6100  001E44  4603               	rlncf	??_MFRC522_Wr^0,f,c
  6101  001E46  4603               	rlncf	??_MFRC522_Wr^0,f,c
  6102  001E48  508C               	movf	140,w,c	;volatile
  6103  001E4A  1803               	xorwf	??_MFRC522_Wr^0,w,c
  6104  001E4C  0BFB               	andlw	-5
  6105  001E4E  1803               	xorwf	??_MFRC522_Wr^0,w,c
  6106  001E50  6E8C               	movwf	140,c	;volatile
  6107  001E52                     
  6108                           ;rc522.c: 73:         LATDbits.LD1 = 1;
  6109  001E52  828C               	bsf	140,1,c	;volatile
  6110                           
  6111                           ;rc522.c: 74:         value <<= 1;
  6112  001E54  90D8               	bcf	status,0,c
  6113  001E56  3602               	rlcf	MFRC522_Wr@value^0,f,c
  6114  001E58                     
  6115                           ;rc522.c: 75:         LATDbits.LD1 = 0;
  6116  001E58  928C               	bcf	140,1,c	;volatile
  6117  001E5A                     
  6118                           ;rc522.c: 76:     }
  6119  001E5A  0606               	decf	MFRC522_Wr@i^0,f,c
  6120  001E5C  5006               	movf	MFRC522_Wr@i^0,w,c
  6121  001E5E  A4D8               	btfss	status,2,c
  6122  001E60  EF34  F00F         	goto	u1751
  6123  001E64  EF36  F00F         	goto	u1750
  6124  001E68                     u1751:
  6125  001E68  EF18  F00F         	goto	l2562
  6126  001E6C                     u1750:
  6127  001E6C                     
  6128                           ;rc522.c: 77:     LATAbits.LA0 = 1;
  6129  001E6C  8089               	bsf	137,0,c	;volatile
  6130                           
  6131                           ;rc522.c: 78:     LATDbits.LD1 = 1;
  6132  001E6E  828C               	bsf	140,1,c	;volatile
  6133  001E70  0012               	return		;funcret
  6134  001E72                     __end_of_MFRC522_Wr:
  6135                           	callstack 0
  6136                           
  6137 ;; *************** function _MFRC522_Rd *****************
  6138 ;; Defined at:
  6139 ;;		line 2 in file "rc522.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  address         1    wreg     unsigned char 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;  address         1    3[COMRAM] unsigned char 
  6144 ;;  i               2    8[COMRAM] unsigned int 
  6145 ;;  ucResult        2    6[COMRAM] unsigned int 
  6146 ;;  ucAddr          2    4[COMRAM] unsigned int 
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  1    wreg      unsigned char 
  6149 ;; Registers used:
  6150 ;;		wreg, status,2, status,0
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6156 ;;      Params:         0       0       0       0       0       0       0       0       0
  6157 ;;      Locals:         7       0       0       0       0       0       0       0       0
  6158 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6159 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6160 ;;Total ram usage:        9 bytes
  6161 ;; Hardware stack levels used: 1
  6162 ;; Hardware stack levels required when called: 2
  6163 ;; This function calls:
  6164 ;;		Nothing
  6165 ;; This function is called by:
  6166 ;;		_MFRC522_Clear_Bit
  6167 ;;		_MFRC522_Set_Bit
  6168 ;;		_MFRC522_AntennaOn
  6169 ;;		_MFRC522_ToCard
  6170 ;;		_MFRC522_CRC
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text41
  6175  001748                     __ptext41:
  6176                           	callstack 0
  6177  001748                     _MFRC522_Rd:
  6178                           	callstack 24
  6179                           
  6180                           ;incstack = 0
  6181                           ;MFRC522_Rd@address stored from wreg
  6182  001748  6E04               	movwf	MFRC522_Rd@address^0,c
  6183  00174A                     
  6184                           ;rc522.c: 2: unsigned char MFRC522_Rd(unsigned char address);rc522.c: 3: {;rc522.c: 4:  
      +                             unsigned int i, ucAddr;;rc522.c: 5:     unsigned int ucResult = 0;
  6185  00174A  0E00               	movlw	0
  6186  00174C  6E08               	movwf	(MFRC522_Rd@ucResult+1)^0,c
  6187  00174E  0E00               	movlw	0
  6188  001750  6E07               	movwf	MFRC522_Rd@ucResult^0,c
  6189  001752                     
  6190                           ;rc522.c: 6:     LATDbits.LD1 = 0;
  6191  001752  928C               	bcf	140,1,c	;volatile
  6192  001754                     
  6193                           ;rc522.c: 7:     LATAbits.LA0 = 0;
  6194  001754  9089               	bcf	137,0,c	;volatile
  6195  001756                     
  6196                           ;rc522.c: 8:     ucAddr = ((address << 1) & 0x7E) | 0x80;
  6197  001756  5004               	movf	MFRC522_Rd@address^0,w,c
  6198  001758  2404               	addwf	MFRC522_Rd@address^0,w,c
  6199  00175A  0B7E               	andlw	126
  6200  00175C  6E02               	movwf	??_MFRC522_Rd^0,c
  6201  00175E  6A03               	clrf	(??_MFRC522_Rd+1)^0,c
  6202  001760  0E80               	movlw	128
  6203  001762  1002               	iorwf	??_MFRC522_Rd^0,w,c
  6204  001764  6E05               	movwf	MFRC522_Rd@ucAddr^0,c
  6205  001766  5003               	movf	(??_MFRC522_Rd+1)^0,w,c
  6206  001768  6E06               	movwf	(MFRC522_Rd@ucAddr+1)^0,c
  6207  00176A                     
  6208                           ;rc522.c: 10:     for(i=8; i>0; i--)
  6209  00176A  0E00               	movlw	0
  6210  00176C  6E0A               	movwf	(MFRC522_Rd@i+1)^0,c
  6211  00176E  0E08               	movlw	8
  6212  001770  6E09               	movwf	MFRC522_Rd@i^0,c
  6213  001772                     l2468:
  6214                           
  6215                           ;rc522.c: 11:     {;rc522.c: 12:         LATDbits.LD2 = ((ucAddr & 0x80) == 0x80);
  6216  001772  BE05               	btfsc	MFRC522_Rd@ucAddr^0,7,c
  6217  001774  EFBE  F00B         	goto	u1601
  6218  001778  EFC2  F00B         	goto	u1600
  6219  00177C                     u1601:
  6220  00177C  6A02               	clrf	??_MFRC522_Rd^0,c
  6221  00177E  2A02               	incf	??_MFRC522_Rd^0,f,c
  6222  001780  EFC3  F00B         	goto	u1618
  6223  001784                     u1600:
  6224  001784  6A02               	clrf	??_MFRC522_Rd^0,c
  6225  001786                     u1618:
  6226  001786  4602               	rlncf	??_MFRC522_Rd^0,f,c
  6227  001788  4602               	rlncf	??_MFRC522_Rd^0,f,c
  6228  00178A  508C               	movf	140,w,c	;volatile
  6229  00178C  1802               	xorwf	??_MFRC522_Rd^0,w,c
  6230  00178E  0BFB               	andlw	-5
  6231  001790  1802               	xorwf	??_MFRC522_Rd^0,w,c
  6232  001792  6E8C               	movwf	140,c	;volatile
  6233  001794                     
  6234                           ;rc522.c: 13:         LATDbits.LD1 = 1;
  6235  001794  828C               	bsf	140,1,c	;volatile
  6236  001796                     
  6237                           ;rc522.c: 14:         ucAddr <<= 1;
  6238  001796  90D8               	bcf	status,0,c
  6239  001798  3605               	rlcf	MFRC522_Rd@ucAddr^0,f,c
  6240  00179A  3606               	rlcf	(MFRC522_Rd@ucAddr+1)^0,f,c
  6241  00179C                     
  6242                           ;rc522.c: 15:         LATDbits.LD1 = 0;
  6243  00179C  928C               	bcf	140,1,c	;volatile
  6244  00179E                     
  6245                           ;rc522.c: 16:     }
  6246  00179E  0609               	decf	MFRC522_Rd@i^0,f,c
  6247  0017A0  A0D8               	btfss	status,0,c
  6248  0017A2  060A               	decf	(MFRC522_Rd@i+1)^0,f,c
  6249  0017A4  5009               	movf	MFRC522_Rd@i^0,w,c
  6250  0017A6  100A               	iorwf	(MFRC522_Rd@i+1)^0,w,c
  6251  0017A8  A4D8               	btfss	status,2,c
  6252  0017AA  EFD9  F00B         	goto	u1621
  6253  0017AE  EFDB  F00B         	goto	u1620
  6254  0017B2                     u1621:
  6255  0017B2  EFB9  F00B         	goto	l2468
  6256  0017B6                     u1620:
  6257  0017B6                     
  6258                           ;rc522.c: 17:     for(i=8; i>0; i--)
  6259  0017B6  0E00               	movlw	0
  6260  0017B8  6E0A               	movwf	(MFRC522_Rd@i+1)^0,c
  6261  0017BA  0E08               	movlw	8
  6262  0017BC  6E09               	movwf	MFRC522_Rd@i^0,c
  6263  0017BE                     l247:
  6264                           
  6265                           ;rc522.c: 18:     {;rc522.c: 19:         LATDbits.LD1 = 1;
  6266  0017BE  828C               	bsf	140,1,c	;volatile
  6267  0017C0                     
  6268                           ;rc522.c: 20:         ucResult <<= 1;
  6269  0017C0  90D8               	bcf	status,0,c
  6270  0017C2  3607               	rlcf	MFRC522_Rd@ucResult^0,f,c
  6271  0017C4  3608               	rlcf	(MFRC522_Rd@ucResult+1)^0,f,c
  6272  0017C6                     
  6273                           ;rc522.c: 21:         ucResult |= (short)PORTDbits.RD3;
  6274  0017C6  B683               	btfsc	131,3,c	;volatile
  6275  0017C8  EFE8  F00B         	goto	u1631
  6276  0017CC  EFEC  F00B         	goto	u1630
  6277  0017D0                     u1631:
  6278  0017D0  6A02               	clrf	??_MFRC522_Rd^0,c
  6279  0017D2  2A02               	incf	??_MFRC522_Rd^0,f,c
  6280  0017D4  EFED  F00B         	goto	u1638
  6281  0017D8                     u1630:
  6282  0017D8  6A02               	clrf	??_MFRC522_Rd^0,c
  6283  0017DA                     u1638:
  6284  0017DA  5002               	movf	??_MFRC522_Rd^0,w,c
  6285  0017DC  1207               	iorwf	MFRC522_Rd@ucResult^0,f,c
  6286  0017DE                     
  6287                           ;rc522.c: 22:         LATDbits.LD1 = 0;
  6288  0017DE  928C               	bcf	140,1,c	;volatile
  6289  0017E0                     
  6290                           ;rc522.c: 23:     }
  6291  0017E0  0609               	decf	MFRC522_Rd@i^0,f,c
  6292  0017E2  A0D8               	btfss	status,0,c
  6293  0017E4  060A               	decf	(MFRC522_Rd@i+1)^0,f,c
  6294  0017E6  5009               	movf	MFRC522_Rd@i^0,w,c
  6295  0017E8  100A               	iorwf	(MFRC522_Rd@i+1)^0,w,c
  6296  0017EA  A4D8               	btfss	status,2,c
  6297  0017EC  EFFA  F00B         	goto	u1641
  6298  0017F0  EFFC  F00B         	goto	u1640
  6299  0017F4                     u1641:
  6300  0017F4  EFDF  F00B         	goto	l247
  6301  0017F8                     u1640:
  6302  0017F8                     
  6303                           ;rc522.c: 24:     LATAbits.LA0 = 1;
  6304  0017F8  8089               	bsf	137,0,c	;volatile
  6305                           
  6306                           ;rc522.c: 25:     LATDbits.LD1 = 1;
  6307  0017FA  828C               	bsf	140,1,c	;volatile
  6308  0017FC                     
  6309                           ;rc522.c: 26:     return ucResult;
  6310  0017FC  5007               	movf	MFRC522_Rd@ucResult^0,w,c
  6311  0017FE  0012               	return		;funcret
  6312  001800                     __end_of_MFRC522_Rd:
  6313                           	callstack 0
  6314                           
  6315 ;; *************** function _LCD_Print *****************
  6316 ;; Defined at:
  6317 ;;		line 109 in file "I2C.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  LCD_Str         2    5[COMRAM] PTR unsigned char 
  6320 ;;		 -> data_buffer(16), STR_2(4), STR_1(8), 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  i               1   10[COMRAM] unsigned char 
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  1    wreg      void 
  6325 ;; Registers used:
  6326 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6332 ;;      Params:         2       0       0       0       0       0       0       0       0
  6333 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6334 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6335 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6336 ;;Total ram usage:        6 bytes
  6337 ;; Hardware stack levels used: 1
  6338 ;; Hardware stack levels required when called: 5
  6339 ;; This function calls:
  6340 ;;		_LCD_Write_Nibble
  6341 ;; This function is called by:
  6342 ;;		_main
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text42
  6347  001968                     __ptext42:
  6348                           	callstack 0
  6349  001968                     _LCD_Print:
  6350                           	callstack 25
  6351  001968                     
  6352                           ;I2C.c: 109: void LCD_Print(char* LCD_Str);I2C.c: 110: {;I2C.c: 111:   uint8_t i = 0;
  6353  001968  0E00               	movlw	0
  6354  00196A  6E0B               	movwf	LCD_Print@i^0,c
  6355  00196C                     
  6356                           ;I2C.c: 112:   RS = 1;
  6357  00196C  805B               	bsf	(_RS/(0+8))^0,_RS& (0+7),c
  6358                           
  6359                           ;I2C.c: 113:   while(LCD_Str[i] != '\0')
  6360  00196E  EFEF  F00C         	goto	l3238
  6361  001972                     l3234:
  6362                           
  6363                           ;I2C.c: 114:   {;I2C.c: 115:     LCD_Write_Nibble(LCD_Str[i] & 0xF0);
  6364  001972  500B               	movf	LCD_Print@i^0,w,c
  6365  001974  2406               	addwf	LCD_Print@LCD_Str^0,w,c
  6366  001976  6E08               	movwf	??_LCD_Print^0,c
  6367  001978  0E00               	movlw	0
  6368  00197A  2007               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  6369  00197C  6E09               	movwf	(??_LCD_Print+1)^0,c
  6370  00197E  C008  FFF6         	movff	??_LCD_Print,tblptrl
  6371  001982  C009  FFF7         	movff	??_LCD_Print+1,tblptrh
  6372  001986  6AF8               	clrf	tblptru,c
  6373  001988  0E07               	movlw	(high __ramtop+-1)
  6374  00198A  64F7               	cpfsgt	tblptrh,c
  6375  00198C  D003               	bra	u2607
  6376  00198E  0008               	tblrd		*
  6377  001990  50F5               	movf	tablat,w,c
  6378  001992  D005               	bra	u2600
  6379  001994                     u2607:
  6380  001994  CFF6 FFE1          	movff	tblptrl,fsr1l
  6381  001998  CFF7 FFE2          	movff	tblptrh,fsr1h
  6382  00199C  50E7               	movf	indf1,w,c
  6383  00199E                     u2600:
  6384  00199E  0BF0               	andlw	240
  6385  0019A0  EC54  F011         	call	_LCD_Write_Nibble
  6386                           
  6387                           ;I2C.c: 116:     LCD_Write_Nibble( (LCD_Str[i++] << 4) & 0xF0 );
  6388  0019A4  500B               	movf	LCD_Print@i^0,w,c
  6389  0019A6  2406               	addwf	LCD_Print@LCD_Str^0,w,c
  6390  0019A8  6E08               	movwf	??_LCD_Print^0,c
  6391  0019AA  0E00               	movlw	0
  6392  0019AC  2007               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  6393  0019AE  6E09               	movwf	(??_LCD_Print+1)^0,c
  6394  0019B0  C008  FFF6         	movff	??_LCD_Print,tblptrl
  6395  0019B4  C009  FFF7         	movff	??_LCD_Print+1,tblptrh
  6396  0019B8  6AF8               	clrf	tblptru,c
  6397  0019BA  0E07               	movlw	(high __ramtop+-1)
  6398  0019BC  64F7               	cpfsgt	tblptrh,c
  6399  0019BE  D003               	bra	u2617
  6400  0019C0  0008               	tblrd		*
  6401  0019C2  50F5               	movf	tablat,w,c
  6402  0019C4  D005               	bra	u2610
  6403  0019C6                     u2617:
  6404  0019C6  CFF6 FFE1          	movff	tblptrl,fsr1l
  6405  0019CA  CFF7 FFE2          	movff	tblptrh,fsr1h
  6406  0019CE  50E7               	movf	indf1,w,c
  6407  0019D0                     u2610:
  6408  0019D0  6E0A               	movwf	(??_LCD_Print+2)^0,c
  6409  0019D2  380A               	swapf	(??_LCD_Print+2)^0,w,c
  6410  0019D4  0BF0               	andlw	240
  6411  0019D6  0BF0               	andlw	240
  6412  0019D8  EC54  F011         	call	_LCD_Write_Nibble
  6413  0019DC  2A0B               	incf	LCD_Print@i^0,f,c
  6414  0019DE                     l3238:
  6415                           
  6416                           ;I2C.c: 113:   while(LCD_Str[i] != '\0')
  6417  0019DE  500B               	movf	LCD_Print@i^0,w,c
  6418  0019E0  2406               	addwf	LCD_Print@LCD_Str^0,w,c
  6419  0019E2  6E08               	movwf	??_LCD_Print^0,c
  6420  0019E4  0E00               	movlw	0
  6421  0019E6  2007               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  6422  0019E8  6E09               	movwf	(??_LCD_Print+1)^0,c
  6423  0019EA  C008  FFF6         	movff	??_LCD_Print,tblptrl
  6424  0019EE  C009  FFF7         	movff	??_LCD_Print+1,tblptrh
  6425  0019F2  6AF8               	clrf	tblptru,c
  6426  0019F4  0E07               	movlw	(high __ramtop+-1)
  6427  0019F6  64F7               	cpfsgt	tblptrh,c
  6428  0019F8  D003               	bra	u2627
  6429  0019FA  0008               	tblrd		*
  6430  0019FC  50F5               	movf	tablat,w,c
  6431  0019FE  D005               	bra	u2620
  6432  001A00                     u2627:
  6433  001A00  CFF6 FFE1          	movff	tblptrl,fsr1l
  6434  001A04  CFF7 FFE2          	movff	tblptrh,fsr1h
  6435  001A08  50E7               	movf	indf1,w,c
  6436  001A0A                     u2620:
  6437  001A0A  0900               	iorlw	0
  6438  001A0C  A4D8               	btfss	status,2,c
  6439  001A0E  EF0B  F00D         	goto	u2631
  6440  001A12  EF0D  F00D         	goto	u2630
  6441  001A16                     u2631:
  6442  001A16  EFB9  F00C         	goto	l3234
  6443  001A1A                     u2630:
  6444  001A1A  0012               	return		;funcret
  6445  001A1C                     __end_of_LCD_Print:
  6446                           	callstack 0
  6447                           
  6448 ;; *************** function _LCD_Goto *****************
  6449 ;; Defined at:
  6450 ;;		line 83 in file "I2C.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  col             1    wreg     unsigned char 
  6453 ;;  row             1    7[COMRAM] unsigned char 
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;  col             1   10[COMRAM] unsigned char 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  1    wreg      void 
  6458 ;; Registers used:
  6459 ;;		wreg, status,2, status,0, cstack
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6465 ;;      Params:         1       0       0       0       0       0       0       0       0
  6466 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6467 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6468 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6469 ;;Total ram usage:        4 bytes
  6470 ;; Hardware stack levels used: 1
  6471 ;; Hardware stack levels required when called: 6
  6472 ;; This function calls:
  6473 ;;		_LCD_Cmd
  6474 ;; This function is called by:
  6475 ;;		_main
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           	psect	text43
  6480  001E72                     __ptext43:
  6481                           	callstack 0
  6482  001E72                     _LCD_Goto:
  6483                           	callstack 24
  6484                           
  6485                           ;incstack = 0
  6486                           ;LCD_Goto@col stored from wreg
  6487  001E72  6E0B               	movwf	LCD_Goto@col^0,c
  6488  001E74                     
  6489                           ;I2C.c: 83: void LCD_Goto(uint8_t col, uint8_t row);I2C.c: 84: {;I2C.c: 85:   switch(row
      +                          )
  6490  001E74  EF54  F00F         	goto	l3224
  6491  001E78                     l3216:
  6492                           
  6493                           ;I2C.c: 88:       LCD_Cmd(0xC0 + col - 1);
  6494  001E78  500B               	movf	LCD_Goto@col^0,w,c
  6495  001E7A  0FBF               	addlw	191
  6496  001E7C  EC5C  F010         	call	_LCD_Cmd
  6497                           
  6498                           ;I2C.c: 89:       break;
  6499  001E80  EF6D  F00F         	goto	l212
  6500  001E84                     l3218:
  6501                           
  6502                           ;I2C.c: 91:       LCD_Cmd(0x94 + col - 1);
  6503  001E84  500B               	movf	LCD_Goto@col^0,w,c
  6504  001E86  0F93               	addlw	147
  6505  001E88  EC5C  F010         	call	_LCD_Cmd
  6506                           
  6507                           ;I2C.c: 92:       break;
  6508  001E8C  EF6D  F00F         	goto	l212
  6509  001E90                     l3220:
  6510                           
  6511                           ;I2C.c: 94:       LCD_Cmd(0xD4 + col - 1);
  6512  001E90  500B               	movf	LCD_Goto@col^0,w,c
  6513  001E92  0FD3               	addlw	211
  6514  001E94  EC5C  F010         	call	_LCD_Cmd
  6515                           
  6516                           ;I2C.c: 95:     break;
  6517  001E98  EF6D  F00F         	goto	l212
  6518  001E9C                     l3222:
  6519                           
  6520                           ;I2C.c: 97:       LCD_Cmd(0x80 + col - 1);
  6521  001E9C  500B               	movf	LCD_Goto@col^0,w,c
  6522  001E9E  0F7F               	addlw	127
  6523  001EA0  EC5C  F010         	call	_LCD_Cmd
  6524                           
  6525                           ;I2C.c: 98:   }
  6526  001EA4  EF6D  F00F         	goto	l212
  6527  001EA8                     l3224:
  6528  001EA8  5008               	movf	LCD_Goto@row^0,w,c
  6529  001EAA  6E09               	movwf	??_LCD_Goto^0,c
  6530  001EAC  6A0A               	clrf	(??_LCD_Goto+1)^0,c
  6531                           
  6532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6533                           ; Switch size 1, requested type "simple"
  6534                           ; Number of cases is 1, Range of values is 0 to 0
  6535                           ; switch strategies available:
  6536                           ; Name         Instructions Cycles
  6537                           ; simple_byte            4     3 (average)
  6538                           ;	Chosen strategy is simple_byte
  6539  001EAE  500A               	movf	(??_LCD_Goto+1)^0,w,c
  6540  001EB0  0A00               	xorlw	0	; case 0
  6541  001EB2  B4D8               	btfsc	status,2,c
  6542  001EB4  EF5E  F00F         	goto	l3650
  6543  001EB8  EF4E  F00F         	goto	l3222
  6544  001EBC                     l3650:
  6545                           
  6546                           ; Switch size 1, requested type "simple"
  6547                           ; Number of cases is 3, Range of values is 2 to 4
  6548                           ; switch strategies available:
  6549                           ; Name         Instructions Cycles
  6550                           ; simple_byte           10     6 (average)
  6551                           ;	Chosen strategy is simple_byte
  6552  001EBC  5009               	movf	??_LCD_Goto^0,w,c
  6553  001EBE  0A02               	xorlw	2	; case 2
  6554  001EC0  B4D8               	btfsc	status,2,c
  6555  001EC2  EF3C  F00F         	goto	l3216
  6556  001EC6  0A01               	xorlw	1	; case 3
  6557  001EC8  B4D8               	btfsc	status,2,c
  6558  001ECA  EF42  F00F         	goto	l3218
  6559  001ECE  0A07               	xorlw	7	; case 4
  6560  001ED0  B4D8               	btfsc	status,2,c
  6561  001ED2  EF48  F00F         	goto	l3220
  6562  001ED6  EF4E  F00F         	goto	l3222
  6563  001EDA                     l212:
  6564  001EDA  0012               	return		;funcret
  6565  001EDC                     __end_of_LCD_Goto:
  6566                           	callstack 0
  6567                           
  6568 ;; *************** function _LCD_Begin *****************
  6569 ;; Defined at:
  6570 ;;		line 120 in file "I2C.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  _i2c_addr       1    wreg     unsigned char 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  _i2c_addr       1    9[COMRAM] unsigned char 
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  1    wreg      void 
  6577 ;; Registers used:
  6578 ;;		wreg, status,2, status,0, cstack
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6584 ;;      Params:         0       0       0       0       0       0       0       0       0
  6585 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6586 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6587 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6588 ;;Total ram usage:        3 bytes
  6589 ;; Hardware stack levels used: 1
  6590 ;; Hardware stack levels required when called: 6
  6591 ;; This function calls:
  6592 ;;		_Expander_Write
  6593 ;;		_LCD_Cmd
  6594 ;; This function is called by:
  6595 ;;		_main
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           	psect	text44
  6600  001412                     __ptext44:
  6601                           	callstack 0
  6602  001412                     _LCD_Begin:
  6603                           	callstack 24
  6604                           
  6605                           ;incstack = 0
  6606                           ;LCD_Begin@_i2c_addr stored from wreg
  6607  001412  6E0A               	movwf	LCD_Begin@_i2c_addr^0,c
  6608  001414                     
  6609                           ;I2C.c: 120: void LCD_Begin(uint8_t _i2c_addr);I2C.c: 121: {;I2C.c: 122:   i2c_addr = _i
      +                          2c_addr;
  6610  001414  C00A  F0E7         	movff	LCD_Begin@_i2c_addr,_i2c_addr
  6611  001418                     
  6612                           ;I2C.c: 123:   Expander_Write(0);
  6613  001418  0E00               	movlw	0
  6614  00141A  ECF7  F011         	call	_Expander_Write
  6615  00141E                     
  6616                           ;I2C.c: 125:   _delay((unsigned long)((40)*(27000000/4000.0)));
  6617  00141E  0E02               	movlw	2
  6618  001420  6E09               	movwf	(??_LCD_Begin+1)^0,c
  6619  001422  0E5F               	movlw	95
  6620  001424  6E08               	movwf	??_LCD_Begin^0,c
  6621  001426  0EA3               	movlw	163
  6622  001428                     u2867:
  6623  001428  2EE8               	decfsz	wreg,f,c
  6624  00142A  D7FE               	bra	u2867
  6625  00142C  2E08               	decfsz	??_LCD_Begin^0,f,c
  6626  00142E  D7FC               	bra	u2867
  6627  001430  2E09               	decfsz	(??_LCD_Begin+1)^0,f,c
  6628  001432  D7FA               	bra	u2867
  6629  001434  F000               	nop	
  6630                           
  6631                           ;I2C.c: 126:   LCD_Cmd(3);
  6632  001436  0E03               	movlw	3
  6633  001438  EC5C  F010         	call	_LCD_Cmd
  6634  00143C                     
  6635                           ;I2C.c: 127:   _delay((unsigned long)((5)*(27000000/4000.0)));
  6636  00143C  0E2C               	movlw	44
  6637  00143E  6E08               	movwf	??_LCD_Begin^0,c
  6638  001440  0ED4               	movlw	212
  6639  001442                     u2877:
  6640  001442  2EE8               	decfsz	wreg,f,c
  6641  001444  D7FE               	bra	u2877
  6642  001446  2E08               	decfsz	??_LCD_Begin^0,f,c
  6643  001448  D7FC               	bra	u2877
  6644  00144A                     
  6645                           ;I2C.c: 128:   LCD_Cmd(3);
  6646  00144A  0E03               	movlw	3
  6647  00144C  EC5C  F010         	call	_LCD_Cmd
  6648                           
  6649                           ;I2C.c: 129:   _delay((unsigned long)((5)*(27000000/4000.0)));
  6650  001450  0E2C               	movlw	44
  6651  001452  6E08               	movwf	??_LCD_Begin^0,c
  6652  001454  0ED4               	movlw	212
  6653  001456                     u2887:
  6654  001456  2EE8               	decfsz	wreg,f,c
  6655  001458  D7FE               	bra	u2887
  6656  00145A  2E08               	decfsz	??_LCD_Begin^0,f,c
  6657  00145C  D7FC               	bra	u2887
  6658  00145E                     
  6659                           ;I2C.c: 130:   LCD_Cmd(3);
  6660  00145E  0E03               	movlw	3
  6661  001460  EC5C  F010         	call	_LCD_Cmd
  6662  001464                     
  6663                           ;I2C.c: 131:   _delay((unsigned long)((5)*(27000000/4000.0)));
  6664  001464  0E2C               	movlw	44
  6665  001466  6E08               	movwf	??_LCD_Begin^0,c
  6666  001468  0ED4               	movlw	212
  6667  00146A                     u2897:
  6668  00146A  2EE8               	decfsz	wreg,f,c
  6669  00146C  D7FE               	bra	u2897
  6670  00146E  2E08               	decfsz	??_LCD_Begin^0,f,c
  6671  001470  D7FC               	bra	u2897
  6672                           
  6673                           ;I2C.c: 132:   LCD_Cmd(0x02);
  6674  001472  0E02               	movlw	2
  6675  001474  EC5C  F010         	call	_LCD_Cmd
  6676  001478                     
  6677                           ;I2C.c: 133:   _delay((unsigned long)((5)*(27000000/4000.0)));
  6678  001478  0E2C               	movlw	44
  6679  00147A  6E08               	movwf	??_LCD_Begin^0,c
  6680  00147C  0ED4               	movlw	212
  6681  00147E                     u2907:
  6682  00147E  2EE8               	decfsz	wreg,f,c
  6683  001480  D7FE               	bra	u2907
  6684  001482  2E08               	decfsz	??_LCD_Begin^0,f,c
  6685  001484  D7FC               	bra	u2907
  6686  001486                     
  6687                           ;I2C.c: 134:   LCD_Cmd(0x20 | (2 << 2));
  6688  001486  0E28               	movlw	40
  6689  001488  EC5C  F010         	call	_LCD_Cmd
  6690                           
  6691                           ;I2C.c: 135:   _delay((unsigned long)((50)*(27000000/4000.0)));
  6692  00148C  0E02               	movlw	2
  6693  00148E  6E09               	movwf	(??_LCD_Begin+1)^0,c
  6694  001490  0EB7               	movlw	183
  6695  001492  6E08               	movwf	??_LCD_Begin^0,c
  6696  001494  0E4C               	movlw	76
  6697  001496                     u2917:
  6698  001496  2EE8               	decfsz	wreg,f,c
  6699  001498  D7FE               	bra	u2917
  6700  00149A  2E08               	decfsz	??_LCD_Begin^0,f,c
  6701  00149C  D7FC               	bra	u2917
  6702  00149E  2E09               	decfsz	(??_LCD_Begin+1)^0,f,c
  6703  0014A0  D7FA               	bra	u2917
  6704  0014A2  D000               	nop2	
  6705  0014A4                     
  6706                           ;I2C.c: 136:   LCD_Cmd(0x0C);
  6707  0014A4  0E0C               	movlw	12
  6708  0014A6  EC5C  F010         	call	_LCD_Cmd
  6709  0014AA                     
  6710                           ;I2C.c: 137:   _delay((unsigned long)((50)*(27000000/4000.0)));
  6711  0014AA  0E02               	movlw	2
  6712  0014AC  6E09               	movwf	(??_LCD_Begin+1)^0,c
  6713  0014AE  0EB7               	movlw	183
  6714  0014B0  6E08               	movwf	??_LCD_Begin^0,c
  6715  0014B2  0E4C               	movlw	76
  6716  0014B4                     u2927:
  6717  0014B4  2EE8               	decfsz	wreg,f,c
  6718  0014B6  D7FE               	bra	u2927
  6719  0014B8  2E08               	decfsz	??_LCD_Begin^0,f,c
  6720  0014BA  D7FC               	bra	u2927
  6721  0014BC  2E09               	decfsz	(??_LCD_Begin+1)^0,f,c
  6722  0014BE  D7FA               	bra	u2927
  6723  0014C0  D000               	nop2	
  6724                           
  6725                           ;I2C.c: 138:   LCD_Cmd(0x01);
  6726  0014C2  0E01               	movlw	1
  6727  0014C4  EC5C  F010         	call	_LCD_Cmd
  6728  0014C8                     
  6729                           ;I2C.c: 139:   _delay((unsigned long)((50)*(27000000/4000.0)));
  6730  0014C8  0E02               	movlw	2
  6731  0014CA  6E09               	movwf	(??_LCD_Begin+1)^0,c
  6732  0014CC  0EB7               	movlw	183
  6733  0014CE  6E08               	movwf	??_LCD_Begin^0,c
  6734  0014D0  0E4C               	movlw	76
  6735  0014D2                     u2937:
  6736  0014D2  2EE8               	decfsz	wreg,f,c
  6737  0014D4  D7FE               	bra	u2937
  6738  0014D6  2E08               	decfsz	??_LCD_Begin^0,f,c
  6739  0014D8  D7FC               	bra	u2937
  6740  0014DA  2E09               	decfsz	(??_LCD_Begin+1)^0,f,c
  6741  0014DC  D7FA               	bra	u2937
  6742  0014DE  D000               	nop2	
  6743  0014E0                     
  6744                           ;I2C.c: 140:   LCD_Cmd(0x04 | 0x02);
  6745  0014E0  0E06               	movlw	6
  6746  0014E2  EC5C  F010         	call	_LCD_Cmd
  6747                           
  6748                           ;I2C.c: 141:   _delay((unsigned long)((50)*(27000000/4000.0)));
  6749  0014E6  0E02               	movlw	2
  6750  0014E8  6E09               	movwf	(??_LCD_Begin+1)^0,c
  6751  0014EA  0EB7               	movlw	183
  6752  0014EC  6E08               	movwf	??_LCD_Begin^0,c
  6753  0014EE  0E4C               	movlw	76
  6754  0014F0                     u2947:
  6755  0014F0  2EE8               	decfsz	wreg,f,c
  6756  0014F2  D7FE               	bra	u2947
  6757  0014F4  2E08               	decfsz	??_LCD_Begin^0,f,c
  6758  0014F6  D7FC               	bra	u2947
  6759  0014F8  2E09               	decfsz	(??_LCD_Begin+1)^0,f,c
  6760  0014FA  D7FA               	bra	u2947
  6761  0014FC  D000               	nop2	
  6762  0014FE  0012               	return		;funcret
  6763  001500                     __end_of_LCD_Begin:
  6764                           	callstack 0
  6765                           
  6766 ;; *************** function _LCD_Cmd *****************
  6767 ;; Defined at:
  6768 ;;		line 74 in file "I2C.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;  Command         1    wreg     unsigned char 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  Command         1    6[COMRAM] unsigned char 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  1    wreg      void 
  6775 ;; Registers used:
  6776 ;;		wreg, status,2, status,0, cstack
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6782 ;;      Params:         0       0       0       0       0       0       0       0       0
  6783 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6784 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6785 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6786 ;;Total ram usage:        2 bytes
  6787 ;; Hardware stack levels used: 1
  6788 ;; Hardware stack levels required when called: 5
  6789 ;; This function calls:
  6790 ;;		_LCD_Write_Nibble
  6791 ;; This function is called by:
  6792 ;;		_main
  6793 ;;		_LCD_Goto
  6794 ;;		_LCD_Begin
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798                           	psect	text45
  6799  0020B8                     __ptext45:
  6800                           	callstack 0
  6801  0020B8                     _LCD_Cmd:
  6802                           	callstack 24
  6803                           
  6804                           ;incstack = 0
  6805                           ;LCD_Cmd@Command stored from wreg
  6806  0020B8  6E07               	movwf	LCD_Cmd@Command^0,c
  6807  0020BA                     
  6808                           ;I2C.c: 74: void LCD_Cmd(uint8_t Command);I2C.c: 75: {;I2C.c: 76:   RS = 0;
  6809  0020BA  905B               	bcf	(_RS/(0+8))^0,_RS& (0+7),c
  6810  0020BC                     
  6811                           ;I2C.c: 77:   LCD_Write_Nibble(Command & 0xF0);
  6812  0020BC  5007               	movf	LCD_Cmd@Command^0,w,c
  6813  0020BE  0BF0               	andlw	240
  6814  0020C0  EC54  F011         	call	_LCD_Write_Nibble
  6815                           
  6816                           ;I2C.c: 78:   LCD_Write_Nibble((Command << 4) & 0xF0);
  6817  0020C4  3807               	swapf	LCD_Cmd@Command^0,w,c
  6818  0020C6  0BF0               	andlw	240
  6819  0020C8  0BF0               	andlw	240
  6820  0020CA  EC54  F011         	call	_LCD_Write_Nibble
  6821  0020CE                     
  6822                           ;I2C.c: 79:   if((Command == 0x01) || (Command == 0x02))
  6823  0020CE  0407               	decf	LCD_Cmd@Command^0,w,c
  6824  0020D0  B4D8               	btfsc	status,2,c
  6825  0020D2  EF6D  F010         	goto	u2341
  6826  0020D6  EF6F  F010         	goto	u2340
  6827  0020DA                     u2341:
  6828  0020DA  EF78  F010         	goto	l2970
  6829  0020DE                     u2340:
  6830  0020DE  0E02               	movlw	2
  6831  0020E0  1807               	xorwf	LCD_Cmd@Command^0,w,c
  6832  0020E2  A4D8               	btfss	status,2,c
  6833  0020E4  EF76  F010         	goto	u2351
  6834  0020E8  EF78  F010         	goto	u2350
  6835  0020EC                     u2351:
  6836  0020EC  EF80  F010         	goto	l203
  6837  0020F0                     u2350:
  6838  0020F0                     l2970:
  6839                           
  6840                           ;I2C.c: 80:     _delay((unsigned long)((2)*(27000000/4000.0)));
  6841  0020F0  0E12               	movlw	18
  6842  0020F2  6E06               	movwf	??_LCD_Cmd^0,c
  6843  0020F4  0E87               	movlw	135
  6844  0020F6                     u2957:
  6845  0020F6  2EE8               	decfsz	wreg,f,c
  6846  0020F8  D7FE               	bra	u2957
  6847  0020FA  2E06               	decfsz	??_LCD_Cmd^0,f,c
  6848  0020FC  D7FC               	bra	u2957
  6849  0020FE  F000               	nop	
  6850  002100                     l203:
  6851  002100  0012               	return		;funcret
  6852  002102                     __end_of_LCD_Cmd:
  6853                           	callstack 0
  6854                           
  6855 ;; *************** function _LCD_Write_Nibble *****************
  6856 ;; Defined at:
  6857 ;;		line 63 in file "I2C.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  n               1    wreg     unsigned char 
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  n               1    4[COMRAM] unsigned char 
  6862 ;; Return value:  Size  Location     Type
  6863 ;;                  1    wreg      void 
  6864 ;; Registers used:
  6865 ;;		wreg, status,2, status,0, cstack
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6871 ;;      Params:         0       0       0       0       0       0       0       0       0
  6872 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6873 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6874 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6875 ;;Total ram usage:        1 bytes
  6876 ;; Hardware stack levels used: 1
  6877 ;; Hardware stack levels required when called: 4
  6878 ;; This function calls:
  6879 ;;		_Expander_Write
  6880 ;; This function is called by:
  6881 ;;		_LCD_Cmd
  6882 ;;		_LCD_Print
  6883 ;;		_LCD_PutC
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           	psect	text46
  6888  0022A8                     __ptext46:
  6889                           	callstack 0
  6890  0022A8                     _LCD_Write_Nibble:
  6891                           	callstack 25
  6892                           
  6893                           ;incstack = 0
  6894                           ;LCD_Write_Nibble@n stored from wreg
  6895  0022A8  6E05               	movwf	LCD_Write_Nibble@n^0,c
  6896  0022AA                     
  6897                           ;I2C.c: 63: void LCD_Write_Nibble(uint8_t n);I2C.c: 64: {;I2C.c: 65:   n |= RS;
  6898  0022AA  0E00               	movlw	0
  6899  0022AC  B05B               	btfsc	(_RS/(0+8))^0,_RS& (0+7),c
  6900  0022AE  0E01               	movlw	1
  6901  0022B0  1205               	iorwf	LCD_Write_Nibble@n^0,f,c
  6902  0022B2                     
  6903                           ;I2C.c: 66:   Expander_Write(n & 0xFB);
  6904  0022B2  5005               	movf	LCD_Write_Nibble@n^0,w,c
  6905  0022B4  0BFB               	andlw	251
  6906  0022B6  ECF7  F011         	call	_Expander_Write
  6907  0022BA                     
  6908                           ;I2C.c: 67:   _delay((unsigned long)((1)*(27000000/4000000.0)));
  6909  0022BA  D000               	nop2		;2 cycle nop
  6910  0022BC  D000               	nop2		;2 cycle nop
  6911  0022BE  D000               	nop2		;2 cycle nop
  6912  0022C0                     
  6913                           ;I2C.c: 68:   Expander_Write(n | 0x04);
  6914  0022C0  5005               	movf	LCD_Write_Nibble@n^0,w,c
  6915  0022C2  0904               	iorlw	4
  6916  0022C4  ECF7  F011         	call	_Expander_Write
  6917  0022C8                     
  6918                           ;I2C.c: 69:   _delay((unsigned long)((1)*(27000000/4000000.0)));
  6919  0022C8  D000               	nop2		;2 cycle nop
  6920  0022CA  D000               	nop2		;2 cycle nop
  6921  0022CC  D000               	nop2		;2 cycle nop
  6922  0022CE                     
  6923                           ;I2C.c: 70:   Expander_Write(n & 0xFB);
  6924  0022CE  5005               	movf	LCD_Write_Nibble@n^0,w,c
  6925  0022D0  0BFB               	andlw	251
  6926  0022D2  ECF7  F011         	call	_Expander_Write
  6927  0022D6                     
  6928                           ;I2C.c: 71:   _delay((unsigned long)((100)*(27000000/4000000.0)));
  6929  0022D6  0EE1               	movlw	225
  6930  0022D8                     u2967:
  6931  0022D8  2EE8               	decfsz	wreg,f,c
  6932  0022DA  D7FE               	bra	u2967
  6933  0022DC  0012               	return		;funcret
  6934  0022DE                     __end_of_LCD_Write_Nibble:
  6935                           	callstack 0
  6936                           
  6937 ;; *************** function _Expander_Write *****************
  6938 ;; Defined at:
  6939 ;;		line 55 in file "I2C.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;  value           1    wreg     unsigned char 
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;  value           1    3[COMRAM] unsigned char 
  6944 ;; Return value:  Size  Location     Type
  6945 ;;                  1    wreg      void 
  6946 ;; Registers used:
  6947 ;;		wreg, status,2, status,0, cstack
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6953 ;;      Params:         0       0       0       0       0       0       0       0       0
  6954 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6956 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6957 ;;Total ram usage:        1 bytes
  6958 ;; Hardware stack levels used: 1
  6959 ;; Hardware stack levels required when called: 3
  6960 ;; This function calls:
  6961 ;;		_I2CLCD_Start
  6962 ;;		_I2CLCD_Stop
  6963 ;;		_I2CLCD_Write
  6964 ;; This function is called by:
  6965 ;;		_LCD_Write_Nibble
  6966 ;;		_LCD_Begin
  6967 ;;		_Backlight
  6968 ;;		_noBacklight
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           	psect	text47
  6973  0023EE                     __ptext47:
  6974                           	callstack 0
  6975  0023EE                     _Expander_Write:
  6976                           	callstack 25
  6977                           
  6978                           ;incstack = 0
  6979                           ;Expander_Write@value stored from wreg
  6980  0023EE  6E04               	movwf	Expander_Write@value^0,c
  6981  0023F0                     
  6982                           ;I2C.c: 55: void Expander_Write(uint8_t value);I2C.c: 56: {;I2C.c: 57:   I2CLCD_Start();
  6983  0023F0  ECC5  F011         	call	_I2CLCD_Start	;wreg free
  6984                           
  6985                           ;I2C.c: 58:   I2CLCD_Write(i2c_addr);
  6986  0023F4  0100               	movlb	0	; () banked
  6987  0023F6  51E7               	movf	_i2c_addr& (0+255),w,b
  6988  0023F8  EC86  F011         	call	_I2CLCD_Write
  6989                           
  6990                           ;I2C.c: 59:   I2CLCD_Write(value | backlight_val);
  6991  0023FC  5004               	movf	Expander_Write@value^0,w,c
  6992  0023FE  105C               	iorwf	_backlight_val^0,w,c
  6993  002400  EC86  F011         	call	_I2CLCD_Write
  6994                           
  6995                           ;I2C.c: 60:   I2CLCD_Stop();
  6996  002404  ECB1  F011         	call	_I2CLCD_Stop	;wreg free
  6997  002408  0012               	return		;funcret
  6998  00240A                     __end_of_Expander_Write:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function _I2CLCD_Write *****************
  7002 ;; Defined at:
  7003 ;;		line 27 in file "I2C.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  i2c_data        1    wreg     unsigned char 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  i2c_data        1    2[COMRAM] unsigned char 
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  1    wreg      void 
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7017 ;;      Params:         0       0       0       0       0       0       0       0       0
  7018 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7019 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7020 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7021 ;;Total ram usage:        2 bytes
  7022 ;; Hardware stack levels used: 1
  7023 ;; Hardware stack levels required when called: 2
  7024 ;; This function calls:
  7025 ;;		Nothing
  7026 ;; This function is called by:
  7027 ;;		_Expander_Write
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           	psect	text48
  7032  00230C                     __ptext48:
  7033                           	callstack 0
  7034  00230C                     _I2CLCD_Write:
  7035                           	callstack 25
  7036                           
  7037                           ;incstack = 0
  7038                           ;I2CLCD_Write@i2c_data stored from wreg
  7039  00230C  6E03               	movwf	I2CLCD_Write@i2c_data^0,c
  7040  00230E                     l170:
  7041  00230E  B4C7               	btfsc	199,2,c	;volatile
  7042  002310  EF8C  F011         	goto	u1581
  7043  002314  EF8E  F011         	goto	u1580
  7044  002318                     u1581:
  7045  002318  EF87  F011         	goto	l170
  7046  00231C                     u1580:
  7047  00231C  CFC5 F002          	movff	4037,??_I2CLCD_Write	;volatile
  7048  002320  0E1F               	movlw	31
  7049  002322  1602               	andwf	??_I2CLCD_Write^0,f,c
  7050  002324  A4D8               	btfss	status,2,c
  7051  002326  EF97  F011         	goto	u1591
  7052  00232A  EF99  F011         	goto	u1590
  7053  00232E                     u1591:
  7054  00232E  EF87  F011         	goto	l170
  7055  002332                     u1590:
  7056  002332                     
  7057                           ;I2C.c: 30:   SSPBUF = i2c_data;
  7058  002332  C003  FFC9         	movff	I2CLCD_Write@i2c_data,4041	;volatile
  7059  002336  0012               	return		;funcret
  7060  002338                     __end_of_I2CLCD_Write:
  7061                           	callstack 0
  7062                           
  7063 ;; *************** function _I2CLCD_Stop *****************
  7064 ;; Defined at:
  7065 ;;		line 21 in file "I2C.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;		None
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      void 
  7072 ;; Registers used:
  7073 ;;		wreg, status,2, status,0
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7079 ;;      Params:         0       0       0       0       0       0       0       0       0
  7080 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7081 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7082 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7083 ;;Total ram usage:        1 bytes
  7084 ;; Hardware stack levels used: 1
  7085 ;; Hardware stack levels required when called: 2
  7086 ;; This function calls:
  7087 ;;		Nothing
  7088 ;; This function is called by:
  7089 ;;		_Expander_Write
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           	psect	text49
  7094  002362                     __ptext49:
  7095                           	callstack 0
  7096  002362                     _I2CLCD_Stop:
  7097                           	callstack 25
  7098  002362                     l164:
  7099  002362  B4C7               	btfsc	199,2,c	;volatile
  7100  002364  EFB6  F011         	goto	u1561
  7101  002368  EFB8  F011         	goto	u1560
  7102  00236C                     u1561:
  7103  00236C  EFB1  F011         	goto	l164
  7104  002370                     u1560:
  7105  002370  CFC5 F002          	movff	4037,??_I2CLCD_Stop	;volatile
  7106  002374  0E1F               	movlw	31
  7107  002376  1602               	andwf	??_I2CLCD_Stop^0,f,c
  7108  002378  A4D8               	btfss	status,2,c
  7109  00237A  EFC1  F011         	goto	u1571
  7110  00237E  EFC3  F011         	goto	u1570
  7111  002382                     u1571:
  7112  002382  EFB1  F011         	goto	l164
  7113  002386                     u1570:
  7114  002386                     
  7115                           ;I2C.c: 24:   PEN = 1;
  7116  002386  84C5               	bsf	4037,2,c	;volatile
  7117  002388  0012               	return		;funcret
  7118  00238A                     __end_of_I2CLCD_Stop:
  7119                           	callstack 0
  7120                           
  7121 ;; *************** function _I2CLCD_Start *****************
  7122 ;; Defined at:
  7123 ;;		line 15 in file "I2C.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;		None
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;		None
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  1    wreg      void 
  7130 ;; Registers used:
  7131 ;;		wreg, status,2, status,0
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7137 ;;      Params:         0       0       0       0       0       0       0       0       0
  7138 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7139 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7140 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7141 ;;Total ram usage:        1 bytes
  7142 ;; Hardware stack levels used: 1
  7143 ;; Hardware stack levels required when called: 2
  7144 ;; This function calls:
  7145 ;;		Nothing
  7146 ;; This function is called by:
  7147 ;;		_Expander_Write
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           	psect	text50
  7152  00238A                     __ptext50:
  7153                           	callstack 0
  7154  00238A                     _I2CLCD_Start:
  7155                           	callstack 25
  7156  00238A                     l158:
  7157  00238A  B4C7               	btfsc	199,2,c	;volatile
  7158  00238C  EFCA  F011         	goto	u1541
  7159  002390  EFCC  F011         	goto	u1540
  7160  002394                     u1541:
  7161  002394  EFC5  F011         	goto	l158
  7162  002398                     u1540:
  7163  002398  CFC5 F002          	movff	4037,??_I2CLCD_Start	;volatile
  7164  00239C  0E1F               	movlw	31
  7165  00239E  1602               	andwf	??_I2CLCD_Start^0,f,c
  7166  0023A0  A4D8               	btfss	status,2,c
  7167  0023A2  EFD5  F011         	goto	u1551
  7168  0023A6  EFD7  F011         	goto	u1550
  7169  0023AA                     u1551:
  7170  0023AA  EFC5  F011         	goto	l158
  7171  0023AE                     u1550:
  7172  0023AE                     
  7173                           ;I2C.c: 18:   SEN = 1;
  7174  0023AE  80C5               	bsf	4037,0,c	;volatile
  7175  0023B0  0012               	return		;funcret
  7176  0023B2                     __end_of_I2CLCD_Start:
  7177                           	callstack 0
  7178                           
  7179 ;; *************** function _I2CLCD_Init *****************
  7180 ;; Defined at:
  7181 ;;		line 7 in file "I2C.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  i2c_clk_freq    4   14[COMRAM] unsigned long 
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;		None
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  1    wreg      void 
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0, cstack
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7195 ;;      Params:         4       0       0       0       0       0       0       0       0
  7196 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7197 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7198 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7199 ;;Total ram usage:        8 bytes
  7200 ;; Hardware stack levels used: 1
  7201 ;; Hardware stack levels required when called: 3
  7202 ;; This function calls:
  7203 ;;		___lldiv
  7204 ;; This function is called by:
  7205 ;;		_main
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           	psect	text51
  7210  00200E                     __ptext51:
  7211                           	callstack 0
  7212  00200E                     _I2CLCD_Init:
  7213                           	callstack 27
  7214  00200E                     
  7215                           ;I2C.c: 7: void I2CLCD_Init(uint32_t i2c_clk_freq);I2C.c: 8: {;I2C.c: 9:   SSPCON1 = 0x2
      +                          8;
  7216  00200E  0E28               	movlw	40
  7217  002010  6EC6               	movwf	198,c	;volatile
  7218                           
  7219                           ;I2C.c: 10:   SSPCON2 = 0x00;
  7220  002012  0E00               	movlw	0
  7221  002014  6EC5               	movwf	197,c	;volatile
  7222  002016                     
  7223                           ;I2C.c: 11:   SSPADD = (27000000/(4 * i2c_clk_freq)) - 1;
  7224  002016  0EC0               	movlw	192
  7225  002018  6E02               	movwf	___lldiv@dividend^0,c
  7226  00201A  0EFC               	movlw	252
  7227  00201C  6E03               	movwf	(___lldiv@dividend+1)^0,c
  7228  00201E  0E9B               	movlw	155
  7229  002020  6E04               	movwf	(___lldiv@dividend+2)^0,c
  7230  002022  0E01               	movlw	1
  7231  002024  6E05               	movwf	(___lldiv@dividend+3)^0,c
  7232  002026  C00F  F013         	movff	I2CLCD_Init@i2c_clk_freq,??_I2CLCD_Init
  7233  00202A  C010  F014         	movff	I2CLCD_Init@i2c_clk_freq+1,??_I2CLCD_Init+1
  7234  00202E  C011  F015         	movff	I2CLCD_Init@i2c_clk_freq+2,??_I2CLCD_Init+2
  7235  002032  C012  F016         	movff	I2CLCD_Init@i2c_clk_freq+3,??_I2CLCD_Init+3
  7236  002036  0E02               	movlw	2
  7237  002038                     u2595:
  7238  002038  90D8               	bcf	status,0,c
  7239  00203A  3613               	rlcf	??_I2CLCD_Init^0,f,c
  7240  00203C  3614               	rlcf	(??_I2CLCD_Init+1)^0,f,c
  7241  00203E  3615               	rlcf	(??_I2CLCD_Init+2)^0,f,c
  7242  002040  3616               	rlcf	(??_I2CLCD_Init+3)^0,f,c
  7243  002042  2EE8               	decfsz	wreg,f,c
  7244  002044  EF1C  F010         	goto	u2595
  7245  002048  C013  F006         	movff	??_I2CLCD_Init,___lldiv@divisor
  7246  00204C  C014  F007         	movff	??_I2CLCD_Init+1,___lldiv@divisor+1
  7247  002050  C015  F008         	movff	??_I2CLCD_Init+2,___lldiv@divisor+2
  7248  002054  C016  F009         	movff	??_I2CLCD_Init+3,___lldiv@divisor+3
  7249  002058  ECB3  F00D         	call	___lldiv	;wreg free
  7250  00205C  0402               	decf	?___lldiv^0,w,c
  7251  00205E  6EC8               	movwf	200,c	;volatile
  7252  002060                     
  7253                           ;I2C.c: 12:   SSPSTAT = 0;
  7254  002060  0E00               	movlw	0
  7255  002062  6EC7               	movwf	199,c	;volatile
  7256  002064  0012               	return		;funcret
  7257  002066                     __end_of_I2CLCD_Init:
  7258                           	callstack 0
  7259                           
  7260 ;; *************** function ___lldiv *****************
  7261 ;; Defined at:
  7262 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  7263 ;; Parameters:    Size  Location     Type
  7264 ;;  dividend        4    1[COMRAM] unsigned long 
  7265 ;;  divisor         4    5[COMRAM] unsigned long 
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;  quotient        4    9[COMRAM] unsigned long 
  7268 ;;  counter         1   13[COMRAM] unsigned char 
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  4    1[COMRAM] unsigned long 
  7271 ;; Registers used:
  7272 ;;		wreg, status,2, status,0
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7278 ;;      Params:         8       0       0       0       0       0       0       0       0
  7279 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7281 ;;      Totals:        13       0       0       0       0       0       0       0       0
  7282 ;;Total ram usage:       13 bytes
  7283 ;; Hardware stack levels used: 1
  7284 ;; Hardware stack levels required when called: 2
  7285 ;; This function calls:
  7286 ;;		Nothing
  7287 ;; This function is called by:
  7288 ;;		_I2CLCD_Init
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           	psect	text52
  7293  001B66                     __ptext52:
  7294                           	callstack 0
  7295  001B66                     ___lldiv:
  7296                           	callstack 27
  7297  001B66  0E00               	movlw	0
  7298  001B68  6E0A               	movwf	___lldiv@quotient^0,c
  7299  001B6A  0E00               	movlw	0
  7300  001B6C  6E0B               	movwf	(___lldiv@quotient+1)^0,c
  7301  001B6E  0E00               	movlw	0
  7302  001B70  6E0C               	movwf	(___lldiv@quotient+2)^0,c
  7303  001B72  0E00               	movlw	0
  7304  001B74  6E0D               	movwf	(___lldiv@quotient+3)^0,c
  7305  001B76  5006               	movf	___lldiv@divisor^0,w,c
  7306  001B78  1007               	iorwf	(___lldiv@divisor+1)^0,w,c
  7307  001B7A  1008               	iorwf	(___lldiv@divisor+2)^0,w,c
  7308  001B7C  1009               	iorwf	(___lldiv@divisor+3)^0,w,c
  7309  001B7E  B4D8               	btfsc	status,2,c
  7310  001B80  EFC4  F00D         	goto	u2521
  7311  001B84  EFC6  F00D         	goto	u2520
  7312  001B88                     u2521:
  7313  001B88  EFFC  F00D         	goto	l475
  7314  001B8C                     u2520:
  7315  001B8C  0E01               	movlw	1
  7316  001B8E  6E0E               	movwf	___lldiv@counter^0,c
  7317  001B90  EFD0  F00D         	goto	l3134
  7318  001B94                     l3132:
  7319  001B94  90D8               	bcf	status,0,c
  7320  001B96  3606               	rlcf	___lldiv@divisor^0,f,c
  7321  001B98  3607               	rlcf	(___lldiv@divisor+1)^0,f,c
  7322  001B9A  3608               	rlcf	(___lldiv@divisor+2)^0,f,c
  7323  001B9C  3609               	rlcf	(___lldiv@divisor+3)^0,f,c
  7324  001B9E  2A0E               	incf	___lldiv@counter^0,f,c
  7325  001BA0                     l3134:
  7326  001BA0  AE09               	btfss	(___lldiv@divisor+3)^0,7,c
  7327  001BA2  EFD5  F00D         	goto	u2531
  7328  001BA6  EFD7  F00D         	goto	u2530
  7329  001BAA                     u2531:
  7330  001BAA  EFCA  F00D         	goto	l3132
  7331  001BAE                     u2530:
  7332  001BAE                     l3136:
  7333  001BAE  90D8               	bcf	status,0,c
  7334  001BB0  360A               	rlcf	___lldiv@quotient^0,f,c
  7335  001BB2  360B               	rlcf	(___lldiv@quotient+1)^0,f,c
  7336  001BB4  360C               	rlcf	(___lldiv@quotient+2)^0,f,c
  7337  001BB6  360D               	rlcf	(___lldiv@quotient+3)^0,f,c
  7338  001BB8  5006               	movf	___lldiv@divisor^0,w,c
  7339  001BBA  5C02               	subwf	___lldiv@dividend^0,w,c
  7340  001BBC  5007               	movf	(___lldiv@divisor+1)^0,w,c
  7341  001BBE  5803               	subwfb	(___lldiv@dividend+1)^0,w,c
  7342  001BC0  5008               	movf	(___lldiv@divisor+2)^0,w,c
  7343  001BC2  5804               	subwfb	(___lldiv@dividend+2)^0,w,c
  7344  001BC4  5009               	movf	(___lldiv@divisor+3)^0,w,c
  7345  001BC6  5805               	subwfb	(___lldiv@dividend+3)^0,w,c
  7346  001BC8  A0D8               	btfss	status,0,c
  7347  001BCA  EFE9  F00D         	goto	u2541
  7348  001BCE  EFEB  F00D         	goto	u2540
  7349  001BD2                     u2541:
  7350  001BD2  EFF4  F00D         	goto	l3144
  7351  001BD6                     u2540:
  7352  001BD6  5006               	movf	___lldiv@divisor^0,w,c
  7353  001BD8  5E02               	subwf	___lldiv@dividend^0,f,c
  7354  001BDA  5007               	movf	(___lldiv@divisor+1)^0,w,c
  7355  001BDC  5A03               	subwfb	(___lldiv@dividend+1)^0,f,c
  7356  001BDE  5008               	movf	(___lldiv@divisor+2)^0,w,c
  7357  001BE0  5A04               	subwfb	(___lldiv@dividend+2)^0,f,c
  7358  001BE2  5009               	movf	(___lldiv@divisor+3)^0,w,c
  7359  001BE4  5A05               	subwfb	(___lldiv@dividend+3)^0,f,c
  7360  001BE6  800A               	bsf	___lldiv@quotient^0,0,c
  7361  001BE8                     l3144:
  7362  001BE8  90D8               	bcf	status,0,c
  7363  001BEA  3209               	rrcf	(___lldiv@divisor+3)^0,f,c
  7364  001BEC  3208               	rrcf	(___lldiv@divisor+2)^0,f,c
  7365  001BEE  3207               	rrcf	(___lldiv@divisor+1)^0,f,c
  7366  001BF0  3206               	rrcf	___lldiv@divisor^0,f,c
  7367  001BF2  2E0E               	decfsz	___lldiv@counter^0,f,c
  7368  001BF4  EFD7  F00D         	goto	l3136
  7369  001BF8                     l475:
  7370  001BF8  C00A  F002         	movff	___lldiv@quotient,?___lldiv
  7371  001BFC  C00B  F003         	movff	___lldiv@quotient+1,?___lldiv+1
  7372  001C00  C00C  F004         	movff	___lldiv@quotient+2,?___lldiv+2
  7373  001C04  C00D  F005         	movff	___lldiv@quotient+3,?___lldiv+3
  7374  001C08  0012               	return		;funcret
  7375  001C0A                     __end_of___lldiv:
  7376                           	callstack 0
  7377                           
  7378 ;; *************** function _low_isr *****************
  7379 ;; Defined at:
  7380 ;;		line 116 in file "main.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;		None
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;		None
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  1    wreg      void 
  7387 ;; Registers used:
  7388 ;;		None
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7394 ;;      Params:         0       0       0       0       0       0       0       0       0
  7395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7396 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7397 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7398 ;;Total ram usage:        1 bytes
  7399 ;; Hardware stack levels used: 1
  7400 ;; Hardware stack levels required when called: 1
  7401 ;; This function calls:
  7402 ;;		Nothing
  7403 ;; This function is called by:
  7404 ;;		Interrupt level 1
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           	psect	intcodelo
  7409  000018                     __pintcodelo:
  7410                           	callstack 0
  7411  000018                     _low_isr:
  7412                           	callstack 21
  7413                           
  7414                           ;incstack = 0
  7415  000018  805D               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  7416  00001A  CFE0 F001          	movff	bsr,??_low_isr
  7417  00001E                     
  7418                           ;main.c: 117:     INTCONbits.GIEH = 0;
  7419  00001E  9EF2               	bcf	242,7,c	;volatile
  7420                           
  7421                           ;main.c: 118:     if(PIR1bits.TXIF) {
  7422  000020  A89E               	btfss	158,4,c	;volatile
  7423  000022  EF15  F000         	goto	i1u127_21
  7424  000026  EF17  F000         	goto	i1u127_20
  7425  00002A                     i1u127_21:
  7426  00002A  EF18  F000         	goto	i1l121
  7427  00002E                     i1u127_20:
  7428  00002E                     
  7429                           ;main.c: 119:         PIR1bits.TXIF = 0;
  7430  00002E  989E               	bcf	158,4,c	;volatile
  7431  000030                     i1l121:
  7432                           
  7433                           ;main.c: 121:     INTCONbits.GIEH = 1;
  7434  000030  8EF2               	bsf	242,7,c	;volatile
  7435  000032  C001  FFE0         	movff	??_low_isr,bsr
  7436  000036  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7437  000038  0010               	retfie	
  7438  00003A                     __end_of_low_isr:
  7439                           	callstack 0
  7440                           
  7441 ;; *************** function _high_isr *****************
  7442 ;; Defined at:
  7443 ;;		line 108 in file "main.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;		None
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;		None
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  1    wreg      void 
  7450 ;; Registers used:
  7451 ;;		None
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7457 ;;      Params:         0       0       0       0       0       0       0       0       0
  7458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7460 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7461 ;;Total ram usage:        0 bytes
  7462 ;; Hardware stack levels used: 1
  7463 ;; This function calls:
  7464 ;;		Nothing
  7465 ;; This function is called by:
  7466 ;;		Interrupt level 2
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           	psect	intcode
  7471  000008                     __pintcode:
  7472                           	callstack 0
  7473  000008                     _high_isr:
  7474                           	callstack 21
  7475                           
  7476                           ;incstack = 0
  7477  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7478  00000A  ED1F  F012         	call	int_func,f	;refresh shadow registers
  7479                           
  7480                           	psect	intcode_body
  7481  00243E                     __pintcode_body:
  7482                           	callstack 21
  7483  00243E                     int_func:
  7484                           	callstack 21
  7485  00243E  0006               	pop		; remove dummy address from shadow register refresh
  7486  002440                     
  7487                           ;main.c: 109:     INTCONbits.GIEH = 0;
  7488  002440  9EF2               	bcf	242,7,c	;volatile
  7489                           
  7490                           ;main.c: 110:     if(PIR1bits.RCIF) {
  7491  002442  AA9E               	btfss	158,5,c	;volatile
  7492  002444  EF26  F012         	goto	i2u126_41
  7493  002448  EF28  F012         	goto	i2u126_40
  7494  00244C                     i2u126_41:
  7495  00244C  EF29  F012         	goto	i2l115
  7496  002450                     i2u126_40:
  7497  002450                     
  7498                           ;main.c: 111:         PIR1bits.RCIF = 0;
  7499  002450  9A9E               	bcf	158,5,c	;volatile
  7500  002452                     i2l115:
  7501                           
  7502                           ;main.c: 113:     INTCONbits.GIEH = 1;
  7503  002452  8EF2               	bsf	242,7,c	;volatile
  7504  002454  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7505  002456  0011               	retfie		f
  7506  002458                     __end_of_high_isr:
  7507                           	callstack 0
  7508                           
  7509                           	psect	rparam
  7510  0000                     
  7511                           	psect	temp
  7512  00005D                     btemp:
  7513                           	callstack 0
  7514  00005D                     	ds	1
  7515  0000                     int$flags	set	btemp
  7516  0000                     wtemp8	set	btemp+1
  7517  0000                     ttemp5	set	btemp+1
  7518  0000                     ttemp6	set	btemp+4
  7519  0000                     ttemp7	set	btemp+8
  7520                           
  7521                           	psect	idloc
  7522                           
  7523                           ;Config register IDLOC0 @ 0x200000
  7524                           ;	unspecified, using default values
  7525  200000                     	org	2097152
  7526  200000  FF                 	db	255
  7527                           
  7528                           ;Config register IDLOC1 @ 0x200001
  7529                           ;	unspecified, using default values
  7530  200001                     	org	2097153
  7531  200001  FF                 	db	255
  7532                           
  7533                           ;Config register IDLOC2 @ 0x200002
  7534                           ;	unspecified, using default values
  7535  200002                     	org	2097154
  7536  200002  FF                 	db	255
  7537                           
  7538                           ;Config register IDLOC3 @ 0x200003
  7539                           ;	unspecified, using default values
  7540  200003                     	org	2097155
  7541  200003  FF                 	db	255
  7542                           
  7543                           ;Config register IDLOC4 @ 0x200004
  7544                           ;	unspecified, using default values
  7545  200004                     	org	2097156
  7546  200004  FF                 	db	255
  7547                           
  7548                           ;Config register IDLOC5 @ 0x200005
  7549                           ;	unspecified, using default values
  7550  200005                     	org	2097157
  7551  200005  FF                 	db	255
  7552                           
  7553                           ;Config register IDLOC6 @ 0x200006
  7554                           ;	unspecified, using default values
  7555  200006                     	org	2097158
  7556  200006  FF                 	db	255
  7557                           
  7558                           ;Config register IDLOC7 @ 0x200007
  7559                           ;	unspecified, using default values
  7560  200007                     	org	2097159
  7561  200007  FF                 	db	255
  7562                           
  7563                           	psect	config
  7564                           
  7565                           ;Config register CONFIG1L @ 0x300000
  7566                           ;	PLL Prescaler Selection bits
  7567                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  7568                           ;	System Clock Postscaler Selection bits
  7569                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  7570                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7571                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  7572  300000                     	org	3145728
  7573  300000  00                 	db	0
  7574                           
  7575                           ;Config register CONFIG1H @ 0x300001
  7576                           ;	Oscillator Selection bits
  7577                           ;	FOSC = HS, HS oscillator (HS)
  7578                           ;	Fail-Safe Clock Monitor Enable bit
  7579                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7580                           ;	Internal/External Oscillator Switchover bit
  7581                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7582  300001                     	org	3145729
  7583  300001  0C                 	db	12
  7584                           
  7585                           ;Config register CONFIG2L @ 0x300002
  7586                           ;	Power-up Timer Enable bit
  7587                           ;	PWRT = ON, PWRT enabled
  7588                           ;	Brown-out Reset Enable bits
  7589                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7590                           ;	Brown-out Reset Voltage bits
  7591                           ;	BORV = 3, Minimum setting 2.05V
  7592                           ;	USB Voltage Regulator Enable bit
  7593                           ;	VREGEN = OFF, USB voltage regulator disabled
  7594  300002                     	org	3145730
  7595  300002  1E                 	db	30
  7596                           
  7597                           ;Config register CONFIG2H @ 0x300003
  7598                           ;	Watchdog Timer Enable bit
  7599                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7600                           ;	Watchdog Timer Postscale Select bits
  7601                           ;	WDTPS = 32768, 1:32768
  7602  300003                     	org	3145731
  7603  300003  1E                 	db	30
  7604                           
  7605                           ; Padding undefined space
  7606  300004                     	org	3145732
  7607  300004  FF                 	db	255
  7608                           
  7609                           ;Config register CONFIG3H @ 0x300005
  7610                           ;	CCP2 MUX bit
  7611                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  7612                           ;	PORTB A/D Enable bit
  7613                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7614                           ;	Low-Power Timer 1 Oscillator Enable bit
  7615                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7616                           ;	MCLR Pin Enable bit
  7617                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7618  300005                     	org	3145733
  7619  300005  81                 	db	129
  7620                           
  7621                           ;Config register CONFIG4L @ 0x300006
  7622                           ;	Stack Full/Underflow Reset Enable bit
  7623                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7624                           ;	Single-Supply ICSP Enable bit
  7625                           ;	LVP = OFF, Single-Supply ICSP disabled
  7626                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  7627                           ;	ICPRT = OFF, ICPORT disabled
  7628                           ;	Extended Instruction Set Enable bit
  7629                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7630                           ;	Background Debugger Enable bit
  7631                           ;	DEBUG = 0x1, unprogrammed default
  7632  300006                     	org	3145734
  7633  300006  81                 	db	129
  7634                           
  7635                           ; Padding undefined space
  7636  300007                     	org	3145735
  7637  300007  FF                 	db	255
  7638                           
  7639                           ;Config register CONFIG5L @ 0x300008
  7640                           ;	Code Protection bit
  7641                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  7642                           ;	Code Protection bit
  7643                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  7644                           ;	Code Protection bit
  7645                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  7646                           ;	Code Protection bit
  7647                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  7648  300008                     	org	3145736
  7649  300008  0F                 	db	15
  7650                           
  7651                           ;Config register CONFIG5H @ 0x300009
  7652                           ;	Boot Block Code Protection bit
  7653                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  7654                           ;	Data EEPROM Code Protection bit
  7655                           ;	CPD = OFF, Data EEPROM is not code-protected
  7656  300009                     	org	3145737
  7657  300009  C0                 	db	192
  7658                           
  7659                           ;Config register CONFIG6L @ 0x30000A
  7660                           ;	Write Protection bit
  7661                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  7662                           ;	Write Protection bit
  7663                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  7664                           ;	Write Protection bit
  7665                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  7666                           ;	Write Protection bit
  7667                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  7668  30000A                     	org	3145738
  7669  30000A  0F                 	db	15
  7670                           
  7671                           ;Config register CONFIG6H @ 0x30000B
  7672                           ;	Configuration Register Write Protection bit
  7673                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7674                           ;	Boot Block Write Protection bit
  7675                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  7676                           ;	Data EEPROM Write Protection bit
  7677                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7678  30000B                     	org	3145739
  7679  30000B  E0                 	db	224
  7680                           
  7681                           ;Config register CONFIG7L @ 0x30000C
  7682                           ;	Table Read Protection bit
  7683                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7684                           ;	Table Read Protection bit
  7685                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7686                           ;	Table Read Protection bit
  7687                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7688                           ;	Table Read Protection bit
  7689                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7690  30000C                     	org	3145740
  7691  30000C  0F                 	db	15
  7692                           
  7693                           ;Config register CONFIG7H @ 0x30000D
  7694                           ;	Boot Block Table Read Protection bit
  7695                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  7696  30000D                     	org	3145741
  7697  30000D  40                 	db	64
  7698                           tosu	equ	0xFFF
  7699                           tosh	equ	0xFFE
  7700                           tosl	equ	0xFFD
  7701                           stkptr	equ	0xFFC
  7702                           pclatu	equ	0xFFB
  7703                           pclath	equ	0xFFA
  7704                           pcl	equ	0xFF9
  7705                           tblptru	equ	0xFF8
  7706                           tblptrh	equ	0xFF7
  7707                           tblptrl	equ	0xFF6
  7708                           tablat	equ	0xFF5
  7709                           prodh	equ	0xFF4
  7710                           prodl	equ	0xFF3
  7711                           indf0	equ	0xFEF
  7712                           postinc0	equ	0xFEE
  7713                           postdec0	equ	0xFED
  7714                           preinc0	equ	0xFEC
  7715                           plusw0	equ	0xFEB
  7716                           fsr0h	equ	0xFEA
  7717                           fsr0l	equ	0xFE9
  7718                           wreg	equ	0xFE8
  7719                           indf1	equ	0xFE7
  7720                           postinc1	equ	0xFE6
  7721                           postdec1	equ	0xFE5
  7722                           preinc1	equ	0xFE4
  7723                           plusw1	equ	0xFE3
  7724                           fsr1h	equ	0xFE2
  7725                           fsr1l	equ	0xFE1
  7726                           bsr	equ	0xFE0
  7727                           indf2	equ	0xFDF
  7728                           postinc2	equ	0xFDE
  7729                           postdec2	equ	0xFDD
  7730                           preinc2	equ	0xFDC
  7731                           plusw2	equ	0xFDB
  7732                           fsr2h	equ	0xFDA
  7733                           fsr2l	equ	0xFD9
  7734                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        1
    BSS         110
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     25     136
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), UID_2(BANK0[16]), UID_1(BANK0[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), UID_2(BANK0[16]), UID_1(BANK0[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> data_buffer(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1423$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1423$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    MFRC522_ReadCardSerial2@str	PTR unsigned char  size(2) Largest target is 16
		 -> UID_2(BANK0[16]), 

    MFRC522_ReadCardSerial@str	PTR unsigned char  size(2) Largest target is 16
		 -> UID_1(BANK0[16]), 

    MFRC522_IsCard2@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType2(BANK0[1]), 

    MFRC522_IsCard@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType1(BANK0[1]), 

    MFRC522_AntiColl2@serNum	PTR unsigned char  size(2) Largest target is 16
		 -> UID_2(BANK0[16]), 

    MFRC522_AntiColl@serNum	PTR unsigned char  size(2) Largest target is 16
		 -> UID_1(BANK0[16]), 

    MFRC522_CRC2@dataOut	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag2@buffer(COMRAM[9]), 

    MFRC522_CRC2@dataIn	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag2@buffer(COMRAM[9]), 

    MFRC522_CRC@dataOut	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_CRC@dataIn	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_Request2@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType2(BANK0[1]), 

    MFRC522_Request@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType1(BANK0[1]), 

    MFRC522_ToCard2@backData	PTR unsigned char  size(2) Largest target is 16
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag2@buffer(COMRAM[9]), UID_2(BANK0[16]), TagType2(BANK0[1]), 

    MFRC522_ToCard2@backLen	PTR unsigned int  size(2) Largest target is 2
		 -> MFRC522_AntiColl2@unLen(COMRAM[2]), MFRC522_Halt@unLen(COMRAM[2]), MFRC522_SelectTag2@recvBits(COMRAM[2]), MFRC522_Request2@backBits(COMRAM[2]), 

    MFRC522_ToCard2@sendData	PTR unsigned char  size(2) Largest target is 16
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag2@buffer(COMRAM[9]), UID_2(BANK0[16]), TagType2(BANK0[1]), 

    MFRC522_ToCard@backData	PTR unsigned char  size(2) Largest target is 16
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), UID_1(BANK0[16]), TagType1(BANK0[1]), 

    MFRC522_ToCard@backLen	PTR unsigned int  size(2) Largest target is 2
		 -> MFRC522_AntiColl@unLen(COMRAM[2]), MFRC522_Halt@unLen(COMRAM[2]), MFRC522_SelectTag@recvBits(COMRAM[2]), MFRC522_Request@backBits(COMRAM[2]), 

    MFRC522_ToCard@sendData	PTR unsigned char  size(2) Largest target is 16
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), UID_1(BANK0[16]), TagType1(BANK0[1]), 

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 16
		 -> data_buffer(BANK0[16]), STR_2(CODE[4]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _MFRC522_ReadCardSerial2->_MFRC522_AntiColl2
    _MFRC522_AntiColl2->_MFRC522_ToCard2
    _MFRC522_ReadCardSerial->_MFRC522_AntiColl
    _MFRC522_AntiColl->_MFRC522_ToCard
    _MFRC522_IsCard2->_MFRC522_Request2
    _MFRC522_Request2->_MFRC522_ToCard2
    _MFRC522_IsCard->_MFRC522_Request
    _MFRC522_Request->_MFRC522_ToCard
    _MFRC522_Reset->_MFRC522_Wr
    _MFRC522_AntennaOn2->_MFRC522_Set_Bit2
    _MFRC522_AntennaOn->_MFRC522_Set_Bit
    _MFRC522_AntennaOff2->_MFRC522_Clear_Bit2
    _MFRC522_AntennaOff->_MFRC522_Clear_Bit
    _MFRC522_Halt->_MFRC522_ToCard
    _MFRC522_Halt->_MFRC522_ToCard2
    _MFRC522_ToCard2->_MFRC522_Clear_Bit2
    _MFRC522_ToCard2->_MFRC522_Set_Bit2
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_ToCard->_MFRC522_Set_Bit
    _MFRC522_CRC2->_MFRC522_Clear_Bit2
    _MFRC522_CRC2->_MFRC522_Set_Bit2
    _MFRC522_Set_Bit2->_MFRC522_Rd2
    _MFRC522_Clear_Bit2->_MFRC522_Rd2
    _MFRC522_CRC->_MFRC522_Clear_Bit
    _MFRC522_CRC->_MFRC522_Set_Bit
    _MFRC522_Set_Bit->_MFRC522_Rd
    _MFRC522_Clear_Bit->_MFRC522_Rd
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble
    _LCD_Write_Nibble->_Expander_Write
    _Expander_Write->_I2CLCD_Write
    _I2CLCD_Init->___lldiv

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0  121323
                                             19 BANK0      6     6      0
                        _I2CLCD_Init
                          _LCD_Begin
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                   _MFRC522_AntiColl
                  _MFRC522_AntiColl2
                       _MFRC522_Halt
                       _MFRC522_Init
                     _MFRC522_IsCard
                    _MFRC522_IsCard2
             _MFRC522_ReadCardSerial
            _MFRC522_ReadCardSerial2
                            _sprintf
                             _strlen
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            8     0      8     414
                                              1 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    6639
                                              0 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6136
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5781
                                             63 COMRAM    19    13      6
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    24     11    4343
                                             28 COMRAM    35    24     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              6     4      2     388
                                              7 COMRAM     6     4      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2861
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     318
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _MFRC522_ReadCardSerial2                              3     1      2   11685
                                             40 COMRAM     2     0      2
                  _MFRC522_AntiColl2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntiColl2                                    8     6      2   11542
                                             32 COMRAM     8     6      2
                 _MFRC522_Clear_Bit2
                    _MFRC522_ToCard2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (1) _MFRC522_ReadCardSerial                               3     1      2   12065
                                             40 COMRAM     2     0      2
                   _MFRC522_AntiColl
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntiColl                                     8     6      2   11922
                                             32 COMRAM     8     6      2
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_IsCard2                                      2     0      2    9288
                                             38 COMRAM     2     0      2
                   _MFRC522_Request2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Request2                                     6     4      2    9190
                                             32 COMRAM     6     4      2
                    _MFRC522_ToCard2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (1) _MFRC522_IsCard                                       2     0      2    9592
                                             38 COMRAM     2     0      2
                    _MFRC522_Request
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Request                                      6     4      2    9494
                                             32 COMRAM     6     4      2
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Init                                         0     0      0   12955
                 _MFRC522_AntennaOff
                _MFRC522_AntennaOff2
                  _MFRC522_AntennaOn
                 _MFRC522_AntennaOn2
                      _MFRC522_Reset
                         _MFRC522_Wr
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Reset                                        0     0      0    1453
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOn2                                   1     1      0    2098
                        _MFRC522_Rd2
                   _MFRC522_Set_Bit2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOn                                    1     1      0    2174
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOff2                                  0     0      0    2162
                 _MFRC522_Clear_Bit2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOff                                   0     0      0    2238
                  _MFRC522_Clear_Bit
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Halt                                         6     6      0   32743
                                             32 COMRAM     6     6      0
                        _MFRC522_CRC
                       _MFRC522_CRC2
                  _MFRC522_Clear_Bit
                 _MFRC522_Clear_Bit2
                     _MFRC522_ToCard
                    _MFRC522_ToCard2
 ---------------------------------------------------------------------------------
 (3) _MFRC522_ToCard2                                     19    12      7    7555
                                             13 COMRAM    19    12      7
                 _MFRC522_Clear_Bit2
                        _MFRC522_Rd2
                   _MFRC522_Set_Bit2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (3) _MFRC522_ToCard                                      19    12      7    7783
                                             13 COMRAM    19    12      7
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_CRC2                                         7     2      5    6252
                                             13 COMRAM     7     2      5
                 _MFRC522_Clear_Bit2
                        _MFRC522_Rd2
                   _MFRC522_Set_Bit2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit2                                     3     2      1    1934
                                             10 COMRAM     3     2      1
                        _MFRC522_Rd2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit2                                   3     2      1    2162
                                             10 COMRAM     3     2      1
                        _MFRC522_Rd2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr2                                          5     4      1    1377
                                              1 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd2                                          9     9      0     163
                                              1 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (2) _MFRC522_CRC                                          7     2      5    6480
                                             13 COMRAM     7     2      5
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit                                      3     2      1    2010
                                             10 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit                                    3     2      1    2238
                                             10 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr                                           5     4      1    1453
                                              1 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd                                           9     9      0     163
                                              1 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            6     4      2     549
                                              5 COMRAM     6     4      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Goto                                             4     3      1     537
                                              7 COMRAM     4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     265
                                              7 COMRAM     3     3      0
                     _Expander_Write
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              2     2      0     199
                                              5 COMRAM     2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Nibble                                     1     1      0     111
                                              4 COMRAM     1     1      0
                     _Expander_Write
 ---------------------------------------------------------------------------------
 (3) _Expander_Write                                       1     1      0      44
                                              3 COMRAM     1     1      0
                       _I2CLCD_Start
                        _I2CLCD_Stop
                       _I2CLCD_Write
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Write                                         2     2      0      22
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Stop                                          1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Start                                         1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2CLCD_Init                                          8     4      4     412
                                             14 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              1 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _high_isr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2CLCD_Init
     ___lldiv
   _LCD_Begin
     _Expander_Write
       _I2CLCD_Start
       _I2CLCD_Stop
       _I2CLCD_Write
     _LCD_Cmd
       _LCD_Write_Nibble
         _Expander_Write
   _LCD_Cmd
   _LCD_Goto
     _LCD_Cmd
   _LCD_Print
     _LCD_Write_Nibble
   _MFRC522_AntiColl
     _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Wr
     _MFRC522_ToCard
       _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Set_Bit
         _MFRC522_Rd
         _MFRC522_Wr
       _MFRC522_Wr
     _MFRC522_Wr
   _MFRC522_AntiColl2
     _MFRC522_Clear_Bit2
       _MFRC522_Rd2
       _MFRC522_Wr2
     _MFRC522_ToCard2
       _MFRC522_Clear_Bit2
       _MFRC522_Rd2
       _MFRC522_Set_Bit2
         _MFRC522_Rd2
         _MFRC522_Wr2
       _MFRC522_Wr2
     _MFRC522_Wr2
   _MFRC522_Halt
     _MFRC522_CRC
       _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Set_Bit
       _MFRC522_Wr
     _MFRC522_CRC2
       _MFRC522_Clear_Bit2
       _MFRC522_Rd2
       _MFRC522_Set_Bit2
       _MFRC522_Wr2
     _MFRC522_Clear_Bit
     _MFRC522_Clear_Bit2
     _MFRC522_ToCard
     _MFRC522_ToCard2
   _MFRC522_Init
     _MFRC522_AntennaOff
       _MFRC522_Clear_Bit
     _MFRC522_AntennaOff2
       _MFRC522_Clear_Bit2
     _MFRC522_AntennaOn
       _MFRC522_Rd
       _MFRC522_Set_Bit
     _MFRC522_AntennaOn2
       _MFRC522_Rd2
       _MFRC522_Set_Bit2
     _MFRC522_Reset
       _MFRC522_Wr
     _MFRC522_Wr
     _MFRC522_Wr2
   _MFRC522_IsCard
     _MFRC522_Request
       _MFRC522_ToCard
       _MFRC522_Wr
   _MFRC522_IsCard2
     _MFRC522_Request2
       _MFRC522_ToCard2
       _MFRC522_Wr2
   _MFRC522_ReadCardSerial
     _MFRC522_AntiColl
   _MFRC522_ReadCardSerial2
     _MFRC522_AntiColl2
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
           _toupper
             _islower
   _strlen
   _uart_init

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      88       5       85.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5A      5C       1       97.9%
BITBIGSFRhhhlhh     28      0       0      21        0.0%
BITBIGSFRlll        23      0       0      31        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRhhhll       C      0       0      22        0.0%
BITBIGSFRhllh        B      0       0      25        0.0%
BITBIGSFRhhl         7      0       0      23        0.0%
BITBIGSFRhllll       7      0       0      26        0.0%
BITBIGSFRllh         5      0       0      30        0.0%
BITBIGSFRlhhl        5      0       0      28        0.0%
BITBIGSFRlhhh        1      0       0      27        0.0%
BITBIGSFRlhl         1      0       0      29        0.0%
BITBIGSFRhlh         1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E4      32        0.0%
DATA                 0      0      E4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 24 18:47:25 2022

                    MFRC522_Rd@i 0009                     MFRC522_CRC@i 0014  
                   MFRC522_CRC@n 0013                      MFRC522_Wr@i 0006  
                             l85 21C4                               _RS 02D8  
                             bsr 000FE0                     MFRC522_Rd2@i 0009  
                  MFRC522_CRC2@i 0014                    MFRC522_CRC2@n 0013  
                   MFRC522_Wr2@i 0006                              l203 2100  
                            l212 1EDA                              l300 1B64  
                            l221 1A1A                              l160 23AE  
                            l224 14FE                              l312 0E2E  
                            l161 23B0                              l170 230E  
                            l155 2064                              l323 0F76  
                            l164 2362                              l172 2332  
                            l316 0FCE                              l340 0BA0  
                            l412 1966                              l173 2336  
                            l405 1AC0                              l158 238A  
                            l166 2386                              l262 1E6C  
                            l254 1706                              l270 1DDC  
                            l167 2388                              l247 17BE  
                            l263 1E70                              l255 1740  
                            l351 0CE8                              l423 24CA  
                            l415 18B0                              l248 17F8  
                            l256 1746                              l328 0FD0  
                            l344 0D40                              l408 1964  
                            l249 17FE                              l273 243C  
                            l433 23EC                              l194 2408  
                            l282 246E                              l362 1FAA  
                            l291 2498                              l419 18B2  
                            l276 2422                              l356 0D42  
                            l428 24BA                              l197 22DC  
                            l269 1DD8                              l285 2360  
                            l365 1F40                              l374 1CFC  
                            l294 24E2                              l438 23CE  
                            l279 2486                              l359 1FA8  
                            l384 1C5C                              l288 24AA  
                            l368 1F42                              l297 24D6  
                            l482 1C08                              l378 1D48  
                            l475 1BF8                              l388 1CA8  
            MFRC522_Rd2@ucResult 0007                              _PEN 007E2A  
                            _SEN 007E28                              _led 0078  
                            _pad 15CA                              wreg 000FE8  
                 ??_MFRC522_CRC2 0013                   ??_MFRC522_Halt 0021  
                 ??_MFRC522_Init 000E                  __end_of_LCD_Cmd 2102  
                           l1201 2004                             l1202 200C  
                           l1211 2270                             l1205 2200  
                           l1126 20B6                             l3000 1960  
                           l1160 1652                             l3010 181A  
                           l1226 15C8                             l1234 2188  
                           l1162 168E                             l1243 22A6  
                           l1251 2144                             l3100 1D24  
                           l3012 182A                             l3004 1800  
                           l1237 24E4                             l1157 1610  
                           l3110 1C3C                             l3102 1C0A  
                           l3030 188E                             l3014 1834  
                           l3006 1804                             l1167 084A  
                           l3200 1486                             l3120 1C66  
                           l3112 1C3E                             l3104 1C1E  
                           l3040 235A                             l3032 18AC  
                           l3024 186C                             l3016 1858  
                           l3008 180E                             l1248 213C  
                           l1257 2238                             l1169 0852  
                           l3130 1B8C                             l3202 14A4  
                           l3122 1C76                             l3114 1C50  
                           l3106 1C26                             l3042 249A  
                           l3210 1AC2                             l3050 1F46  
                           l3026 187C                             l3018 1868  
                           l2410 1524                             l1186 0A50  
                           l1195 1410                             l3140 1BD6  
                           l3132 1B94                             l3204 14AA  
                           l3220 1E90                             l2500 169C  
                           l3124 1C84                             l3116 1C5A  
                           l3108 1C38                             l3300 1AB6  
                           l3044 2488                             l3036 2338  
                           l3212 1AD8                             l3060 1FA4  
                           l3052 1F50                             l3028 187E  
                           l2412 152E                             l2420 2272  
                           l1188 0AB4                             l3142 1BE6  
                           l3134 1BA0                             l3126 1B66  
                           l3206 14C8                             l3222 1E9C  
                           l3214 1E74                             l3230 1968  
                           l2510 16BA                             l2502 169E  
                           l3118 1C64                             l3046 24D8  
                           l3038 2350                             l3054 1F5C  
                           l3070 1F18                             l2414 154C  
                           l2406 1500                             l2430 2146  
                           l2422 227E                             l3150 1FB4  
                           l3144 1BE8                             l3136 1BAE  
                           l3128 1B76                             l3208 14E0  
                           l3216 1E78                             l3224 1EA8  
                           l3232 196C                             l3080 1CBE  
                           l2520 16FE                             l2512 16DC  
                           l2504 16B2                             l2600 1DC4  
                           l3048 24CC                             l3056 1F80  
                           l3240 24BC                             l3072 1F28  
                           l3064 1EDE                             l2416 1582  
                           l2408 1512                             l2432 2152  
                           l2424 2282                             l3152 1FC2  
                           l3160 2192                             l3146 1BF2  
                           l3138 1BB8                             l2442 238A  
                           l2450 230E                             l3218 1E84  
                           l3234 1972                             l3090 1CF0  
                           l3082 1CC6                             l2530 1726  
                           l2514 16DE                             l2602 1DC6  
                           l3058 1F90                             l3074 1F3C  
                           l3066 1EE8                             l2434 2164  
                           l2426 229A                             l2610 15EE  
                           l3154 1FE8                             l3170 21B4  
                           l3162 219C                             l3180 2016  
                           l2444 2398                             l2452 231C  
                           l3236 19DC                             l2460 1756  
                           l2540 1DE4                             l3092 1CFA  
                           l3084 1CD8                             l2532 1728  
                           l2516 16E4                             l2604 1DC8  
                           l3068 1EF4                             l2436 2168  
                           l2620 1634                             l2612 15FC  
                           l2700 08E6                             l3148 1FAC  
                           l3172 21BE                             l3164 219E  
                           l3156 218A                             l3182 2060  
                           l2446 2362                             l3190 143C  
                           l3238 19DE                             l2470 1794  
                           l2462 176A                             l2454 174A  
                           l2550 1E12                             l2542 1DEC  
                           l3094 1D04                             l3086 1CDC  
                           l3078 1CAA                             l2534 1744  
                           l2526 1708                             l2518 16E6  
                           l3246 23D0                             l3262 23B2  
                           l2622 1662                             l2614 1608  
                           l2606 15CA                             l2438 2202  
                           l2710 0958                             l3174 21C0  
                           l3166 21A0                             l3158 218E  
                           l3510 0FF0                             l2448 2370  
                           l3192 144A                             l3184 1414  
                           l2472 1796                             l2456 1752  
                           l2552 1E18                             l3096 1D06  
                           l3088 1CDE                             l2528 170E  
                           l2800 0EC2                             l3256 24AC  
                           l3248 23DC                             l3264 23BE  
                           l2632 21C6                             l2624 1676  
                           l2616 161C                             l2608 15DA  
                           l2640 2102                             l2720 09EE  
                           l2712 0968                             l3280 20A4  
                           l3272 2066                             l3176 21C2  
                           l3168 21AA                             l3520 105E  
                           l3512 1014                             l3178 200E  
                           l3194 145E                             l3186 1418  
                           l2490 17E0                             l2474 179C  
                           l2458 1754                             l2570 1E5C  
                           l2562 1E30                             l2554 1E1A  
                           l2538 1DE0                             l2650 2426  
                           l3098 1D16                             l2810 0F4E  
                           l2802 0ED4                             l3290 1A54  
                           l2618 1630                             l2642 2130  
                           l2730 0A66                             l2722 0A0C  
                           l2714 096E                             l2706 0912  
                           l3274 2078                             l3530 1098  
                           l3522 1064                             l3514 102E  
                           l2740 22B2                             l3196 1464  
                           l3188 141E                             l2492 17FC  
                           l2484 17C0                             l2476 179E  
                           l2468 1772                             l2564 1E52  
                           l2556 1E1C                             l2548 1DF0  
                           l2652 242E                             l2660 2472  
                           l2572 1D4C                             l2820 0F96  
                           l2812 0F5E                             l2804 0EE6  
                           l2900 0CF4                             l3292 1A5E  
                           l3284 1A1C                             l2628 223A  
                           l2636 2102                             l2732 0A76  
                           l2724 0A26                             l2716 0974  
                           l2708 0944                             l3276 2080  
                           l3540 1100                             l3532 10A4  
                           l3524 1070                             l3516 1038  
                           l3508 0FD2                             l2646 23F0  
                           l2750 22D6                             l2742 22BA  
                           l3198 1478                             l2486 17C6  
                           l2478 17B6                             l2566 1E58  
                           l2558 1E2C                             l2662 2472  
                           l2590 1D88                             l2582 1D5C  
                           l2574 1D50                             l2654 240C  
                           l2670 2462                             l2822 0F9A  
                           l2814 0F62                             l2806 0EF6  
                           l2902 0D08                             l3294 1A68  
                           l3286 1A24                             l2734 0A8C  
                           l2726 0A40                             l2718 09D2  
                           l3278 2088                             l3542 110C  
                           l3534 10B4                             l3526 107C  
                           l3518 1044                             l2744 22C0  
                           l2488 17DE                             l2568 1E5A  
                           l2648 2426                             l2664 247A  
                           l2496 1692                             l2592 1D98  
                           l2584 1D7E                             l2576 1D58  
                           l2656 240C                             l2824 0FB6  
                           l2816 0F72                             l2808 0F3A  
                           l2760 0D6E                             l2752 0D46  
                           l2904 0D0C                             l3296 1A8A  
                           l3288 1A3C                             l2728 0A60  
                           l2680 0868                             l2672 0812  
                           l2920 1274                             l3560 1188  
                           l3552 1130                             l3544 1116  
                           l3536 10D2                             l3528 108C  
                           l2746 22C8                             l2738 22AA  
                           l3650 1EBC                             l2498 169A  
                           l2586 1D84                             l2658 2414  
                           l2666 245A                             l2818 0F82  
                           l2826 0FCA                             l2770 0DE8  
                           l2762 0D98                             l2754 0D56  
                           l2906 0D28                             l2850 0B56  
                           l2842 0AE0                             l2834 0AB8  
                           l3298 1AAC                             l2690 08A6  
                           l2682 0870                             l2674 0822  
                           l2930 12E8                             l2922 1286  
                           l3570 11BE                             l3554 115A  
                           l3546 1128                             l3562 11A6  
                           l3538 10F0                             l2748 22CE  
                           l2596 1D9C                             l2588 1D86  
                           l2668 245A                             l2780 0E36  
                           l2772 0E04                             l2764 0DC2  
                           l2756 0D62                             l2908 0D3C  
                           l2860 0B9C                             l2852 0B5A  
                           l2844 0B0A                             l2836 0AC8  
                           l2692 08AE                             l2684 0890  
                           l2676 0824                             l2940 1392  
                           l2932 12F6                             l2924 128A  
                           l2916 1242                             l3572 11E8  
                           l3564 11B6                             l3580 121A  
                           l3556 1166                             l2598 1DBE  
                           l2790 0E7A                             l2782 0E3C  
                           l2774 0E0E                             l2766 0DCE  
                           l2870 0BE2                             l2862 0BA8  
                           l2854 0B76                             l2846 0B34  
                           l3646 0AF4                             l2838 0AD4  
                           l2694 08CA                             l2686 0898  
                           l2678 083E                             l2950 13CE  
                           l2942 13A0                             l2934 1332  
                           l2926 12AE                             l2918 1266  
                           l3582 1234                             l3574 11F4  
                           l3558 116C                             ?_pad 0012  
                           l2792 0E8C                             l2784 0E4E  
                           l2776 0E20                             l2768 0DE4  
                           l3648 0D82                             l2880 0C30  
                           l2872 0BEC                             l2864 0BAE  
                           l2856 0B80                             l2848 0B40  
                           l2696 08DA                             l2688 08A0  
                           l2944 13B4                             l2928 12D2  
                           l3584 1236                             l3576 11FA  
                           l2970 20F0                             l2962 20BA  
                           l2794 0EA6                             l2786 0E5C  
                           l2778 0E2A                             l2890 0CAC  
                           l2882 0C34                             l2874 0BFE  
                           l2866 0BC0                             l2858 0B92  
                           l2938 136E                             l2954 13DA  
                           l2964 20BC                             l2796 0EAA  
                           l2788 0E70                             l2892 0CC0  
                           l2884 0C46                             l2876 0C18  
                           l2868 0BCE                             l2980 18DE  
                           l2972 18B4                             l2956 13FE  
                           l2948 13C0                             l2966 20CE  
                           l2798 0EBE                             l2894 0CD0  
                           l2886 0C58                             l2878 0C1C  
                           l2982 18E8                             l2974 18B8  
                           l2968 20DE                             l2896 0CD4  
                           l2888 0C68                             l2992 1920  
                           l2984 190C                             l2976 18C2  
              ?_LCD_Write_Nibble 0001                             l2898 0CE4  
                           l2994 1930                             l2986 191C  
                           l2978 18CE                             l2996 1932  
                           l2998 1942                             STR_1 0801  
                           STR_2 0809                             STR_3 080D  
                           STR_4 080D                             u2000 0A26  
                           u2001 0A22                             u2010 0A40  
                           u2011 0A3C                             u2100 0EA6  
                           u2020 0A50                             u2101 0EA2  
                           u2021 0A4C                             u2110 0EBE  
                           u2030 0A60                             u2111 0EBA  
                           u2031 0A5C                             u2120 0ED4  
                           u2040 0E04                             u2200 0BCE  
                           u2121 0ED0                             u2041 0E00  
                           u2201 0BCA                             u2130 0EF6  
                           u2050 0E20                             u2210 0BE2  
                           u2131 0EF2                             u2051 0E1C  
                           u2211 0BDE                             u2140 0F5E  
                           u2060 0E4E                             u2220 0BFE  
                           u1500 229A                             u2300 1266  
                           u2141 0F5A                             u2061 0E4A  
                           u2221 0BFA                             u1501 2296  
                           u2301 1262                             u2150 0F72  
                           u2070 0E5C                             u2230 0C18  
                           u1510 2188                             u2310 12AE  
                           u2151 0F6E                             u2071 0E58  
                           u2231 0C14                             u1511 2184  
                           u2311 12AA                             u1600 1784  
                           u2160 0FB6                             u2080 0E70  
                           u2240 0C30                             u2400 188E  
                           u1520 2232                             u2320 12D2  
                           u1601 177C                             u2161 0FB2  
                           u2081 0E6C                             u2241 0C2C  
                           u2401 188A                             u1521 222C  
                           u2321 12CE                             u2090 0E8C  
                           u2250 0C46                             u2170 0B76  
                           u2410 18AC                             u1530 2234  
                           u2330 1392                             u2091 0E88  
                           u2251 0C42                             u2171 0B72  
                           u2411 18A8                             u2331 138E  
                           u1540 2398                             u2340 20DE  
                           u1620 17B6                             u1700 1E02  
                           u2500 1C76                             u2260 0C68  
                           u2180 0B92                             u2420 1F90  
                           u1460 1512                             u1541 2394  
                           u2341 20DA                             u1621 17B2  
                           u1701 1DFA                             u2501 1C72  
                           u2261 0C64                             u2181 0B8E  
                           u2421 1F8C                             u1461 150E  
                           u1550 23AE                             u2350 20F0  
                           u1630 17D8                             u2510 1C84  
                           u2270 0CD0                             u2190 0BC0  
                           u2430 1FA4                             u1470 1524  
                           u1551 23AA                             u2351 20EC  
                           u1631 17D0                             u2511 1C80  
                           u2271 0CCC                             u2191 0BBC  
                           u2431 1FA0                             u1471 1520  
                           u2520 1B8C                             u1560 2370  
                           u2600 199E                             u1640 17F8  
                           u1720 1E2C                             u2280 0CE4  
                           u2440 1F28                             u2360 191C  
                           u1480 154C                             u2521 1B88  
                           u1561 236C                             u1641 17F4  
                           u1721 1E28                             u2281 0CE0  
                           u2441 1F24                             u2361 1918  
                           u1481 1548                             u2530 1BAE  
                           u1570 2386                             u2610 19D0  
                           u1618 1786                             u1730 1E42  
                           u1650 16CC                             u1810 1DD8  
                           u2290 0D28                             u2450 1F3C  
                           u2370 1942                             u1490 1582  
                           u2531 1BAA                             u1571 2382  
                           u1731 1E3A                             u1651 16C4  
                           u1811 1DD4                             u2291 0D24  
                           u2451 1F38                             u2371 193E  
                           u1491 157E                             u2540 1BD6  
                           u1580 231C                             u2620 1A0A  
                           u2460 1CF0                             u2380 1960  
                           u1820 15DA                             u1900 2130  
                           u2541 1BD2                             u1581 2318  
                           u2461 1CEC                             u2381 195C  
                           u1821 15D6                             u1901 212C  
                           u1590 2332                             u2630 1A1A  
                           u1638 17DA                             u1750 1E6C  
                           u1718 1E04                             u2470 1D16  
                           u1670 16FE                             u2390 1868  
                           u1830 15FC                             u1910 0822  
                           u2550 2004                             u1591 232E  
                           u2631 1A16                             u2607 1994  
                           u1751 1E68                             u2471 1D12  
                           u1671 16FA                             u2391 1864  
                           u1831 15F8                             u1911 081E  
                           u2551 2000                             u2480 1D24  
                           u1680 1720                             u1808 1DB0  
                           u1760 1D6E                             u1840 1652  
                           u1920 083E                             u2800 11B6  
                           u2617 19C6                             u2481 1D20  
                           u1681 1718                             u1761 1D66  
                           u1841 164E                             u1921 083A  
                           u2801 11B2                             u1690 1740  
                           u2490 1C50                             u1850 1662  
                           u1930 0868                             u2810 1216  
                           u2627 1A00                             u1691 173C  
                           u2491 1C4C                             u1851 165E  
                           u1931 0864                             u2811 1212  
                           u1748 1E44                             u1668 16CE  
                           u1780 1D98                             u1860 226A  
                           u1940 08CA                             u1781 1D94  
                           u1861 2264                             u1941 08C6  
                           u2565 21A8                             u1790 1DAE  
                           u1870 226C                             u1950 0912  
                           u2566 21AA                             u1791 1DA6  
                           u1951 090E                             u2575 21B2  
                           u1688 1722                             u1880 21FA  
                           u1960 0944                             u2576 21B4  
                           u2760 10D2                             u1881 21F4  
                           u1961 0940                             u2585 21BC  
                           u2761 10CE                             u1778 1D70  
                           u1890 21FC                             u1970 09AC  
                           u2586 21BE                             u2770 10F0  
                           u2595 2038                             u2907 147E  
                           u2771 10EC                             u2827 1020  
                           u1980 09EE                             u2780 1128  
                           u2917 1496                             u1981 09EA  
                           u2781 1124                             u2837 1050  
                           u1990 0A0C                             u2790 1188  
                           u2927 14B4                             u1991 0A08  
                           u1975 099A                             u2847 1194  
                           u2791 1184                             u2937 14D2  
                           u2857 1226                             u2947 14F0  
                           u2867 1428                             _RCEN 007E2B  
                           u2957 20F6                             u2877 1442  
                           u2967 22D8                             u2887 1456  
                           u2897 146A                             _RSEN 007E29  
             ??_LCD_Write_Nibble 0005             MFRC522_ToCard2@irqEn 001C  
                           _dbuf 007C                             _main 0FD2  
                           _prec 0074                             _temp 0060  
          MFRC522_AntiColl@unLen 0025                             _nout 0070  
                           pad@i 0019                             pad@p 0016  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001B  
                           fsr2l 000FD9                             btemp 005D  
                           _xtoa 0812                             prodh 000FF4  
                           prodl 000FF3                             start 003A  
               _MFRC522_AntiColl 18B4                      LCD_Goto@col 000B  
                    LCD_Goto@row 0008                     ___param_bank 000000  
         MFRC522_AntiColl2@unLen 0025                  ??_MFRC522_Reset 0007  
                          ??_pad 0018                 __end_of_LCD_Goto 1EDC  
               _MFRC522_Set_Bit2 2458                            ?_main 0001  
                          _ACKEN 007E2C                            _ACKDT 007E2D  
        ?_MFRC522_ReadCardSerial 0029                  __end_of___lldiv 1C0A  
                          ?_xtoa 001D                            _LATB7 007C57  
                          i1l121 0030                            i1l122 0032  
                          i2l115 2452                            i2l116 2454  
                   vfpfcnvrt@fmt 0042                            _UID_1 00AC  
                          _UID_2 009C                     vfpfcnvrt@llu 004A  
                          _SPBRG 000FAF                 _MFRC522_Request2 1EDC  
                          _TXREG 000FAD                            _flags 0076  
                          _fputc 1500                  __end_of_isalpha 2202  
                          _fputs 2146           MFRC522_AntiColl@serNum 0021  
                          pad@fp 0012                            _width 0072  
                          _putch 24E4                            main@i 00E3  
                __end_of_islower 223A                   __pbitbssCOMRAM 02D8  
                __end_of_low_isr 003A                  __end_of_isupper 2272  
                          tablat 000FF5                _MFRC522_Clear_Bit 2424  
                          ttemp5 005E                            ttemp6 0061  
                          ttemp7 0065                            status 000FD8  
                          wtemp8 005E                  __end_of_sprintf 20B8  
                          xtoa@c 003E                            xtoa@d 001F  
                          xtoa@i 003C                            xtoa@n 0034  
                          xtoa@p 0030                            xtoa@w 0032  
                          xtoa@x 0027                _MFRC522_AntiColl2 1800  
             ?_MFRC522_Clear_Bit 000B                  __end_of_toupper 2146  
             MFRC522_AntiColl2@i 0028               ?_MFRC522_AntiColl2 0021  
              _MFRC522_AntennaOn 249A                  __initialization 22DE  
                   __end_of_main 1242               ?_MFRC522_AntennaOn 0001  
            ??_MFRC522_Clear_Bit 000C                     __end_of_xtoa 0AB6  
        MFRC522_AntiColl2@serNum 0021                 ??_MFRC522_IsCard 0029  
      MFRC522_ReadCardSerial@str 0029              ??_MFRC522_AntiColl2 0023  
 __end_of_MFRC522_ReadCardSerial 23EE                 ??_MFRC522_ToCard 0015  
                         ??_main 00E1              ??_MFRC522_AntennaOn 000E  
              __end_of_LCD_Begin 1500                           ??_xtoa 0028  
                  __activetblptr 000002                        ??_LCD_Cmd 0006  
                MFRC522_ToCard@i 001E                  MFRC522_ToCard@n 0020  
          MFRC522_ToCard@backLen 0013                __end_of_LCD_Print 1A1C  
             MFRC522_Rd@ucResult 0007                  MFRC522_Wr@value 0002  
      __end_of_MFRC522_Clear_Bit 243E            MFRC522_ToCard@_status 001A  
       ?_MFRC522_ReadCardSerial2 0029            MFRC522_ToCard@command 001D  
                         ?_fputc 0002                           ?_fputs 000B  
                         ?_putch 0001                           i1l2242 001E  
                         i1l2244 002E                           i2l2240 2450  
                         i2l2238 2440        __end_of_MFRC522_AntiColl2 18B4  
          MFRC522_ToCard@sendLen 0010            MFRC522_ToCard@waitIRq 0019  
                         _SPBRGH 000FB0                           _SSPADD 000FC8  
                         _SSPBUF 000FC9        __end_of_MFRC522_AntennaOn 24AC  
         MFRC522_ToCard2@backLen 0013              MFRC522_CRC2@dataOut 0011  
             MFRC522_Wr2@address 0004                     vfprintf@cfmt 0059  
           __end_of_MFRC522_CRC2 1CAA                 __end_of_high_isr 2458  
         MFRC522_ToCard2@_status 001A           MFRC522_ToCard2@command 001D  
           __end_of_MFRC522_Halt 1AC2             __end_of_MFRC522_Init 1B66  
        MFRC522_AntiColl@_status 0027                        ??___lldiv 000A  
         MFRC522_ToCard2@sendLen 0010           MFRC522_ToCard2@waitIRq 0019  
                         clear_0 22F6                           isa$std 000001  
                         pad@buf 0014                           _strlen 2272  
                         fputc@c 0002                           fputs@c 000F  
                         fputs@i 0010                     __pdataCOMRAM 005C  
                         fputs@s 000B                        ??_isalpha 0004  
             _MFRC522_Clear_Bit2 240A                        ??_islower 0004  
                   __mediumconst 0000                        ??_low_isr 0001  
                         tblptrh 000FF7                        ??_isupper 0004  
                         tblptrl 000FF6                           tblptru 000FF8  
                         putch@c 0001                 __end_of_vfprintf 200E  
                      ??_sprintf 005B                           xtoa@fp 001D  
                      ??_toupper 000A              ?_MFRC522_Clear_Bit2 000B  
                     __accesstop 0060          __end_of__initialization 22FE  
                      ?_LCD_Goto 0008                    ___rparam_used 000001  
         MFRC522_Request@TagType 0021                     ??_MFRC522_Rd 0002  
                   ??_MFRC522_Wr 0003               _MFRC522_AntennaOn2 2488  
             _MFRC522_AntennaOff 24D8          I2CLCD_Init@i2c_clk_freq 000F  
                  _backlight_val 005C                   __pcstackCOMRAM 0001  
       MFRC522_AntiColl2@_status 0027                    ??_I2CLCD_Init 0013  
                  ??_I2CLCD_Stop 0002              ?_MFRC522_AntennaOn2 0001  
           ??_MFRC522_Clear_Bit2 000C              ?_MFRC522_AntennaOff 0001  
                  __end_of_fputc 15CA                    __end_of_fputs 218A  
     MFRC522_ReadCardSerial2@str 0029                   LCD_Cmd@Command 0007  
                  __end_of_putch 24E6                 MFRC522_Halt@buff 0021  
         MFRC522_Request@_status 0024                ??_MFRC522_IsCard2 0029  
               MFRC522_Rd@ucAddr 0005           MFRC522_Request@reqMode 0023  
__end_of_MFRC522_ReadCardSerial2 23D0                ??_MFRC522_ToCard2 0015  
       __end_of_MFRC522_AntiColl 1968                ??_MFRC522_Set_Bit 000C  
             __end_of_MFRC522_Rd 1800               __end_of_MFRC522_Wr 1E72  
              ??_MFRC522_Request 0023                 MFRC522_Wr2@value 0002  
                        ??_fputc 0006                          ??_fputs 000F  
           ??_MFRC522_AntennaOn2 000E             ??_MFRC522_AntennaOff 000E  
                        ??_putch 0002                       __pbssBANK0 0060  
           MFRC522_Set_Bit2@addr 000D                 MFRC522_ToCard2@i 001E  
               MFRC522_ToCard2@n 0020             MFRC522_Set_Bit2@mask 000B  
                     ??_LCD_Goto 0009           MFRC522_ToCard@backData 0011  
       __end_of_MFRC522_Set_Bit2 2470         __end_of_MFRC522_Request2 1F44  
              MFRC522_CRC@dataIn 000E               MFRC522_Set_Bit@tmp 000C  
              MFRC522_CRC@length 0010                 MFRC522_Wr@ucAddr 0005  
         MFRC522_ToCard@lastBits 001B                          ?_strlen 0002  
            __end_of_I2CLCD_Init 2066                          _LCD_Cmd 20B8  
            __end_of_I2CLCD_Stop 238A           MFRC522_ToCard@sendData 000E  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                      ?_high_isr 0001                          _SSPSTAT 000FC7  
        MFRC522_ToCard2@backData 0011                          __Hparam 0000  
                        __Lparam 0000          MFRC522_Request2@TagType 0021  
           MFRC522_Clear_Bit@tmp 000C              Expander_Write@value 0004  
           I2CLCD_Write@i2c_data 0003                          ___lldiv 1B66  
                      ?_vfprintf 0053                     __psmallconst 0800  
        MFRC522_ToCard2@lastBits 001B                          __pcinit 22DE  
          __end_of_MFRC522_Reset 2362                          __ramtop 0800  
                        __ptext0 0FD2                          __ptext1 218A  
                        __ptext2 2066                          __ptext3 1FAC  
                        __ptext4 1242                          __ptext5 0812  
                        __ptext6 2102                          __ptext7 2202  
                        __ptext8 15CA                          __ptext9 2272  
        MFRC522_ToCard2@sendData 000E                   _Expander_Write 23EE  
        MFRC522_Request2@_status 0024                          _isalpha 21C6  
                        _islower 2202                          _low_isr 0018  
                        _isupper 223A                        _LCD_Begin 1412  
        MFRC522_Request2@reqMode 0023                     _MFRC522_CRC2 1C0A  
                      _LCD_Print 1968                          _sprintf 2066  
                   _MFRC522_Halt 1A1C                       ??_high_isr 0001  
                   _MFRC522_Init 1AC2                   __pintcode_body 243E  
                        _toupper 2102             end_of_initialization 22FE  
                        fputc@fp 0004                    __Lmediumconst 0000  
                        int_func 243E                          fputs@fp 000D  
              __end_of_uart_init 21C6                  ___lldiv@divisor 0006  
                ___lldiv@counter 000E                 uart_init@gen_reg 0002  
              __end_of_vfpfcnvrt 1412                        _RCSTAbits 000FAB  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                    _I2CLCD_Init 200E                       ??_vfprintf 0059  
                    _I2CLCD_Stop 2362                LCD_Write_Nibble@n 0005  
                        strlen@a 0004                          strlen@s 0002  
         __end_of_Expander_Write 240A                    ?_I2CLCD_Start 0001  
                      _PORTDbits 000F83                    ?_I2CLCD_Write 0001  
                      _TRISAbits 000F92                        _TRISCbits 000F94  
                      _TRISDbits 000F95                       ?_LCD_Begin 0001  
              MFRC522_Rd2@ucAddr 0005                       ?_LCD_Print 0006  
                  ??_MFRC522_CRC 0013                    ??_MFRC522_Rd2 0002  
                  ??_MFRC522_Wr2 0003              _MFRC522_AntennaOff2 24CC  
                      _TXSTAbits 000FAC                  _MFRC522_IsCard2 24AC  
                _MFRC522_ToCard2 0AB6                 _LCD_Write_Nibble 22A8  
                     LCD_Print@i 000B                  _MFRC522_Set_Bit 2470  
        MFRC522_Request@backBits 0025              MFRC522_ToCard@irqEn 001C  
                    vfpfcnvrt@ap 0044                      vfpfcnvrt@fp 0040  
                _MFRC522_Request 1F44                      _BAUDCONbits 000FB8  
                 ??_I2CLCD_Start 0002                    __pidataCOMRAM 24E6  
                 ??_I2CLCD_Write 0002                  ?_Expander_Write 0001  
           ?_MFRC522_AntennaOff2 0001                   __end_of_strlen 22A8  
            start_initialization 22DE                MFRC522_Halt@unLen 0025  
              ?_MFRC522_AntiColl 0021                MFRC522_Rd@address 0004  
              MFRC522_AntiColl@i 0028                      __end_of_pad 1690  
             ??_MFRC522_AntiColl 0023           MFRC522_Clear_Bit2@addr 000D  
         MFRC522_Clear_Bit2@mask 000B                ?_MFRC522_Set_Bit2 000B  
             MFRC522_CRC2@dataIn 000E                ?_MFRC522_Request2 0021  
             ??_MFRC522_Set_Bit2 000C         ??_MFRC522_ReadCardSerial 002B  
                    vfprintf@fmt 0055               MFRC522_CRC2@length 0010  
            __end_of_MFRC522_CRC 1D4A              __end_of_MFRC522_Rd2 1748  
            __end_of_MFRC522_Wr2 1DDE                MFRC522_Wr2@ucAddr 0005  
             ??_MFRC522_Request2 0023            ??_MFRC522_AntennaOff2 000E  
                       ??_strlen 0004                         ?_LCD_Cmd 0001  
                  __pcstackBANK0 00CE                      ??_LCD_Begin 0008  
                    _data_buffer 00BC                      ??_LCD_Print 0008  
        __end_of_MFRC522_IsCard2 24BC          __end_of_MFRC522_ToCard2 0D44  
                      __pnvBANK0 00E7              MFRC522_Set_Bit2@tmp 000C  
        __end_of_MFRC522_Set_Bit 2488          _MFRC522_ReadCardSerial2 23B2  
             MFRC522_CRC@dataOut 0011          __end_of_MFRC522_Request 1FAC  
            MFRC522_Set_Bit@addr 000D                MFRC522_Wr@address 0004  
            MFRC522_Set_Bit@mask 000B                        __pintcode 0008  
                       ?___lldiv 0002                      __pintcodelo 0018  
               LCD_Print@LCD_Str 0006                      __smallconst 0800  
                       ?_isalpha 0002                         ?_islower 0002  
                       ?_low_isr 0001                         ?_isupper 0002  
                       ?_sprintf 00CE                         ?_toupper 0008  
           __end_of_I2CLCD_Start 23B2                         _LCD_Goto 1E72  
                    _MFRC522_CRC 1CAA             __end_of_I2CLCD_Write 2338  
                    _MFRC522_Rd2 1690                         _LATAbits 000F89  
                    _MFRC522_Wr2 1D4A                         _LATDbits 000F8C  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                       i1u127_20 002E                         i1u127_21 002A  
                       i2u126_40 2450                         i2u126_41 244C  
                       _PIR1bits 000F9E           MFRC522_IsCard2@TagType 0027  
                      _uart_init 218A                     ?_I2CLCD_Init 000F  
                   ?_I2CLCD_Stop 0001                        _vfpfcnvrt 1242  
                      main@i_523 00E5                   _MFRC522_IsCard 24BC  
                 _MFRC522_ToCard 0D44                       vfpfcnvrt@c 0052  
       __end_of_LCD_Write_Nibble 22DE                         _i2c_addr 00E7  
               ?_MFRC522_IsCard2 0027        ??_MFRC522_ReadCardSerial2 002B  
                       _TagType1 00CD                         _TagType2 00CC  
               ?_MFRC522_ToCard2 000E            MFRC522_Clear_Bit2@tmp 000C  
               ?_MFRC522_Set_Bit 000B                         __Hrparam 0000  
          MFRC522_Clear_Bit@addr 000D                 ?_MFRC522_Request 0021  
          MFRC522_Clear_Bit@mask 000B                       vfprintf@ap 0057  
                       __Lrparam 0000                       vfprintf@fp 0053  
               ??_Expander_Write 0004                       ?_uart_init 0002  
                     ?_vfpfcnvrt 0040     MFRC522_AntiColl2@serNumCheck 0024  
         __end_of_MFRC522_IsCard 24CC                       sprintf@fmt 00D0  
       MFRC522_Request2@backBits 0025           __end_of_MFRC522_ToCard 0FD2  
         _MFRC522_ReadCardSerial 23D0                         __ptext10 2146  
                       __ptext11 1500                         __ptext20 1EDC  
                       __ptext12 24E4                         __ptext21 24BC  
                       __ptext13 223A                         __ptext30 0AB6  
                       __ptext22 1F44                         __ptext14 21C6  
                       __ptext31 0D44                         __ptext23 1AC2  
                       __ptext15 23B2                         __ptext40 1DDE  
                       __ptext32 1C0A                         __ptext24 2338  
                       __ptext16 1800                         __ptext41 1748  
                       __ptext33 2458                         __ptext25 2488  
                       __ptext17 23D0                         __ptext50 238A  
                       __ptext42 1968                         __ptext34 240A  
                       __ptext26 249A                         __ptext18 18B4  
                       __ptext51 200E                         __ptext43 1E72  
                       __ptext35 1D4A                         __ptext27 24CC  
                       __ptext19 24AC                         __ptext52 1B66  
                       __ptext44 1412                         __ptext36 1690  
                       __ptext28 24D8                         __ptext45 20B8  
                       __ptext37 1CAA                         __ptext29 1A1C  
                       __ptext46 22A8                         __ptext38 2470  
                       __ptext47 23EE                         __ptext39 2424  
                       __ptext48 230C                         __ptext49 2362  
                       _high_isr 0008      MFRC522_AntiColl@serNumCheck 0024  
                     _MFRC522_Rd 1748                       _MFRC522_Wr 1DDE  
                 uart_init@brg16 0008                         isa$xinst 000000  
                       int$flags 005D                         _vfprintf 1FAC  
                       _status_1 007B                         _status_2 007A  
                  _MFRC522_Reset 2338                  ?_MFRC522_IsCard 0027  
                     _INTCONbits 000FF2                  ?_MFRC522_ToCard 000E  
                       isalpha@c 0002               LCD_Begin@_i2c_addr 000A  
                       intlevel1 0000                         intlevel2 0000  
                      sprintf@ap 00D4                         islower@c 0002  
               ___lldiv@dividend 0002                         isupper@c 0002  
          MFRC522_IsCard@TagType 0027                    uart_init@brgh 0006  
    __end_of_MFRC522_AntennaOff2 24D8       __end_of_MFRC522_Clear_Bit2 2424  
                  uart_init@sync 0004                      ??_uart_init 000A  
                    ??_vfpfcnvrt 0046                   ?_MFRC522_Reset 0001  
                   _I2CLCD_Start 238A                     _I2CLCD_Write 230C  
                       sprintf@f 00D6                         sprintf@s 00CE  
               ___lldiv@quotient 000A                         toupper@c 0008  
     __end_of_MFRC522_AntennaOn2 249A       __end_of_MFRC522_AntennaOff 24E4  
                  ?_MFRC522_CRC2 000E                    ?_MFRC522_Halt 0001  
                  ?_MFRC522_Init 0001                     ?_MFRC522_CRC 000E  
                   ?_MFRC522_Rd2 0001                     ?_MFRC522_Wr2 0002  
                    ?_MFRC522_Rd 0001                      ?_MFRC522_Wr 0002  
             MFRC522_Rd2@address 0004  
