

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Mar 28 02:05:12 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77  0000                     
    78                           ; Version 2.40
    79                           ; Generated 17/11/2021 GMT
    80                           ; 
    81                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F4550 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK0
   115  00308C                     __pidataBANK0:
   116                           	callstack 0
   117                           
   118                           ;initializer for _data
   119  00308C  68                 	db	104
   120  00308D  65                 	db	101
   121  00308E  6C                 	db	108
   122  00308F  6C                 	db	108
   123  003090  6F                 	db	111
   124  003091  00                 	db	0
   125  003092  00                 	db	0
   126  003093  00                 	db	0
   127  003094  00                 	db	0
   128  003095  00                 	db	0
   129  003096  00                 	db	0
   130  003097  00                 	db	0
   131  003098  00                 	db	0
   132  003099  00                 	db	0
   133  00309A  00                 	db	0
   134  00309B  00                 	db	0
   135  00309C  00                 	db	0
   136  00309D  00                 	db	0
   137  00309E  00                 	db	0
   138  00309F  00                 	db	0
   139                           
   140                           ;initializer for _backlight_val
   141  0030A0  08                 	db	8
   142  0000                     _SSPSTAT	set	4039
   143  0000                     _SSPADD	set	4040
   144  0000                     _RCREG	set	4014
   145  0000                     _TXREG	set	4013
   146                           
   147                           	psect	nvBANK0
   148  0000F0                     __pnvBANK0:
   149                           	callstack 0
   150  0000F0                     _i2c_addr:
   151                           	callstack 0
   152  0000F0                     	ds	1
   153  0000                     _RCSTAbits	set	4011
   154  0000                     _ACKEN	set	32300
   155  0000                     _ACKDT	set	32301
   156  0000                     _RCEN	set	32299
   157  0000                     _RSEN	set	32297
   158  0000                     _PEN	set	32298
   159  0000                     _SEN	set	32296
   160  0000                     _CREN	set	32092
   161  0000                     _RCIF	set	31989
   162  0000                     _TRISC7	set	31911
   163  0000                     _PORTDbits	set	3971
   164  0000                     _LATAbits	set	3977
   165  0000                     _LATDbits	set	3980
   166  0000                     _TRISC6	set	31910
   167  0000                     _TRISDbits	set	3989
   168  0000                     _PIE1bits	set	3997
   169  0000                     _RCSTA	set	4011
   170  0000                     _TXSTA	set	4012
   171  0000                     _SPBRG	set	4015
   172  0000                     _SSPCON2	set	4037
   173  0000                     _SSPCON1	set	4038
   174  0000                     _INTCONbits	set	4082
   175  0000                     _TXIF	set	31988
   176  0000                     _SSPBUF	set	4041
   177  0000                     _TRISAbits	set	3986
   178                           
   179                           	psect	smallconst
   180  000800                     __psmallconst:
   181                           	callstack 0
   182  000800  00                 	db	0
   183  000801                     STR_3:
   184  000801  50                 	db	80	;'P'
   185  000802  6F                 	db	111	;'o'
   186  000803  73                 	db	115	;'s'
   187  000804  69                 	db	105	;'i'
   188  000805  74                 	db	116	;'t'
   189  000806  69                 	db	105	;'i'
   190  000807  6F                 	db	111	;'o'
   191  000808  6E                 	db	110	;'n'
   192  000809  20                 	db	32
   193  00080A  31                 	db	49	;'1'
   194  00080B  00                 	db	0
   195  00080C                     STR_6:
   196  00080C  50                 	db	80	;'P'
   197  00080D  6F                 	db	111	;'o'
   198  00080E  73                 	db	115	;'s'
   199  00080F  69                 	db	105	;'i'
   200  000810  74                 	db	116	;'t'
   201  000811  69                 	db	105	;'i'
   202  000812  6F                 	db	111	;'o'
   203  000813  6E                 	db	110	;'n'
   204  000814  20                 	db	32
   205  000815  32                 	db	50	;'2'
   206  000816  00                 	db	0
   207  000817                     STR_1:
   208  000817  50                 	db	80	;'P'
   209  000818  31                 	db	49	;'1'
   210  000819  00                 	db	0
   211  00081A                     STR_4:
   212  00081A  50                 	db	80	;'P'
   213  00081B  32                 	db	50	;'2'
   214  00081C  00                 	db	0
   215  00081D                     STR_2:
   216  00081D  25                 	db	37
   217  00081E  58                 	db	88	;'X'
   218  00081F  00                 	db	0
   219  000820  00                 	db	0	; dummy byte at the end
   220  0000                     
   221                           ; #config settings
   222                           
   223                           	psect	cinit
   224  002D76                     __pcinit:
   225                           	callstack 0
   226  002D76                     start_initialization:
   227                           	callstack 0
   228  002D76                     __initialization:
   229                           	callstack 0
   230                           
   231                           ; Initialize objects allocated to BANK0 (21 bytes)
   232                           ; load TBLPTR registers with __pidataBANK0
   233  002D76  0E8C               	movlw	low __pidataBANK0
   234  002D78  6EF6               	movwf	tblptrl,c
   235  002D7A  0E30               	movlw	high __pidataBANK0
   236  002D7C  6EF7               	movwf	tblptrh,c
   237  002D7E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   238  002D80  6EF8               	movwf	tblptru,c
   239  002D82  EE00  F0CA         	lfsr	0,__pdataBANK0
   240  002D86  EE10 F015          	lfsr	1,21
   241  002D8A                     copy_data0:
   242  002D8A  0009               	tblrd		*+
   243  002D8C  CFF5 FFEE          	movff	tablat,postinc0
   244  002D90  50E5               	movf	postdec1,w,c
   245  002D92  50E1               	movf	fsr1l,w,c
   246  002D94  E1FA               	bnz	copy_data0
   247                           
   248                           ; Clear objects allocated to BANK1 (20 bytes)
   249  002D96  EE01  F000         	lfsr	0,__pbssBANK1
   250  002D9A  0E14               	movlw	20
   251  002D9C                     clear_0:
   252  002D9C  6AEE               	clrf	postinc0,c
   253  002D9E  06E8               	decf	wreg,f,c
   254  002DA0  E1FD               	bnz	clear_0
   255                           
   256                           ; Clear objects allocated to BITBANK0 (1 bytes)
   257  002DA2  0100               	movlb	0
   258  002DA4  6BF1               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
   259                           
   260                           ; Clear objects allocated to BANK0 (106 bytes)
   261  002DA6  EE00  F060         	lfsr	0,__pbssBANK0
   262  002DAA  0E6A               	movlw	106
   263  002DAC                     clear_1:
   264  002DAC  6AEE               	clrf	postinc0,c
   265  002DAE  06E8               	decf	wreg,f,c
   266  002DB0  E1FD               	bnz	clear_1
   267  002DB2                     end_of_initialization:
   268                           	callstack 0
   269  002DB2                     __end_of__initialization:
   270                           	callstack 0
   271  002DB2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   272  002DB4  6EF8               	movwf	tblptru,c
   273  002DB6  0100               	movlb	0
   274  002DB8  EF1E  F00C         	goto	_main	;jump to C main() function
   275                           
   276                           	psect	bitbssBANK0
   277  000788                     __pbitbssBANK0:
   278                           	callstack 0
   279  000788                     _RS:
   280                           	callstack 0
   281  000788                     	ds	1
   282                           
   283                           	psect	bssBANK0
   284  000060                     __pbssBANK0:
   285                           	callstack 0
   286  000060                     _nout:
   287                           	callstack 0
   288  000060                     	ds	2
   289  000062                     _width:
   290                           	callstack 0
   291  000062                     	ds	2
   292  000064                     _prec:
   293                           	callstack 0
   294  000064                     	ds	2
   295  000066                     _flags:
   296                           	callstack 0
   297  000066                     	ds	2
   298  000068                     _led:
   299                           	callstack 0
   300  000068                     	ds	2
   301  00006A                     _status_2:
   302                           	callstack 0
   303  00006A                     	ds	1
   304  00006B                     _status_1:
   305                           	callstack 0
   306  00006B                     	ds	1
   307  00006C                     _dbuf:
   308                           	callstack 0
   309  00006C                     	ds	32
   310  00008C                     _UID_2:
   311                           	callstack 0
   312  00008C                     	ds	20
   313  0000A0                     _UID_1:
   314                           	callstack 0
   315  0000A0                     	ds	20
   316  0000B4                     _data_buffer:
   317                           	callstack 0
   318  0000B4                     	ds	20
   319  0000C8                     _TagType2:
   320                           	callstack 0
   321  0000C8                     	ds	1
   322  0000C9                     _TagType1:
   323                           	callstack 0
   324  0000C9                     	ds	1
   325                           
   326                           	psect	dataBANK0
   327  0000CA                     __pdataBANK0:
   328                           	callstack 0
   329  0000CA                     _data:
   330                           	callstack 0
   331  0000CA                     	ds	20
   332  0000DE                     _backlight_val:
   333                           	callstack 0
   334  0000DE                     	ds	1
   335                           
   336                           	psect	bssBANK1
   337  000100                     __pbssBANK1:
   338                           	callstack 0
   339  000100                     _temp:
   340                           	callstack 0
   341  000100                     	ds	20
   342                           
   343                           	psect	cstackBANK0
   344  0000DF                     __pcstackBANK0:
   345                           	callstack 0
   346  0000DF                     sprintf@ap:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x0
   350  0000DF                     	ds	2
   351  0000E1                     sprintf@f:
   352                           	callstack 0
   353                           
   354                           ; 11 bytes @ 0x2
   355  0000E1                     	ds	11
   356  0000EC                     ??_main:
   357                           
   358                           ; 1 bytes @ 0xD
   359  0000EC                     	ds	2
   360  0000EE                     main@i:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0xF
   364  0000EE                     	ds	1
   365  0000EF                     main@i_289:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x10
   369  0000EF                     	ds	1
   370                           
   371                           	psect	cstackCOMRAM
   372  000001                     __pcstackCOMRAM:
   373                           	callstack 0
   374  000001                     ??_I2CLCD_Start:
   375  000001                     ??_I2CLCD_Stop:
   376  000001                     ??_I2CLCD_Write:
   377  000001                     ??_MFRC522_Rd:
   378  000001                     ??_MFRC522_Rd2:
   379  000001                     ?_strlen:
   380                           	callstack 0
   381  000001                     ?_isupper:
   382                           	callstack 0
   383  000001                     ?_isalpha:
   384                           	callstack 0
   385  000001                     ?_islower:
   386                           	callstack 0
   387  000001                     ?___lldiv:
   388                           	callstack 0
   389  000001                     ?___fltol:
   390                           	callstack 0
   391  000001                     ?___xxtofl:
   392                           	callstack 0
   393  000001                     MFRC522_Wr@value:
   394                           	callstack 0
   395  000001                     MFRC522_Wr2@value:
   396                           	callstack 0
   397  000001                     isalpha@c:
   398                           	callstack 0
   399  000001                     isupper@c:
   400                           	callstack 0
   401  000001                     fputc@c:
   402                           	callstack 0
   403  000001                     strlen@s:
   404                           	callstack 0
   405  000001                     islower@c:
   406                           	callstack 0
   407  000001                     ___lldiv@dividend:
   408                           	callstack 0
   409  000001                     ___fltol@f1:
   410                           	callstack 0
   411  000001                     ___xxtofl@val:
   412                           	callstack 0
   413                           
   414                           ; 4 bytes @ 0x0
   415  000001                     	ds	1
   416  000002                     ??_MFRC522_Wr:
   417  000002                     ??_MFRC522_Wr2:
   418  000002                     I2CLCD_Write@i2c_data:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x1
   422  000002                     	ds	1
   423  000003                     ??_isupper:
   424  000003                     ??_isalpha:
   425  000003                     ??_islower:
   426  000003                     Expander_Write@value:
   427                           	callstack 0
   428  000003                     MFRC522_Rd@address:
   429                           	callstack 0
   430  000003                     MFRC522_Rd2@address:
   431                           	callstack 0
   432  000003                     MFRC522_Wr@address:
   433                           	callstack 0
   434  000003                     MFRC522_Wr2@address:
   435                           	callstack 0
   436  000003                     fputc@fp:
   437                           	callstack 0
   438  000003                     strlen@a:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x2
   442  000003                     	ds	1
   443  000004                     LCD_Write_Nibble@n:
   444                           	callstack 0
   445  000004                     MFRC522_Wr@ucAddr:
   446                           	callstack 0
   447  000004                     MFRC522_Wr2@ucAddr:
   448                           	callstack 0
   449  000004                     MFRC522_Rd@ucAddr:
   450                           	callstack 0
   451  000004                     MFRC522_Rd2@ucAddr:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x3
   455  000004                     	ds	1
   456  000005                     ??_LCD_Cmd:
   457  000005                     ??_fputc:
   458  000005                     ??___fltol:
   459  000005                     ??___xxtofl:
   460  000005                     MFRC522_Wr@i:
   461                           	callstack 0
   462  000005                     MFRC522_Wr2@i:
   463                           	callstack 0
   464  000005                     USART_TxChar@out:
   465                           	callstack 0
   466  000005                     LCD_Print@LCD_Str:
   467                           	callstack 0
   468  000005                     ___lldiv@divisor:
   469                           	callstack 0
   470                           
   471                           ; 4 bytes @ 0x4
   472  000005                     	ds	1
   473  000006                     LCD_Cmd@Command:
   474                           	callstack 0
   475  000006                     MFRC522_Rd@ucResult:
   476                           	callstack 0
   477  000006                     MFRC522_Rd2@ucResult:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x5
   481  000006                     	ds	1
   482  000007                     ??_LCD_Begin:
   483  000007                     ??_USART_TxChar:
   484  000007                     ??_LCD_Print:
   485  000007                     ?_toupper:
   486                           	callstack 0
   487  000007                     LCD_Goto@row:
   488                           	callstack 0
   489  000007                     toupper@c:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x6
   493  000007                     	ds	1
   494  000008                     ??_LCD_Goto:
   495  000008                     MFRC522_Rd@i:
   496                           	callstack 0
   497  000008                     MFRC522_Rd2@i:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x7
   501  000008                     	ds	1
   502  000009                     ??_toupper:
   503  000009                     USART_TxChar@i:
   504                           	callstack 0
   505  000009                     LCD_Begin@_i2c_addr:
   506                           	callstack 0
   507  000009                     ___fltol@sign1:
   508                           	callstack 0
   509  000009                     ___xxtofl@sign:
   510                           	callstack 0
   511  000009                     ___lldiv@quotient:
   512                           	callstack 0
   513                           
   514                           ; 4 bytes @ 0x8
   515  000009                     	ds	1
   516  00000A                     LCD_Goto@col:
   517                           	callstack 0
   518  00000A                     LCD_Print@i:
   519                           	callstack 0
   520  00000A                     MFRC522_Clear_Bit@mask:
   521                           	callstack 0
   522  00000A                     MFRC522_Clear_Bit2@mask:
   523                           	callstack 0
   524  00000A                     MFRC522_Set_Bit@mask:
   525                           	callstack 0
   526  00000A                     MFRC522_Set_Bit2@mask:
   527                           	callstack 0
   528  00000A                     ___fltol@exp1:
   529                           	callstack 0
   530  00000A                     ___xxtofl@exp:
   531                           	callstack 0
   532  00000A                     fputs@s:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x9
   536  00000A                     	ds	1
   537  00000B                     MFRC522_Clear_Bit@tmp:
   538                           	callstack 0
   539  00000B                     MFRC522_Clear_Bit2@tmp:
   540                           	callstack 0
   541  00000B                     MFRC522_Set_Bit@tmp:
   542                           	callstack 0
   543  00000B                     MFRC522_Set_Bit2@tmp:
   544                           	callstack 0
   545  00000B                     ___xxtofl@arg:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0xA
   549  00000B                     	ds	1
   550  00000C                     MFRC522_Clear_Bit@addr:
   551                           	callstack 0
   552  00000C                     MFRC522_Clear_Bit2@addr:
   553                           	callstack 0
   554  00000C                     MFRC522_Set_Bit@addr:
   555                           	callstack 0
   556  00000C                     MFRC522_Set_Bit2@addr:
   557                           	callstack 0
   558  00000C                     fputs@fp:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0xB
   562  00000C                     	ds	1
   563  00000D                     ___lldiv@counter:
   564                           	callstack 0
   565  00000D                     MFRC522_ToCard@sendData:
   566                           	callstack 0
   567  00000D                     MFRC522_ToCard2@sendData:
   568                           	callstack 0
   569  00000D                     MFRC522_CRC@dataIn:
   570                           	callstack 0
   571  00000D                     MFRC522_CRC2@dataIn:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0xC
   575  00000D                     	ds	1
   576  00000E                     fputs@c:
   577                           	callstack 0
   578  00000E                     I2CLCD_Init@i2c_clk_freq:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0xD
   582  00000E                     	ds	1
   583  00000F                     ?___fldiv:
   584                           	callstack 0
   585  00000F                     MFRC522_ToCard@sendLen:
   586                           	callstack 0
   587  00000F                     MFRC522_ToCard2@sendLen:
   588                           	callstack 0
   589  00000F                     MFRC522_CRC@length:
   590                           	callstack 0
   591  00000F                     MFRC522_CRC2@length:
   592                           	callstack 0
   593  00000F                     fputs@i:
   594                           	callstack 0
   595  00000F                     ___fldiv@b:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0xE
   599  00000F                     	ds	1
   600  000010                     MFRC522_ToCard@backData:
   601                           	callstack 0
   602  000010                     MFRC522_ToCard2@backData:
   603                           	callstack 0
   604  000010                     MFRC522_CRC@dataOut:
   605                           	callstack 0
   606  000010                     MFRC522_CRC2@dataOut:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0xF
   610  000010                     	ds	1
   611  000011                     ?_pad:
   612                           	callstack 0
   613  000011                     pad@fp:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x10
   617  000011                     	ds	1
   618  000012                     ??_I2CLCD_Init:
   619  000012                     MFRC522_CRC@n:
   620                           	callstack 0
   621  000012                     MFRC522_CRC2@n:
   622                           	callstack 0
   623  000012                     MFRC522_ToCard@backLen:
   624                           	callstack 0
   625  000012                     MFRC522_ToCard2@backLen:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x11
   629  000012                     	ds	1
   630  000013                     MFRC522_CRC@i:
   631                           	callstack 0
   632  000013                     MFRC522_CRC2@i:
   633                           	callstack 0
   634  000013                     pad@buf:
   635                           	callstack 0
   636  000013                     ___fldiv@a:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0x12
   640  000013                     	ds	1
   641  000014                     ??_MFRC522_ToCard:
   642  000014                     ??_MFRC522_ToCard2:
   643                           
   644                           ; 1 bytes @ 0x13
   645  000014                     	ds	1
   646  000015                     pad@p:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x14
   650  000015                     	ds	2
   651  000017                     ??___fldiv:
   652  000017                     ??_pad:
   653                           
   654                           ; 1 bytes @ 0x16
   655  000017                     	ds	1
   656  000018                     MFRC522_ToCard@waitIRq:
   657                           	callstack 0
   658  000018                     MFRC522_ToCard2@waitIRq:
   659                           	callstack 0
   660  000018                     pad@i:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x17
   664  000018                     	ds	1
   665  000019                     MFRC522_ToCard@_status:
   666                           	callstack 0
   667  000019                     MFRC522_ToCard2@_status:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x18
   671  000019                     	ds	1
   672  00001A                     MFRC522_ToCard@lastBits:
   673                           	callstack 0
   674  00001A                     MFRC522_ToCard2@lastBits:
   675                           	callstack 0
   676  00001A                     pad@w:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x19
   680  00001A                     	ds	1
   681  00001B                     MFRC522_ToCard@irqEn:
   682                           	callstack 0
   683  00001B                     MFRC522_ToCard2@irqEn:
   684                           	callstack 0
   685  00001B                     ___fldiv@rem:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x1A
   689  00001B                     	ds	1
   690  00001C                     ?_xtoa:
   691                           	callstack 0
   692  00001C                     MFRC522_ToCard@command:
   693                           	callstack 0
   694  00001C                     MFRC522_ToCard2@command:
   695                           	callstack 0
   696  00001C                     xtoa@fp:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x1B
   700  00001C                     	ds	1
   701  00001D                     MFRC522_ToCard@i:
   702                           	callstack 0
   703  00001D                     MFRC522_ToCard2@i:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x1C
   707  00001D                     	ds	1
   708  00001E                     xtoa@d:
   709                           	callstack 0
   710                           
   711                           ; 8 bytes @ 0x1D
   712  00001E                     	ds	1
   713  00001F                     MFRC522_ToCard@n:
   714                           	callstack 0
   715  00001F                     MFRC522_ToCard2@n:
   716                           	callstack 0
   717  00001F                     ___fldiv@sign:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x1E
   721  00001F                     	ds	1
   722  000020                     MFRC522_Request@TagType:
   723                           	callstack 0
   724  000020                     MFRC522_Request2@TagType:
   725                           	callstack 0
   726  000020                     MFRC522_AntiColl@serNum:
   727                           	callstack 0
   728  000020                     MFRC522_AntiColl2@serNum:
   729                           	callstack 0
   730  000020                     ___fldiv@new_exp:
   731                           	callstack 0
   732  000020                     MFRC522_Halt@buff:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x1F
   736  000020                     	ds	2
   737  000022                     MFRC522_Request@reqMode:
   738                           	callstack 0
   739  000022                     MFRC522_Request2@reqMode:
   740                           	callstack 0
   741  000022                     ___fldiv@grs:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x21
   745  000022                     	ds	1
   746  000023                     MFRC522_Request@_status:
   747                           	callstack 0
   748  000023                     MFRC522_Request2@_status:
   749                           	callstack 0
   750  000023                     MFRC522_AntiColl@serNumCheck:
   751                           	callstack 0
   752  000023                     MFRC522_AntiColl2@serNumCheck:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x22
   756  000023                     	ds	1
   757  000024                     MFRC522_Request@backBits:
   758                           	callstack 0
   759  000024                     MFRC522_Request2@backBits:
   760                           	callstack 0
   761  000024                     MFRC522_Halt@unLen:
   762                           	callstack 0
   763  000024                     MFRC522_AntiColl@unLen:
   764                           	callstack 0
   765  000024                     MFRC522_AntiColl2@unLen:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x23
   769  000024                     	ds	2
   770  000026                     MFRC522_AntiColl@_status:
   771                           	callstack 0
   772  000026                     MFRC522_AntiColl2@_status:
   773                           	callstack 0
   774  000026                     ___fldiv@bexp:
   775                           	callstack 0
   776  000026                     xtoa@x:
   777                           	callstack 0
   778  000026                     MFRC522_IsCard@TagType:
   779                           	callstack 0
   780  000026                     MFRC522_IsCard2@TagType:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x25
   784  000026                     	ds	1
   785  000027                     ??_xtoa:
   786  000027                     MFRC522_AntiColl@i:
   787                           	callstack 0
   788  000027                     MFRC522_AntiColl2@i:
   789                           	callstack 0
   790  000027                     ___fldiv@aexp:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x26
   794  000027                     	ds	1
   795  000028                     ?___fladd:
   796                           	callstack 0
   797  000028                     MFRC522_ReadCardSerial@str:
   798                           	callstack 0
   799  000028                     MFRC522_ReadCardSerial2@str:
   800                           	callstack 0
   801  000028                     ___fladd@b:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x27
   805  000028                     	ds	2
   806  00002A                     
   807                           ; 1 bytes @ 0x29
   808  00002A                     	ds	2
   809  00002C                     ___fladd@a:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x2B
   813  00002C                     	ds	3
   814  00002F                     xtoa@p:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x2E
   818  00002F                     	ds	1
   819  000030                     ??___fladd:
   820                           
   821                           ; 1 bytes @ 0x2F
   822  000030                     	ds	1
   823  000031                     xtoa@w:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x30
   827  000031                     	ds	2
   828  000033                     xtoa@n:
   829                           	callstack 0
   830                           
   831                           ; 8 bytes @ 0x32
   832  000033                     	ds	1
   833  000034                     ___fladd@signs:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x33
   837  000034                     	ds	1
   838  000035                     ___fladd@aexp:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x34
   842  000035                     	ds	1
   843  000036                     ___fladd@bexp:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x35
   847  000036                     	ds	1
   848  000037                     ___fladd@grs:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x36
   852  000037                     	ds	1
   853  000038                     USART_Init@baud_rate:
   854                           	callstack 0
   855                           
   856                           ; 4 bytes @ 0x37
   857  000038                     	ds	3
   858  00003B                     xtoa@i:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x3A
   862  00003B                     	ds	1
   863  00003C                     USART_Init@temp:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x3B
   867  00003C                     	ds	1
   868  00003D                     xtoa@c:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x3C
   872  00003D                     	ds	2
   873  00003F                     ?_vfpfcnvrt:
   874                           	callstack 0
   875  00003F                     vfpfcnvrt@fp:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x3E
   879  00003F                     	ds	2
   880  000041                     vfpfcnvrt@fmt:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x40
   884  000041                     	ds	2
   885  000043                     vfpfcnvrt@ap:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x42
   889  000043                     	ds	2
   890  000045                     ??_vfpfcnvrt:
   891                           
   892                           ; 1 bytes @ 0x44
   893  000045                     	ds	4
   894  000049                     vfpfcnvrt@llu:
   895                           	callstack 0
   896                           
   897                           ; 8 bytes @ 0x48
   898  000049                     	ds	8
   899  000051                     vfpfcnvrt@c:
   900                           	callstack 0
   901                           
   902                           ; 1 bytes @ 0x50
   903  000051                     	ds	1
   904  000052                     ?_vfprintf:
   905                           	callstack 0
   906  000052                     vfprintf@fp:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x51
   910  000052                     	ds	2
   911  000054                     vfprintf@fmt:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x53
   915  000054                     	ds	2
   916  000056                     vfprintf@ap:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x55
   920  000056                     	ds	2
   921  000058                     vfprintf@cfmt:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x57
   925  000058                     	ds	2
   926  00005A                     ?_sprintf:
   927                           	callstack 0
   928  00005A                     sprintf@s:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x59
   932  00005A                     	ds	2
   933  00005C                     sprintf@fmt:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x5B
   937  00005C                     	ds	4
   938  000060                     
   939                           ; 1 bytes @ 0x5F
   940 ;;
   941 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   942 ;;
   943 ;; *************** function _main *****************
   944 ;; Defined at:
   945 ;;		line 28 in file "main.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  i               1   16[BANK0 ] unsigned char 
   950 ;;  i               1   15[BANK0 ] unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   960 ;;      Params:         0       0       0       0       0       0       0       0       0
   961 ;;      Locals:         0       2       0       0       0       0       0       0       0
   962 ;;      Temps:          0       2       0       0       0       0       0       0       0
   963 ;;      Totals:         0       4       0       0       0       0       0       0       0
   964 ;;Total ram usage:        4 bytes
   965 ;; Hardware stack levels required when called: 8
   966 ;; This function calls:
   967 ;;		_I2CLCD_Init
   968 ;;		_LCD_Begin
   969 ;;		_LCD_Cmd
   970 ;;		_LCD_Goto
   971 ;;		_LCD_Print
   972 ;;		_MFRC522_AntiColl
   973 ;;		_MFRC522_AntiColl2
   974 ;;		_MFRC522_Halt
   975 ;;		_MFRC522_Init
   976 ;;		_MFRC522_IsCard
   977 ;;		_MFRC522_IsCard2
   978 ;;		_MFRC522_ReadCardSerial
   979 ;;		_MFRC522_ReadCardSerial2
   980 ;;		_USART_Init
   981 ;;		_USART_TxChar
   982 ;;		_sprintf
   983 ;;		_strlen
   984 ;; This function is called by:
   985 ;;		Startup code after reset
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text0
   990  00183C                     __ptext0:
   991                           	callstack 0
   992  00183C                     _main:
   993                           	callstack 23
   994  00183C                     
   995                           ;main.c: 29:     I2CLCD_Init(100000);
   996  00183C  0EA0               	movlw	160
   997  00183E  6E0E               	movwf	I2CLCD_Init@i2c_clk_freq^0,c
   998  001840  0E86               	movlw	134
   999  001842  6E0F               	movwf	(I2CLCD_Init@i2c_clk_freq+1)^0,c
  1000  001844  0E01               	movlw	1
  1001  001846  6E10               	movwf	(I2CLCD_Init@i2c_clk_freq+2)^0,c
  1002  001848  0E00               	movlw	0
  1003  00184A  6E11               	movwf	(I2CLCD_Init@i2c_clk_freq+3)^0,c
  1004  00184C  EC19  F016         	call	_I2CLCD_Init	;wreg free
  1005                           
  1006                           ;main.c: 30:     LCD_Begin(0x4E);
  1007  001850  0E4E               	movlw	78
  1008  001852  EC94  F00F         	call	_LCD_Begin
  1009                           
  1010                           ;main.c: 31:     MFRC522_Init();
  1011  001856  ECED  F012         	call	_MFRC522_Init	;wreg free
  1012                           
  1013                           ;main.c: 32:     USART_Init(9600);
  1014  00185A  0E80               	movlw	128
  1015  00185C  6E38               	movwf	USART_Init@baud_rate^0,c
  1016  00185E  0E25               	movlw	37
  1017  001860  6E39               	movwf	(USART_Init@baud_rate+1)^0,c
  1018  001862  0E00               	movlw	0
  1019  001864  6E3A               	movwf	(USART_Init@baud_rate+2)^0,c
  1020  001866  0E00               	movlw	0
  1021  001868  6E3B               	movwf	(USART_Init@baud_rate+3)^0,c
  1022  00186A  EC31  F014         	call	_USART_Init	;wreg free
  1023  00186E                     
  1024                           ;main.c: 34:     _delay((unsigned long)((500)*(27000000/4000.0)));
  1025  00186E  0E12               	movlw	18
  1026  001870  0100               	movlb	0	; () banked
  1027  001872  6FED               	movwf	(??_main+1)& (0+255),b
  1028  001874  0E20               	movlw	32
  1029  001876  6FEC               	movwf	??_main& (0+255),b
  1030  001878  0E0F               	movlw	15
  1031  00187A                     u4357:
  1032  00187A  2EE8               	decfsz	wreg,f,c
  1033  00187C  D7FE               	bra	u4357
  1034  00187E  2FEC               	decfsz	??_main& (0+255),f,b
  1035  001880  D7FC               	bra	u4357
  1036  001882  2FED               	decfsz	(??_main+1)& (0+255),f,b
  1037  001884  D7FA               	bra	u4357
  1038  001886  D000               	nop2	
  1039  001888                     l4128:
  1040                           
  1041                           ;main.c: 36:         MFRC522_IsCard(&TagType1);
  1042  001888  0EC9               	movlw	low _TagType1
  1043  00188A  6E26               	movwf	MFRC522_IsCard@TagType^0,c
  1044  00188C  0E00               	movlw	high _TagType1
  1045  00188E  6E27               	movwf	(MFRC522_IsCard@TagType+1)^0,c
  1046  001890  EC6B  F018         	call	_MFRC522_IsCard	;wreg free
  1047  001894                     
  1048                           ;main.c: 37:         MFRC522_ReadCardSerial(&UID_1);
  1049  001894  0EA0               	movlw	low _UID_1
  1050  001896  6E28               	movwf	MFRC522_ReadCardSerial@str^0,c
  1051  001898  0E00               	movlw	high _UID_1
  1052  00189A  6E29               	movwf	(MFRC522_ReadCardSerial@str+1)^0,c
  1053  00189C  ECF6  F017         	call	_MFRC522_ReadCardSerial	;wreg free
  1054  0018A0                     
  1055                           ;main.c: 38:         status_1 = MFRC522_AntiColl(&UID_1);
  1056  0018A0  0EA0               	movlw	low _UID_1
  1057  0018A2  6E20               	movwf	MFRC522_AntiColl@serNum^0,c
  1058  0018A4  0E00               	movlw	high _UID_1
  1059  0018A6  6E21               	movwf	(MFRC522_AntiColl@serNum+1)^0,c
  1060  0018A8  EC40  F012         	call	_MFRC522_AntiColl	;wreg free
  1061  0018AC  0100               	movlb	0	; () banked
  1062  0018AE  6F6B               	movwf	_status_1& (0+255),b
  1063  0018B0                     
  1064                           ; BSR set to: 0
  1065                           ;main.c: 40:         MFRC522_IsCard2(&TagType2);
  1066  0018B0  0EC8               	movlw	low _TagType2
  1067  0018B2  6E26               	movwf	MFRC522_IsCard2@TagType^0,c
  1068  0018B4  0E00               	movlw	high _TagType2
  1069  0018B6  6E27               	movwf	(MFRC522_IsCard2@TagType+1)^0,c
  1070  0018B8  EC63  F018         	call	_MFRC522_IsCard2	;wreg free
  1071  0018BC                     
  1072                           ;main.c: 41:         MFRC522_ReadCardSerial2(&UID_2);
  1073  0018BC  0E8C               	movlw	low _UID_2
  1074  0018BE  6E28               	movwf	MFRC522_ReadCardSerial2@str^0,c
  1075  0018C0  0E00               	movlw	high _UID_2
  1076  0018C2  6E29               	movwf	(MFRC522_ReadCardSerial2@str+1)^0,c
  1077  0018C4  ECE7  F017         	call	_MFRC522_ReadCardSerial2	;wreg free
  1078  0018C8                     
  1079                           ;main.c: 42:         status_2 = MFRC522_AntiColl2(&UID_2);
  1080  0018C8  0E8C               	movlw	low _UID_2
  1081  0018CA  6E20               	movwf	MFRC522_AntiColl2@serNum^0,c
  1082  0018CC  0E00               	movlw	high _UID_2
  1083  0018CE  6E21               	movwf	(MFRC522_AntiColl2@serNum+1)^0,c
  1084  0018D0  ECE6  F011         	call	_MFRC522_AntiColl2	;wreg free
  1085  0018D4  0100               	movlb	0	; () banked
  1086  0018D6  6F6A               	movwf	_status_2& (0+255),b
  1087  0018D8                     
  1088                           ; BSR set to: 0
  1089                           ;main.c: 44:         if(strlen(UID_1) == 1 || strlen(UID_2) == 1){
  1090  0018D8  0EA0               	movlw	low _UID_1
  1091  0018DA  6E01               	movwf	strlen@s^0,c
  1092  0018DC  0E00               	movlw	high _UID_1
  1093  0018DE  6E02               	movwf	(strlen@s+1)^0,c
  1094  0018E0  EC6E  F016         	call	_strlen	;wreg free
  1095  0018E4  0401               	decf	?_strlen^0,w,c
  1096  0018E6  1002               	iorwf	(?_strlen+1)^0,w,c
  1097  0018E8  B4D8               	btfsc	status,2,c
  1098  0018EA  EF79  F00C         	goto	u4231
  1099  0018EE  EF7B  F00C         	goto	u4230
  1100  0018F2                     u4231:
  1101  0018F2  EF8A  F00C         	goto	l4144
  1102  0018F6                     u4230:
  1103  0018F6  0E8C               	movlw	low _UID_2
  1104  0018F8  6E01               	movwf	strlen@s^0,c
  1105  0018FA  0E00               	movlw	high _UID_2
  1106  0018FC  6E02               	movwf	(strlen@s+1)^0,c
  1107  0018FE  EC6E  F016         	call	_strlen	;wreg free
  1108  001902  0401               	decf	?_strlen^0,w,c
  1109  001904  1002               	iorwf	(?_strlen+1)^0,w,c
  1110  001906  A4D8               	btfss	status,2,c
  1111  001908  EF88  F00C         	goto	u4241
  1112  00190C  EF8A  F00C         	goto	u4240
  1113  001910                     u4241:
  1114  001910  EF8D  F00C         	goto	l96
  1115  001914                     u4240:
  1116  001914                     l4144:
  1117                           
  1118                           ;main.c: 45:             LCD_Cmd(0x01);
  1119  001914  0E01               	movlw	1
  1120  001916  EC95  F016         	call	_LCD_Cmd
  1121  00191A                     l96:
  1122                           
  1123                           ;main.c: 48:         LCD_Goto(1, 2);
  1124  00191A  0E02               	movlw	2
  1125  00191C  6E07               	movwf	LCD_Goto@row^0,c
  1126  00191E  0E01               	movlw	1
  1127  001920  EC4B  F015         	call	_LCD_Goto
  1128  001924                     
  1129                           ;main.c: 50:         if(status_1 == 0) {
  1130  001924  0100               	movlb	0	; () banked
  1131  001926  516B               	movf	_status_1& (0+255),w,b
  1132  001928  A4D8               	btfss	status,2,c
  1133  00192A  EF99  F00C         	goto	u4251
  1134  00192E  EF9B  F00C         	goto	u4250
  1135  001932                     u4251:
  1136  001932  EFE7  F00C         	goto	l4172
  1137  001936                     u4250:
  1138  001936                     
  1139                           ; BSR set to: 0
  1140                           ;main.c: 51:             USART_TxChar("P1");
  1141  001936  0E17               	movlw	low STR_1
  1142  001938  6E05               	movwf	USART_TxChar@out^0,c
  1143  00193A  0E08               	movlw	high STR_1
  1144  00193C  6E06               	movwf	(USART_TxChar@out+1)^0,c
  1145  00193E  EC13  F015         	call	_USART_TxChar	;wreg free
  1146  001942                     
  1147                           ;main.c: 52:             for(uint8_t i = 0; i < 5; i++)
  1148  001942  0E00               	movlw	0
  1149  001944  0100               	movlb	0	; () banked
  1150  001946  6FEE               	movwf	main@i& (0+255),b
  1151  001948                     l4156:
  1152                           
  1153                           ; BSR set to: 0
  1154                           ;main.c: 53:             {;main.c: 54:                 sprintf(data_buffer, "%X", UID_1[
      +                          i]);
  1155  001948  0EB4               	movlw	low _data_buffer
  1156  00194A  6E5A               	movwf	sprintf@s^0,c
  1157  00194C  0E00               	movlw	high _data_buffer
  1158  00194E  6E5B               	movwf	(sprintf@s+1)^0,c
  1159  001950  0E1D               	movlw	low STR_2
  1160  001952  6E5C               	movwf	sprintf@fmt^0,c
  1161  001954  0E08               	movlw	high STR_2
  1162  001956  6E5D               	movwf	(sprintf@fmt+1)^0,c
  1163  001958  0EA0               	movlw	low _UID_1
  1164  00195A  25EE               	addwf	main@i& (0+255),w,b
  1165  00195C  6ED9               	movwf	fsr2l,c
  1166  00195E  6ADA               	clrf	fsr2h,c
  1167  001960  0E00               	movlw	high _UID_1
  1168  001962  22DA               	addwfc	fsr2h,f,c
  1169  001964  50DF               	movf	indf2,w,c
  1170  001966  6FEC               	movwf	??_main& (0+255),b
  1171  001968  51EC               	movf	??_main& (0+255),w,b
  1172  00196A  6E5E               	movwf	(?_sprintf+4)^0,c
  1173  00196C  6A5F               	clrf	(?_sprintf+5)^0,c
  1174  00196E  EC45  F016         	call	_sprintf	;wreg free
  1175  001972                     
  1176                           ;main.c: 55:                 LCD_Print(data_buffer);
  1177  001972  0EB4               	movlw	low _data_buffer
  1178  001974  6E05               	movwf	LCD_Print@LCD_Str^0,c
  1179  001976  0E00               	movlw	high _data_buffer
  1180  001978  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1181  00197A  EC8B  F011         	call	_LCD_Print	;wreg free
  1182  00197E                     
  1183                           ;main.c: 56:                 USART_TxChar(data_buffer);
  1184  00197E  0EB4               	movlw	low _data_buffer
  1185  001980  6E05               	movwf	USART_TxChar@out^0,c
  1186  001982  0E00               	movlw	high _data_buffer
  1187  001984  6E06               	movwf	(USART_TxChar@out+1)^0,c
  1188  001986  EC13  F015         	call	_USART_TxChar	;wreg free
  1189  00198A                     
  1190                           ;main.c: 57:             }
  1191  00198A  0100               	movlb	0	; () banked
  1192  00198C  2BEE               	incf	main@i& (0+255),f,b
  1193  00198E                     
  1194                           ; BSR set to: 0
  1195  00198E  0E04               	movlw	4
  1196  001990  65EE               	cpfsgt	main@i& (0+255),b
  1197  001992  EFCD  F00C         	goto	u4261
  1198  001996  EFCF  F00C         	goto	u4260
  1199  00199A                     u4261:
  1200  00199A  EFA4  F00C         	goto	l4156
  1201  00199E                     u4260:
  1202  00199E                     
  1203                           ; BSR set to: 0
  1204                           ;main.c: 58:             LCD_Goto(1, 1);
  1205  00199E  0E01               	movlw	1
  1206  0019A0  6E07               	movwf	LCD_Goto@row^0,c
  1207  0019A2  0E01               	movlw	1
  1208  0019A4  EC4B  F015         	call	_LCD_Goto
  1209  0019A8                     
  1210                           ;main.c: 59:             LCD_Print("Position 1");
  1211  0019A8  0E01               	movlw	low STR_3
  1212  0019AA  6E05               	movwf	LCD_Print@LCD_Str^0,c
  1213  0019AC  0E08               	movlw	high STR_3
  1214  0019AE  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1215  0019B0  EC8B  F011         	call	_LCD_Print	;wreg free
  1216  0019B4                     
  1217                           ;main.c: 60:             _delay((unsigned long)((500)*(27000000/4000.0)));
  1218  0019B4  0E12               	movlw	18
  1219  0019B6  0100               	movlb	0	; () banked
  1220  0019B8  6FED               	movwf	(??_main+1)& (0+255),b
  1221  0019BA  0E20               	movlw	32
  1222  0019BC  6FEC               	movwf	??_main& (0+255),b
  1223  0019BE  0E0F               	movlw	15
  1224  0019C0                     u4367:
  1225  0019C0  2EE8               	decfsz	wreg,f,c
  1226  0019C2  D7FE               	bra	u4367
  1227  0019C4  2FEC               	decfsz	??_main& (0+255),f,b
  1228  0019C6  D7FC               	bra	u4367
  1229  0019C8  2FED               	decfsz	(??_main+1)& (0+255),f,b
  1230  0019CA  D7FA               	bra	u4367
  1231  0019CC  D000               	nop2	
  1232  0019CE                     l4172:
  1233                           
  1234                           ;main.c: 63:         if(status_2 == 0){
  1235  0019CE  0100               	movlb	0	; () banked
  1236  0019D0  516A               	movf	_status_2& (0+255),w,b
  1237  0019D2  A4D8               	btfss	status,2,c
  1238  0019D4  EFEE  F00C         	goto	u4271
  1239  0019D8  EFF0  F00C         	goto	u4270
  1240  0019DC                     u4271:
  1241  0019DC  EF3C  F00D         	goto	l4198
  1242  0019E0                     u4270:
  1243  0019E0                     
  1244                           ; BSR set to: 0
  1245                           ;main.c: 64:             USART_TxChar("P2");
  1246  0019E0  0E1A               	movlw	low STR_4
  1247  0019E2  6E05               	movwf	USART_TxChar@out^0,c
  1248  0019E4  0E08               	movlw	high STR_4
  1249  0019E6  6E06               	movwf	(USART_TxChar@out+1)^0,c
  1250  0019E8  EC13  F015         	call	_USART_TxChar	;wreg free
  1251  0019EC                     
  1252                           ;main.c: 65:             for(uint8_t i = 0; i < 5; i++)
  1253  0019EC  0E00               	movlw	0
  1254  0019EE  0100               	movlb	0	; () banked
  1255  0019F0  6FEF               	movwf	main@i_289& (0+255),b
  1256  0019F2                     l4182:
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;main.c: 66:             {;main.c: 67:                 sprintf(data_buffer, "%X", UID_2[
      +                          i]);
  1260  0019F2  0EB4               	movlw	low _data_buffer
  1261  0019F4  6E5A               	movwf	sprintf@s^0,c
  1262  0019F6  0E00               	movlw	high _data_buffer
  1263  0019F8  6E5B               	movwf	(sprintf@s+1)^0,c
  1264  0019FA  0E1D               	movlw	low STR_2
  1265  0019FC  6E5C               	movwf	sprintf@fmt^0,c
  1266  0019FE  0E08               	movlw	high STR_2
  1267  001A00  6E5D               	movwf	(sprintf@fmt+1)^0,c
  1268  001A02  0E8C               	movlw	low _UID_2
  1269  001A04  25EF               	addwf	main@i_289& (0+255),w,b
  1270  001A06  6ED9               	movwf	fsr2l,c
  1271  001A08  6ADA               	clrf	fsr2h,c
  1272  001A0A  0E00               	movlw	high _UID_2
  1273  001A0C  22DA               	addwfc	fsr2h,f,c
  1274  001A0E  50DF               	movf	indf2,w,c
  1275  001A10  6FEC               	movwf	??_main& (0+255),b
  1276  001A12  51EC               	movf	??_main& (0+255),w,b
  1277  001A14  6E5E               	movwf	(?_sprintf+4)^0,c
  1278  001A16  6A5F               	clrf	(?_sprintf+5)^0,c
  1279  001A18  EC45  F016         	call	_sprintf	;wreg free
  1280  001A1C                     
  1281                           ;main.c: 68:                 LCD_Print(data_buffer);
  1282  001A1C  0EB4               	movlw	low _data_buffer
  1283  001A1E  6E05               	movwf	LCD_Print@LCD_Str^0,c
  1284  001A20  0E00               	movlw	high _data_buffer
  1285  001A22  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1286  001A24  EC8B  F011         	call	_LCD_Print	;wreg free
  1287  001A28                     
  1288                           ;main.c: 70:                 USART_TxChar(data_buffer);
  1289  001A28  0EB4               	movlw	low _data_buffer
  1290  001A2A  6E05               	movwf	USART_TxChar@out^0,c
  1291  001A2C  0E00               	movlw	high _data_buffer
  1292  001A2E  6E06               	movwf	(USART_TxChar@out+1)^0,c
  1293  001A30  EC13  F015         	call	_USART_TxChar	;wreg free
  1294  001A34                     
  1295                           ;main.c: 71:             }
  1296  001A34  0100               	movlb	0	; () banked
  1297  001A36  2BEF               	incf	main@i_289& (0+255),f,b
  1298  001A38                     
  1299                           ; BSR set to: 0
  1300  001A38  0E04               	movlw	4
  1301  001A3A  65EF               	cpfsgt	main@i_289& (0+255),b
  1302  001A3C  EF22  F00D         	goto	u4281
  1303  001A40  EF24  F00D         	goto	u4280
  1304  001A44                     u4281:
  1305  001A44  EFF9  F00C         	goto	l4182
  1306  001A48                     u4280:
  1307  001A48                     
  1308                           ; BSR set to: 0
  1309                           ;main.c: 72:             LCD_Goto(1, 1);
  1310  001A48  0E01               	movlw	1
  1311  001A4A  6E07               	movwf	LCD_Goto@row^0,c
  1312  001A4C  0E01               	movlw	1
  1313  001A4E  EC4B  F015         	call	_LCD_Goto
  1314  001A52                     
  1315                           ;main.c: 73:             LCD_Print("Position 2");
  1316  001A52  0E0C               	movlw	low STR_6
  1317  001A54  6E05               	movwf	LCD_Print@LCD_Str^0,c
  1318  001A56  0E08               	movlw	high STR_6
  1319  001A58  6E06               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1320  001A5A  EC8B  F011         	call	_LCD_Print	;wreg free
  1321  001A5E                     
  1322                           ;main.c: 74:             _delay((unsigned long)((500)*(27000000/4000.0)));
  1323  001A5E  0E12               	movlw	18
  1324  001A60  0100               	movlb	0	; () banked
  1325  001A62  6FED               	movwf	(??_main+1)& (0+255),b
  1326  001A64  0E20               	movlw	32
  1327  001A66  6FEC               	movwf	??_main& (0+255),b
  1328  001A68  0E0F               	movlw	15
  1329  001A6A                     u4377:
  1330  001A6A  2EE8               	decfsz	wreg,f,c
  1331  001A6C  D7FE               	bra	u4377
  1332  001A6E  2FEC               	decfsz	??_main& (0+255),f,b
  1333  001A70  D7FC               	bra	u4377
  1334  001A72  2FED               	decfsz	(??_main+1)& (0+255),f,b
  1335  001A74  D7FA               	bra	u4377
  1336  001A76  D000               	nop2	
  1337  001A78                     l4198:
  1338                           
  1339                           ;main.c: 77:         _delay((unsigned long)((50)*(27000000/4000.0)));
  1340  001A78  0E02               	movlw	2
  1341  001A7A  0100               	movlb	0	; () banked
  1342  001A7C  6FED               	movwf	(??_main+1)& (0+255),b
  1343  001A7E  0EB7               	movlw	183
  1344  001A80  6FEC               	movwf	??_main& (0+255),b
  1345  001A82  0E4C               	movlw	76
  1346  001A84                     u4387:
  1347  001A84  2EE8               	decfsz	wreg,f,c
  1348  001A86  D7FE               	bra	u4387
  1349  001A88  2FEC               	decfsz	??_main& (0+255),f,b
  1350  001A8A  D7FC               	bra	u4387
  1351  001A8C  2FED               	decfsz	(??_main+1)& (0+255),f,b
  1352  001A8E  D7FA               	bra	u4387
  1353  001A90  F000               	nop	
  1354  001A92                     
  1355                           ;main.c: 78:         MFRC522_Halt();
  1356  001A92  EC9A  F012         	call	_MFRC522_Halt	;wreg free
  1357  001A96  EF44  F00C         	goto	l4128
  1358  001A9A  EF00  F000         	goto	start
  1359  001A9E                     __end_of_main:
  1360                           	callstack 0
  1361                           
  1362 ;; *************** function _sprintf *****************
  1363 ;; Defined at:
  1364 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  s               2   89[COMRAM] PTR unsigned char 
  1367 ;;		 -> data_buffer(20), 
  1368 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
  1369 ;;		 -> STR_5(3), STR_2(3), 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  f              11    2[BANK0 ] struct _IO_FILE
  1372 ;;  ap              2    0[BANK0 ] PTR void [1]
  1373 ;;		 -> ?_sprintf(2), 
  1374 ;;  ret             2    0        int 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  2   89[COMRAM] int 
  1377 ;; Registers used:
  1378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1384 ;;      Params:         6       0       0       0       0       0       0       0       0
  1385 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1387 ;;      Totals:         6      13       0       0       0       0       0       0       0
  1388 ;;Total ram usage:       19 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 7
  1391 ;; This function calls:
  1392 ;;		_vfprintf
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text1
  1399  002C8A                     __ptext1:
  1400                           	callstack 0
  1401  002C8A                     _sprintf:
  1402                           	callstack 23
  1403  002C8A  0E5E               	movlw	low (?_sprintf+4)
  1404  002C8C  0100               	movlb	0	; () banked
  1405  002C8E  6FDF               	movwf	sprintf@ap& (0+255),b
  1406  002C90  0E00               	movlw	high (?_sprintf+4)
  1407  002C92  6FE0               	movwf	(sprintf@ap+1)& (0+255),b
  1408  002C94  C05A  F0E1         	movff	sprintf@s,sprintf@f
  1409  002C98  C05B  F0E2         	movff	sprintf@s+1,sprintf@f+1
  1410  002C9C                     
  1411                           ; BSR set to: 0
  1412  002C9C  0E00               	movlw	0
  1413  002C9E  6FE5               	movwf	(sprintf@f+4)& (0+255),b
  1414  002CA0  0E00               	movlw	0
  1415  002CA2  6FE4               	movwf	(sprintf@f+3)& (0+255),b
  1416  002CA4                     
  1417                           ; BSR set to: 0
  1418  002CA4  0E00               	movlw	0
  1419  002CA6  6FEB               	movwf	(sprintf@f+10)& (0+255),b
  1420  002CA8  0E00               	movlw	0
  1421  002CAA  6FEA               	movwf	(sprintf@f+9)& (0+255),b
  1422  002CAC                     
  1423                           ; BSR set to: 0
  1424  002CAC  0EE1               	movlw	low sprintf@f
  1425  002CAE  6E52               	movwf	vfprintf@fp^0,c
  1426  002CB0  0E00               	movlw	high sprintf@f
  1427  002CB2  6E53               	movwf	(vfprintf@fp+1)^0,c
  1428  002CB4  C05C  F054         	movff	sprintf@fmt,vfprintf@fmt
  1429  002CB8  C05D  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1430  002CBC  0EDF               	movlw	low sprintf@ap
  1431  002CBE  6E56               	movwf	vfprintf@ap^0,c
  1432  002CC0  0E00               	movlw	high sprintf@ap
  1433  002CC2  6E57               	movwf	(vfprintf@ap+1)^0,c
  1434  002CC4  ECE8  F015         	call	_vfprintf	;wreg free
  1435  002CC8  0100               	movlb	0	; () banked
  1436  002CCA  51E4               	movf	(sprintf@f+3)& (0+255),w,b
  1437  002CCC  245A               	addwf	sprintf@s^0,w,c
  1438  002CCE  6ED9               	movwf	fsr2l,c
  1439  002CD0  51E5               	movf	(sprintf@f+4)& (0+255),w,b
  1440  002CD2  205B               	addwfc	(sprintf@s+1)^0,w,c
  1441  002CD4  6EDA               	movwf	fsr2h,c
  1442  002CD6  0E00               	movlw	0
  1443  002CD8  6EDF               	movwf	indf2,c
  1444  002CDA                     
  1445                           ; BSR set to: 0
  1446  002CDA  0012               	return		;funcret
  1447  002CDC                     __end_of_sprintf:
  1448                           	callstack 0
  1449                           
  1450 ;; *************** function _vfprintf *****************
  1451 ;; Defined at:
  1452 ;;		line 1390 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  1455 ;;		 -> sprintf@f(11), 
  1456 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  1457 ;;		 -> STR_5(3), STR_2(3), 
  1458 ;;  ap              2   85[COMRAM] PTR PTR void 
  1459 ;;		 -> sprintf@ap(2), 
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  1462 ;;		 -> STR_5(3), STR_2(3), 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  2   81[COMRAM] int 
  1465 ;; Registers used:
  1466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1472 ;;      Params:         6       0       0       0       0       0       0       0       0
  1473 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1475 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1476 ;;Total ram usage:        8 bytes
  1477 ;; Hardware stack levels used: 1
  1478 ;; Hardware stack levels required when called: 6
  1479 ;; This function calls:
  1480 ;;		_vfpfcnvrt
  1481 ;; This function is called by:
  1482 ;;		_sprintf
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text2
  1487  002BD0                     __ptext2:
  1488                           	callstack 0
  1489  002BD0                     _vfprintf:
  1490                           	callstack 23
  1491  002BD0                     
  1492                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1493  002BD0  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  1494  002BD4  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1495  002BD8                     
  1496                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1497  002BD8  0E00               	movlw	0
  1498  002BDA  0100               	movlb	0	; () banked
  1499  002BDC  6F61               	movwf	(_nout+1)& (0+255),b
  1500  002BDE  0E00               	movlw	0
  1501  002BE0  6F60               	movwf	_nout& (0+255),b
  1502                           
  1503                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1504  002BE2  EF06  F016         	goto	l3972
  1505  002BE6                     l3970:
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1509  002BE6  C052  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1510  002BEA  C053  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1511  002BEE  0E58               	movlw	low vfprintf@cfmt
  1512  002BF0  6E41               	movwf	vfpfcnvrt@fmt^0,c
  1513  002BF2  0E00               	movlw	high vfprintf@cfmt
  1514  002BF4  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1515  002BF6  C056  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  1516  002BFA  C057  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1517  002BFE  EC4F  F00D         	call	_vfpfcnvrt	;wreg free
  1518  002C02  503F               	movf	?_vfpfcnvrt^0,w,c
  1519  002C04  0100               	movlb	0	; () banked
  1520  002C06  2760               	addwf	_nout& (0+255),f,b
  1521  002C08  5040               	movf	(?_vfpfcnvrt+1)^0,w,c
  1522  002C0A  2361               	addwfc	(_nout+1)& (0+255),f,b
  1523  002C0C                     l3972:
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1527  002C0C  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  1528  002C10  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1529  002C14                     	if	0	;tblptru may be non-zero
  1530  002C14                     	endif
  1531  002C14                     	if	0	;tblptru may be non-zero
  1532  002C14                     	endif
  1533  002C14  0008               	tblrd		*
  1534  002C16  50F5               	movf	tablat,w,c
  1535  002C18  0900               	iorlw	0
  1536  002C1A  A4D8               	btfss	status,2,c
  1537  002C1C  EF12  F016         	goto	u4141
  1538  002C20  EF14  F016         	goto	u4140
  1539  002C24                     u4141:
  1540  002C24  EFF3  F015         	goto	l3970
  1541  002C28                     u4140:
  1542  002C28                     
  1543                           ; BSR set to: 0
  1544                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1545  002C28  C060  F052         	movff	_nout,?_vfprintf
  1546  002C2C  C061  F053         	movff	_nout+1,?_vfprintf+1
  1547  002C30                     
  1548                           ; BSR set to: 0
  1549  002C30  0012               	return		;funcret
  1550  002C32                     __end_of_vfprintf:
  1551                           	callstack 0
  1552                           
  1553 ;; *************** function _vfpfcnvrt *****************
  1554 ;; Defined at:
  1555 ;;		line 692 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  1558 ;;		 -> sprintf@f(11), 
  1559 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  1560 ;;		 -> vfprintf@cfmt(2), 
  1561 ;;  ap              2   66[COMRAM] PTR PTR void 
  1562 ;;		 -> sprintf@ap(2), 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  llu             8   72[COMRAM] unsigned long long 
  1565 ;;  ll              8    0        long long 
  1566 ;;  f               4    0        long long 
  1567 ;;  vp              3    0        PTR void 
  1568 ;;  ct              3    0        unsigned char [3]
  1569 ;;  cp              3    0        PTR unsigned char 
  1570 ;;  i               2    0        int 
  1571 ;;  done            2    0        int 
  1572 ;;  c               1   80[COMRAM] unsigned char 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  2   62[COMRAM] int 
  1575 ;; Registers used:
  1576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1582 ;;      Params:         6       0       0       0       0       0       0       0       0
  1583 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1584 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1585 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1586 ;;Total ram usage:       19 bytes
  1587 ;; Hardware stack levels used: 1
  1588 ;; Hardware stack levels required when called: 5
  1589 ;; This function calls:
  1590 ;;		_fputc
  1591 ;;		_xtoa
  1592 ;; This function is called by:
  1593 ;;		_vfprintf
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text3
  1598  001A9E                     __ptext3:
  1599                           	callstack 0
  1600  001A9E                     _vfpfcnvrt:
  1601                           	callstack 23
  1602  001A9E                     
  1603                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;D:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;D:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1604  001A9E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1605  001AA2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1606  001AA6  CFDE FFF6          	movff	postinc2,tblptrl
  1607  001AAA  CFDD FFF7          	movff	postdec2,tblptrh
  1608  001AAE                     	if	0	;tblptru may be non-zero
  1609  001AAE                     	endif
  1610  001AAE                     	if	0	;tblptru may be non-zero
  1611  001AAE                     	endif
  1612  001AAE  0008               	tblrd		*
  1613  001AB0  50F5               	movf	tablat,w,c
  1614  001AB2  0A25               	xorlw	37
  1615  001AB4  A4D8               	btfss	status,2,c
  1616  001AB6  EF5F  F00D         	goto	u3101
  1617  001ABA  EF61  F00D         	goto	u3100
  1618  001ABE                     u3101:
  1619  001ABE  EF1B  F00E         	goto	l3342
  1620  001AC2                     u3100:
  1621  001AC2                     
  1622                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1623  001AC2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1624  001AC6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1625  001ACA  2ADE               	incf	postinc2,f,c
  1626  001ACC  0E00               	movlw	0
  1627  001ACE  22DD               	addwfc	postdec2,f,c
  1628  001AD0                     
  1629                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1630  001AD0  0E00               	movlw	0
  1631  001AD2  0100               	movlb	0	; () banked
  1632  001AD4  6F63               	movwf	(_width+1)& (0+255),b
  1633  001AD6  0E00               	movlw	0
  1634  001AD8  6F62               	movwf	_width& (0+255),b
  1635  001ADA  C062  F066         	movff	_width,_flags
  1636  001ADE  C063  F067         	movff	_width+1,_flags+1
  1637  001AE2                     
  1638                           ; BSR set to: 0
  1639                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1640  001AE2  6964               	setf	_prec& (0+255),b
  1641  001AE4  6965               	setf	(_prec+1)& (0+255),b
  1642  001AE6                     
  1643                           ; BSR set to: 0
  1644                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1645  001AE6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1646  001AEA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1647  001AEE  CFDE FFF6          	movff	postinc2,tblptrl
  1648  001AF2  CFDD FFF7          	movff	postdec2,tblptrh
  1649  001AF6                     	if	0	;tblptru may be non-zero
  1650  001AF6                     	endif
  1651  001AF6                     	if	0	;tblptru may be non-zero
  1652  001AF6                     	endif
  1653  001AF6  0008               	tblrd		*
  1654  001AF8  50F5               	movf	tablat,w,c
  1655  001AFA  0A78               	xorlw	120
  1656  001AFC  B4D8               	btfsc	status,2,c
  1657  001AFE  EF83  F00D         	goto	u3111
  1658  001B02  EF85  F00D         	goto	u3110
  1659  001B06                     u3111:
  1660  001B06  EF97  F00D         	goto	l3316
  1661  001B0A                     u3110:
  1662  001B0A                     
  1663                           ; BSR set to: 0
  1664  001B0A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1665  001B0E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1666  001B12  CFDE FFF6          	movff	postinc2,tblptrl
  1667  001B16  CFDD FFF7          	movff	postdec2,tblptrh
  1668  001B1A                     	if	0	;tblptru may be non-zero
  1669  001B1A                     	endif
  1670  001B1A                     	if	0	;tblptru may be non-zero
  1671  001B1A                     	endif
  1672  001B1A  0008               	tblrd		*
  1673  001B1C  50F5               	movf	tablat,w,c
  1674  001B1E  0A58               	xorlw	88
  1675  001B20  A4D8               	btfss	status,2,c
  1676  001B22  EF95  F00D         	goto	u3121
  1677  001B26  EF97  F00D         	goto	u3120
  1678  001B2A                     u3121:
  1679  001B2A  EFE5  F00D         	goto	l3326
  1680  001B2E                     u3120:
  1681  001B2E                     l3316:
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  1685  001B2E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1686  001B32  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1687  001B36  CFDE FFF6          	movff	postinc2,tblptrl
  1688  001B3A  CFDD FFF7          	movff	postdec2,tblptrh
  1689  001B3E                     	if	0	;tblptru may be non-zero
  1690  001B3E                     	endif
  1691  001B3E                     	if	0	;tblptru may be non-zero
  1692  001B3E                     	endif
  1693  001B3E  0008               	tblrd		*
  1694  001B40  CFF5 F051          	movff	tablat,vfpfcnvrt@c
  1695  001B44                     
  1696                           ; BSR set to: 0
  1697                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  1698  001B44  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1699  001B48  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1700  001B4C  2ADE               	incf	postinc2,f,c
  1701  001B4E  0E00               	movlw	0
  1702  001B50  22DD               	addwfc	postdec2,f,c
  1703  001B52                     
  1704                           ; BSR set to: 0
  1705                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1706  001B52  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1707  001B56  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1708  001B5A  CFDF F045          	movff	indf2,??_vfpfcnvrt
  1709  001B5E  0E02               	movlw	2
  1710  001B60  26DE               	addwf	postinc2,f,c
  1711  001B62  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  1712  001B66  0E00               	movlw	0
  1713  001B68  22DD               	addwfc	postdec2,f,c
  1714  001B6A  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1715  001B6E  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1716  001B72  CFDE F047          	movff	postinc2,??_vfpfcnvrt+2
  1717  001B76  CFDD F048          	movff	postdec2,??_vfpfcnvrt+3
  1718  001B7A  C047  F049         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1719  001B7E  C048  F04A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1720  001B82  6A4B               	clrf	(vfpfcnvrt@llu+2)^0,c
  1721  001B84  6A4C               	clrf	(vfpfcnvrt@llu+3)^0,c
  1722  001B86  6A4D               	clrf	(vfpfcnvrt@llu+4)^0,c
  1723  001B88  6A4E               	clrf	(vfpfcnvrt@llu+5)^0,c
  1724  001B8A  6A4F               	clrf	(vfpfcnvrt@llu+6)^0,c
  1725  001B8C  6A50               	clrf	(vfpfcnvrt@llu+7)^0,c
  1726  001B8E                     
  1727                           ; BSR set to: 0
  1728                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  1729  001B8E  C03F  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  1730  001B92  C040  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1731  001B96  C049  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  1732  001B9A  C04A  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1733  001B9E  C04B  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1734  001BA2  C04C  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1735  001BA6  C04D  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1736  001BAA  C04E  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1737  001BAE  C04F  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1738  001BB2  C050  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1739  001BB6  C051  F026         	movff	vfpfcnvrt@c,xtoa@x
  1740  001BBA  EC3E  F008         	call	_xtoa	;wreg free
  1741  001BBE  C01C  F03F         	movff	?_xtoa,?_vfpfcnvrt
  1742  001BC2  C01D  F040         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1743  001BC6  EF36  F00E         	goto	l1199
  1744  001BCA                     l3326:
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1748  001BCA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1749  001BCE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1750  001BD2  CFDE FFF6          	movff	postinc2,tblptrl
  1751  001BD6  CFDD FFF7          	movff	postdec2,tblptrh
  1752  001BDA                     	if	0	;tblptru may be non-zero
  1753  001BDA                     	endif
  1754  001BDA                     	if	0	;tblptru may be non-zero
  1755  001BDA                     	endif
  1756  001BDA  0008               	tblrd		*
  1757  001BDC  50F5               	movf	tablat,w,c
  1758  001BDE  0A25               	xorlw	37
  1759  001BE0  A4D8               	btfss	status,2,c
  1760  001BE2  EFF5  F00D         	goto	u3131
  1761  001BE6  EFF7  F00D         	goto	u3130
  1762  001BEA                     u3131:
  1763  001BEA  EF0E  F00E         	goto	l3336
  1764  001BEE                     u3130:
  1765  001BEE                     
  1766                           ; BSR set to: 0
  1767                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1768  001BEE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1769  001BF2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1770  001BF6  2ADE               	incf	postinc2,f,c
  1771  001BF8  0E00               	movlw	0
  1772  001BFA  22DD               	addwfc	postdec2,f,c
  1773  001BFC                     
  1774                           ; BSR set to: 0
  1775                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1776  001BFC  0E00               	movlw	0
  1777  001BFE  6E02               	movwf	(fputc@c+1)^0,c
  1778  001C00  0E25               	movlw	37
  1779  001C02  6E01               	movwf	fputc@c^0,c
  1780  001C04  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1781  001C08  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1782  001C0C  EC0B  F010         	call	_fputc	;wreg free
  1783  001C10                     l3332:
  1784                           
  1785                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1786  001C10  0E00               	movlw	0
  1787  001C12  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
  1788  001C14  0E01               	movlw	1
  1789  001C16  6E3F               	movwf	?_vfpfcnvrt^0,c
  1790  001C18  EF36  F00E         	goto	l1199
  1791  001C1C                     l3336:
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1795  001C1C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1796  001C20  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1797  001C24  2ADE               	incf	postinc2,f,c
  1798  001C26  0E00               	movlw	0
  1799  001C28  22DD               	addwfc	postdec2,f,c
  1800  001C2A                     
  1801                           ; BSR set to: 0
  1802                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1803  001C2A  0E00               	movlw	0
  1804  001C2C  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
  1805  001C2E  0E00               	movlw	0
  1806  001C30  6E3F               	movwf	?_vfpfcnvrt^0,c
  1807  001C32  EF36  F00E         	goto	l1199
  1808  001C36                     l3342:
  1809                           
  1810                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1811  001C36  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1812  001C3A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1813  001C3E  CFDE FFF6          	movff	postinc2,tblptrl
  1814  001C42  CFDD FFF7          	movff	postdec2,tblptrh
  1815  001C46                     	if	0	;tblptru may be non-zero
  1816  001C46                     	endif
  1817  001C46                     	if	0	;tblptru may be non-zero
  1818  001C46                     	endif
  1819  001C46  0008               	tblrd		*
  1820  001C48  50F5               	movf	tablat,w,c
  1821  001C4A  6E01               	movwf	fputc@c^0,c
  1822  001C4C  6A02               	clrf	(fputc@c+1)^0,c
  1823  001C4E  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1824  001C52  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1825  001C56  EC0B  F010         	call	_fputc	;wreg free
  1826  001C5A                     
  1827                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1828  001C5A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1829  001C5E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1830  001C62  2ADE               	incf	postinc2,f,c
  1831  001C64  0E00               	movlw	0
  1832  001C66  22DD               	addwfc	postdec2,f,c
  1833  001C68  EF08  F00E         	goto	l3332
  1834  001C6C                     l1199:
  1835  001C6C  0012               	return		;funcret
  1836  001C6E                     __end_of_vfpfcnvrt:
  1837                           	callstack 0
  1838                           
  1839 ;; *************** function _xtoa *****************
  1840 ;; Defined at:
  1841 ;;		line 645 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1844 ;;		 -> sprintf@f(11), 
  1845 ;;  d               8   29[COMRAM] unsigned long long 
  1846 ;;  x               1   37[COMRAM] unsigned char 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  n               8   50[COMRAM] unsigned long long 
  1849 ;;  c               2   60[COMRAM] int 
  1850 ;;  i               2   58[COMRAM] int 
  1851 ;;  w               2   48[COMRAM] int 
  1852 ;;  p               2   46[COMRAM] int 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  2   27[COMRAM] int 
  1855 ;; Registers used:
  1856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1862 ;;      Params:        11       0       0       0       0       0       0       0       0
  1863 ;;      Locals:        16       0       0       0       0       0       0       0       0
  1864 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1865 ;;      Totals:        35       0       0       0       0       0       0       0       0
  1866 ;;Total ram usage:       35 bytes
  1867 ;; Hardware stack levels used: 1
  1868 ;; Hardware stack levels required when called: 4
  1869 ;; This function calls:
  1870 ;;		_isalpha
  1871 ;;		_isupper
  1872 ;;		_pad
  1873 ;;		_toupper
  1874 ;; This function is called by:
  1875 ;;		_vfpfcnvrt
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text4
  1880  00107C                     __ptext4:
  1881                           	callstack 0
  1882  00107C                     _xtoa:
  1883                           	callstack 23
  1884  00107C                     
  1885                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);D:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;D:\Program Files\Microchip\xc8\v2.36\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;D:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  1886  00107C  0100               	movlb	0	; () banked
  1887  00107E  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1888  001080  EF44  F008         	goto	u2711
  1889  001084  EF46  F008         	goto	u2710
  1890  001088                     u2711:
  1891  001088  EF47  F008         	goto	l3064
  1892  00108C                     u2710:
  1893  00108C                     
  1894                           ; BSR set to: 0
  1895                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  1896  00108C  9366               	bcf	_flags& (0+255),1,b
  1897  00108E                     l3064:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  1901  00108E  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1902  001090  EF54  F008         	goto	u2720
  1903  001094  5165               	movf	(_prec+1)& (0+255),w,b
  1904  001096  E106               	bnz	u2721
  1905  001098  0564               	decf	_prec& (0+255),w,b
  1906  00109A  B0D8               	btfsc	status,0,c
  1907  00109C  EF52  F008         	goto	u2721
  1908  0010A0  EF54  F008         	goto	u2720
  1909  0010A4                     u2721:
  1910  0010A4  EF5A  F008         	goto	l1171
  1911  0010A8                     u2720:
  1912  0010A8                     
  1913                           ; BSR set to: 0
  1914  0010A8  0E00               	movlw	0
  1915  0010AA  6E30               	movwf	(xtoa@p+1)^0,c
  1916  0010AC  0E01               	movlw	1
  1917  0010AE  6E2F               	movwf	xtoa@p^0,c
  1918  0010B0  EF5E  F008         	goto	l1173
  1919  0010B4                     l1171:
  1920                           
  1921                           ; BSR set to: 0
  1922  0010B4  C064  F02F         	movff	_prec,xtoa@p
  1923  0010B8  C065  F030         	movff	_prec+1,xtoa@p+1
  1924  0010BC                     l1173:
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  1928  0010BC  C062  F031         	movff	_width,xtoa@w
  1929  0010C0  C063  F032         	movff	_width+1,xtoa@w+1
  1930                           
  1931                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  1932  0010C4  A966               	btfss	_flags& (0+255),4,b
  1933  0010C6  EF67  F008         	goto	u2731
  1934  0010CA  EF69  F008         	goto	u2730
  1935  0010CE                     u2731:
  1936  0010CE  EF6D  F008         	goto	l3070
  1937  0010D2                     u2730:
  1938  0010D2                     
  1939                           ; BSR set to: 0
  1940                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  1941  0010D2  0EFE               	movlw	254
  1942  0010D4  2631               	addwf	xtoa@w^0,f,c
  1943  0010D6  0EFF               	movlw	255
  1944  0010D8  2232               	addwfc	(xtoa@w+1)^0,f,c
  1945  0010DA                     l3070:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 661:     n = d;
  1949  0010DA  C01E  F033         	movff	xtoa@d,xtoa@n
  1950  0010DE  C01F  F034         	movff	xtoa@d+1,xtoa@n+1
  1951  0010E2  C020  F035         	movff	xtoa@d+2,xtoa@n+2
  1952  0010E6  C021  F036         	movff	xtoa@d+3,xtoa@n+3
  1953  0010EA  C022  F037         	movff	xtoa@d+4,xtoa@n+4
  1954  0010EE  C023  F038         	movff	xtoa@d+5,xtoa@n+5
  1955  0010F2  C024  F039         	movff	xtoa@d+6,xtoa@n+6
  1956  0010F6  C025  F03A         	movff	xtoa@d+7,xtoa@n+7
  1957  0010FA                     
  1958                           ; BSR set to: 0
  1959                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  1960  0010FA  0E00               	movlw	0
  1961  0010FC  6E3C               	movwf	(xtoa@i+1)^0,c
  1962  0010FE  0E1F               	movlw	31
  1963  001100  6E3B               	movwf	xtoa@i^0,c
  1964  001102                     
  1965                           ; BSR set to: 0
  1966                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  1967  001102  0E00               	movlw	0
  1968  001104  6F8B               	movwf	(_dbuf+31)& (0+255),b
  1969                           
  1970                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1971  001106  EF1E  F009         	goto	l3106
  1972  00110A                     l3076:
  1973                           
  1974                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 665:         --i;
  1975  00110A  063B               	decf	xtoa@i^0,f,c
  1976  00110C  A0D8               	btfss	status,0,c
  1977  00110E  063C               	decf	(xtoa@i+1)^0,f,c
  1978  001110                     
  1979                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  1980  001110  0E0F               	movlw	15
  1981  001112  1433               	andwf	xtoa@n^0,w,c
  1982  001114  6E3D               	movwf	xtoa@c^0,c
  1983  001116  6A3E               	clrf	(xtoa@c+1)^0,c
  1984  001118                     
  1985                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  1986  001118  BE3E               	btfsc	(xtoa@c+1)^0,7,c
  1987  00111A  EF98  F008         	goto	u2741
  1988  00111E  503E               	movf	(xtoa@c+1)^0,w,c
  1989  001120  E109               	bnz	u2740
  1990  001122  0E0A               	movlw	10
  1991  001124  5C3D               	subwf	xtoa@c^0,w,c
  1992  001126  A0D8               	btfss	status,0,c
  1993  001128  EF98  F008         	goto	u2741
  1994  00112C  EF9A  F008         	goto	u2740
  1995  001130                     u2741:
  1996  001130  EFA2  F008         	goto	l3084
  1997  001134                     u2740:
  1998  001134  0E57               	movlw	87
  1999  001136  243D               	addwf	xtoa@c^0,w,c
  2000  001138  6E3D               	movwf	xtoa@c^0,c
  2001  00113A  0E00               	movlw	0
  2002  00113C  203E               	addwfc	(xtoa@c+1)^0,w,c
  2003  00113E  6E3E               	movwf	(xtoa@c+1)^0,c
  2004  001140  EFA8  F008         	goto	l3088
  2005  001144                     l3084:
  2006  001144  0E30               	movlw	48
  2007  001146  243D               	addwf	xtoa@c^0,w,c
  2008  001148  6E3D               	movwf	xtoa@c^0,c
  2009  00114A  0E00               	movlw	0
  2010  00114C  203E               	addwfc	(xtoa@c+1)^0,w,c
  2011  00114E  6E3E               	movwf	(xtoa@c+1)^0,c
  2012  001150                     l3088:
  2013  001150  0EBF               	movlw	191
  2014  001152  6E27               	movwf	??_xtoa^0,c
  2015  001154  0EFF               	movlw	255
  2016  001156  6E28               	movwf	(??_xtoa+1)^0,c
  2017  001158  5026               	movf	xtoa@x^0,w,c
  2018  00115A  6E29               	movwf	(??_xtoa+2)^0,c
  2019  00115C  6A2A               	clrf	(??_xtoa+3)^0,c
  2020  00115E  5027               	movf	??_xtoa^0,w,c
  2021  001160  2629               	addwf	(??_xtoa+2)^0,f,c
  2022  001162  5028               	movf	(??_xtoa+1)^0,w,c
  2023  001164  222A               	addwfc	(??_xtoa+3)^0,f,c
  2024  001166  502A               	movf	(??_xtoa+3)^0,w,c
  2025  001168  E107               	bnz	u2751
  2026  00116A  0E1A               	movlw	26
  2027  00116C  5C29               	subwf	(??_xtoa+2)^0,w,c
  2028  00116E  B0D8               	btfsc	status,0,c
  2029  001170  EFBC  F008         	goto	u2751
  2030  001174  EFBE  F008         	goto	u2750
  2031  001178                     u2751:
  2032  001178  EFE1  F008         	goto	l3098
  2033  00117C                     u2750:
  2034  00117C  0E9F               	movlw	159
  2035  00117E  6E27               	movwf	??_xtoa^0,c
  2036  001180  0EFF               	movlw	255
  2037  001182  6E28               	movwf	(??_xtoa+1)^0,c
  2038  001184  0E20               	movlw	32
  2039  001186  103D               	iorwf	xtoa@c^0,w,c
  2040  001188  6E29               	movwf	(??_xtoa+2)^0,c
  2041  00118A  0E00               	movlw	0
  2042  00118C  103E               	iorwf	(xtoa@c+1)^0,w,c
  2043  00118E  6E2A               	movwf	(??_xtoa+3)^0,c
  2044  001190  5027               	movf	??_xtoa^0,w,c
  2045  001192  2629               	addwf	(??_xtoa+2)^0,f,c
  2046  001194  5028               	movf	(??_xtoa+1)^0,w,c
  2047  001196  222A               	addwfc	(??_xtoa+3)^0,f,c
  2048  001198  502A               	movf	(??_xtoa+3)^0,w,c
  2049  00119A  E107               	bnz	u2761
  2050  00119C  0E1A               	movlw	26
  2051  00119E  5C29               	subwf	(??_xtoa+2)^0,w,c
  2052  0011A0  B0D8               	btfsc	status,0,c
  2053  0011A2  EFD5  F008         	goto	u2761
  2054  0011A6  EFD7  F008         	goto	u2760
  2055  0011AA                     u2761:
  2056  0011AA  EFE1  F008         	goto	l3098
  2057  0011AE                     u2760:
  2058  0011AE                     
  2059                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  2060  0011AE  C03D  F007         	movff	xtoa@c,toupper@c
  2061  0011B2  C03E  F008         	movff	xtoa@c+1,toupper@c+1
  2062  0011B6  ECDE  F016         	call	_toupper	;wreg free
  2063  0011BA  C007  F03D         	movff	?_toupper,xtoa@c
  2064  0011BE  C008  F03E         	movff	?_toupper+1,xtoa@c+1
  2065  0011C2                     l3098:
  2066                           
  2067                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  2068  0011C2  0E6C               	movlw	low _dbuf
  2069  0011C4  243B               	addwf	xtoa@i^0,w,c
  2070  0011C6  6ED9               	movwf	fsr2l,c
  2071  0011C8  0E00               	movlw	high _dbuf
  2072  0011CA  203C               	addwfc	(xtoa@i+1)^0,w,c
  2073  0011CC  6EDA               	movwf	fsr2h,c
  2074  0011CE  C03D  FFDF         	movff	xtoa@c,indf2
  2075  0011D2                     
  2076                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 672:         --p;
  2077  0011D2  062F               	decf	xtoa@p^0,f,c
  2078  0011D4  A0D8               	btfss	status,0,c
  2079  0011D6  0630               	decf	(xtoa@p+1)^0,f,c
  2080  0011D8                     
  2081                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 673:         --w;
  2082  0011D8  0631               	decf	xtoa@w^0,f,c
  2083  0011DA  A0D8               	btfss	status,0,c
  2084  0011DC  0632               	decf	(xtoa@w+1)^0,f,c
  2085  0011DE                     
  2086                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  2087  0011DE  C033  F027         	movff	xtoa@n,??_xtoa
  2088  0011E2  C034  F028         	movff	xtoa@n+1,??_xtoa+1
  2089  0011E6  C035  F029         	movff	xtoa@n+2,??_xtoa+2
  2090  0011EA  C036  F02A         	movff	xtoa@n+3,??_xtoa+3
  2091  0011EE  C037  F02B         	movff	xtoa@n+4,??_xtoa+4
  2092  0011F2  C038  F02C         	movff	xtoa@n+5,??_xtoa+5
  2093  0011F6  C039  F02D         	movff	xtoa@n+6,??_xtoa+6
  2094  0011FA  C03A  F02E         	movff	xtoa@n+7,??_xtoa+7
  2095  0011FE  0E05               	movlw	5
  2096  001200  EF0B  F009         	goto	u2770
  2097  001204                     u2775:
  2098  001204  90D8               	bcf	status,0,c
  2099  001206  322E               	rrcf	(??_xtoa+7)^0,f,c
  2100  001208  322D               	rrcf	(??_xtoa+6)^0,f,c
  2101  00120A  322C               	rrcf	(??_xtoa+5)^0,f,c
  2102  00120C  322B               	rrcf	(??_xtoa+4)^0,f,c
  2103  00120E  322A               	rrcf	(??_xtoa+3)^0,f,c
  2104  001210  3229               	rrcf	(??_xtoa+2)^0,f,c
  2105  001212  3228               	rrcf	(??_xtoa+1)^0,f,c
  2106  001214  3227               	rrcf	??_xtoa^0,f,c
  2107  001216                     u2770:
  2108  001216  2EE8               	decfsz	wreg,f,c
  2109  001218  EF02  F009         	goto	u2775
  2110  00121C  C027  F033         	movff	??_xtoa,xtoa@n
  2111  001220  C028  F034         	movff	??_xtoa+1,xtoa@n+1
  2112  001224  C029  F035         	movff	??_xtoa+2,xtoa@n+2
  2113  001228  C02A  F036         	movff	??_xtoa+3,xtoa@n+3
  2114  00122C  C02B  F037         	movff	??_xtoa+4,xtoa@n+4
  2115  001230  C02C  F038         	movff	??_xtoa+5,xtoa@n+5
  2116  001234  C02D  F039         	movff	??_xtoa+6,xtoa@n+6
  2117  001238  C02E  F03A         	movff	??_xtoa+7,xtoa@n+7
  2118  00123C                     l3106:
  2119                           
  2120                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2121  00123C  BE3C               	btfsc	(xtoa@i+1)^0,7,c
  2122  00123E  EF2A  F009         	goto	u2781
  2123  001242  503C               	movf	(xtoa@i+1)^0,w,c
  2124  001244  E109               	bnz	u2780
  2125  001246  0E02               	movlw	2
  2126  001248  5C3B               	subwf	xtoa@i^0,w,c
  2127  00124A  A0D8               	btfss	status,0,c
  2128  00124C  EF2A  F009         	goto	u2781
  2129  001250  EF2C  F009         	goto	u2780
  2130  001254                     u2781:
  2131  001254  EF5D  F009         	goto	l1190
  2132  001258                     u2780:
  2133  001258  5033               	movf	xtoa@n^0,w,c
  2134  00125A  1034               	iorwf	(xtoa@n+1)^0,w,c
  2135  00125C  1035               	iorwf	(xtoa@n+2)^0,w,c
  2136  00125E  1036               	iorwf	(xtoa@n+3)^0,w,c
  2137  001260  1037               	iorwf	(xtoa@n+4)^0,w,c
  2138  001262  1038               	iorwf	(xtoa@n+5)^0,w,c
  2139  001264  1039               	iorwf	(xtoa@n+6)^0,w,c
  2140  001266  103A               	iorwf	(xtoa@n+7)^0,w,c
  2141  001268  A4D8               	btfss	status,2,c
  2142  00126A  EF39  F009         	goto	u2791
  2143  00126E  EF3B  F009         	goto	u2790
  2144  001272                     u2791:
  2145  001272  EF85  F008         	goto	l3076
  2146  001276                     u2790:
  2147  001276  BE30               	btfsc	(xtoa@p+1)^0,7,c
  2148  001278  EF48  F009         	goto	u2800
  2149  00127C  5030               	movf	(xtoa@p+1)^0,w,c
  2150  00127E  E106               	bnz	u2801
  2151  001280  042F               	decf	xtoa@p^0,w,c
  2152  001282  B0D8               	btfsc	status,0,c
  2153  001284  EF46  F009         	goto	u2801
  2154  001288  EF48  F009         	goto	u2800
  2155  00128C                     u2801:
  2156  00128C  EF85  F008         	goto	l3076
  2157  001290                     u2800:
  2158  001290  BE32               	btfsc	(xtoa@w+1)^0,7,c
  2159  001292  EF53  F009         	goto	u2811
  2160  001296  5032               	movf	(xtoa@w+1)^0,w,c
  2161  001298  E108               	bnz	u2810
  2162  00129A  0431               	decf	xtoa@w^0,w,c
  2163  00129C  A0D8               	btfss	status,0,c
  2164  00129E  EF53  F009         	goto	u2811
  2165  0012A2  EF55  F009         	goto	u2810
  2166  0012A6                     u2811:
  2167  0012A6  EF5D  F009         	goto	l1190
  2168  0012AA                     u2810:
  2169  0012AA  0100               	movlb	0	; () banked
  2170  0012AC  B366               	btfsc	_flags& (0+255),1,b
  2171  0012AE  EF5B  F009         	goto	u2821
  2172  0012B2  EF5D  F009         	goto	u2820
  2173  0012B6                     u2821:
  2174  0012B6  EF85  F008         	goto	l3076
  2175  0012BA                     u2820:
  2176  0012BA                     l1190:
  2177                           
  2178                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  2179  0012BA  0100               	movlb	0	; () banked
  2180  0012BC  A966               	btfss	_flags& (0+255),4,b
  2181  0012BE  EF63  F009         	goto	u2831
  2182  0012C2  EF65  F009         	goto	u2830
  2183  0012C6                     u2831:
  2184  0012C6  EF7B  F009         	goto	l3122
  2185  0012CA                     u2830:
  2186  0012CA                     
  2187                           ; BSR set to: 0
  2188                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 679:         --i;
  2189  0012CA  063B               	decf	xtoa@i^0,f,c
  2190  0012CC  A0D8               	btfss	status,0,c
  2191  0012CE  063C               	decf	(xtoa@i+1)^0,f,c
  2192  0012D0                     
  2193                           ; BSR set to: 0
  2194                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  2195  0012D0  0E6C               	movlw	low _dbuf
  2196  0012D2  243B               	addwf	xtoa@i^0,w,c
  2197  0012D4  6ED9               	movwf	fsr2l,c
  2198  0012D6  0E00               	movlw	high _dbuf
  2199  0012D8  203C               	addwfc	(xtoa@i+1)^0,w,c
  2200  0012DA  6EDA               	movwf	fsr2h,c
  2201  0012DC  C026  FFDF         	movff	xtoa@x,indf2
  2202  0012E0                     
  2203                           ; BSR set to: 0
  2204                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 681:         --i;
  2205  0012E0  063B               	decf	xtoa@i^0,f,c
  2206  0012E2  A0D8               	btfss	status,0,c
  2207  0012E4  063C               	decf	(xtoa@i+1)^0,f,c
  2208                           
  2209                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  2210  0012E6  0E6C               	movlw	low _dbuf
  2211  0012E8  243B               	addwf	xtoa@i^0,w,c
  2212  0012EA  6ED9               	movwf	fsr2l,c
  2213  0012EC  0E00               	movlw	high _dbuf
  2214  0012EE  203C               	addwfc	(xtoa@i+1)^0,w,c
  2215  0012F0  6EDA               	movwf	fsr2h,c
  2216  0012F2  0E30               	movlw	48
  2217  0012F4  6EDF               	movwf	indf2,c
  2218  0012F6                     l3122:
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  2222  0012F6  C01C  F011         	movff	xtoa@fp,pad@fp
  2223  0012FA  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  2224  0012FE  0E6C               	movlw	low _dbuf
  2225  001300  243B               	addwf	xtoa@i^0,w,c
  2226  001302  6E13               	movwf	pad@buf^0,c
  2227  001304  0E00               	movlw	high _dbuf
  2228  001306  203C               	addwfc	(xtoa@i+1)^0,w,c
  2229  001308  6E14               	movwf	(pad@buf+1)^0,c
  2230  00130A  C031  F015         	movff	xtoa@w,pad@p
  2231  00130E  C032  F016         	movff	xtoa@w+1,pad@p+1
  2232  001312  EC70  F010         	call	_pad	;wreg free
  2233  001316  C011  F01C         	movff	?_pad,?_xtoa
  2234  00131A  C012  F01D         	movff	?_pad+1,?_xtoa+1
  2235  00131E  0012               	return		;funcret
  2236  001320                     __end_of_xtoa:
  2237                           	callstack 0
  2238                           
  2239 ;; *************** function _toupper *****************
  2240 ;; Defined at:
  2241 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\toupper.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  c               2    6[COMRAM] int 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;		None
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  2    6[COMRAM] int 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2255 ;;      Params:         2       0       0       0       0       0       0       0       0
  2256 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2257 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2258 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2259 ;;Total ram usage:        6 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 1
  2262 ;; This function calls:
  2263 ;;		_islower
  2264 ;; This function is called by:
  2265 ;;		_xtoa
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text5
  2270  002DBC                     __ptext5:
  2271                           	callstack 0
  2272  002DBC                     _toupper:
  2273                           	callstack 25
  2274  002DBC  0E9F               	movlw	159
  2275  002DBE  6E09               	movwf	??_toupper^0,c
  2276  002DC0  0EFF               	movlw	255
  2277  002DC2  6E0A               	movwf	(??_toupper+1)^0,c
  2278  002DC4  C007  F00B         	movff	toupper@c,??_toupper+2
  2279  002DC8  C008  F00C         	movff	toupper@c+1,??_toupper+3
  2280  002DCC  5009               	movf	??_toupper^0,w,c
  2281  002DCE  260B               	addwf	(??_toupper+2)^0,f,c
  2282  002DD0  500A               	movf	(??_toupper+1)^0,w,c
  2283  002DD2  220C               	addwfc	(??_toupper+3)^0,f,c
  2284  002DD4  500C               	movf	(??_toupper+3)^0,w,c
  2285  002DD6  E107               	bnz	u2701
  2286  002DD8  0E1A               	movlw	26
  2287  002DDA  5C0B               	subwf	(??_toupper+2)^0,w,c
  2288  002DDC  B0D8               	btfsc	status,0,c
  2289  002DDE  EFF3  F016         	goto	u2701
  2290  002DE2  EFF5  F016         	goto	u2700
  2291  002DE6                     u2701:
  2292  002DE6  EFFB  F016         	goto	l1252
  2293  002DEA                     u2700:
  2294  002DEA  0E5F               	movlw	95
  2295  002DEC  1407               	andwf	toupper@c^0,w,c
  2296  002DEE  6E07               	movwf	?_toupper^0,c
  2297  002DF0  6A08               	clrf	(?_toupper+1)^0,c
  2298  002DF2  EFFF  F016         	goto	l1255
  2299  002DF6                     l1252:
  2300  002DF6  C007  F007         	movff	toupper@c,?_toupper
  2301  002DFA  C008  F008         	movff	toupper@c+1,?_toupper+1
  2302  002DFE                     l1255:
  2303  002DFE  0012               	return		;funcret
  2304  002E00                     __end_of_toupper:
  2305                           	callstack 0
  2306                           
  2307 ;; *************** function _islower *****************
  2308 ;; Defined at:
  2309 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\islower.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;  c               2    0[COMRAM] int 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;		None
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  2    0[COMRAM] int 
  2316 ;; Registers used:
  2317 ;;		wreg, status,2, status,0
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2323 ;;      Params:         2       0       0       0       0       0       0       0       0
  2324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2325 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2326 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2327 ;;Total ram usage:        6 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		_toupper
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text6
  2337  002E80                     __ptext6:
  2338                           	callstack 0
  2339  002E80                     _islower:
  2340                           	callstack 25
  2341  002E80  0E9F               	movlw	159
  2342  002E82  6E03               	movwf	??_islower^0,c
  2343  002E84  0EFF               	movlw	255
  2344  002E86  6E04               	movwf	(??_islower+1)^0,c
  2345  002E88  C001  F005         	movff	islower@c,??_islower+2
  2346  002E8C  C002  F006         	movff	islower@c+1,??_islower+3
  2347  002E90  5003               	movf	??_islower^0,w,c
  2348  002E92  2605               	addwf	(??_islower+2)^0,f,c
  2349  002E94  5004               	movf	(??_islower+1)^0,w,c
  2350  002E96  2206               	addwfc	(??_islower+3)^0,f,c
  2351  002E98  5006               	movf	(??_islower+3)^0,w,c
  2352  002E9A  E10A               	bnz	u2320
  2353  002E9C  0E1A               	movlw	26
  2354  002E9E  5C05               	subwf	(??_islower+2)^0,w,c
  2355  002EA0  A0D8               	btfss	status,0,c
  2356  002EA2  EF55  F017         	goto	u2321
  2357  002EA6  EF58  F017         	goto	u2320
  2358  002EAA                     u2321:
  2359  002EAA  0E01               	movlw	1
  2360  002EAC  EF59  F017         	goto	u2330
  2361  002EB0                     u2320:
  2362  002EB0  0E00               	movlw	0
  2363  002EB2                     u2330:
  2364  002EB2  6E01               	movwf	?_islower^0,c
  2365  002EB4  6A02               	clrf	(?_islower+1)^0,c
  2366  002EB6  0012               	return		;funcret
  2367  002EB8                     __end_of_islower:
  2368                           	callstack 0
  2369                           
  2370 ;; *************** function _pad *****************
  2371 ;; Defined at:
  2372 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2375 ;;		 -> sprintf@f(11), 
  2376 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2377 ;;		 -> dbuf(32), 
  2378 ;;  p               2   20[COMRAM] int 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;  w               2   25[COMRAM] int 
  2381 ;;  i               2   23[COMRAM] int 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  2   16[COMRAM] int 
  2384 ;; Registers used:
  2385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2391 ;;      Params:         6       0       0       0       0       0       0       0       0
  2392 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2393 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2394 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2395 ;;Total ram usage:       11 bytes
  2396 ;; Hardware stack levels used: 1
  2397 ;; Hardware stack levels required when called: 3
  2398 ;; This function calls:
  2399 ;;		_fputc
  2400 ;;		_fputs
  2401 ;;		_strlen
  2402 ;; This function is called by:
  2403 ;;		_xtoa
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           	psect	text7
  2408  0020E0                     __ptext7:
  2409                           	callstack 0
  2410  0020E0                     _pad:
  2411                           	callstack 23
  2412  0020E0                     
  2413                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2414  0020E0  0100               	movlb	0	; () banked
  2415  0020E2  A166               	btfss	_flags& (0+255),0,b
  2416  0020E4  EF76  F010         	goto	u2621
  2417  0020E8  EF78  F010         	goto	u2620
  2418  0020EC                     u2621:
  2419  0020EC  EF82  F010         	goto	l2998
  2420  0020F0                     u2620:
  2421  0020F0                     
  2422                           ; BSR set to: 0
  2423                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2424  0020F0  C013  F00A         	movff	pad@buf,fputs@s
  2425  0020F4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2426  0020F8  C011  F00C         	movff	pad@fp,fputs@fp
  2427  0020FC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2428  002100  EC00  F017         	call	_fputs	;wreg free
  2429  002104                     l2998:
  2430                           
  2431                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2432  002104  BE16               	btfsc	(pad@p+1)^0,7,c
  2433  002106  EF87  F010         	goto	u2631
  2434  00210A  EF89  F010         	goto	u2630
  2435  00210E                     u2631:
  2436  00210E  EF8F  F010         	goto	l3002
  2437  002112                     u2630:
  2438  002112  C015  F01A         	movff	pad@p,pad@w
  2439  002116  C016  F01B         	movff	pad@p+1,pad@w+1
  2440  00211A  EF93  F010         	goto	l1161
  2441  00211E                     l3002:
  2442  00211E  0E00               	movlw	0
  2443  002120  6E1B               	movwf	(pad@w+1)^0,c
  2444  002122  0E00               	movlw	0
  2445  002124  6E1A               	movwf	pad@w^0,c
  2446  002126                     l1161:
  2447                           
  2448                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2449  002126  0E00               	movlw	0
  2450  002128  6E19               	movwf	(pad@i+1)^0,c
  2451  00212A  0E00               	movlw	0
  2452  00212C  6E18               	movwf	pad@i^0,c
  2453                           
  2454                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2455  00212E  EFA5  F010         	goto	l3008
  2456  002132                     l3004:
  2457                           
  2458                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2459  002132  0E00               	movlw	0
  2460  002134  6E02               	movwf	(fputc@c+1)^0,c
  2461  002136  0E20               	movlw	32
  2462  002138  6E01               	movwf	fputc@c^0,c
  2463  00213A  C011  F003         	movff	pad@fp,fputc@fp
  2464  00213E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2465  002142  EC0B  F010         	call	_fputc	;wreg free
  2466  002146                     
  2467                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2468  002146  4A18               	infsnz	pad@i^0,f,c
  2469  002148  2A19               	incf	(pad@i+1)^0,f,c
  2470  00214A                     l3008:
  2471                           
  2472                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2473  00214A  501A               	movf	pad@w^0,w,c
  2474  00214C  5C18               	subwf	pad@i^0,w,c
  2475  00214E  5019               	movf	(pad@i+1)^0,w,c
  2476  002150  0A80               	xorlw	128
  2477  002152  6E17               	movwf	??_pad^0,c
  2478  002154  501B               	movf	(pad@w+1)^0,w,c
  2479  002156  0A80               	xorlw	128
  2480  002158  5817               	subwfb	??_pad^0,w,c
  2481  00215A  A0D8               	btfss	status,0,c
  2482  00215C  EFB2  F010         	goto	u2641
  2483  002160  EFB4  F010         	goto	u2640
  2484  002164                     u2641:
  2485  002164  EF99  F010         	goto	l3004
  2486  002168                     u2640:
  2487  002168                     
  2488                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2489  002168  0100               	movlb	0	; () banked
  2490  00216A  B166               	btfsc	_flags& (0+255),0,b
  2491  00216C  EFBA  F010         	goto	u2651
  2492  002170  EFBC  F010         	goto	u2650
  2493  002174                     u2651:
  2494  002174  EFC6  F010         	goto	l3012
  2495  002178                     u2650:
  2496  002178                     
  2497                           ; BSR set to: 0
  2498                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2499  002178  C013  F00A         	movff	pad@buf,fputs@s
  2500  00217C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2501  002180  C011  F00C         	movff	pad@fp,fputs@fp
  2502  002184  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2503  002188  EC00  F017         	call	_fputs	;wreg free
  2504  00218C                     l3012:
  2505                           
  2506                           ;D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2507  00218C  C013  F001         	movff	pad@buf,strlen@s
  2508  002190  C014  F002         	movff	pad@buf+1,strlen@s+1
  2509  002194  EC6E  F016         	call	_strlen	;wreg free
  2510  002198  501A               	movf	pad@w^0,w,c
  2511  00219A  2401               	addwf	?_strlen^0,w,c
  2512  00219C  6E11               	movwf	?_pad^0,c
  2513  00219E  501B               	movf	(pad@w+1)^0,w,c
  2514  0021A0  2002               	addwfc	(?_strlen+1)^0,w,c
  2515  0021A2  6E12               	movwf	(?_pad+1)^0,c
  2516  0021A4  0012               	return		;funcret
  2517  0021A6                     __end_of_pad:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _fputs *****************
  2521 ;; Defined at:
  2522 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2525 ;;		 -> dbuf(32), 
  2526 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2527 ;;		 -> sprintf@f(11), 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  i               2   14[COMRAM] int 
  2530 ;;  c               1   13[COMRAM] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  2    9[COMRAM] int 
  2533 ;; Registers used:
  2534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2540 ;;      Params:         4       0       0       0       0       0       0       0       0
  2541 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2543 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2544 ;;Total ram usage:        7 bytes
  2545 ;; Hardware stack levels used: 1
  2546 ;; Hardware stack levels required when called: 2
  2547 ;; This function calls:
  2548 ;;		_fputc
  2549 ;; This function is called by:
  2550 ;;		_pad
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text8
  2555  002E00                     __ptext8:
  2556                           	callstack 0
  2557  002E00                     _fputs:
  2558                           	callstack 23
  2559  002E00  0E00               	movlw	0
  2560  002E02  6E10               	movwf	(fputs@i+1)^0,c
  2561  002E04  0E00               	movlw	0
  2562  002E06  6E0F               	movwf	fputs@i^0,c
  2563  002E08  EF11  F017         	goto	l2824
  2564  002E0C                     l2820:
  2565  002E0C  C00E  F001         	movff	fputs@c,fputc@c
  2566  002E10  6A02               	clrf	(fputc@c+1)^0,c
  2567  002E12  C00C  F003         	movff	fputs@fp,fputc@fp
  2568  002E16  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2569  002E1A  EC0B  F010         	call	_fputc	;wreg free
  2570  002E1E  4A0F               	infsnz	fputs@i^0,f,c
  2571  002E20  2A10               	incf	(fputs@i+1)^0,f,c
  2572  002E22                     l2824:
  2573  002E22  500F               	movf	fputs@i^0,w,c
  2574  002E24  240A               	addwf	fputs@s^0,w,c
  2575  002E26  6ED9               	movwf	fsr2l,c
  2576  002E28  5010               	movf	(fputs@i+1)^0,w,c
  2577  002E2A  200B               	addwfc	(fputs@s+1)^0,w,c
  2578  002E2C  6EDA               	movwf	fsr2h,c
  2579  002E2E  50DF               	movf	indf2,w,c
  2580  002E30  6E0E               	movwf	fputs@c^0,c
  2581  002E32  500E               	movf	fputs@c^0,w,c
  2582  002E34  A4D8               	btfss	status,2,c
  2583  002E36  EF1F  F017         	goto	u2311
  2584  002E3A  EF21  F017         	goto	u2310
  2585  002E3E                     u2311:
  2586  002E3E  EF06  F017         	goto	l2820
  2587  002E42                     u2310:
  2588  002E42  0012               	return		;funcret
  2589  002E44                     __end_of_fputs:
  2590                           	callstack 0
  2591                           
  2592 ;; *************** function _fputc *****************
  2593 ;; Defined at:
  2594 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  c               2    0[COMRAM] int 
  2597 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2598 ;;		 -> sprintf@f(11), 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  2    0[COMRAM] int 
  2603 ;; Registers used:
  2604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2610 ;;      Params:         4       0       0       0       0       0       0       0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2612 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2613 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2614 ;;Total ram usage:        9 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; Hardware stack levels required when called: 1
  2617 ;; This function calls:
  2618 ;;		_putch
  2619 ;; This function is called by:
  2620 ;;		_pad
  2621 ;;		_vfpfcnvrt
  2622 ;;		_fputs
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text9
  2627  002016                     __ptext9:
  2628                           	callstack 0
  2629  002016                     _fputc:
  2630                           	callstack 23
  2631  002016  5003               	movf	fputc@fp^0,w,c
  2632  002018  1004               	iorwf	(fputc@fp+1)^0,w,c
  2633  00201A  B4D8               	btfsc	status,2,c
  2634  00201C  EF12  F010         	goto	u2251
  2635  002020  EF14  F010         	goto	u2250
  2636  002024                     u2251:
  2637  002024  EF1D  F010         	goto	l2798
  2638  002028                     u2250:
  2639  002028  5003               	movf	fputc@fp^0,w,c
  2640  00202A  1004               	iorwf	(fputc@fp+1)^0,w,c
  2641  00202C  A4D8               	btfss	status,2,c
  2642  00202E  EF1B  F010         	goto	u2261
  2643  002032  EF1D  F010         	goto	u2260
  2644  002036                     u2261:
  2645  002036  EF22  F010         	goto	l2800
  2646  00203A                     u2260:
  2647  00203A                     l2798:
  2648  00203A  5001               	movf	fputc@c^0,w,c
  2649  00203C  EC7F  F018         	call	_putch
  2650  002040  EF6F  F010         	goto	l1230
  2651  002044                     l2800:
  2652  002044  EE20 F009          	lfsr	2,9
  2653  002048  5003               	movf	fputc@fp^0,w,c
  2654  00204A  26D9               	addwf	fsr2l,f,c
  2655  00204C  5004               	movf	(fputc@fp+1)^0,w,c
  2656  00204E  22DA               	addwfc	fsr2h,f,c
  2657  002050  50DE               	movf	postinc2,w,c
  2658  002052  10DE               	iorwf	postinc2,w,c
  2659  002054  B4D8               	btfsc	status,2,c
  2660  002056  EF2F  F010         	goto	u2271
  2661  00205A  EF31  F010         	goto	u2270
  2662  00205E                     u2271:
  2663  00205E  EF4C  F010         	goto	l2804
  2664  002062                     u2270:
  2665  002062  EE20 F009          	lfsr	2,9
  2666  002066  5003               	movf	fputc@fp^0,w,c
  2667  002068  26D9               	addwf	fsr2l,f,c
  2668  00206A  5004               	movf	(fputc@fp+1)^0,w,c
  2669  00206C  22DA               	addwfc	fsr2h,f,c
  2670  00206E  EE10 F003          	lfsr	1,3
  2671  002072  5003               	movf	fputc@fp^0,w,c
  2672  002074  26E1               	addwf	fsr1l,f,c
  2673  002076  5004               	movf	(fputc@fp+1)^0,w,c
  2674  002078  22E2               	addwfc	fsr1h,f,c
  2675  00207A  50DE               	movf	postinc2,w,c
  2676  00207C  5CE6               	subwf	postinc1,w,c
  2677  00207E  50E6               	movf	postinc1,w,c
  2678  002080  0A80               	xorlw	128
  2679  002082  6E09               	movwf	(??_fputc+4)^0,c
  2680  002084  50DE               	movf	postinc2,w,c
  2681  002086  0A80               	xorlw	128
  2682  002088  5809               	subwfb	(??_fputc+4)^0,w,c
  2683  00208A  B0D8               	btfsc	status,0,c
  2684  00208C  EF4A  F010         	goto	u2281
  2685  002090  EF4C  F010         	goto	u2280
  2686  002094                     u2281:
  2687  002094  EF6F  F010         	goto	l1230
  2688  002098                     u2280:
  2689  002098                     l2804:
  2690  002098  EE20 F003          	lfsr	2,3
  2691  00209C  5003               	movf	fputc@fp^0,w,c
  2692  00209E  26D9               	addwf	fsr2l,f,c
  2693  0020A0  5004               	movf	(fputc@fp+1)^0,w,c
  2694  0020A2  22DA               	addwfc	fsr2h,f,c
  2695  0020A4  CFDE F005          	movff	postinc2,??_fputc
  2696  0020A8  CFDD F006          	movff	postdec2,??_fputc+1
  2697  0020AC  C003  FFD9         	movff	fputc@fp,fsr2l
  2698  0020B0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2699  0020B4  CFDE F007          	movff	postinc2,??_fputc+2
  2700  0020B8  CFDD F008          	movff	postdec2,??_fputc+3
  2701  0020BC  5005               	movf	??_fputc^0,w,c
  2702  0020BE  2407               	addwf	(??_fputc+2)^0,w,c
  2703  0020C0  6ED9               	movwf	fsr2l,c
  2704  0020C2  5006               	movf	(??_fputc+1)^0,w,c
  2705  0020C4  2008               	addwfc	(??_fputc+3)^0,w,c
  2706  0020C6  6EDA               	movwf	fsr2h,c
  2707  0020C8  C001  FFDF         	movff	fputc@c,indf2
  2708  0020CC  EE20 F003          	lfsr	2,3
  2709  0020D0  5003               	movf	fputc@fp^0,w,c
  2710  0020D2  26D9               	addwf	fsr2l,f,c
  2711  0020D4  5004               	movf	(fputc@fp+1)^0,w,c
  2712  0020D6  22DA               	addwfc	fsr2h,f,c
  2713  0020D8  2ADE               	incf	postinc2,f,c
  2714  0020DA  0E00               	movlw	0
  2715  0020DC  22DD               	addwfc	postdec2,f,c
  2716  0020DE                     l1230:
  2717  0020DE  0012               	return		;funcret
  2718  0020E0                     __end_of_fputc:
  2719                           	callstack 0
  2720                           
  2721 ;; *************** function _putch *****************
  2722 ;; Defined at:
  2723 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  c               1    wreg     unsigned char 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  c               1    0[COMRAM] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2737 ;;      Params:         0       0       0       0       0       0       0       0       0
  2738 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2740 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2741 ;;Total ram usage:        0 bytes
  2742 ;; Hardware stack levels used: 1
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_fputc
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text10
  2751  0030FE                     __ptext10:
  2752                           	callstack 0
  2753  0030FE                     _putch:
  2754                           	callstack 23
  2755  0030FE  0012               	return		;funcret
  2756  003100                     __end_of_putch:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function _isupper *****************
  2760 ;; Defined at:
  2761 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  c               2    0[COMRAM] int 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  2    0[COMRAM] int 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2775 ;;      Params:         2       0       0       0       0       0       0       0       0
  2776 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2777 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2778 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2779 ;;Total ram usage:        6 bytes
  2780 ;; Hardware stack levels used: 1
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_xtoa
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	text11
  2789  002EB8                     __ptext11:
  2790                           	callstack 0
  2791  002EB8                     _isupper:
  2792                           	callstack 26
  2793  002EB8  0EBF               	movlw	191
  2794  002EBA  6E03               	movwf	??_isupper^0,c
  2795  002EBC  0EFF               	movlw	255
  2796  002EBE  6E04               	movwf	(??_isupper+1)^0,c
  2797  002EC0  C001  F005         	movff	isupper@c,??_isupper+2
  2798  002EC4  C002  F006         	movff	isupper@c+1,??_isupper+3
  2799  002EC8  5003               	movf	??_isupper^0,w,c
  2800  002ECA  2605               	addwf	(??_isupper+2)^0,f,c
  2801  002ECC  5004               	movf	(??_isupper+1)^0,w,c
  2802  002ECE  2206               	addwfc	(??_isupper+3)^0,f,c
  2803  002ED0  5006               	movf	(??_isupper+3)^0,w,c
  2804  002ED2  E10A               	bnz	u2660
  2805  002ED4  0E1A               	movlw	26
  2806  002ED6  5C05               	subwf	(??_isupper+2)^0,w,c
  2807  002ED8  A0D8               	btfss	status,0,c
  2808  002EDA  EF71  F017         	goto	u2661
  2809  002EDE  EF74  F017         	goto	u2660
  2810  002EE2                     u2661:
  2811  002EE2  0E01               	movlw	1
  2812  002EE4  EF75  F017         	goto	u2670
  2813  002EE8                     u2660:
  2814  002EE8  0E00               	movlw	0
  2815  002EEA                     u2670:
  2816  002EEA  6E01               	movwf	?_isupper^0,c
  2817  002EEC  6A02               	clrf	(?_isupper+1)^0,c
  2818  002EEE  0012               	return		;funcret
  2819  002EF0                     __end_of_isupper:
  2820                           	callstack 0
  2821                           
  2822 ;; *************** function _isalpha *****************
  2823 ;; Defined at:
  2824 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isalpha.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  c               2    0[COMRAM] int 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;		None
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  2    0[COMRAM] int 
  2831 ;; Registers used:
  2832 ;;		wreg, status,2, status,0
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2838 ;;      Params:         2       0       0       0       0       0       0       0       0
  2839 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2840 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2841 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2842 ;;Total ram usage:        6 bytes
  2843 ;; Hardware stack levels used: 1
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_xtoa
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text12
  2852  002E44                     __ptext12:
  2853                           	callstack 0
  2854  002E44                     _isalpha:
  2855                           	callstack 26
  2856  002E44  0E9F               	movlw	159
  2857  002E46  6E03               	movwf	??_isalpha^0,c
  2858  002E48  0EFF               	movlw	255
  2859  002E4A  6E04               	movwf	(??_isalpha+1)^0,c
  2860  002E4C  0E20               	movlw	32
  2861  002E4E  1001               	iorwf	isalpha@c^0,w,c
  2862  002E50  6E05               	movwf	(??_isalpha+2)^0,c
  2863  002E52  0E00               	movlw	0
  2864  002E54  1002               	iorwf	(isalpha@c+1)^0,w,c
  2865  002E56  6E06               	movwf	(??_isalpha+3)^0,c
  2866  002E58  5003               	movf	??_isalpha^0,w,c
  2867  002E5A  2605               	addwf	(??_isalpha+2)^0,f,c
  2868  002E5C  5004               	movf	(??_isalpha+1)^0,w,c
  2869  002E5E  2206               	addwfc	(??_isalpha+3)^0,f,c
  2870  002E60  5006               	movf	(??_isalpha+3)^0,w,c
  2871  002E62  E10A               	bnz	u2680
  2872  002E64  0E1A               	movlw	26
  2873  002E66  5C05               	subwf	(??_isalpha+2)^0,w,c
  2874  002E68  A0D8               	btfss	status,0,c
  2875  002E6A  EF39  F017         	goto	u2681
  2876  002E6E  EF3C  F017         	goto	u2680
  2877  002E72                     u2681:
  2878  002E72  0E01               	movlw	1
  2879  002E74  EF3D  F017         	goto	u2690
  2880  002E78                     u2680:
  2881  002E78  0E00               	movlw	0
  2882  002E7A                     u2690:
  2883  002E7A  6E01               	movwf	?_isalpha^0,c
  2884  002E7C  6A02               	clrf	(?_isalpha+1)^0,c
  2885  002E7E  0012               	return		;funcret
  2886  002E80                     __end_of_isalpha:
  2887                           	callstack 0
  2888                           
  2889 ;; *************** function _USART_TxChar *****************
  2890 ;; Defined at:
  2891 ;;		line 96 in file "main.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  out             2    4[COMRAM] PTR unsigned char 
  2894 ;;		 -> STR_4(3), data_buffer(20), STR_1(3), 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  i               1    8[COMRAM] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2906 ;;      Params:         2       0       0       0       0       0       0       0       0
  2907 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2908 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2909 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2910 ;;Total ram usage:        5 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; Hardware stack levels required when called: 1
  2913 ;; This function calls:
  2914 ;;		_strlen
  2915 ;; This function is called by:
  2916 ;;		_main
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text13
  2921  002A26                     __ptext13:
  2922                           	callstack 0
  2923  002A26                     _USART_TxChar:
  2924                           	callstack 29
  2925  002A26                     l113:
  2926  002A26  A89E               	btfss	3998,4,c	;volatile
  2927  002A28  EF18  F015         	goto	u4161
  2928  002A2C  EF1A  F015         	goto	u4160
  2929  002A30                     u4161:
  2930  002A30  EF13  F015         	goto	l113
  2931  002A34                     u4160:
  2932  002A34                     
  2933                           ;main.c: 98:         for (uint8_t i = 0; i < strlen(out); i++) {
  2934  002A34  0E00               	movlw	0
  2935  002A36  6E09               	movwf	USART_TxChar@i^0,c
  2936  002A38  EF36  F015         	goto	l4082
  2937  002A3C                     l4078:
  2938                           
  2939                           ;main.c: 99:             TXREG = out[i];
  2940  002A3C  5009               	movf	USART_TxChar@i^0,w,c
  2941  002A3E  2405               	addwf	USART_TxChar@out^0,w,c
  2942  002A40  6E07               	movwf	??_USART_TxChar^0,c
  2943  002A42  0E00               	movlw	0
  2944  002A44  2006               	addwfc	(USART_TxChar@out+1)^0,w,c
  2945  002A46  6E08               	movwf	(??_USART_TxChar+1)^0,c
  2946  002A48  C007  FFF6         	movff	??_USART_TxChar,tblptrl
  2947  002A4C  C008  FFF7         	movff	??_USART_TxChar+1,tblptrh
  2948  002A50  6AF8               	clrf	tblptru,c
  2949  002A52  0E07               	movlw	(high __ramtop+-1)
  2950  002A54  64F7               	cpfsgt	tblptrh,c
  2951  002A56  D003               	bra	u4177
  2952  002A58  0008               	tblrd		*
  2953  002A5A  50F5               	movf	tablat,w,c
  2954  002A5C  D005               	bra	u4170
  2955  002A5E                     u4177:
  2956  002A5E  CFF6 FFE1          	movff	tblptrl,fsr1l
  2957  002A62  CFF7 FFE2          	movff	tblptrh,fsr1h
  2958  002A66  50E7               	movf	indf1,w,c
  2959  002A68                     u4170:
  2960  002A68  6EAD               	movwf	173,c	;volatile
  2961  002A6A                     
  2962                           ;main.c: 100:         }
  2963  002A6A  2A09               	incf	USART_TxChar@i^0,f,c
  2964  002A6C                     l4082:
  2965  002A6C  C005  F001         	movff	USART_TxChar@out,strlen@s
  2966  002A70  C006  F002         	movff	USART_TxChar@out+1,strlen@s+1
  2967  002A74  EC6E  F016         	call	_strlen	;wreg free
  2968  002A78  5009               	movf	USART_TxChar@i^0,w,c
  2969  002A7A  6E07               	movwf	??_USART_TxChar^0,c
  2970  002A7C  6A08               	clrf	(??_USART_TxChar+1)^0,c
  2971  002A7E  5001               	movf	?_strlen^0,w,c
  2972  002A80  5C07               	subwf	??_USART_TxChar^0,w,c
  2973  002A82  5002               	movf	(?_strlen+1)^0,w,c
  2974  002A84  5808               	subwfb	(??_USART_TxChar+1)^0,w,c
  2975  002A86  A0D8               	btfss	status,0,c
  2976  002A88  EF48  F015         	goto	u4181
  2977  002A8C  EF4A  F015         	goto	u4180
  2978  002A90                     u4181:
  2979  002A90  EF1E  F015         	goto	l4078
  2980  002A94                     u4180:
  2981  002A94  0012               	return		;funcret
  2982  002A96                     __end_of_USART_TxChar:
  2983                           	callstack 0
  2984                           
  2985 ;; *************** function _strlen *****************
  2986 ;; Defined at:
  2987 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2990 ;;		 -> dbuf(32), STR_4(3), data_buffer(20), STR_1(3), 
  2991 ;;		 -> UID_2(20), UID_1(20), 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2994 ;;		 -> dbuf(32), STR_4(3), data_buffer(20), STR_1(3), 
  2995 ;;		 -> UID_2(20), UID_1(20), 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  2    0[COMRAM] unsigned int 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3005 ;;      Params:         2       0       0       0       0       0       0       0       0
  3006 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3008 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3009 ;;Total ram usage:        4 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_main
  3015 ;;		_USART_TxChar
  3016 ;;		_pad
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           	psect	text14
  3021  002CDC                     __ptext14:
  3022                           	callstack 0
  3023  002CDC                     _strlen:
  3024                           	callstack 30
  3025  002CDC  C001  F003         	movff	strlen@s,strlen@a
  3026  002CE0  C002  F004         	movff	strlen@s+1,strlen@a+1
  3027  002CE4  EF76  F016         	goto	l2812
  3028  002CE8                     l2810:
  3029  002CE8  4A01               	infsnz	strlen@s^0,f,c
  3030  002CEA  2A02               	incf	(strlen@s+1)^0,f,c
  3031  002CEC                     l2812:
  3032  002CEC  C001  FFF6         	movff	strlen@s,tblptrl
  3033  002CF0  C002  FFF7         	movff	strlen@s+1,tblptrh
  3034  002CF4  6AF8               	clrf	tblptru,c
  3035  002CF6  0E07               	movlw	(high __ramtop+-1)
  3036  002CF8  64F7               	cpfsgt	tblptrh,c
  3037  002CFA  D003               	bra	u2297
  3038  002CFC  0008               	tblrd		*
  3039  002CFE  50F5               	movf	tablat,w,c
  3040  002D00  D005               	bra	u2290
  3041  002D02                     u2297:
  3042  002D02  CFF6 FFE1          	movff	tblptrl,fsr1l
  3043  002D06  CFF7 FFE2          	movff	tblptrh,fsr1h
  3044  002D0A  50E7               	movf	indf1,w,c
  3045  002D0C                     u2290:
  3046  002D0C  0900               	iorlw	0
  3047  002D0E  A4D8               	btfss	status,2,c
  3048  002D10  EF8C  F016         	goto	u2301
  3049  002D14  EF8E  F016         	goto	u2300
  3050  002D18                     u2301:
  3051  002D18  EF74  F016         	goto	l2810
  3052  002D1C                     u2300:
  3053  002D1C  5003               	movf	strlen@a^0,w,c
  3054  002D1E  5C01               	subwf	strlen@s^0,w,c
  3055  002D20  6E01               	movwf	?_strlen^0,c
  3056  002D22  5004               	movf	(strlen@a+1)^0,w,c
  3057  002D24  5802               	subwfb	(strlen@s+1)^0,w,c
  3058  002D26  6E02               	movwf	(?_strlen+1)^0,c
  3059  002D28  0012               	return		;funcret
  3060  002D2A                     __end_of_strlen:
  3061                           	callstack 0
  3062                           
  3063 ;; *************** function _USART_Init *****************
  3064 ;; Defined at:
  3065 ;;		line 82 in file "main.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  baud_rate       4   55[COMRAM] long 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  temp            4   59[COMRAM] float 
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  1    wreg      void 
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, status,0, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3079 ;;      Params:         4       0       0       0       0       0       0       0       0
  3080 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3081 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3082 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3083 ;;Total ram usage:        8 bytes
  3084 ;; Hardware stack levels used: 1
  3085 ;; Hardware stack levels required when called: 1
  3086 ;; This function calls:
  3087 ;;		___fladd
  3088 ;;		___fldiv
  3089 ;;		___fltol
  3090 ;;		___xxtofl
  3091 ;; This function is called by:
  3092 ;;		_main
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text15
  3097  002862                     __ptext15:
  3098                           	callstack 0
  3099  002862                     _USART_Init:
  3100                           	callstack 29
  3101  002862                     
  3102                           ;main.c: 83:     float temp;;main.c: 84:     TRISC6 = 0;
  3103  002862  9C94               	bcf	3988,6,c	;volatile
  3104                           
  3105                           ;main.c: 85:     TRISC7 = 1;
  3106  002864  8E94               	bsf	3988,7,c	;volatile
  3107  002866                     
  3108                           ;main.c: 86:     temp = (((float)(27000000/64)/(float)baud_rate)-1);
  3109  002866  C038  F001         	movff	USART_Init@baud_rate,___xxtofl@val
  3110  00286A  C039  F002         	movff	USART_Init@baud_rate+1,___xxtofl@val+1
  3111  00286E  C03A  F003         	movff	USART_Init@baud_rate+2,___xxtofl@val+2
  3112  002872  C03B  F004         	movff	USART_Init@baud_rate+3,___xxtofl@val+3
  3113  002876  0E01               	movlw	1
  3114  002878  EC37  F00E         	call	___xxtofl
  3115  00287C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3116  002880  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3117  002884  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3118  002888  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3119  00288C  0E60               	movlw	96
  3120  00288E  6E0F               	movwf	___fldiv@b^0,c
  3121  002890  0EFE               	movlw	254
  3122  002892  6E10               	movwf	(___fldiv@b+1)^0,c
  3123  002894  0ECD               	movlw	205
  3124  002896  6E11               	movwf	(___fldiv@b+2)^0,c
  3125  002898  0E48               	movlw	72
  3126  00289A  6E12               	movwf	(___fldiv@b+3)^0,c
  3127  00289C  EC71  F006         	call	___fldiv	;wreg free
  3128  0028A0  C00F  F028         	movff	?___fldiv,___fladd@b
  3129  0028A4  C010  F029         	movff	?___fldiv+1,___fladd@b+1
  3130  0028A8  C011  F02A         	movff	?___fldiv+2,___fladd@b+2
  3131  0028AC  C012  F02B         	movff	?___fldiv+3,___fladd@b+3
  3132  0028B0  0E00               	movlw	0
  3133  0028B2  6E2C               	movwf	___fladd@a^0,c
  3134  0028B4  0E00               	movlw	0
  3135  0028B6  6E2D               	movwf	(___fladd@a+1)^0,c
  3136  0028B8  0E80               	movlw	128
  3137  0028BA  6E2E               	movwf	(___fladd@a+2)^0,c
  3138  0028BC  0EBF               	movlw	191
  3139  0028BE  6E2F               	movwf	(___fladd@a+3)^0,c
  3140  0028C0  EC11  F004         	call	___fladd	;wreg free
  3141  0028C4  C028  F03C         	movff	?___fladd,USART_Init@temp
  3142  0028C8  C029  F03D         	movff	?___fladd+1,USART_Init@temp+1
  3143  0028CC  C02A  F03E         	movff	?___fladd+2,USART_Init@temp+2
  3144  0028D0  C02B  F03F         	movff	?___fladd+3,USART_Init@temp+3
  3145                           
  3146                           ;main.c: 87:     SPBRG=(int)temp;
  3147  0028D4  C03C  F001         	movff	USART_Init@temp,___fltol@f1
  3148  0028D8  C03D  F002         	movff	USART_Init@temp+1,___fltol@f1+1
  3149  0028DC  C03E  F003         	movff	USART_Init@temp+2,___fltol@f1+2
  3150  0028E0  C03F  F004         	movff	USART_Init@temp+3,___fltol@f1+3
  3151  0028E4  EC11  F00F         	call	___fltol	;wreg free
  3152  0028E8  5001               	movf	?___fltol^0,w,c
  3153  0028EA  6EAF               	movwf	175,c	;volatile
  3154  0028EC                     
  3155                           ;main.c: 88:     TXSTA = 0x20;
  3156  0028EC  0E20               	movlw	32
  3157  0028EE  6EAC               	movwf	172,c	;volatile
  3158  0028F0                     
  3159                           ;main.c: 89:     RCSTA = 0x90;
  3160  0028F0  0E90               	movlw	144
  3161  0028F2  6EAB               	movwf	171,c	;volatile
  3162  0028F4                     
  3163                           ;main.c: 90:     INTCONbits.GIE = 1;
  3164  0028F4  8EF2               	bsf	242,7,c	;volatile
  3165  0028F6                     
  3166                           ;main.c: 91:     INTCONbits.PEIE = 1;
  3167  0028F6  8CF2               	bsf	242,6,c	;volatile
  3168  0028F8                     
  3169                           ;main.c: 92:     PIE1bits.RCIE = 1;
  3170  0028F8  8A9D               	bsf	157,5,c	;volatile
  3171  0028FA                     
  3172                           ;main.c: 93:     PIE1bits.TXIE = 1;
  3173  0028FA  889D               	bsf	157,4,c	;volatile
  3174  0028FC  0012               	return		;funcret
  3175  0028FE                     __end_of_USART_Init:
  3176                           	callstack 0
  3177                           
  3178 ;; *************** function ___xxtofl *****************
  3179 ;; Defined at:
  3180 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  sign            1    wreg     unsigned char 
  3183 ;;  val             4    0[COMRAM] long 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  sign            1    8[COMRAM] unsigned char 
  3186 ;;  arg             4   10[COMRAM] unsigned long 
  3187 ;;  exp             1    9[COMRAM] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  4    0[COMRAM] unsigned char 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3197 ;;      Params:         4       0       0       0       0       0       0       0       0
  3198 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3199 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3200 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3201 ;;Total ram usage:       14 bytes
  3202 ;; Hardware stack levels used: 1
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_USART_Init
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text16
  3211  001C6E                     __ptext16:
  3212                           	callstack 0
  3213  001C6E                     ___xxtofl:
  3214                           	callstack 29
  3215                           
  3216                           ;incstack = 0
  3217                           ;___xxtofl@sign stored from wreg
  3218  001C6E  6E09               	movwf	___xxtofl@sign^0,c
  3219  001C70  5009               	movf	___xxtofl@sign^0,w,c
  3220  001C72  B4D8               	btfsc	status,2,c
  3221  001C74  EF3E  F00E         	goto	u4041
  3222  001C78  EF40  F00E         	goto	u4040
  3223  001C7C                     u4041:
  3224  001C7C  EF62  F00E         	goto	l1107
  3225  001C80                     u4040:
  3226  001C80  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3227  001C82  EF47  F00E         	goto	u4050
  3228  001C86  EF45  F00E         	goto	u4051
  3229  001C8A                     u4051:
  3230  001C8A  EF62  F00E         	goto	l1107
  3231  001C8E                     u4050:
  3232  001C8E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3233  001C92  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3234  001C96  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3235  001C9A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3236  001C9E  1E05               	comf	??___xxtofl^0,f,c
  3237  001CA0  1E06               	comf	(??___xxtofl+1)^0,f,c
  3238  001CA2  1E07               	comf	(??___xxtofl+2)^0,f,c
  3239  001CA4  1E08               	comf	(??___xxtofl+3)^0,f,c
  3240  001CA6  2A05               	incf	??___xxtofl^0,f,c
  3241  001CA8  0E00               	movlw	0
  3242  001CAA  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3243  001CAC  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3244  001CAE  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3245  001CB0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3246  001CB4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3247  001CB8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3248  001CBC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3249  001CC0  EF6A  F00E         	goto	l3926
  3250  001CC4                     l1107:
  3251  001CC4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3252  001CC8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3253  001CCC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3254  001CD0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3255  001CD4                     l3926:
  3256  001CD4  5001               	movf	___xxtofl@val^0,w,c
  3257  001CD6  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3258  001CD8  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3259  001CDA  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3260  001CDC  A4D8               	btfss	status,2,c
  3261  001CDE  EF73  F00E         	goto	u4061
  3262  001CE2  EF75  F00E         	goto	u4060
  3263  001CE6                     u4061:
  3264  001CE6  EF7F  F00E         	goto	l3932
  3265  001CEA                     u4060:
  3266  001CEA  0E00               	movlw	0
  3267  001CEC  6E01               	movwf	?___xxtofl^0,c
  3268  001CEE  0E00               	movlw	0
  3269  001CF0  6E02               	movwf	(?___xxtofl+1)^0,c
  3270  001CF2  0E00               	movlw	0
  3271  001CF4  6E03               	movwf	(?___xxtofl+2)^0,c
  3272  001CF6  0E00               	movlw	0
  3273  001CF8  6E04               	movwf	(?___xxtofl+3)^0,c
  3274  001CFA  EF10  F00F         	goto	l1110
  3275  001CFE                     l3932:
  3276  001CFE  0E96               	movlw	150
  3277  001D00  6E0A               	movwf	___xxtofl@exp^0,c
  3278  001D02  EF89  F00E         	goto	l3936
  3279  001D06                     l3934:
  3280  001D06  2A0A               	incf	___xxtofl@exp^0,f,c
  3281  001D08  90D8               	bcf	status,0,c
  3282  001D0A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3283  001D0C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3284  001D0E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3285  001D10  320B               	rrcf	___xxtofl@arg^0,f,c
  3286  001D12                     l3936:
  3287  001D12  0E00               	movlw	0
  3288  001D14  140B               	andwf	___xxtofl@arg^0,w,c
  3289  001D16  6E05               	movwf	??___xxtofl^0,c
  3290  001D18  0E00               	movlw	0
  3291  001D1A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3292  001D1C  6E06               	movwf	(??___xxtofl+1)^0,c
  3293  001D1E  0E00               	movlw	0
  3294  001D20  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3295  001D22  6E07               	movwf	(??___xxtofl+2)^0,c
  3296  001D24  0EFE               	movlw	254
  3297  001D26  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3298  001D28  6E08               	movwf	(??___xxtofl+3)^0,c
  3299  001D2A  5005               	movf	??___xxtofl^0,w,c
  3300  001D2C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3301  001D2E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3302  001D30  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3303  001D32  A4D8               	btfss	status,2,c
  3304  001D34  EF9E  F00E         	goto	u4071
  3305  001D38  EFA0  F00E         	goto	u4070
  3306  001D3C                     u4071:
  3307  001D3C  EF83  F00E         	goto	l3934
  3308  001D40                     u4070:
  3309  001D40  EFAE  F00E         	goto	l1114
  3310  001D44                     l3938:
  3311  001D44  2A0A               	incf	___xxtofl@exp^0,f,c
  3312  001D46  0E01               	movlw	1
  3313  001D48  260B               	addwf	___xxtofl@arg^0,f,c
  3314  001D4A  0E00               	movlw	0
  3315  001D4C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3316  001D4E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3317  001D50  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3318  001D52  90D8               	bcf	status,0,c
  3319  001D54  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3320  001D56  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3321  001D58  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3322  001D5A  320B               	rrcf	___xxtofl@arg^0,f,c
  3323  001D5C                     l1114:
  3324  001D5C  0E00               	movlw	0
  3325  001D5E  140B               	andwf	___xxtofl@arg^0,w,c
  3326  001D60  6E05               	movwf	??___xxtofl^0,c
  3327  001D62  0E00               	movlw	0
  3328  001D64  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3329  001D66  6E06               	movwf	(??___xxtofl+1)^0,c
  3330  001D68  0E00               	movlw	0
  3331  001D6A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3332  001D6C  6E07               	movwf	(??___xxtofl+2)^0,c
  3333  001D6E  0EFF               	movlw	255
  3334  001D70  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3335  001D72  6E08               	movwf	(??___xxtofl+3)^0,c
  3336  001D74  5005               	movf	??___xxtofl^0,w,c
  3337  001D76  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3338  001D78  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3339  001D7A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3340  001D7C  A4D8               	btfss	status,2,c
  3341  001D7E  EFC3  F00E         	goto	u4081
  3342  001D82  EFC5  F00E         	goto	u4080
  3343  001D86                     u4081:
  3344  001D86  EFA2  F00E         	goto	l3938
  3345  001D8A                     u4080:
  3346  001D8A  EFCD  F00E         	goto	l3946
  3347  001D8E                     l3944:
  3348  001D8E  060A               	decf	___xxtofl@exp^0,f,c
  3349  001D90  90D8               	bcf	status,0,c
  3350  001D92  360B               	rlcf	___xxtofl@arg^0,f,c
  3351  001D94  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3352  001D96  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3353  001D98  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3354  001D9A                     l3946:
  3355  001D9A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3356  001D9C  EFD2  F00E         	goto	u4091
  3357  001DA0  EFD4  F00E         	goto	u4090
  3358  001DA4                     u4091:
  3359  001DA4  EFDC  F00E         	goto	l1121
  3360  001DA8                     u4090:
  3361  001DA8  0E02               	movlw	2
  3362  001DAA  600A               	cpfslt	___xxtofl@exp^0,c
  3363  001DAC  EFDA  F00E         	goto	u4101
  3364  001DB0  EFDC  F00E         	goto	u4100
  3365  001DB4                     u4101:
  3366  001DB4  EFC7  F00E         	goto	l3944
  3367  001DB8                     u4100:
  3368  001DB8                     l1121:
  3369  001DB8  B00A               	btfsc	___xxtofl@exp^0,0,c
  3370  001DBA  EFE1  F00E         	goto	u4111
  3371  001DBE  EFE3  F00E         	goto	u4110
  3372  001DC2                     u4111:
  3373  001DC2  EFE4  F00E         	goto	l3952
  3374  001DC6                     u4110:
  3375  001DC6  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3376  001DC8                     l3952:
  3377  001DC8  90D8               	bcf	status,0,c
  3378  001DCA  320A               	rrcf	___xxtofl@exp^0,f,c
  3379  001DCC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3380  001DD0  6A06               	clrf	(??___xxtofl+1)^0,c
  3381  001DD2  6A07               	clrf	(??___xxtofl+2)^0,c
  3382  001DD4  6A08               	clrf	(??___xxtofl+3)^0,c
  3383  001DD6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3384  001DDA  6A07               	clrf	(??___xxtofl+2)^0,c
  3385  001DDC  6A06               	clrf	(??___xxtofl+1)^0,c
  3386  001DDE  6A05               	clrf	??___xxtofl^0,c
  3387  001DE0  5005               	movf	??___xxtofl^0,w,c
  3388  001DE2  120B               	iorwf	___xxtofl@arg^0,f,c
  3389  001DE4  5006               	movf	(??___xxtofl+1)^0,w,c
  3390  001DE6  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3391  001DE8  5007               	movf	(??___xxtofl+2)^0,w,c
  3392  001DEA  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3393  001DEC  5008               	movf	(??___xxtofl+3)^0,w,c
  3394  001DEE  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3395  001DF0  5009               	movf	___xxtofl@sign^0,w,c
  3396  001DF2  B4D8               	btfsc	status,2,c
  3397  001DF4  EFFE  F00E         	goto	u4121
  3398  001DF8  EF00  F00F         	goto	u4120
  3399  001DFC                     u4121:
  3400  001DFC  EF08  F00F         	goto	l3962
  3401  001E00                     u4120:
  3402  001E00  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3403  001E02  EF07  F00F         	goto	u4130
  3404  001E06  EF05  F00F         	goto	u4131
  3405  001E0A                     u4131:
  3406  001E0A  EF08  F00F         	goto	l3962
  3407  001E0E                     u4130:
  3408  001E0E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3409  001E10                     l3962:
  3410  001E10  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3411  001E14  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3412  001E18  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3413  001E1C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3414  001E20                     l1110:
  3415  001E20  0012               	return		;funcret
  3416  001E22                     __end_of___xxtofl:
  3417                           	callstack 0
  3418                           
  3419 ;; *************** function ___fltol *****************
  3420 ;; Defined at:
  3421 ;;		line 43 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  f1              4    0[COMRAM] unsigned char 
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;  exp1            1    9[COMRAM] unsigned char 
  3426 ;;  sign1           1    8[COMRAM] unsigned char 
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  4    0[COMRAM] long 
  3429 ;; Registers used:
  3430 ;;		wreg, status,2, status,0
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3436 ;;      Params:         4       0       0       0       0       0       0       0       0
  3437 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3438 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3439 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3440 ;;Total ram usage:       10 bytes
  3441 ;; Hardware stack levels used: 1
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_USART_Init
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text17
  3450  001E22                     __ptext17:
  3451                           	callstack 0
  3452  001E22                     ___fltol:
  3453                           	callstack 29
  3454  001E22  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3455  001E24  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3456  001E26  6E0A               	movwf	___fltol@exp1^0,c
  3457  001E28  500A               	movf	___fltol@exp1^0,w,c
  3458  001E2A  A4D8               	btfss	status,2,c
  3459  001E2C  EF1A  F00F         	goto	u3971
  3460  001E30  EF1C  F00F         	goto	u3970
  3461  001E34                     u3971:
  3462  001E34  EF26  F00F         	goto	l3882
  3463  001E38                     u3970:
  3464  001E38                     l3878:
  3465  001E38  0E00               	movlw	0
  3466  001E3A  6E01               	movwf	?___fltol^0,c
  3467  001E3C  0E00               	movlw	0
  3468  001E3E  6E02               	movwf	(?___fltol+1)^0,c
  3469  001E40  0E00               	movlw	0
  3470  001E42  6E03               	movwf	(?___fltol+2)^0,c
  3471  001E44  0E00               	movlw	0
  3472  001E46  6E04               	movwf	(?___fltol+3)^0,c
  3473  001E48  EF93  F00F         	goto	l749
  3474  001E4C                     l3882:
  3475  001E4C  C001  F005         	movff	___fltol@f1,??___fltol
  3476  001E50  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3477  001E54  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3478  001E58  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3479  001E5C  0E20               	movlw	32
  3480  001E5E  EF36  F00F         	goto	u3980
  3481  001E62                     u3985:
  3482  001E62  90D8               	bcf	status,0,c
  3483  001E64  3208               	rrcf	(??___fltol+3)^0,f,c
  3484  001E66  3207               	rrcf	(??___fltol+2)^0,f,c
  3485  001E68  3206               	rrcf	(??___fltol+1)^0,f,c
  3486  001E6A  3205               	rrcf	??___fltol^0,f,c
  3487  001E6C                     u3980:
  3488  001E6C  2EE8               	decfsz	wreg,f,c
  3489  001E6E  EF31  F00F         	goto	u3985
  3490  001E72  5005               	movf	??___fltol^0,w,c
  3491  001E74  6E09               	movwf	___fltol@sign1^0,c
  3492  001E76  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3493  001E78  0EFF               	movlw	255
  3494  001E7A  1601               	andwf	___fltol@f1^0,f,c
  3495  001E7C  0EFF               	movlw	255
  3496  001E7E  1602               	andwf	(___fltol@f1+1)^0,f,c
  3497  001E80  0EFF               	movlw	255
  3498  001E82  1603               	andwf	(___fltol@f1+2)^0,f,c
  3499  001E84  0E00               	movlw	0
  3500  001E86  1604               	andwf	(___fltol@f1+3)^0,f,c
  3501  001E88  0E96               	movlw	150
  3502  001E8A  5E0A               	subwf	___fltol@exp1^0,f,c
  3503  001E8C  BE0A               	btfsc	___fltol@exp1^0,7,c
  3504  001E8E  EF4D  F00F         	goto	u3990
  3505  001E92  EF4B  F00F         	goto	u3991
  3506  001E96                     u3991:
  3507  001E96  EF63  F00F         	goto	l3902
  3508  001E9A                     u3990:
  3509  001E9A  500A               	movf	___fltol@exp1^0,w,c
  3510  001E9C  0A80               	xorlw	128
  3511  001E9E  0F97               	addlw	151
  3512  001EA0  B0D8               	btfsc	status,0,c
  3513  001EA2  EF55  F00F         	goto	u4001
  3514  001EA6  EF57  F00F         	goto	u4000
  3515  001EAA                     u4001:
  3516  001EAA  EF59  F00F         	goto	l3898
  3517  001EAE                     u4000:
  3518  001EAE  EF1C  F00F         	goto	l3878
  3519  001EB2                     l3898:
  3520  001EB2  90D8               	bcf	status,0,c
  3521  001EB4  3204               	rrcf	(___fltol@f1+3)^0,f,c
  3522  001EB6  3203               	rrcf	(___fltol@f1+2)^0,f,c
  3523  001EB8  3202               	rrcf	(___fltol@f1+1)^0,f,c
  3524  001EBA  3201               	rrcf	___fltol@f1^0,f,c
  3525  001EBC  3E0A               	incfsz	___fltol@exp1^0,f,c
  3526  001EBE  EF59  F00F         	goto	l3898
  3527  001EC2  EF7B  F00F         	goto	l3912
  3528  001EC6                     l3902:
  3529  001EC6  0E1F               	movlw	31
  3530  001EC8  640A               	cpfsgt	___fltol@exp1^0,c
  3531  001ECA  EF69  F00F         	goto	u4011
  3532  001ECE  EF6B  F00F         	goto	u4010
  3533  001ED2                     u4011:
  3534  001ED2  EF73  F00F         	goto	l3910
  3535  001ED6                     u4010:
  3536  001ED6  EF1C  F00F         	goto	l3878
  3537  001EDA                     l3908:
  3538  001EDA  90D8               	bcf	status,0,c
  3539  001EDC  3601               	rlcf	___fltol@f1^0,f,c
  3540  001EDE  3602               	rlcf	(___fltol@f1+1)^0,f,c
  3541  001EE0  3603               	rlcf	(___fltol@f1+2)^0,f,c
  3542  001EE2  3604               	rlcf	(___fltol@f1+3)^0,f,c
  3543  001EE4  060A               	decf	___fltol@exp1^0,f,c
  3544  001EE6                     l3910:
  3545  001EE6  500A               	movf	___fltol@exp1^0,w,c
  3546  001EE8  A4D8               	btfss	status,2,c
  3547  001EEA  EF79  F00F         	goto	u4021
  3548  001EEE  EF7B  F00F         	goto	u4020
  3549  001EF2                     u4021:
  3550  001EF2  EF6D  F00F         	goto	l3908
  3551  001EF6                     u4020:
  3552  001EF6                     l3912:
  3553  001EF6  5009               	movf	___fltol@sign1^0,w,c
  3554  001EF8  B4D8               	btfsc	status,2,c
  3555  001EFA  EF81  F00F         	goto	u4031
  3556  001EFE  EF83  F00F         	goto	u4030
  3557  001F02                     u4031:
  3558  001F02  EF8B  F00F         	goto	l3916
  3559  001F06                     u4030:
  3560  001F06  1E04               	comf	(___fltol@f1+3)^0,f,c
  3561  001F08  1E03               	comf	(___fltol@f1+2)^0,f,c
  3562  001F0A  1E02               	comf	(___fltol@f1+1)^0,f,c
  3563  001F0C  6C01               	negf	___fltol@f1^0,c
  3564  001F0E  0E00               	movlw	0
  3565  001F10  2202               	addwfc	(___fltol@f1+1)^0,f,c
  3566  001F12  2203               	addwfc	(___fltol@f1+2)^0,f,c
  3567  001F14  2204               	addwfc	(___fltol@f1+3)^0,f,c
  3568  001F16                     l3916:
  3569  001F16  C001  F001         	movff	___fltol@f1,?___fltol
  3570  001F1A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  3571  001F1E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  3572  001F22  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  3573  001F26                     l749:
  3574  001F26  0012               	return		;funcret
  3575  001F28                     __end_of___fltol:
  3576                           	callstack 0
  3577                           
  3578 ;; *************** function ___fldiv *****************
  3579 ;; Defined at:
  3580 ;;		line 11 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  b               4   14[COMRAM] long 
  3583 ;;  a               4   18[COMRAM] long 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  grs             4   33[COMRAM] unsigned long 
  3586 ;;  rem             4   26[COMRAM] unsigned long 
  3587 ;;  new_exp         2   31[COMRAM] short 
  3588 ;;  aexp            1   38[COMRAM] unsigned char 
  3589 ;;  bexp            1   37[COMRAM] unsigned char 
  3590 ;;  sign            1   30[COMRAM] unsigned char 
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  4   14[COMRAM] unsigned char 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3600 ;;      Params:         8       0       0       0       0       0       0       0       0
  3601 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3602 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3603 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3604 ;;Total ram usage:       25 bytes
  3605 ;; Hardware stack levels used: 1
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_USART_Init
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text18
  3614  000CE2                     __ptext18:
  3615                           	callstack 0
  3616  000CE2                     ___fldiv:
  3617                           	callstack 29
  3618  000CE2  5012               	movf	(___fldiv@b+3)^0,w,c
  3619  000CE4  0B80               	andlw	128
  3620  000CE6  6E1F               	movwf	___fldiv@sign^0,c
  3621  000CE8  5012               	movf	(___fldiv@b+3)^0,w,c
  3622  000CEA  2412               	addwf	(___fldiv@b+3)^0,w,c
  3623  000CEC  6E26               	movwf	___fldiv@bexp^0,c
  3624  000CEE  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3625  000CF0  EF7C  F006         	goto	u3741
  3626  000CF4  EF7E  F006         	goto	u3740
  3627  000CF8                     u3741:
  3628  000CF8  EF7F  F006         	goto	l3744
  3629  000CFC                     u3740:
  3630  000CFC  8026               	bsf	___fldiv@bexp^0,0,c
  3631  000CFE                     l3744:
  3632  000CFE  5026               	movf	___fldiv@bexp^0,w,c
  3633  000D00  B4D8               	btfsc	status,2,c
  3634  000D02  EF85  F006         	goto	u3751
  3635  000D06  EF87  F006         	goto	u3750
  3636  000D0A                     u3751:
  3637  000D0A  EF9C  F006         	goto	l3754
  3638  000D0E                     u3750:
  3639  000D0E  2826               	incf	___fldiv@bexp^0,w,c
  3640  000D10  A4D8               	btfss	status,2,c
  3641  000D12  EF8D  F006         	goto	u3761
  3642  000D16  EF8F  F006         	goto	u3760
  3643  000D1A                     u3761:
  3644  000D1A  EF97  F006         	goto	l3750
  3645  000D1E                     u3760:
  3646  000D1E  0E00               	movlw	0
  3647  000D20  6E0F               	movwf	___fldiv@b^0,c
  3648  000D22  0E00               	movlw	0
  3649  000D24  6E10               	movwf	(___fldiv@b+1)^0,c
  3650  000D26  0E00               	movlw	0
  3651  000D28  6E11               	movwf	(___fldiv@b+2)^0,c
  3652  000D2A  0E00               	movlw	0
  3653  000D2C  6E12               	movwf	(___fldiv@b+3)^0,c
  3654  000D2E                     l3750:
  3655  000D2E  8E11               	bsf	(___fldiv@b+2)^0,7,c
  3656  000D30  0E00               	movlw	0
  3657  000D32  6E12               	movwf	(___fldiv@b+3)^0,c
  3658  000D34  EFA4  F006         	goto	l3756
  3659  000D38                     l3754:
  3660  000D38  0E00               	movlw	0
  3661  000D3A  6E0F               	movwf	___fldiv@b^0,c
  3662  000D3C  0E00               	movlw	0
  3663  000D3E  6E10               	movwf	(___fldiv@b+1)^0,c
  3664  000D40  0E00               	movlw	0
  3665  000D42  6E11               	movwf	(___fldiv@b+2)^0,c
  3666  000D44  0E00               	movlw	0
  3667  000D46  6E12               	movwf	(___fldiv@b+3)^0,c
  3668  000D48                     l3756:
  3669  000D48  5016               	movf	(___fldiv@a+3)^0,w,c
  3670  000D4A  0B80               	andlw	128
  3671  000D4C  1A1F               	xorwf	___fldiv@sign^0,f,c
  3672  000D4E  5016               	movf	(___fldiv@a+3)^0,w,c
  3673  000D50  2416               	addwf	(___fldiv@a+3)^0,w,c
  3674  000D52  6E27               	movwf	___fldiv@aexp^0,c
  3675  000D54  AE15               	btfss	(___fldiv@a+2)^0,7,c
  3676  000D56  EFAF  F006         	goto	u3771
  3677  000D5A  EFB1  F006         	goto	u3770
  3678  000D5E                     u3771:
  3679  000D5E  EFB2  F006         	goto	l3764
  3680  000D62                     u3770:
  3681  000D62  8027               	bsf	___fldiv@aexp^0,0,c
  3682  000D64                     l3764:
  3683  000D64  5027               	movf	___fldiv@aexp^0,w,c
  3684  000D66  B4D8               	btfsc	status,2,c
  3685  000D68  EFB8  F006         	goto	u3781
  3686  000D6C  EFBA  F006         	goto	u3780
  3687  000D70                     u3781:
  3688  000D70  EFCF  F006         	goto	l3774
  3689  000D74                     u3780:
  3690  000D74  2827               	incf	___fldiv@aexp^0,w,c
  3691  000D76  A4D8               	btfss	status,2,c
  3692  000D78  EFC0  F006         	goto	u3791
  3693  000D7C  EFC2  F006         	goto	u3790
  3694  000D80                     u3791:
  3695  000D80  EFCA  F006         	goto	l3770
  3696  000D84                     u3790:
  3697  000D84  0E00               	movlw	0
  3698  000D86  6E13               	movwf	___fldiv@a^0,c
  3699  000D88  0E00               	movlw	0
  3700  000D8A  6E14               	movwf	(___fldiv@a+1)^0,c
  3701  000D8C  0E00               	movlw	0
  3702  000D8E  6E15               	movwf	(___fldiv@a+2)^0,c
  3703  000D90  0E00               	movlw	0
  3704  000D92  6E16               	movwf	(___fldiv@a+3)^0,c
  3705  000D94                     l3770:
  3706  000D94  8E15               	bsf	(___fldiv@a+2)^0,7,c
  3707  000D96  0E00               	movlw	0
  3708  000D98  6E16               	movwf	(___fldiv@a+3)^0,c
  3709  000D9A  EFD7  F006         	goto	l3776
  3710  000D9E                     l3774:
  3711  000D9E  0E00               	movlw	0
  3712  000DA0  6E13               	movwf	___fldiv@a^0,c
  3713  000DA2  0E00               	movlw	0
  3714  000DA4  6E14               	movwf	(___fldiv@a+1)^0,c
  3715  000DA6  0E00               	movlw	0
  3716  000DA8  6E15               	movwf	(___fldiv@a+2)^0,c
  3717  000DAA  0E00               	movlw	0
  3718  000DAC  6E16               	movwf	(___fldiv@a+3)^0,c
  3719  000DAE                     l3776:
  3720  000DAE  5013               	movf	___fldiv@a^0,w,c
  3721  000DB0  1014               	iorwf	(___fldiv@a+1)^0,w,c
  3722  000DB2  1015               	iorwf	(___fldiv@a+2)^0,w,c
  3723  000DB4  1016               	iorwf	(___fldiv@a+3)^0,w,c
  3724  000DB6  A4D8               	btfss	status,2,c
  3725  000DB8  EFE0  F006         	goto	u3801
  3726  000DBC  EFE2  F006         	goto	u3800
  3727  000DC0                     u3801:
  3728  000DC0  EFFA  F006         	goto	l3788
  3729  000DC4                     u3800:
  3730  000DC4  0E00               	movlw	0
  3731  000DC6  6E0F               	movwf	___fldiv@b^0,c
  3732  000DC8  0E00               	movlw	0
  3733  000DCA  6E10               	movwf	(___fldiv@b+1)^0,c
  3734  000DCC  0E00               	movlw	0
  3735  000DCE  6E11               	movwf	(___fldiv@b+2)^0,c
  3736  000DD0  0E00               	movlw	0
  3737  000DD2  6E12               	movwf	(___fldiv@b+3)^0,c
  3738  000DD4  0E80               	movlw	128
  3739  000DD6  1211               	iorwf	(___fldiv@b+2)^0,f,c
  3740  000DD8  0E7F               	movlw	127
  3741  000DDA  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3742  000DDC                     l3782:
  3743  000DDC  501F               	movf	___fldiv@sign^0,w,c
  3744  000DDE  1212               	iorwf	(___fldiv@b+3)^0,f,c
  3745  000DE0  C00F  F00F         	movff	___fldiv@b,?___fldiv
  3746  000DE4  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  3747  000DE8  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  3748  000DEC  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  3749  000DF0  EF3D  F008         	goto	l1034
  3750  000DF4                     l3788:
  3751  000DF4  5026               	movf	___fldiv@bexp^0,w,c
  3752  000DF6  A4D8               	btfss	status,2,c
  3753  000DF8  EF00  F007         	goto	u3811
  3754  000DFC  EF02  F007         	goto	u3810
  3755  000E00                     u3811:
  3756  000E00  EF0C  F007         	goto	l3796
  3757  000E04                     u3810:
  3758  000E04  0E00               	movlw	0
  3759  000E06  6E0F               	movwf	?___fldiv^0,c
  3760  000E08  0E00               	movlw	0
  3761  000E0A  6E10               	movwf	(?___fldiv+1)^0,c
  3762  000E0C  0E00               	movlw	0
  3763  000E0E  6E11               	movwf	(?___fldiv+2)^0,c
  3764  000E10  0E00               	movlw	0
  3765  000E12  6E12               	movwf	(?___fldiv+3)^0,c
  3766  000E14  EF3D  F008         	goto	l1034
  3767  000E18                     l3796:
  3768  000E18  5027               	movf	___fldiv@aexp^0,w,c
  3769  000E1A  C026  F017         	movff	___fldiv@bexp,??___fldiv
  3770  000E1E  6A18               	clrf	(??___fldiv+1)^0,c
  3771  000E20  5E17               	subwf	??___fldiv^0,f,c
  3772  000E22  0E00               	movlw	0
  3773  000E24  5A18               	subwfb	(??___fldiv+1)^0,f,c
  3774  000E26  0E7F               	movlw	127
  3775  000E28  2417               	addwf	??___fldiv^0,w,c
  3776  000E2A  6E20               	movwf	___fldiv@new_exp^0,c
  3777  000E2C  0E00               	movlw	0
  3778  000E2E  2018               	addwfc	(??___fldiv+1)^0,w,c
  3779  000E30  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  3780  000E32  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  3781  000E36  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  3782  000E3A  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  3783  000E3E  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  3784  000E42  0E00               	movlw	0
  3785  000E44  6E0F               	movwf	___fldiv@b^0,c
  3786  000E46  0E00               	movlw	0
  3787  000E48  6E10               	movwf	(___fldiv@b+1)^0,c
  3788  000E4A  0E00               	movlw	0
  3789  000E4C  6E11               	movwf	(___fldiv@b+2)^0,c
  3790  000E4E  0E00               	movlw	0
  3791  000E50  6E12               	movwf	(___fldiv@b+3)^0,c
  3792  000E52  0E00               	movlw	0
  3793  000E54  6E22               	movwf	___fldiv@grs^0,c
  3794  000E56  0E00               	movlw	0
  3795  000E58  6E23               	movwf	(___fldiv@grs+1)^0,c
  3796  000E5A  0E00               	movlw	0
  3797  000E5C  6E24               	movwf	(___fldiv@grs+2)^0,c
  3798  000E5E  0E00               	movlw	0
  3799  000E60  6E25               	movwf	(___fldiv@grs+3)^0,c
  3800  000E62  0E00               	movlw	0
  3801  000E64  6E27               	movwf	___fldiv@aexp^0,c
  3802  000E66  EF6D  F007         	goto	l1036
  3803  000E6A                     l3806:
  3804  000E6A  5027               	movf	___fldiv@aexp^0,w,c
  3805  000E6C  B4D8               	btfsc	status,2,c
  3806  000E6E  EF3B  F007         	goto	u3821
  3807  000E72  EF3D  F007         	goto	u3820
  3808  000E76                     u3821:
  3809  000E76  EF54  F007         	goto	l3814
  3810  000E7A                     u3820:
  3811  000E7A  90D8               	bcf	status,0,c
  3812  000E7C  361B               	rlcf	___fldiv@rem^0,f,c
  3813  000E7E  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  3814  000E80  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  3815  000E82  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  3816  000E84  90D8               	bcf	status,0,c
  3817  000E86  360F               	rlcf	___fldiv@b^0,f,c
  3818  000E88  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3819  000E8A  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3820  000E8C  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3821  000E8E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3822  000E90  EF4C  F007         	goto	u3831
  3823  000E94  EF4E  F007         	goto	u3830
  3824  000E98                     u3831:
  3825  000E98  EF4F  F007         	goto	l1039
  3826  000E9C                     u3830:
  3827  000E9C  800F               	bsf	___fldiv@b^0,0,c
  3828  000E9E                     l1039:
  3829  000E9E  90D8               	bcf	status,0,c
  3830  000EA0  3622               	rlcf	___fldiv@grs^0,f,c
  3831  000EA2  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3832  000EA4  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3833  000EA6  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3834  000EA8                     l3814:
  3835  000EA8  5013               	movf	___fldiv@a^0,w,c
  3836  000EAA  5C1B               	subwf	___fldiv@rem^0,w,c
  3837  000EAC  5014               	movf	(___fldiv@a+1)^0,w,c
  3838  000EAE  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  3839  000EB0  5015               	movf	(___fldiv@a+2)^0,w,c
  3840  000EB2  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  3841  000EB4  5016               	movf	(___fldiv@a+3)^0,w,c
  3842  000EB6  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  3843  000EB8  A0D8               	btfss	status,0,c
  3844  000EBA  EF61  F007         	goto	u3841
  3845  000EBE  EF63  F007         	goto	u3840
  3846  000EC2                     u3841:
  3847  000EC2  EF6C  F007         	goto	l3820
  3848  000EC6                     u3840:
  3849  000EC6  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  3850  000EC8  5013               	movf	___fldiv@a^0,w,c
  3851  000ECA  5E1B               	subwf	___fldiv@rem^0,f,c
  3852  000ECC  5014               	movf	(___fldiv@a+1)^0,w,c
  3853  000ECE  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  3854  000ED0  5015               	movf	(___fldiv@a+2)^0,w,c
  3855  000ED2  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  3856  000ED4  5016               	movf	(___fldiv@a+3)^0,w,c
  3857  000ED6  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  3858  000ED8                     l3820:
  3859  000ED8  2A27               	incf	___fldiv@aexp^0,f,c
  3860  000EDA                     l1036:
  3861  000EDA  0E19               	movlw	25
  3862  000EDC  6427               	cpfsgt	___fldiv@aexp^0,c
  3863  000EDE  EF73  F007         	goto	u3851
  3864  000EE2  EF75  F007         	goto	u3850
  3865  000EE6                     u3851:
  3866  000EE6  EF35  F007         	goto	l3806
  3867  000EEA                     u3850:
  3868  000EEA  501B               	movf	___fldiv@rem^0,w,c
  3869  000EEC  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  3870  000EEE  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  3871  000EF0  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  3872  000EF2  B4D8               	btfsc	status,2,c
  3873  000EF4  EF7E  F007         	goto	u3861
  3874  000EF8  EF80  F007         	goto	u3860
  3875  000EFC                     u3861:
  3876  000EFC  EF98  F007         	goto	l3832
  3877  000F00                     u3860:
  3878  000F00  8022               	bsf	___fldiv@grs^0,0,c
  3879  000F02  EF98  F007         	goto	l3832
  3880  000F06                     l3826:
  3881  000F06  90D8               	bcf	status,0,c
  3882  000F08  360F               	rlcf	___fldiv@b^0,f,c
  3883  000F0A  3610               	rlcf	(___fldiv@b+1)^0,f,c
  3884  000F0C  3611               	rlcf	(___fldiv@b+2)^0,f,c
  3885  000F0E  3612               	rlcf	(___fldiv@b+3)^0,f,c
  3886  000F10  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3887  000F12  EF8D  F007         	goto	u3871
  3888  000F16  EF8F  F007         	goto	u3870
  3889  000F1A                     u3871:
  3890  000F1A  EF90  F007         	goto	l1045
  3891  000F1E                     u3870:
  3892  000F1E  800F               	bsf	___fldiv@b^0,0,c
  3893  000F20                     l1045:
  3894  000F20  90D8               	bcf	status,0,c
  3895  000F22  3622               	rlcf	___fldiv@grs^0,f,c
  3896  000F24  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  3897  000F26  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  3898  000F28  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  3899  000F2A  0620               	decf	___fldiv@new_exp^0,f,c
  3900  000F2C  A0D8               	btfss	status,0,c
  3901  000F2E  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  3902  000F30                     l3832:
  3903  000F30  AE11               	btfss	(___fldiv@b+2)^0,7,c
  3904  000F32  EF9D  F007         	goto	u3881
  3905  000F36  EF9F  F007         	goto	u3880
  3906  000F3A                     u3881:
  3907  000F3A  EF83  F007         	goto	l3826
  3908  000F3E                     u3880:
  3909  000F3E  0E00               	movlw	0
  3910  000F40  6E27               	movwf	___fldiv@aexp^0,c
  3911  000F42  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  3912  000F44  EFA6  F007         	goto	u3891
  3913  000F48  EFA8  F007         	goto	u3890
  3914  000F4C                     u3891:
  3915  000F4C  EFCC  F007         	goto	l1047
  3916  000F50                     u3890:
  3917  000F50  0EFF               	movlw	255
  3918  000F52  1422               	andwf	___fldiv@grs^0,w,c
  3919  000F54  6E17               	movwf	??___fldiv^0,c
  3920  000F56  0EFF               	movlw	255
  3921  000F58  1423               	andwf	(___fldiv@grs+1)^0,w,c
  3922  000F5A  6E18               	movwf	(??___fldiv+1)^0,c
  3923  000F5C  0EFF               	movlw	255
  3924  000F5E  1424               	andwf	(___fldiv@grs+2)^0,w,c
  3925  000F60  6E19               	movwf	(??___fldiv+2)^0,c
  3926  000F62  0E7F               	movlw	127
  3927  000F64  1425               	andwf	(___fldiv@grs+3)^0,w,c
  3928  000F66  6E1A               	movwf	(??___fldiv+3)^0,c
  3929  000F68  5017               	movf	??___fldiv^0,w,c
  3930  000F6A  1018               	iorwf	(??___fldiv+1)^0,w,c
  3931  000F6C  1019               	iorwf	(??___fldiv+2)^0,w,c
  3932  000F6E  101A               	iorwf	(??___fldiv+3)^0,w,c
  3933  000F70  B4D8               	btfsc	status,2,c
  3934  000F72  EFBD  F007         	goto	u3901
  3935  000F76  EFBF  F007         	goto	u3900
  3936  000F7A                     u3901:
  3937  000F7A  EFC3  F007         	goto	l1048
  3938  000F7E                     u3900:
  3939  000F7E                     l3840:
  3940  000F7E  0E01               	movlw	1
  3941  000F80  6E27               	movwf	___fldiv@aexp^0,c
  3942  000F82  EFCC  F007         	goto	l1047
  3943  000F86                     l1048:
  3944  000F86  A00F               	btfss	___fldiv@b^0,0,c
  3945  000F88  EFC8  F007         	goto	u3911
  3946  000F8C  EFCA  F007         	goto	u3910
  3947  000F90                     u3911:
  3948  000F90  EFCC  F007         	goto	l1047
  3949  000F94                     u3910:
  3950  000F94  EFBF  F007         	goto	l3840
  3951  000F98                     l1047:
  3952  000F98  5027               	movf	___fldiv@aexp^0,w,c
  3953  000F9A  B4D8               	btfsc	status,2,c
  3954  000F9C  EFD2  F007         	goto	u3921
  3955  000FA0  EFD4  F007         	goto	u3920
  3956  000FA4                     u3921:
  3957  000FA4  EFF8  F007         	goto	l3852
  3958  000FA8                     u3920:
  3959  000FA8  0E01               	movlw	1
  3960  000FAA  260F               	addwf	___fldiv@b^0,f,c
  3961  000FAC  0E00               	movlw	0
  3962  000FAE  2210               	addwfc	(___fldiv@b+1)^0,f,c
  3963  000FB0  2211               	addwfc	(___fldiv@b+2)^0,f,c
  3964  000FB2  2212               	addwfc	(___fldiv@b+3)^0,f,c
  3965  000FB4  A012               	btfss	(___fldiv@b+3)^0,0,c
  3966  000FB6  EFDF  F007         	goto	u3931
  3967  000FBA  EFE1  F007         	goto	u3930
  3968  000FBE                     u3931:
  3969  000FBE  EFF8  F007         	goto	l3852
  3970  000FC2                     u3930:
  3971  000FC2  C00F  F017         	movff	___fldiv@b,??___fldiv
  3972  000FC6  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  3973  000FCA  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  3974  000FCE  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  3975  000FD2  341A               	rlcf	(??___fldiv+3)^0,w,c
  3976  000FD4  321A               	rrcf	(??___fldiv+3)^0,f,c
  3977  000FD6  3219               	rrcf	(??___fldiv+2)^0,f,c
  3978  000FD8  3218               	rrcf	(??___fldiv+1)^0,f,c
  3979  000FDA  3217               	rrcf	??___fldiv^0,f,c
  3980  000FDC  C017  F00F         	movff	??___fldiv,___fldiv@b
  3981  000FE0  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  3982  000FE4  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  3983  000FE8  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  3984  000FEC  4A20               	infsnz	___fldiv@new_exp^0,f,c
  3985  000FEE  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  3986  000FF0                     l3852:
  3987  000FF0  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3988  000FF2  EF03  F008         	goto	u3941
  3989  000FF6  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  3990  000FF8  E108               	bnz	u3940
  3991  000FFA  2820               	incf	___fldiv@new_exp^0,w,c
  3992  000FFC  A0D8               	btfss	status,0,c
  3993  000FFE  EF03  F008         	goto	u3941
  3994  001002  EF05  F008         	goto	u3940
  3995  001006                     u3941:
  3996  001006  EF10  F008         	goto	l3856
  3997  00100A                     u3940:
  3998  00100A  0E00               	movlw	0
  3999  00100C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  4000  00100E  6820               	setf	___fldiv@new_exp^0,c
  4001  001010  0E00               	movlw	0
  4002  001012  6E0F               	movwf	___fldiv@b^0,c
  4003  001014  0E00               	movlw	0
  4004  001016  6E10               	movwf	(___fldiv@b+1)^0,c
  4005  001018  0E00               	movlw	0
  4006  00101A  6E11               	movwf	(___fldiv@b+2)^0,c
  4007  00101C  0E00               	movlw	0
  4008  00101E  6E12               	movwf	(___fldiv@b+3)^0,c
  4009  001020                     l3856:
  4010  001020  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4011  001022  EF1D  F008         	goto	u3950
  4012  001026  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  4013  001028  E106               	bnz	u3951
  4014  00102A  0420               	decf	___fldiv@new_exp^0,w,c
  4015  00102C  B0D8               	btfsc	status,0,c
  4016  00102E  EF1B  F008         	goto	u3951
  4017  001032  EF1D  F008         	goto	u3950
  4018  001036                     u3951:
  4019  001036  EF2B  F008         	goto	l3860
  4020  00103A                     u3950:
  4021  00103A  0E00               	movlw	0
  4022  00103C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  4023  00103E  0E00               	movlw	0
  4024  001040  6E20               	movwf	___fldiv@new_exp^0,c
  4025  001042  0E00               	movlw	0
  4026  001044  6E0F               	movwf	___fldiv@b^0,c
  4027  001046  0E00               	movlw	0
  4028  001048  6E10               	movwf	(___fldiv@b+1)^0,c
  4029  00104A  0E00               	movlw	0
  4030  00104C  6E11               	movwf	(___fldiv@b+2)^0,c
  4031  00104E  0E00               	movlw	0
  4032  001050  6E12               	movwf	(___fldiv@b+3)^0,c
  4033  001052  0E00               	movlw	0
  4034  001054  6E1F               	movwf	___fldiv@sign^0,c
  4035  001056                     l3860:
  4036  001056  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  4037  00105A  A026               	btfss	___fldiv@bexp^0,0,c
  4038  00105C  EF32  F008         	goto	u3961
  4039  001060  EF34  F008         	goto	u3960
  4040  001064                     u3961:
  4041  001064  EF37  F008         	goto	l3866
  4042  001068                     u3960:
  4043  001068  8E11               	bsf	(___fldiv@b+2)^0,7,c
  4044  00106A  EF38  F008         	goto	l3868
  4045  00106E                     l3866:
  4046  00106E  9E11               	bcf	(___fldiv@b+2)^0,7,c
  4047  001070                     l3868:
  4048  001070  90D8               	bcf	status,0,c
  4049  001072  3026               	rrcf	___fldiv@bexp^0,w,c
  4050  001074  6E12               	movwf	(___fldiv@b+3)^0,c
  4051  001076  EFEE  F006         	goto	l3782
  4052  00107A                     l1034:
  4053  00107A  0012               	return		;funcret
  4054  00107C                     __end_of___fldiv:
  4055                           	callstack 0
  4056                           
  4057 ;; *************** function ___fladd *****************
  4058 ;; Defined at:
  4059 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  b               4   39[COMRAM] unsigned char 
  4062 ;;  a               4   43[COMRAM] unsigned char 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  grs             1   54[COMRAM] unsigned char 
  4065 ;;  bexp            1   53[COMRAM] unsigned char 
  4066 ;;  aexp            1   52[COMRAM] unsigned char 
  4067 ;;  signs           1   51[COMRAM] unsigned char 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  4   39[COMRAM] unsigned char 
  4070 ;; Registers used:
  4071 ;;		wreg, status,2, status,0
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4077 ;;      Params:         8       0       0       0       0       0       0       0       0
  4078 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4079 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4080 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4081 ;;Total ram usage:       16 bytes
  4082 ;; Hardware stack levels used: 1
  4083 ;; This function calls:
  4084 ;;		Nothing
  4085 ;; This function is called by:
  4086 ;;		_USART_Init
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text19
  4091  000822                     __ptext19:
  4092                           	callstack 0
  4093  000822                     ___fladd:
  4094                           	callstack 29
  4095  000822  502B               	movf	(___fladd@b+3)^0,w,c
  4096  000824  0B80               	andlw	128
  4097  000826  6E34               	movwf	___fladd@signs^0,c
  4098  000828  502B               	movf	(___fladd@b+3)^0,w,c
  4099  00082A  242B               	addwf	(___fladd@b+3)^0,w,c
  4100  00082C  6E36               	movwf	___fladd@bexp^0,c
  4101  00082E  AE2A               	btfss	(___fladd@b+2)^0,7,c
  4102  000830  EF1C  F004         	goto	u3351
  4103  000834  EF1E  F004         	goto	u3350
  4104  000838                     u3351:
  4105  000838  EF1F  F004         	goto	l3542
  4106  00083C                     u3350:
  4107  00083C  8036               	bsf	___fladd@bexp^0,0,c
  4108  00083E                     l3542:
  4109  00083E  5036               	movf	___fladd@bexp^0,w,c
  4110  000840  B4D8               	btfsc	status,2,c
  4111  000842  EF25  F004         	goto	u3361
  4112  000846  EF27  F004         	goto	u3360
  4113  00084A                     u3361:
  4114  00084A  EF3C  F004         	goto	l3552
  4115  00084E                     u3360:
  4116  00084E  2836               	incf	___fladd@bexp^0,w,c
  4117  000850  A4D8               	btfss	status,2,c
  4118  000852  EF2D  F004         	goto	u3371
  4119  000856  EF2F  F004         	goto	u3370
  4120  00085A                     u3371:
  4121  00085A  EF37  F004         	goto	l3548
  4122  00085E                     u3370:
  4123  00085E  0E00               	movlw	0
  4124  000860  6E28               	movwf	___fladd@b^0,c
  4125  000862  0E00               	movlw	0
  4126  000864  6E29               	movwf	(___fladd@b+1)^0,c
  4127  000866  0E00               	movlw	0
  4128  000868  6E2A               	movwf	(___fladd@b+2)^0,c
  4129  00086A  0E00               	movlw	0
  4130  00086C  6E2B               	movwf	(___fladd@b+3)^0,c
  4131  00086E                     l3548:
  4132  00086E  8E2A               	bsf	(___fladd@b+2)^0,7,c
  4133  000870  0E00               	movlw	0
  4134  000872  6E2B               	movwf	(___fladd@b+3)^0,c
  4135  000874  EF44  F004         	goto	l3554
  4136  000878                     l3552:
  4137  000878  0E00               	movlw	0
  4138  00087A  6E28               	movwf	___fladd@b^0,c
  4139  00087C  0E00               	movlw	0
  4140  00087E  6E29               	movwf	(___fladd@b+1)^0,c
  4141  000880  0E00               	movlw	0
  4142  000882  6E2A               	movwf	(___fladd@b+2)^0,c
  4143  000884  0E00               	movlw	0
  4144  000886  6E2B               	movwf	(___fladd@b+3)^0,c
  4145  000888                     l3554:
  4146  000888  502F               	movf	(___fladd@a+3)^0,w,c
  4147  00088A  0B80               	andlw	128
  4148  00088C  6E35               	movwf	___fladd@aexp^0,c
  4149  00088E  5034               	movf	___fladd@signs^0,w,c
  4150  000890  1835               	xorwf	___fladd@aexp^0,w,c
  4151  000892  B4D8               	btfsc	status,2,c
  4152  000894  EF4E  F004         	goto	u3381
  4153  000898  EF50  F004         	goto	u3380
  4154  00089C                     u3381:
  4155  00089C  EF51  F004         	goto	l3560
  4156  0008A0                     u3380:
  4157  0008A0  8C34               	bsf	___fladd@signs^0,6,c
  4158  0008A2                     l3560:
  4159  0008A2  502F               	movf	(___fladd@a+3)^0,w,c
  4160  0008A4  242F               	addwf	(___fladd@a+3)^0,w,c
  4161  0008A6  6E35               	movwf	___fladd@aexp^0,c
  4162  0008A8  AE2E               	btfss	(___fladd@a+2)^0,7,c
  4163  0008AA  EF59  F004         	goto	u3391
  4164  0008AE  EF5B  F004         	goto	u3390
  4165  0008B2                     u3391:
  4166  0008B2  EF5C  F004         	goto	l3566
  4167  0008B6                     u3390:
  4168  0008B6  8035               	bsf	___fladd@aexp^0,0,c
  4169  0008B8                     l3566:
  4170  0008B8  5035               	movf	___fladd@aexp^0,w,c
  4171  0008BA  B4D8               	btfsc	status,2,c
  4172  0008BC  EF62  F004         	goto	u3401
  4173  0008C0  EF64  F004         	goto	u3400
  4174  0008C4                     u3401:
  4175  0008C4  EF79  F004         	goto	l3576
  4176  0008C8                     u3400:
  4177  0008C8  2835               	incf	___fladd@aexp^0,w,c
  4178  0008CA  A4D8               	btfss	status,2,c
  4179  0008CC  EF6A  F004         	goto	u3411
  4180  0008D0  EF6C  F004         	goto	u3410
  4181  0008D4                     u3411:
  4182  0008D4  EF74  F004         	goto	l3572
  4183  0008D8                     u3410:
  4184  0008D8  0E00               	movlw	0
  4185  0008DA  6E2C               	movwf	___fladd@a^0,c
  4186  0008DC  0E00               	movlw	0
  4187  0008DE  6E2D               	movwf	(___fladd@a+1)^0,c
  4188  0008E0  0E00               	movlw	0
  4189  0008E2  6E2E               	movwf	(___fladd@a+2)^0,c
  4190  0008E4  0E00               	movlw	0
  4191  0008E6  6E2F               	movwf	(___fladd@a+3)^0,c
  4192  0008E8                     l3572:
  4193  0008E8  8E2E               	bsf	(___fladd@a+2)^0,7,c
  4194  0008EA  0E00               	movlw	0
  4195  0008EC  6E2F               	movwf	(___fladd@a+3)^0,c
  4196  0008EE  EF81  F004         	goto	l3578
  4197  0008F2                     l3576:
  4198  0008F2  0E00               	movlw	0
  4199  0008F4  6E2C               	movwf	___fladd@a^0,c
  4200  0008F6  0E00               	movlw	0
  4201  0008F8  6E2D               	movwf	(___fladd@a+1)^0,c
  4202  0008FA  0E00               	movlw	0
  4203  0008FC  6E2E               	movwf	(___fladd@a+2)^0,c
  4204  0008FE  0E00               	movlw	0
  4205  000900  6E2F               	movwf	(___fladd@a+3)^0,c
  4206  000902                     l3578:
  4207  000902  5036               	movf	___fladd@bexp^0,w,c
  4208  000904  5C35               	subwf	___fladd@aexp^0,w,c
  4209  000906  B0D8               	btfsc	status,0,c
  4210  000908  EF88  F004         	goto	u3421
  4211  00090C  EF8A  F004         	goto	u3420
  4212  000910                     u3421:
  4213  000910  EFB1  F004         	goto	l3614
  4214  000914                     u3420:
  4215  000914  AC34               	btfss	___fladd@signs^0,6,c
  4216  000916  EF8F  F004         	goto	u3431
  4217  00091A  EF91  F004         	goto	u3430
  4218  00091E                     u3431:
  4219  00091E  EF93  F004         	goto	l3584
  4220  000922                     u3430:
  4221  000922  0E80               	movlw	128
  4222  000924  1A34               	xorwf	___fladd@signs^0,f,c
  4223  000926                     l3584:
  4224  000926  C036  F037         	movff	___fladd@bexp,___fladd@grs
  4225  00092A  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  4226  00092E  C037  F035         	movff	___fladd@grs,___fladd@aexp
  4227  000932  C028  F037         	movff	___fladd@b,___fladd@grs
  4228  000936  C02C  F028         	movff	___fladd@a,___fladd@b
  4229  00093A  C037  F02C         	movff	___fladd@grs,___fladd@a
  4230  00093E  C029  F037         	movff	___fladd@b+1,___fladd@grs
  4231  000942  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  4232  000946  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  4233  00094A  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  4234  00094E  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  4235  000952  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  4236  000956  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  4237  00095A  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  4238  00095E  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  4239  000962                     l3614:
  4240  000962  0E00               	movlw	0
  4241  000964  6E37               	movwf	___fladd@grs^0,c
  4242  000966  5036               	movf	___fladd@bexp^0,w,c
  4243  000968  C035  F030         	movff	___fladd@aexp,??___fladd
  4244  00096C  6A31               	clrf	(??___fladd+1)^0,c
  4245  00096E  5E30               	subwf	??___fladd^0,f,c
  4246  000970  0E00               	movlw	0
  4247  000972  5A31               	subwfb	(??___fladd+1)^0,f,c
  4248  000974  BE31               	btfsc	(??___fladd+1)^0,7,c
  4249  000976  EFC6  F004         	goto	u3441
  4250  00097A  5031               	movf	(??___fladd+1)^0,w,c
  4251  00097C  E109               	bnz	u3440
  4252  00097E  0E1A               	movlw	26
  4253  000980  5C30               	subwf	??___fladd^0,w,c
  4254  000982  A0D8               	btfss	status,0,c
  4255  000984  EFC6  F004         	goto	u3441
  4256  000988  EFC8  F004         	goto	u3440
  4257  00098C                     u3441:
  4258  00098C  EFFF  F004         	goto	l981
  4259  000990                     u3440:
  4260  000990  5028               	movf	___fladd@b^0,w,c
  4261  000992  1029               	iorwf	(___fladd@b+1)^0,w,c
  4262  000994  102A               	iorwf	(___fladd@b+2)^0,w,c
  4263  000996  102B               	iorwf	(___fladd@b+3)^0,w,c
  4264  000998  A4D8               	btfss	status,2,c
  4265  00099A  EFD1  F004         	goto	u3451
  4266  00099E  EFD4  F004         	goto	u3450
  4267  0009A2                     u3451:
  4268  0009A2  0E01               	movlw	1
  4269  0009A4  EFD5  F004         	goto	u3460
  4270  0009A8                     u3450:
  4271  0009A8  0E00               	movlw	0
  4272  0009AA                     u3460:
  4273  0009AA  6E37               	movwf	___fladd@grs^0,c
  4274  0009AC  0E00               	movlw	0
  4275  0009AE  6E28               	movwf	___fladd@b^0,c
  4276  0009B0  0E00               	movlw	0
  4277  0009B2  6E29               	movwf	(___fladd@b+1)^0,c
  4278  0009B4  0E00               	movlw	0
  4279  0009B6  6E2A               	movwf	(___fladd@b+2)^0,c
  4280  0009B8  0E00               	movlw	0
  4281  0009BA  6E2B               	movwf	(___fladd@b+3)^0,c
  4282  0009BC  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  4283  0009C0  EF08  F005         	goto	l980
  4284  0009C4                     l982:
  4285  0009C4  A037               	btfss	___fladd@grs^0,0,c
  4286  0009C6  EFE7  F004         	goto	u3471
  4287  0009CA  EFE9  F004         	goto	u3470
  4288  0009CE                     u3471:
  4289  0009CE  EFEF  F004         	goto	l3626
  4290  0009D2                     u3470:
  4291  0009D2  90D8               	bcf	status,0,c
  4292  0009D4  3037               	rrcf	___fladd@grs^0,w,c
  4293  0009D6  0901               	iorlw	1
  4294  0009D8  6E37               	movwf	___fladd@grs^0,c
  4295  0009DA  EFF1  F004         	goto	l3628
  4296  0009DE                     l3626:
  4297  0009DE  90D8               	bcf	status,0,c
  4298  0009E0  3237               	rrcf	___fladd@grs^0,f,c
  4299  0009E2                     l3628:
  4300  0009E2  A028               	btfss	___fladd@b^0,0,c
  4301  0009E4  EFF6  F004         	goto	u3481
  4302  0009E8  EFF8  F004         	goto	u3480
  4303  0009EC                     u3481:
  4304  0009EC  EFF9  F004         	goto	l3632
  4305  0009F0                     u3480:
  4306  0009F0  8E37               	bsf	___fladd@grs^0,7,c
  4307  0009F2                     l3632:
  4308  0009F2  342B               	rlcf	(___fladd@b+3)^0,w,c
  4309  0009F4  322B               	rrcf	(___fladd@b+3)^0,f,c
  4310  0009F6  322A               	rrcf	(___fladd@b+2)^0,f,c
  4311  0009F8  3229               	rrcf	(___fladd@b+1)^0,f,c
  4312  0009FA  3228               	rrcf	___fladd@b^0,f,c
  4313  0009FC  2A36               	incf	___fladd@bexp^0,f,c
  4314  0009FE                     l981:
  4315  0009FE  5035               	movf	___fladd@aexp^0,w,c
  4316  000A00  5C36               	subwf	___fladd@bexp^0,w,c
  4317  000A02  A0D8               	btfss	status,0,c
  4318  000A04  EF06  F005         	goto	u3491
  4319  000A08  EF08  F005         	goto	u3490
  4320  000A0C                     u3491:
  4321  000A0C  EFE2  F004         	goto	l982
  4322  000A10                     u3490:
  4323  000A10                     l980:
  4324  000A10  BC34               	btfsc	___fladd@signs^0,6,c
  4325  000A12  EF0D  F005         	goto	u3501
  4326  000A16  EF0F  F005         	goto	u3500
  4327  000A1A                     u3501:
  4328  000A1A  EF4F  F005         	goto	l3660
  4329  000A1E                     u3500:
  4330  000A1E  5036               	movf	___fladd@bexp^0,w,c
  4331  000A20  A4D8               	btfss	status,2,c
  4332  000A22  EF15  F005         	goto	u3511
  4333  000A26  EF17  F005         	goto	u3510
  4334  000A2A                     u3511:
  4335  000A2A  EF21  F005         	goto	l3642
  4336  000A2E                     u3510:
  4337  000A2E  0E00               	movlw	0
  4338  000A30  6E28               	movwf	?___fladd^0,c
  4339  000A32  0E00               	movlw	0
  4340  000A34  6E29               	movwf	(?___fladd+1)^0,c
  4341  000A36  0E00               	movlw	0
  4342  000A38  6E2A               	movwf	(?___fladd+2)^0,c
  4343  000A3A  0E00               	movlw	0
  4344  000A3C  6E2B               	movwf	(?___fladd+3)^0,c
  4345  000A3E  EF70  F006         	goto	l989
  4346  000A42                     l3642:
  4347  000A42  502C               	movf	___fladd@a^0,w,c
  4348  000A44  2628               	addwf	___fladd@b^0,f,c
  4349  000A46  502D               	movf	(___fladd@a+1)^0,w,c
  4350  000A48  2229               	addwfc	(___fladd@b+1)^0,f,c
  4351  000A4A  502E               	movf	(___fladd@a+2)^0,w,c
  4352  000A4C  222A               	addwfc	(___fladd@b+2)^0,f,c
  4353  000A4E  502F               	movf	(___fladd@a+3)^0,w,c
  4354  000A50  222B               	addwfc	(___fladd@b+3)^0,f,c
  4355  000A52  A02B               	btfss	(___fladd@b+3)^0,0,c
  4356  000A54  EF2E  F005         	goto	u3521
  4357  000A58  EF30  F005         	goto	u3520
  4358  000A5C                     u3521:
  4359  000A5C  EFDC  F005         	goto	l3696
  4360  000A60                     u3520:
  4361  000A60  A037               	btfss	___fladd@grs^0,0,c
  4362  000A62  EF35  F005         	goto	u3531
  4363  000A66  EF37  F005         	goto	u3530
  4364  000A6A                     u3531:
  4365  000A6A  EF3D  F005         	goto	l3650
  4366  000A6E                     u3530:
  4367  000A6E  90D8               	bcf	status,0,c
  4368  000A70  3037               	rrcf	___fladd@grs^0,w,c
  4369  000A72  0901               	iorlw	1
  4370  000A74  6E37               	movwf	___fladd@grs^0,c
  4371  000A76  EF3F  F005         	goto	l3652
  4372  000A7A                     l3650:
  4373  000A7A  90D8               	bcf	status,0,c
  4374  000A7C  3237               	rrcf	___fladd@grs^0,f,c
  4375  000A7E                     l3652:
  4376  000A7E  A028               	btfss	___fladd@b^0,0,c
  4377  000A80  EF44  F005         	goto	u3541
  4378  000A84  EF46  F005         	goto	u3540
  4379  000A88                     u3541:
  4380  000A88  EF47  F005         	goto	l3656
  4381  000A8C                     u3540:
  4382  000A8C  8E37               	bsf	___fladd@grs^0,7,c
  4383  000A8E                     l3656:
  4384  000A8E  342B               	rlcf	(___fladd@b+3)^0,w,c
  4385  000A90  322B               	rrcf	(___fladd@b+3)^0,f,c
  4386  000A92  322A               	rrcf	(___fladd@b+2)^0,f,c
  4387  000A94  3229               	rrcf	(___fladd@b+1)^0,f,c
  4388  000A96  3228               	rrcf	___fladd@b^0,f,c
  4389  000A98  2A36               	incf	___fladd@bexp^0,f,c
  4390  000A9A  EFDC  F005         	goto	l3696
  4391  000A9E                     l3660:
  4392  000A9E  502C               	movf	___fladd@a^0,w,c
  4393  000AA0  5C28               	subwf	___fladd@b^0,w,c
  4394  000AA2  502D               	movf	(___fladd@a+1)^0,w,c
  4395  000AA4  5829               	subwfb	(___fladd@b+1)^0,w,c
  4396  000AA6  502E               	movf	(___fladd@a+2)^0,w,c
  4397  000AA8  582A               	subwfb	(___fladd@b+2)^0,w,c
  4398  000AAA  502B               	movf	(___fladd@b+3)^0,w,c
  4399  000AAC  0A80               	xorlw	128
  4400  000AAE  6E30               	movwf	??___fladd^0,c
  4401  000AB0  502F               	movf	(___fladd@a+3)^0,w,c
  4402  000AB2  0A80               	xorlw	128
  4403  000AB4  5830               	subwfb	??___fladd^0,w,c
  4404  000AB6  B0D8               	btfsc	status,0,c
  4405  000AB8  EF60  F005         	goto	u3551
  4406  000ABC  EF62  F005         	goto	u3550
  4407  000AC0                     u3551:
  4408  000AC0  EF8D  F005         	goto	l3670
  4409  000AC4                     u3550:
  4410  000AC4  5028               	movf	___fladd@b^0,w,c
  4411  000AC6  5C2C               	subwf	___fladd@a^0,w,c
  4412  000AC8  6E30               	movwf	??___fladd^0,c
  4413  000ACA  5029               	movf	(___fladd@b+1)^0,w,c
  4414  000ACC  582D               	subwfb	(___fladd@a+1)^0,w,c
  4415  000ACE  6E31               	movwf	(??___fladd+1)^0,c
  4416  000AD0  502A               	movf	(___fladd@b+2)^0,w,c
  4417  000AD2  582E               	subwfb	(___fladd@a+2)^0,w,c
  4418  000AD4  6E32               	movwf	(??___fladd+2)^0,c
  4419  000AD6  502B               	movf	(___fladd@b+3)^0,w,c
  4420  000AD8  582F               	subwfb	(___fladd@a+3)^0,w,c
  4421  000ADA  6E33               	movwf	(??___fladd+3)^0,c
  4422  000ADC  0EFF               	movlw	255
  4423  000ADE  2430               	addwf	??___fladd^0,w,c
  4424  000AE0  6E28               	movwf	___fladd@b^0,c
  4425  000AE2  0EFF               	movlw	255
  4426  000AE4  2031               	addwfc	(??___fladd+1)^0,w,c
  4427  000AE6  6E29               	movwf	(___fladd@b+1)^0,c
  4428  000AE8  0EFF               	movlw	255
  4429  000AEA  2032               	addwfc	(??___fladd+2)^0,w,c
  4430  000AEC  6E2A               	movwf	(___fladd@b+2)^0,c
  4431  000AEE  0EFF               	movlw	255
  4432  000AF0  2033               	addwfc	(??___fladd+3)^0,w,c
  4433  000AF2  6E2B               	movwf	(___fladd@b+3)^0,c
  4434  000AF4  0E80               	movlw	128
  4435  000AF6  1A34               	xorwf	___fladd@signs^0,f,c
  4436  000AF8  6C37               	negf	___fladd@grs^0,c
  4437  000AFA  5037               	movf	___fladd@grs^0,w,c
  4438  000AFC  A4D8               	btfss	status,2,c
  4439  000AFE  EF83  F005         	goto	u3561
  4440  000B02  EF85  F005         	goto	u3560
  4441  000B06                     u3561:
  4442  000B06  EF95  F005         	goto	l997
  4443  000B0A                     u3560:
  4444  000B0A  0E01               	movlw	1
  4445  000B0C  2628               	addwf	___fladd@b^0,f,c
  4446  000B0E  0E00               	movlw	0
  4447  000B10  2229               	addwfc	(___fladd@b+1)^0,f,c
  4448  000B12  222A               	addwfc	(___fladd@b+2)^0,f,c
  4449  000B14  222B               	addwfc	(___fladd@b+3)^0,f,c
  4450  000B16  EF95  F005         	goto	l997
  4451  000B1A                     l3670:
  4452  000B1A  502C               	movf	___fladd@a^0,w,c
  4453  000B1C  5E28               	subwf	___fladd@b^0,f,c
  4454  000B1E  502D               	movf	(___fladd@a+1)^0,w,c
  4455  000B20  5A29               	subwfb	(___fladd@b+1)^0,f,c
  4456  000B22  502E               	movf	(___fladd@a+2)^0,w,c
  4457  000B24  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  4458  000B26  502F               	movf	(___fladd@a+3)^0,w,c
  4459  000B28  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  4460  000B2A                     l997:
  4461  000B2A  5028               	movf	___fladd@b^0,w,c
  4462  000B2C  1029               	iorwf	(___fladd@b+1)^0,w,c
  4463  000B2E  102A               	iorwf	(___fladd@b+2)^0,w,c
  4464  000B30  102B               	iorwf	(___fladd@b+3)^0,w,c
  4465  000B32  A4D8               	btfss	status,2,c
  4466  000B34  EF9E  F005         	goto	u3571
  4467  000B38  EFA0  F005         	goto	u3570
  4468  000B3C                     u3571:
  4469  000B3C  EFD5  F005         	goto	l3694
  4470  000B40                     u3570:
  4471  000B40  5037               	movf	___fladd@grs^0,w,c
  4472  000B42  A4D8               	btfss	status,2,c
  4473  000B44  EFA6  F005         	goto	u3581
  4474  000B48  EFA8  F005         	goto	u3580
  4475  000B4C                     u3581:
  4476  000B4C  EFD5  F005         	goto	l3694
  4477  000B50                     u3580:
  4478  000B50  0E00               	movlw	0
  4479  000B52  6E28               	movwf	?___fladd^0,c
  4480  000B54  0E00               	movlw	0
  4481  000B56  6E29               	movwf	(?___fladd+1)^0,c
  4482  000B58  0E00               	movlw	0
  4483  000B5A  6E2A               	movwf	(?___fladd+2)^0,c
  4484  000B5C  0E00               	movlw	0
  4485  000B5E  6E2B               	movwf	(?___fladd+3)^0,c
  4486  000B60  EF70  F006         	goto	l989
  4487  000B64                     l3678:
  4488  000B64  90D8               	bcf	status,0,c
  4489  000B66  3628               	rlcf	___fladd@b^0,f,c
  4490  000B68  3629               	rlcf	(___fladd@b+1)^0,f,c
  4491  000B6A  362A               	rlcf	(___fladd@b+2)^0,f,c
  4492  000B6C  362B               	rlcf	(___fladd@b+3)^0,f,c
  4493  000B6E  AE37               	btfss	___fladd@grs^0,7,c
  4494  000B70  EFBC  F005         	goto	u3591
  4495  000B74  EFBE  F005         	goto	u3590
  4496  000B78                     u3591:
  4497  000B78  EFBF  F005         	goto	l3684
  4498  000B7C                     u3590:
  4499  000B7C  8028               	bsf	___fladd@b^0,0,c
  4500  000B7E                     l3684:
  4501  000B7E  A037               	btfss	___fladd@grs^0,0,c
  4502  000B80  EFC4  F005         	goto	u3601
  4503  000B84  EFC6  F005         	goto	u3600
  4504  000B88                     u3601:
  4505  000B88  EFCA  F005         	goto	l3688
  4506  000B8C                     u3600:
  4507  000B8C  80D8               	bsf	status,0,c
  4508  000B8E  3637               	rlcf	___fladd@grs^0,f,c
  4509  000B90  EFCC  F005         	goto	l3690
  4510  000B94                     l3688:
  4511  000B94  90D8               	bcf	status,0,c
  4512  000B96  3637               	rlcf	___fladd@grs^0,f,c
  4513  000B98                     l3690:
  4514  000B98  5036               	movf	___fladd@bexp^0,w,c
  4515  000B9A  B4D8               	btfsc	status,2,c
  4516  000B9C  EFD2  F005         	goto	u3611
  4517  000BA0  EFD4  F005         	goto	u3610
  4518  000BA4                     u3611:
  4519  000BA4  EFD5  F005         	goto	l3694
  4520  000BA8                     u3610:
  4521  000BA8  0636               	decf	___fladd@bexp^0,f,c
  4522  000BAA                     l3694:
  4523  000BAA  AE2A               	btfss	(___fladd@b+2)^0,7,c
  4524  000BAC  EFDA  F005         	goto	u3621
  4525  000BB0  EFDC  F005         	goto	u3620
  4526  000BB4                     u3621:
  4527  000BB4  EFB2  F005         	goto	l3678
  4528  000BB8                     u3620:
  4529  000BB8                     l3696:
  4530  000BB8  0E00               	movlw	0
  4531  000BBA  6E35               	movwf	___fladd@aexp^0,c
  4532  000BBC  AE37               	btfss	___fladd@grs^0,7,c
  4533  000BBE  EFE3  F005         	goto	u3631
  4534  000BC2  EFE5  F005         	goto	u3630
  4535  000BC6                     u3631:
  4536  000BC6  EFFD  F005         	goto	l1006
  4537  000BCA                     u3630:
  4538  000BCA  C037  F030         	movff	___fladd@grs,??___fladd
  4539  000BCE  0E7F               	movlw	127
  4540  000BD0  1630               	andwf	??___fladd^0,f,c
  4541  000BD2  B4D8               	btfsc	status,2,c
  4542  000BD4  EFEE  F005         	goto	u3641
  4543  000BD8  EFF0  F005         	goto	u3640
  4544  000BDC                     u3641:
  4545  000BDC  EFF4  F005         	goto	l1007
  4546  000BE0                     u3640:
  4547  000BE0                     l3702:
  4548  000BE0  0E01               	movlw	1
  4549  000BE2  6E35               	movwf	___fladd@aexp^0,c
  4550  000BE4  EFFD  F005         	goto	l1006
  4551  000BE8                     l1007:
  4552  000BE8  A028               	btfss	___fladd@b^0,0,c
  4553  000BEA  EFF9  F005         	goto	u3651
  4554  000BEE  EFFB  F005         	goto	u3650
  4555  000BF2                     u3651:
  4556  000BF2  EFFD  F005         	goto	l1006
  4557  000BF6                     u3650:
  4558  000BF6  EFF0  F005         	goto	l3702
  4559  000BFA                     l1006:
  4560  000BFA  5035               	movf	___fladd@aexp^0,w,c
  4561  000BFC  B4D8               	btfsc	status,2,c
  4562  000BFE  EF03  F006         	goto	u3661
  4563  000C02  EF05  F006         	goto	u3660
  4564  000C06                     u3661:
  4565  000C06  EF30  F006         	goto	l3714
  4566  000C0A                     u3660:
  4567  000C0A  0E01               	movlw	1
  4568  000C0C  2628               	addwf	___fladd@b^0,f,c
  4569  000C0E  0E00               	movlw	0
  4570  000C10  2229               	addwfc	(___fladd@b+1)^0,f,c
  4571  000C12  222A               	addwfc	(___fladd@b+2)^0,f,c
  4572  000C14  222B               	addwfc	(___fladd@b+3)^0,f,c
  4573  000C16  A02B               	btfss	(___fladd@b+3)^0,0,c
  4574  000C18  EF10  F006         	goto	u3671
  4575  000C1C  EF12  F006         	goto	u3670
  4576  000C20                     u3671:
  4577  000C20  EF30  F006         	goto	l3714
  4578  000C24                     u3670:
  4579  000C24  C028  F030         	movff	___fladd@b,??___fladd
  4580  000C28  C029  F031         	movff	___fladd@b+1,??___fladd+1
  4581  000C2C  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  4582  000C30  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  4583  000C34  3433               	rlcf	(??___fladd+3)^0,w,c
  4584  000C36  3233               	rrcf	(??___fladd+3)^0,f,c
  4585  000C38  3232               	rrcf	(??___fladd+2)^0,f,c
  4586  000C3A  3231               	rrcf	(??___fladd+1)^0,f,c
  4587  000C3C  3230               	rrcf	??___fladd^0,f,c
  4588  000C3E  C030  F028         	movff	??___fladd,___fladd@b
  4589  000C42  C031  F029         	movff	??___fladd+1,___fladd@b+1
  4590  000C46  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  4591  000C4A  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  4592  000C4E  2836               	incf	___fladd@bexp^0,w,c
  4593  000C50  B4D8               	btfsc	status,2,c
  4594  000C52  EF2D  F006         	goto	u3681
  4595  000C56  EF2F  F006         	goto	u3680
  4596  000C5A                     u3681:
  4597  000C5A  EF30  F006         	goto	l3714
  4598  000C5E                     u3680:
  4599  000C5E  2A36               	incf	___fladd@bexp^0,f,c
  4600  000C60                     l3714:
  4601  000C60  2836               	incf	___fladd@bexp^0,w,c
  4602  000C62  B4D8               	btfsc	status,2,c
  4603  000C64  EF36  F006         	goto	u3691
  4604  000C68  EF38  F006         	goto	u3690
  4605  000C6C                     u3691:
  4606  000C6C  EF40  F006         	goto	l3718
  4607  000C70                     u3690:
  4608  000C70  5036               	movf	___fladd@bexp^0,w,c
  4609  000C72  A4D8               	btfss	status,2,c
  4610  000C74  EF3E  F006         	goto	u3701
  4611  000C78  EF40  F006         	goto	u3700
  4612  000C7C                     u3701:
  4613  000C7C  EF52  F006         	goto	l3722
  4614  000C80                     u3700:
  4615  000C80                     l3718:
  4616  000C80  0E00               	movlw	0
  4617  000C82  6E28               	movwf	___fladd@b^0,c
  4618  000C84  0E00               	movlw	0
  4619  000C86  6E29               	movwf	(___fladd@b+1)^0,c
  4620  000C88  0E00               	movlw	0
  4621  000C8A  6E2A               	movwf	(___fladd@b+2)^0,c
  4622  000C8C  0E00               	movlw	0
  4623  000C8E  6E2B               	movwf	(___fladd@b+3)^0,c
  4624  000C90  5036               	movf	___fladd@bexp^0,w,c
  4625  000C92  A4D8               	btfss	status,2,c
  4626  000C94  EF4E  F006         	goto	u3711
  4627  000C98  EF50  F006         	goto	u3710
  4628  000C9C                     u3711:
  4629  000C9C  EF52  F006         	goto	l3722
  4630  000CA0                     u3710:
  4631  000CA0  0E00               	movlw	0
  4632  000CA2  6E34               	movwf	___fladd@signs^0,c
  4633  000CA4                     l3722:
  4634  000CA4  A036               	btfss	___fladd@bexp^0,0,c
  4635  000CA6  EF57  F006         	goto	u3721
  4636  000CAA  EF59  F006         	goto	u3720
  4637  000CAE                     u3721:
  4638  000CAE  EF5C  F006         	goto	l3726
  4639  000CB2                     u3720:
  4640  000CB2  8E2A               	bsf	(___fladd@b+2)^0,7,c
  4641  000CB4  EF5D  F006         	goto	l3728
  4642  000CB8                     l3726:
  4643  000CB8  9E2A               	bcf	(___fladd@b+2)^0,7,c
  4644  000CBA                     l3728:
  4645  000CBA  90D8               	bcf	status,0,c
  4646  000CBC  3036               	rrcf	___fladd@bexp^0,w,c
  4647  000CBE  6E2B               	movwf	(___fladd@b+3)^0,c
  4648  000CC0  AE34               	btfss	___fladd@signs^0,7,c
  4649  000CC2  EF65  F006         	goto	u3731
  4650  000CC6  EF67  F006         	goto	u3730
  4651  000CCA                     u3731:
  4652  000CCA  EF68  F006         	goto	l3734
  4653  000CCE                     u3730:
  4654  000CCE  8E2B               	bsf	(___fladd@b+3)^0,7,c
  4655  000CD0                     l3734:
  4656  000CD0  C028  F028         	movff	___fladd@b,?___fladd
  4657  000CD4  C029  F029         	movff	___fladd@b+1,?___fladd+1
  4658  000CD8  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  4659  000CDC  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  4660  000CE0                     l989:
  4661  000CE0  0012               	return		;funcret
  4662  000CE2                     __end_of___fladd:
  4663                           	callstack 0
  4664                           
  4665 ;; *************** function _MFRC522_ReadCardSerial2 *****************
  4666 ;; Defined at:
  4667 ;;		line 602 in file "rc522.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  str             2   39[COMRAM] PTR unsigned char 
  4670 ;;		 -> UID_2(20), 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  _status         1    0        unsigned char 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      unsigned char 
  4675 ;; Registers used:
  4676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4682 ;;      Params:         2       0       0       0       0       0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4685 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4686 ;;Total ram usage:        2 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; Hardware stack levels required when called: 4
  4689 ;; This function calls:
  4690 ;;		_MFRC522_AntiColl2
  4691 ;; This function is called by:
  4692 ;;		_main
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text20
  4697  002FCE                     __ptext20:
  4698                           	callstack 0
  4699  002FCE                     _MFRC522_ReadCardSerial2:
  4700                           	callstack 26
  4701  002FCE  C028  F020         	movff	MFRC522_ReadCardSerial2@str,MFRC522_AntiColl2@serNum
  4702  002FD2  C029  F021         	movff	MFRC522_ReadCardSerial2@str+1,MFRC522_AntiColl2@serNum+1
  4703  002FD6  ECE6  F011         	call	_MFRC522_AntiColl2	;wreg free
  4704  002FDA                     
  4705                           ;rc522.c: 606:     str[5] = 0;
  4706  002FDA  EE20 F005          	lfsr	2,5
  4707  002FDE  5028               	movf	MFRC522_ReadCardSerial2@str^0,w,c
  4708  002FE0  26D9               	addwf	fsr2l,f,c
  4709  002FE2  5029               	movf	(MFRC522_ReadCardSerial2@str+1)^0,w,c
  4710  002FE4  22DA               	addwfc	fsr2h,f,c
  4711  002FE6  0E00               	movlw	0
  4712  002FE8  6EDF               	movwf	indf2,c
  4713  002FEA  0012               	return		;funcret
  4714  002FEC                     __end_of_MFRC522_ReadCardSerial2:
  4715                           	callstack 0
  4716                           
  4717 ;; *************** function _MFRC522_AntiColl2 *****************
  4718 ;; Defined at:
  4719 ;;		line 550 in file "rc522.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;  serNum          2   31[COMRAM] PTR unsigned char 
  4722 ;;		 -> UID_2(20), 
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;  unLen           2   35[COMRAM] unsigned int 
  4725 ;;  i               1   38[COMRAM] unsigned char 
  4726 ;;  _status         1   37[COMRAM] unsigned char 
  4727 ;;  serNumCheck     1   34[COMRAM] unsigned char 
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      unsigned char 
  4730 ;; Registers used:
  4731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4737 ;;      Params:         2       0       0       0       0       0       0       0       0
  4738 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4739 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4740 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4741 ;;Total ram usage:        8 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; Hardware stack levels required when called: 3
  4744 ;; This function calls:
  4745 ;;		_MFRC522_Clear_Bit2
  4746 ;;		_MFRC522_ToCard2
  4747 ;;		_MFRC522_Wr2
  4748 ;; This function is called by:
  4749 ;;		_main
  4750 ;;		_MFRC522_ReadCardSerial2
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           	psect	text21
  4755  0023CC                     __ptext21:
  4756                           	callstack 0
  4757  0023CC                     _MFRC522_AntiColl2:
  4758                           	callstack 26
  4759  0023CC                     
  4760                           ;rc522.c: 550: char MFRC522_AntiColl2(char *serNum);rc522.c: 551: {;rc522.c: 552:     ch
      +                          ar _status;;rc522.c: 553:     char i;;rc522.c: 554:     char serNumCheck = 0;
  4761  0023CC  0E00               	movlw	0
  4762  0023CE  6E23               	movwf	MFRC522_AntiColl2@serNumCheck^0,c
  4763  0023D0                     
  4764                           ;rc522.c: 555:     unsigned unLen;;rc522.c: 556:     MFRC522_Wr2(0x0D, 0x00);
  4765  0023D0  0E00               	movlw	0
  4766  0023D2  6E01               	movwf	MFRC522_Wr2@value^0,c
  4767  0023D4  0E0D               	movlw	13
  4768  0023D6  EC7F  F014         	call	_MFRC522_Wr2
  4769  0023DA                     
  4770                           ;rc522.c: 557:     serNum[0] = 0x93;
  4771  0023DA  C020  FFD9         	movff	MFRC522_AntiColl2@serNum,fsr2l
  4772  0023DE  C021  FFDA         	movff	MFRC522_AntiColl2@serNum+1,fsr2h
  4773  0023E2  0E93               	movlw	147
  4774  0023E4  6EDF               	movwf	indf2,c
  4775  0023E6                     
  4776                           ;rc522.c: 558:     serNum[1] = 0x20;
  4777  0023E6  EE20 F001          	lfsr	2,1
  4778  0023EA  5020               	movf	MFRC522_AntiColl2@serNum^0,w,c
  4779  0023EC  26D9               	addwf	fsr2l,f,c
  4780  0023EE  5021               	movf	(MFRC522_AntiColl2@serNum+1)^0,w,c
  4781  0023F0  22DA               	addwfc	fsr2h,f,c
  4782  0023F2  0E20               	movlw	32
  4783  0023F4  6EDF               	movwf	indf2,c
  4784  0023F6                     
  4785                           ;rc522.c: 559:     MFRC522_Clear_Bit2(0x08, 0x08);
  4786  0023F6  0E08               	movlw	8
  4787  0023F8  6E0A               	movwf	MFRC522_Clear_Bit2@mask^0,c
  4788  0023FA  0E08               	movlw	8
  4789  0023FC  EC14  F018         	call	_MFRC522_Clear_Bit2
  4790  002400                     
  4791                           ;rc522.c: 560:     _status = MFRC522_ToCard2(0x0C, serNum, 2, serNum, &unLen);
  4792  002400  C020  F00D         	movff	MFRC522_AntiColl2@serNum,MFRC522_ToCard2@sendData
  4793  002404  C021  F00E         	movff	MFRC522_AntiColl2@serNum+1,MFRC522_ToCard2@sendData+1
  4794  002408  0E02               	movlw	2
  4795  00240A  6E0F               	movwf	MFRC522_ToCard2@sendLen^0,c
  4796  00240C  C020  F010         	movff	MFRC522_AntiColl2@serNum,MFRC522_ToCard2@backData
  4797  002410  C021  F011         	movff	MFRC522_AntiColl2@serNum+1,MFRC522_ToCard2@backData+1
  4798  002414  0E24               	movlw	low MFRC522_AntiColl2@unLen
  4799  002416  6E12               	movwf	MFRC522_ToCard2@backLen^0,c
  4800  002418  0E00               	movlw	high MFRC522_AntiColl2@unLen
  4801  00241A  6E13               	movwf	(MFRC522_ToCard2@backLen+1)^0,c
  4802  00241C  0E0C               	movlw	12
  4803  00241E  EC90  F009         	call	_MFRC522_ToCard2
  4804  002422  6E26               	movwf	MFRC522_AntiColl2@_status^0,c
  4805  002424                     
  4806                           ;rc522.c: 561:     if(_status == 0)
  4807  002424  5026               	movf	MFRC522_AntiColl2@_status^0,w,c
  4808  002426  A4D8               	btfss	status,2,c
  4809  002428  EF18  F012         	goto	u3171
  4810  00242C  EF1A  F012         	goto	u3170
  4811  002430                     u3171:
  4812  002430  EF3E  F012         	goto	l419
  4813  002434                     u3170:
  4814  002434                     
  4815                           ;rc522.c: 562:     {;rc522.c: 563:         for(i=0; i<5; i++)
  4816  002434  0E00               	movlw	0
  4817  002436  6E27               	movwf	MFRC522_AntiColl2@i^0,c
  4818  002438                     l3402:
  4819                           
  4820                           ;rc522.c: 564:         {;rc522.c: 565:             serNumCheck ^= serNum[i];
  4821  002438  5027               	movf	MFRC522_AntiColl2@i^0,w,c
  4822  00243A  2420               	addwf	MFRC522_AntiColl2@serNum^0,w,c
  4823  00243C  6ED9               	movwf	fsr2l,c
  4824  00243E  0E00               	movlw	0
  4825  002440  2021               	addwfc	(MFRC522_AntiColl2@serNum+1)^0,w,c
  4826  002442  6EDA               	movwf	fsr2h,c
  4827  002444  50DF               	movf	indf2,w,c
  4828  002446  1A23               	xorwf	MFRC522_AntiColl2@serNumCheck^0,f,c
  4829  002448                     
  4830                           ;rc522.c: 566:         }
  4831  002448  2A27               	incf	MFRC522_AntiColl2@i^0,f,c
  4832  00244A  0E04               	movlw	4
  4833  00244C  6427               	cpfsgt	MFRC522_AntiColl2@i^0,c
  4834  00244E  EF2B  F012         	goto	u3181
  4835  002452  EF2D  F012         	goto	u3180
  4836  002456                     u3181:
  4837  002456  EF1C  F012         	goto	l3402
  4838  00245A                     u3180:
  4839  00245A                     
  4840                           ;rc522.c: 567:         if(serNumCheck != serNum[5])
  4841  00245A  EE20 F005          	lfsr	2,5
  4842  00245E  5020               	movf	MFRC522_AntiColl2@serNum^0,w,c
  4843  002460  26D9               	addwf	fsr2l,f,c
  4844  002462  5021               	movf	(MFRC522_AntiColl2@serNum+1)^0,w,c
  4845  002464  22DA               	addwfc	fsr2h,f,c
  4846  002466  5023               	movf	MFRC522_AntiColl2@serNumCheck^0,w,c
  4847  002468  18DE               	xorwf	postinc2,w,c
  4848  00246A  B4D8               	btfsc	status,2,c
  4849  00246C  EF3A  F012         	goto	u3191
  4850  002470  EF3C  F012         	goto	u3190
  4851  002474                     u3191:
  4852  002474  EF3E  F012         	goto	l419
  4853  002478                     u3190:
  4854  002478                     
  4855                           ;rc522.c: 568:         {;rc522.c: 569:             _status = 2;
  4856  002478  0E02               	movlw	2
  4857  00247A  6E26               	movwf	MFRC522_AntiColl2@_status^0,c
  4858  00247C                     l419:
  4859                           
  4860                           ;rc522.c: 572:     return _status;
  4861  00247C  5026               	movf	MFRC522_AntiColl2@_status^0,w,c
  4862  00247E  0012               	return		;funcret
  4863  002480                     __end_of_MFRC522_AntiColl2:
  4864                           	callstack 0
  4865                           
  4866 ;; *************** function _MFRC522_ReadCardSerial *****************
  4867 ;; Defined at:
  4868 ;;		line 591 in file "rc522.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  str             2   39[COMRAM] PTR unsigned char 
  4871 ;;		 -> UID_1(20), 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  _status         1    0        unsigned char 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      unsigned char 
  4876 ;; Registers used:
  4877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4883 ;;      Params:         2       0       0       0       0       0       0       0       0
  4884 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4885 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4886 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4887 ;;Total ram usage:        2 bytes
  4888 ;; Hardware stack levels used: 1
  4889 ;; Hardware stack levels required when called: 4
  4890 ;; This function calls:
  4891 ;;		_MFRC522_AntiColl
  4892 ;; This function is called by:
  4893 ;;		_main
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text22
  4898  002FEC                     __ptext22:
  4899                           	callstack 0
  4900  002FEC                     _MFRC522_ReadCardSerial:
  4901                           	callstack 26
  4902  002FEC  C028  F020         	movff	MFRC522_ReadCardSerial@str,MFRC522_AntiColl@serNum
  4903  002FF0  C029  F021         	movff	MFRC522_ReadCardSerial@str+1,MFRC522_AntiColl@serNum+1
  4904  002FF4  EC40  F012         	call	_MFRC522_AntiColl	;wreg free
  4905  002FF8                     
  4906                           ;rc522.c: 595:     str[5] = 0;
  4907  002FF8  EE20 F005          	lfsr	2,5
  4908  002FFC  5028               	movf	MFRC522_ReadCardSerial@str^0,w,c
  4909  002FFE  26D9               	addwf	fsr2l,f,c
  4910  003000  5029               	movf	(MFRC522_ReadCardSerial@str+1)^0,w,c
  4911  003002  22DA               	addwfc	fsr2h,f,c
  4912  003004  0E00               	movlw	0
  4913  003006  6EDF               	movwf	indf2,c
  4914  003008  0012               	return		;funcret
  4915  00300A                     __end_of_MFRC522_ReadCardSerial:
  4916                           	callstack 0
  4917                           
  4918 ;; *************** function _MFRC522_AntiColl *****************
  4919 ;; Defined at:
  4920 ;;		line 525 in file "rc522.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  serNum          2   31[COMRAM] PTR unsigned char 
  4923 ;;		 -> UID_1(20), 
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;  unLen           2   35[COMRAM] unsigned int 
  4926 ;;  i               1   38[COMRAM] unsigned char 
  4927 ;;  _status         1   37[COMRAM] unsigned char 
  4928 ;;  serNumCheck     1   34[COMRAM] unsigned char 
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  1    wreg      unsigned char 
  4931 ;; Registers used:
  4932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4938 ;;      Params:         2       0       0       0       0       0       0       0       0
  4939 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4940 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4941 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4942 ;;Total ram usage:        8 bytes
  4943 ;; Hardware stack levels used: 1
  4944 ;; Hardware stack levels required when called: 3
  4945 ;; This function calls:
  4946 ;;		_MFRC522_Clear_Bit
  4947 ;;		_MFRC522_ToCard
  4948 ;;		_MFRC522_Wr
  4949 ;; This function is called by:
  4950 ;;		_main
  4951 ;;		_MFRC522_ReadCardSerial
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text23
  4956  002480                     __ptext23:
  4957                           	callstack 0
  4958  002480                     _MFRC522_AntiColl:
  4959                           	callstack 26
  4960  002480                     
  4961                           ;rc522.c: 525: char MFRC522_AntiColl(char *serNum);rc522.c: 526: {;rc522.c: 527:     cha
      +                          r _status;;rc522.c: 528:     char i;;rc522.c: 529:     char serNumCheck = 0;
  4962  002480  0E00               	movlw	0
  4963  002482  6E23               	movwf	MFRC522_AntiColl@serNumCheck^0,c
  4964  002484                     
  4965                           ;rc522.c: 530:     unsigned unLen;;rc522.c: 531:     MFRC522_Wr(0x0D, 0x00);
  4966  002484  0E00               	movlw	0
  4967  002486  6E01               	movwf	MFRC522_Wr@value^0,c
  4968  002488  0E0D               	movlw	13
  4969  00248A  ECC9  F014         	call	_MFRC522_Wr
  4970  00248E                     
  4971                           ;rc522.c: 532:     serNum[0] = 0x93;
  4972  00248E  C020  FFD9         	movff	MFRC522_AntiColl@serNum,fsr2l
  4973  002492  C021  FFDA         	movff	MFRC522_AntiColl@serNum+1,fsr2h
  4974  002496  0E93               	movlw	147
  4975  002498  6EDF               	movwf	indf2,c
  4976  00249A                     
  4977                           ;rc522.c: 533:     serNum[1] = 0x20;
  4978  00249A  EE20 F001          	lfsr	2,1
  4979  00249E  5020               	movf	MFRC522_AntiColl@serNum^0,w,c
  4980  0024A0  26D9               	addwf	fsr2l,f,c
  4981  0024A2  5021               	movf	(MFRC522_AntiColl@serNum+1)^0,w,c
  4982  0024A4  22DA               	addwfc	fsr2h,f,c
  4983  0024A6  0E20               	movlw	32
  4984  0024A8  6EDF               	movwf	indf2,c
  4985  0024AA                     
  4986                           ;rc522.c: 534:     MFRC522_Clear_Bit(0x08, 0x08);
  4987  0024AA  0E08               	movlw	8
  4988  0024AC  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  4989  0024AE  0E08               	movlw	8
  4990  0024B0  EC21  F018         	call	_MFRC522_Clear_Bit
  4991  0024B4                     
  4992                           ;rc522.c: 535:     _status = MFRC522_ToCard(0x0C, serNum, 2, serNum, &unLen);
  4993  0024B4  C020  F00D         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@sendData
  4994  0024B8  C021  F00E         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@sendData+1
  4995  0024BC  0E02               	movlw	2
  4996  0024BE  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
  4997  0024C0  C020  F010         	movff	MFRC522_AntiColl@serNum,MFRC522_ToCard@backData
  4998  0024C4  C021  F011         	movff	MFRC522_AntiColl@serNum+1,MFRC522_ToCard@backData+1
  4999  0024C8  0E24               	movlw	low MFRC522_AntiColl@unLen
  5000  0024CA  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  5001  0024CC  0E00               	movlw	high MFRC522_AntiColl@unLen
  5002  0024CE  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  5003  0024D0  0E0C               	movlw	12
  5004  0024D2  ECD7  F00A         	call	_MFRC522_ToCard
  5005  0024D6  6E26               	movwf	MFRC522_AntiColl@_status^0,c
  5006  0024D8                     
  5007                           ;rc522.c: 536:     if(_status == 0)
  5008  0024D8  5026               	movf	MFRC522_AntiColl@_status^0,w,c
  5009  0024DA  A4D8               	btfss	status,2,c
  5010  0024DC  EF72  F012         	goto	u3141
  5011  0024E0  EF74  F012         	goto	u3140
  5012  0024E4                     u3141:
  5013  0024E4  EF98  F012         	goto	l412
  5014  0024E8                     u3140:
  5015  0024E8                     
  5016                           ;rc522.c: 537:     {;rc522.c: 538:         for(i=0; i<5; i++)
  5017  0024E8  0E00               	movlw	0
  5018  0024EA  6E27               	movwf	MFRC522_AntiColl@i^0,c
  5019  0024EC                     l3370:
  5020                           
  5021                           ;rc522.c: 539:         {;rc522.c: 540:             serNumCheck ^= serNum[i];
  5022  0024EC  5027               	movf	MFRC522_AntiColl@i^0,w,c
  5023  0024EE  2420               	addwf	MFRC522_AntiColl@serNum^0,w,c
  5024  0024F0  6ED9               	movwf	fsr2l,c
  5025  0024F2  0E00               	movlw	0
  5026  0024F4  2021               	addwfc	(MFRC522_AntiColl@serNum+1)^0,w,c
  5027  0024F6  6EDA               	movwf	fsr2h,c
  5028  0024F8  50DF               	movf	indf2,w,c
  5029  0024FA  1A23               	xorwf	MFRC522_AntiColl@serNumCheck^0,f,c
  5030  0024FC                     
  5031                           ;rc522.c: 541:         }
  5032  0024FC  2A27               	incf	MFRC522_AntiColl@i^0,f,c
  5033  0024FE  0E04               	movlw	4
  5034  002500  6427               	cpfsgt	MFRC522_AntiColl@i^0,c
  5035  002502  EF85  F012         	goto	u3151
  5036  002506  EF87  F012         	goto	u3150
  5037  00250A                     u3151:
  5038  00250A  EF76  F012         	goto	l3370
  5039  00250E                     u3150:
  5040  00250E                     
  5041                           ;rc522.c: 542:         if(serNumCheck != serNum[5])
  5042  00250E  EE20 F005          	lfsr	2,5
  5043  002512  5020               	movf	MFRC522_AntiColl@serNum^0,w,c
  5044  002514  26D9               	addwf	fsr2l,f,c
  5045  002516  5021               	movf	(MFRC522_AntiColl@serNum+1)^0,w,c
  5046  002518  22DA               	addwfc	fsr2h,f,c
  5047  00251A  5023               	movf	MFRC522_AntiColl@serNumCheck^0,w,c
  5048  00251C  18DE               	xorwf	postinc2,w,c
  5049  00251E  B4D8               	btfsc	status,2,c
  5050  002520  EF94  F012         	goto	u3161
  5051  002524  EF96  F012         	goto	u3160
  5052  002528                     u3161:
  5053  002528  EF98  F012         	goto	l412
  5054  00252C                     u3160:
  5055  00252C                     
  5056                           ;rc522.c: 543:         {;rc522.c: 544:             _status = 2;
  5057  00252C  0E02               	movlw	2
  5058  00252E  6E26               	movwf	MFRC522_AntiColl@_status^0,c
  5059  002530                     l412:
  5060                           
  5061                           ;rc522.c: 547:     return _status;
  5062  002530  5026               	movf	MFRC522_AntiColl@_status^0,w,c
  5063  002532  0012               	return		;funcret
  5064  002534                     __end_of_MFRC522_AntiColl:
  5065                           	callstack 0
  5066                           
  5067 ;; *************** function _MFRC522_IsCard2 *****************
  5068 ;; Defined at:
  5069 ;;		line 583 in file "rc522.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  TagType         2   37[COMRAM] PTR unsigned char 
  5072 ;;		 -> TagType2(1), 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;		None
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  1    wreg      unsigned char 
  5077 ;; Registers used:
  5078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5084 ;;      Params:         2       0       0       0       0       0       0       0       0
  5085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5087 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5088 ;;Total ram usage:        2 bytes
  5089 ;; Hardware stack levels used: 1
  5090 ;; Hardware stack levels required when called: 4
  5091 ;; This function calls:
  5092 ;;		_MFRC522_Request2
  5093 ;; This function is called by:
  5094 ;;		_main
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text24
  5099  0030C6                     __ptext24:
  5100                           	callstack 0
  5101  0030C6                     _MFRC522_IsCard2:
  5102                           	callstack 26
  5103  0030C6                     
  5104                           ;rc522.c: 583: char MFRC522_IsCard2(char *TagType);rc522.c: 584: {;rc522.c: 585:     if(
      +                          MFRC522_Request2(0x26, TagType) == 0)
  5105  0030C6  C026  F020         	movff	MFRC522_IsCard2@TagType,MFRC522_Request2@TagType
  5106  0030CA  C027  F021         	movff	MFRC522_IsCard2@TagType+1,MFRC522_Request2@TagType+1
  5107  0030CE  0E26               	movlw	38
  5108  0030D0  EC80  F015         	call	_MFRC522_Request2
  5109  0030D4  0012               	return		;funcret
  5110  0030D6                     __end_of_MFRC522_IsCard2:
  5111                           	callstack 0
  5112                           
  5113 ;; *************** function _MFRC522_Request2 *****************
  5114 ;; Defined at:
  5115 ;;		line 399 in file "rc522.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;  reqMode         1    wreg     unsigned char 
  5118 ;;  TagType         2   31[COMRAM] PTR unsigned char 
  5119 ;;		 -> TagType2(1), 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  reqMode         1   33[COMRAM] unsigned char 
  5122 ;;  backBits        2   35[COMRAM] unsigned int 
  5123 ;;  _status         1   34[COMRAM] unsigned char 
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      unsigned char 
  5126 ;; Registers used:
  5127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5133 ;;      Params:         2       0       0       0       0       0       0       0       0
  5134 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5136 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5137 ;;Total ram usage:        6 bytes
  5138 ;; Hardware stack levels used: 1
  5139 ;; Hardware stack levels required when called: 3
  5140 ;; This function calls:
  5141 ;;		_MFRC522_ToCard2
  5142 ;;		_MFRC522_Wr2
  5143 ;; This function is called by:
  5144 ;;		_MFRC522_IsCard2
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text25
  5149  002B00                     __ptext25:
  5150                           	callstack 0
  5151  002B00                     _MFRC522_Request2:
  5152                           	callstack 26
  5153                           
  5154                           ;incstack = 0
  5155                           ;MFRC522_Request2@reqMode stored from wreg
  5156  002B00  6E22               	movwf	MFRC522_Request2@reqMode^0,c
  5157  002B02                     
  5158                           ;rc522.c: 399: char MFRC522_Request2(char reqMode, char *TagType);rc522.c: 400: {;rc522.
      +                          c: 401:     char _status;;rc522.c: 402:     unsigned backBits;;rc522.c: 403:     MFRC522
      +                          _Wr2(0x0D, 0x07);
  5159  002B02  0E07               	movlw	7
  5160  002B04  6E01               	movwf	MFRC522_Wr2@value^0,c
  5161  002B06  0E0D               	movlw	13
  5162  002B08  EC7F  F014         	call	_MFRC522_Wr2
  5163  002B0C                     
  5164                           ;rc522.c: 404:     TagType[0] = reqMode;
  5165  002B0C  C020  FFD9         	movff	MFRC522_Request2@TagType,fsr2l
  5166  002B10  C021  FFDA         	movff	MFRC522_Request2@TagType+1,fsr2h
  5167  002B14  C022  FFDF         	movff	MFRC522_Request2@reqMode,indf2
  5168  002B18                     
  5169                           ;rc522.c: 405:     _status = MFRC522_ToCard2(0x0C, TagType, 1, TagType, &backBits);
  5170  002B18  C020  F00D         	movff	MFRC522_Request2@TagType,MFRC522_ToCard2@sendData
  5171  002B1C  C021  F00E         	movff	MFRC522_Request2@TagType+1,MFRC522_ToCard2@sendData+1
  5172  002B20  0E01               	movlw	1
  5173  002B22  6E0F               	movwf	MFRC522_ToCard2@sendLen^0,c
  5174  002B24  C020  F010         	movff	MFRC522_Request2@TagType,MFRC522_ToCard2@backData
  5175  002B28  C021  F011         	movff	MFRC522_Request2@TagType+1,MFRC522_ToCard2@backData+1
  5176  002B2C  0E24               	movlw	low MFRC522_Request2@backBits
  5177  002B2E  6E12               	movwf	MFRC522_ToCard2@backLen^0,c
  5178  002B30  0E00               	movlw	high MFRC522_Request2@backBits
  5179  002B32  6E13               	movwf	(MFRC522_ToCard2@backLen+1)^0,c
  5180  002B34  0E0C               	movlw	12
  5181  002B36  EC90  F009         	call	_MFRC522_ToCard2
  5182  002B3A  6E23               	movwf	MFRC522_Request2@_status^0,c
  5183  002B3C                     
  5184                           ;rc522.c: 406:     if((_status != 0) || (backBits != 0x10))
  5185  002B3C  5023               	movf	MFRC522_Request2@_status^0,w,c
  5186  002B3E  A4D8               	btfss	status,2,c
  5187  002B40  EFA4  F015         	goto	u3241
  5188  002B44  EFA6  F015         	goto	u3240
  5189  002B48                     u3241:
  5190  002B48  EFB0  F015         	goto	l3462
  5191  002B4C                     u3240:
  5192  002B4C  0E10               	movlw	16
  5193  002B4E  1824               	xorwf	MFRC522_Request2@backBits^0,w,c
  5194  002B50  1025               	iorwf	(MFRC522_Request2@backBits+1)^0,w,c
  5195  002B52  B4D8               	btfsc	status,2,c
  5196  002B54  EFAE  F015         	goto	u3251
  5197  002B58  EFB0  F015         	goto	u3250
  5198  002B5C                     u3251:
  5199  002B5C  EFB2  F015         	goto	l369
  5200  002B60                     u3250:
  5201  002B60                     l3462:
  5202                           
  5203                           ;rc522.c: 407:     {;rc522.c: 408:         _status = 2;
  5204  002B60  0E02               	movlw	2
  5205  002B62  6E23               	movwf	MFRC522_Request2@_status^0,c
  5206  002B64                     l369:
  5207                           
  5208                           ;rc522.c: 410:     return _status;
  5209  002B64  5023               	movf	MFRC522_Request2@_status^0,w,c
  5210  002B66  0012               	return		;funcret
  5211  002B68                     __end_of_MFRC522_Request2:
  5212                           	callstack 0
  5213                           
  5214 ;; *************** function _MFRC522_IsCard *****************
  5215 ;; Defined at:
  5216 ;;		line 575 in file "rc522.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  TagType         2   37[COMRAM] PTR unsigned char 
  5219 ;;		 -> TagType1(1), 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  1    wreg      unsigned char 
  5224 ;; Registers used:
  5225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5231 ;;      Params:         2       0       0       0       0       0       0       0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5234 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5235 ;;Total ram usage:        2 bytes
  5236 ;; Hardware stack levels used: 1
  5237 ;; Hardware stack levels required when called: 4
  5238 ;; This function calls:
  5239 ;;		_MFRC522_Request
  5240 ;; This function is called by:
  5241 ;;		_main
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           	psect	text26
  5246  0030D6                     __ptext26:
  5247                           	callstack 0
  5248  0030D6                     _MFRC522_IsCard:
  5249                           	callstack 26
  5250  0030D6                     
  5251                           ;rc522.c: 575: char MFRC522_IsCard(char *TagType);rc522.c: 576: {;rc522.c: 577:     if(M
      +                          FRC522_Request(0x26, TagType) == 0)
  5252  0030D6  C026  F020         	movff	MFRC522_IsCard@TagType,MFRC522_Request@TagType
  5253  0030DA  C027  F021         	movff	MFRC522_IsCard@TagType+1,MFRC522_Request@TagType+1
  5254  0030DE  0E26               	movlw	38
  5255  0030E0  ECB4  F015         	call	_MFRC522_Request
  5256  0030E4  0012               	return		;funcret
  5257  0030E6                     __end_of_MFRC522_IsCard:
  5258                           	callstack 0
  5259                           
  5260 ;; *************** function _MFRC522_Request *****************
  5261 ;; Defined at:
  5262 ;;		line 385 in file "rc522.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  reqMode         1    wreg     unsigned char 
  5265 ;;  TagType         2   31[COMRAM] PTR unsigned char 
  5266 ;;		 -> TagType1(1), 
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  reqMode         1   33[COMRAM] unsigned char 
  5269 ;;  backBits        2   35[COMRAM] unsigned int 
  5270 ;;  _status         1   34[COMRAM] unsigned char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  1    wreg      unsigned char 
  5273 ;; Registers used:
  5274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5280 ;;      Params:         2       0       0       0       0       0       0       0       0
  5281 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5283 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5284 ;;Total ram usage:        6 bytes
  5285 ;; Hardware stack levels used: 1
  5286 ;; Hardware stack levels required when called: 3
  5287 ;; This function calls:
  5288 ;;		_MFRC522_ToCard
  5289 ;;		_MFRC522_Wr
  5290 ;; This function is called by:
  5291 ;;		_MFRC522_IsCard
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           	psect	text27
  5296  002B68                     __ptext27:
  5297                           	callstack 0
  5298  002B68                     _MFRC522_Request:
  5299                           	callstack 26
  5300                           
  5301                           ;incstack = 0
  5302                           ;MFRC522_Request@reqMode stored from wreg
  5303  002B68  6E22               	movwf	MFRC522_Request@reqMode^0,c
  5304  002B6A                     
  5305                           ;rc522.c: 385: char MFRC522_Request(char reqMode, char *TagType);rc522.c: 386: {;rc522.c
      +                          : 387:     char _status;;rc522.c: 388:     unsigned backBits;;rc522.c: 389:     MFRC522_
      +                          Wr(0x0D, 0x07);
  5306  002B6A  0E07               	movlw	7
  5307  002B6C  6E01               	movwf	MFRC522_Wr@value^0,c
  5308  002B6E  0E0D               	movlw	13
  5309  002B70  ECC9  F014         	call	_MFRC522_Wr
  5310  002B74                     
  5311                           ;rc522.c: 390:     TagType[0] = reqMode;
  5312  002B74  C020  FFD9         	movff	MFRC522_Request@TagType,fsr2l
  5313  002B78  C021  FFDA         	movff	MFRC522_Request@TagType+1,fsr2h
  5314  002B7C  C022  FFDF         	movff	MFRC522_Request@reqMode,indf2
  5315  002B80                     
  5316                           ;rc522.c: 391:     _status = MFRC522_ToCard(0x0C, TagType, 1, TagType, &backBits);
  5317  002B80  C020  F00D         	movff	MFRC522_Request@TagType,MFRC522_ToCard@sendData
  5318  002B84  C021  F00E         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@sendData+1
  5319  002B88  0E01               	movlw	1
  5320  002B8A  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
  5321  002B8C  C020  F010         	movff	MFRC522_Request@TagType,MFRC522_ToCard@backData
  5322  002B90  C021  F011         	movff	MFRC522_Request@TagType+1,MFRC522_ToCard@backData+1
  5323  002B94  0E24               	movlw	low MFRC522_Request@backBits
  5324  002B96  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  5325  002B98  0E00               	movlw	high MFRC522_Request@backBits
  5326  002B9A  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  5327  002B9C  0E0C               	movlw	12
  5328  002B9E  ECD7  F00A         	call	_MFRC522_ToCard
  5329  002BA2  6E23               	movwf	MFRC522_Request@_status^0,c
  5330  002BA4                     
  5331                           ;rc522.c: 392:     if((_status != 0) || (backBits != 0x10))
  5332  002BA4  5023               	movf	MFRC522_Request@_status^0,w,c
  5333  002BA6  A4D8               	btfss	status,2,c
  5334  002BA8  EFD8  F015         	goto	u3221
  5335  002BAC  EFDA  F015         	goto	u3220
  5336  002BB0                     u3221:
  5337  002BB0  EFE4  F015         	goto	l3448
  5338  002BB4                     u3220:
  5339  002BB4  0E10               	movlw	16
  5340  002BB6  1824               	xorwf	MFRC522_Request@backBits^0,w,c
  5341  002BB8  1025               	iorwf	(MFRC522_Request@backBits+1)^0,w,c
  5342  002BBA  B4D8               	btfsc	status,2,c
  5343  002BBC  EFE2  F015         	goto	u3231
  5344  002BC0  EFE4  F015         	goto	u3230
  5345  002BC4                     u3231:
  5346  002BC4  EFE6  F015         	goto	l363
  5347  002BC8                     u3230:
  5348  002BC8                     l3448:
  5349                           
  5350                           ;rc522.c: 393:     {;rc522.c: 394:         _status = 2;
  5351  002BC8  0E02               	movlw	2
  5352  002BCA  6E23               	movwf	MFRC522_Request@_status^0,c
  5353  002BCC                     l363:
  5354                           
  5355                           ;rc522.c: 396:     return _status;
  5356  002BCC  5023               	movf	MFRC522_Request@_status^0,w,c
  5357  002BCE  0012               	return		;funcret
  5358  002BD0                     __end_of_MFRC522_Request:
  5359                           	callstack 0
  5360                           
  5361 ;; *************** function _MFRC522_Init *****************
  5362 ;; Defined at:
  5363 ;;		line 171 in file "rc522.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;		None
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;		None
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      void 
  5370 ;; Registers used:
  5371 ;;		wreg, status,2, status,0, cstack
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5377 ;;      Params:         0       0       0       0       0       0       0       0       0
  5378 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5380 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5381 ;;Total ram usage:        0 bytes
  5382 ;; Hardware stack levels used: 1
  5383 ;; Hardware stack levels required when called: 3
  5384 ;; This function calls:
  5385 ;;		_MFRC522_AntennaOff
  5386 ;;		_MFRC522_AntennaOff2
  5387 ;;		_MFRC522_AntennaOn
  5388 ;;		_MFRC522_AntennaOn2
  5389 ;;		_MFRC522_Reset
  5390 ;;		_MFRC522_Wr
  5391 ;;		_MFRC522_Wr2
  5392 ;; This function is called by:
  5393 ;;		_main
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text28
  5398  0025DA                     __ptext28:
  5399                           	callstack 0
  5400  0025DA                     _MFRC522_Init:
  5401                           	callstack 27
  5402  0025DA                     
  5403                           ;rc522.c: 173:     TRISDbits.RD2 = 0;
  5404  0025DA  9495               	bcf	149,2,c	;volatile
  5405                           
  5406                           ;rc522.c: 174:     TRISDbits.RD1 = 0;
  5407  0025DC  9295               	bcf	149,1,c	;volatile
  5408                           
  5409                           ;rc522.c: 175:     TRISAbits.RA0 = 0;
  5410  0025DE  9092               	bcf	146,0,c	;volatile
  5411                           
  5412                           ;rc522.c: 176:     TRISAbits.RA1 = 0;
  5413  0025E0  9292               	bcf	146,1,c	;volatile
  5414                           
  5415                           ;rc522.c: 177:     TRISDbits.RD3 = 1;
  5416  0025E2  8695               	bsf	149,3,c	;volatile
  5417                           
  5418                           ;rc522.c: 178:     TRISDbits.RD4 = 0;
  5419  0025E4  9895               	bcf	149,4,c	;volatile
  5420                           
  5421                           ;rc522.c: 179:     LATDbits.LD1 = 0;
  5422  0025E6  928C               	bcf	140,1,c	;volatile
  5423                           
  5424                           ;rc522.c: 180:     LATDbits.LD2 = 0;
  5425  0025E8  948C               	bcf	140,2,c	;volatile
  5426                           
  5427                           ;rc522.c: 181:     LATAbits.LA0 = 1;
  5428  0025EA  8089               	bsf	137,0,c	;volatile
  5429                           
  5430                           ;rc522.c: 182:     LATAbits.LA1 = 1;
  5431  0025EC  8289               	bsf	137,1,c	;volatile
  5432                           
  5433                           ;rc522.c: 185:     LATDbits.LD4 = 1;
  5434  0025EE  888C               	bsf	140,4,c	;volatile
  5435  0025F0                     
  5436                           ;rc522.c: 186:     MFRC522_Reset();
  5437  0025F0  ECAA  F017         	call	_MFRC522_Reset	;wreg free
  5438                           
  5439                           ;rc522.c: 187:     MFRC522_Wr(0x2A, 0x8D);
  5440  0025F4  0E8D               	movlw	141
  5441  0025F6  6E01               	movwf	MFRC522_Wr@value^0,c
  5442  0025F8  0E2A               	movlw	42
  5443  0025FA  ECC9  F014         	call	_MFRC522_Wr
  5444                           
  5445                           ;rc522.c: 188:     MFRC522_Wr(0x2B, 0x3E);
  5446  0025FE  0E3E               	movlw	62
  5447  002600  6E01               	movwf	MFRC522_Wr@value^0,c
  5448  002602  0E2B               	movlw	43
  5449  002604  ECC9  F014         	call	_MFRC522_Wr
  5450                           
  5451                           ;rc522.c: 189:     MFRC522_Wr(0x2D, 30);
  5452  002608  0E1E               	movlw	30
  5453  00260A  6E01               	movwf	MFRC522_Wr@value^0,c
  5454  00260C  0E2D               	movlw	45
  5455  00260E  ECC9  F014         	call	_MFRC522_Wr
  5456                           
  5457                           ;rc522.c: 190:     MFRC522_Wr(0x2C, 0);
  5458  002612  0E00               	movlw	0
  5459  002614  6E01               	movwf	MFRC522_Wr@value^0,c
  5460  002616  0E2C               	movlw	44
  5461  002618  ECC9  F014         	call	_MFRC522_Wr
  5462                           
  5463                           ;rc522.c: 191:     MFRC522_Wr(0x15, 0x40);
  5464  00261C  0E40               	movlw	64
  5465  00261E  6E01               	movwf	MFRC522_Wr@value^0,c
  5466  002620  0E15               	movlw	21
  5467  002622  ECC9  F014         	call	_MFRC522_Wr
  5468                           
  5469                           ;rc522.c: 192:     MFRC522_Wr(0x11, 0x3D);
  5470  002626  0E3D               	movlw	61
  5471  002628  6E01               	movwf	MFRC522_Wr@value^0,c
  5472  00262A  0E11               	movlw	17
  5473  00262C  ECC9  F014         	call	_MFRC522_Wr
  5474                           
  5475                           ;rc522.c: 193:     MFRC522_AntennaOff();
  5476  002630  EC79  F018         	call	_MFRC522_AntennaOff	;wreg free
  5477                           
  5478                           ;rc522.c: 194:     MFRC522_AntennaOn();
  5479  002634  EC5A  F018         	call	_MFRC522_AntennaOn	;wreg free
  5480                           
  5481                           ;rc522.c: 195:     MFRC522_Wr2(0x2A, 0x8D);
  5482  002638  0E8D               	movlw	141
  5483  00263A  6E01               	movwf	MFRC522_Wr2@value^0,c
  5484  00263C  0E2A               	movlw	42
  5485  00263E  EC7F  F014         	call	_MFRC522_Wr2
  5486                           
  5487                           ;rc522.c: 196:     MFRC522_Wr2(0x2B, 0x3E);
  5488  002642  0E3E               	movlw	62
  5489  002644  6E01               	movwf	MFRC522_Wr2@value^0,c
  5490  002646  0E2B               	movlw	43
  5491  002648  EC7F  F014         	call	_MFRC522_Wr2
  5492                           
  5493                           ;rc522.c: 197:     MFRC522_Wr2(0x2D, 30);
  5494  00264C  0E1E               	movlw	30
  5495  00264E  6E01               	movwf	MFRC522_Wr2@value^0,c
  5496  002650  0E2D               	movlw	45
  5497  002652  EC7F  F014         	call	_MFRC522_Wr2
  5498                           
  5499                           ;rc522.c: 198:     MFRC522_Wr2(0x2C, 0);
  5500  002656  0E00               	movlw	0
  5501  002658  6E01               	movwf	MFRC522_Wr2@value^0,c
  5502  00265A  0E2C               	movlw	44
  5503  00265C  EC7F  F014         	call	_MFRC522_Wr2
  5504                           
  5505                           ;rc522.c: 199:     MFRC522_Wr2(0x15, 0x40);
  5506  002660  0E40               	movlw	64
  5507  002662  6E01               	movwf	MFRC522_Wr2@value^0,c
  5508  002664  0E15               	movlw	21
  5509  002666  EC7F  F014         	call	_MFRC522_Wr2
  5510                           
  5511                           ;rc522.c: 200:     MFRC522_Wr2(0x11, 0x3D);
  5512  00266A  0E3D               	movlw	61
  5513  00266C  6E01               	movwf	MFRC522_Wr2@value^0,c
  5514  00266E  0E11               	movlw	17
  5515  002670  EC7F  F014         	call	_MFRC522_Wr2
  5516                           
  5517                           ;rc522.c: 201:     MFRC522_AntennaOff2();
  5518  002674  EC73  F018         	call	_MFRC522_AntennaOff2	;wreg free
  5519                           
  5520                           ;rc522.c: 202:     MFRC522_AntennaOn2();
  5521  002678  EC51  F018         	call	_MFRC522_AntennaOn2	;wreg free
  5522  00267C  0012               	return		;funcret
  5523  00267E                     __end_of_MFRC522_Init:
  5524                           	callstack 0
  5525                           
  5526 ;; *************** function _MFRC522_Reset *****************
  5527 ;; Defined at:
  5528 ;;		line 135 in file "rc522.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;		None
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;		None
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  1    wreg      void 
  5535 ;; Registers used:
  5536 ;;		wreg, status,2, status,0, cstack
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5542 ;;      Params:         0       0       0       0       0       0       0       0       0
  5543 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5545 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5546 ;;Total ram usage:        0 bytes
  5547 ;; Hardware stack levels used: 1
  5548 ;; Hardware stack levels required when called: 1
  5549 ;; This function calls:
  5550 ;;		_MFRC522_Wr
  5551 ;; This function is called by:
  5552 ;;		_MFRC522_Init
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text29
  5557  002F54                     __ptext29:
  5558                           	callstack 0
  5559  002F54                     _MFRC522_Reset:
  5560                           	callstack 28
  5561  002F54                     
  5562                           ;rc522.c: 137:     LATDbits.LD4 = 1;
  5563  002F54  888C               	bsf	140,4,c	;volatile
  5564                           
  5565                           ;rc522.c: 138:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  5566  002F56  D000               	nop2		;2 cycle nop
  5567  002F58  D000               	nop2		;2 cycle nop
  5568  002F5A  D000               	nop2		;2 cycle nop
  5569                           
  5570                           ;rc522.c: 139:     LATDbits.LD4 = 0;
  5571  002F5C  988C               	bcf	140,4,c	;volatile
  5572                           
  5573                           ;rc522.c: 140:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  5574  002F5E  D000               	nop2		;2 cycle nop
  5575  002F60  D000               	nop2		;2 cycle nop
  5576  002F62  D000               	nop2		;2 cycle nop
  5577                           
  5578                           ;rc522.c: 141:     LATDbits.LD4 = 1;
  5579  002F64  888C               	bsf	140,4,c	;volatile
  5580                           
  5581                           ;rc522.c: 142:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  5582  002F66  D000               	nop2		;2 cycle nop
  5583  002F68  D000               	nop2		;2 cycle nop
  5584  002F6A  D000               	nop2		;2 cycle nop
  5585  002F6C                     
  5586                           ;rc522.c: 143:     MFRC522_Wr(0x01, 0x0F);
  5587  002F6C  0E0F               	movlw	15
  5588  002F6E  6E01               	movwf	MFRC522_Wr@value^0,c
  5589  002F70  0E01               	movlw	1
  5590  002F72  ECC9  F014         	call	_MFRC522_Wr
  5591  002F76                     
  5592                           ;rc522.c: 144:     _delay((unsigned long)((1)*(27000000/4000000.0)));
  5593  002F76  D000               	nop2		;2 cycle nop
  5594  002F78  D000               	nop2		;2 cycle nop
  5595  002F7A  D000               	nop2		;2 cycle nop
  5596  002F7C  0012               	return		;funcret
  5597  002F7E                     __end_of_MFRC522_Reset:
  5598                           	callstack 0
  5599                           
  5600 ;; *************** function _MFRC522_AntennaOn2 *****************
  5601 ;; Defined at:
  5602 ;;		line 154 in file "rc522.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;		None
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  stt             1    0        unsigned char 
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      void 
  5609 ;; Registers used:
  5610 ;;		wreg, status,2, status,0, cstack
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5616 ;;      Params:         0       0       0       0       0       0       0       0       0
  5617 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5618 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5619 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5620 ;;Total ram usage:        0 bytes
  5621 ;; Hardware stack levels used: 1
  5622 ;; Hardware stack levels required when called: 2
  5623 ;; This function calls:
  5624 ;;		_MFRC522_Rd2
  5625 ;;		_MFRC522_Set_Bit2
  5626 ;; This function is called by:
  5627 ;;		_MFRC522_Init
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           	psect	text30
  5632  0030A2                     __ptext30:
  5633                           	callstack 0
  5634  0030A2                     _MFRC522_AntennaOn2:
  5635                           	callstack 27
  5636  0030A2  0E14               	movlw	20
  5637  0030A4  ECD3  F010         	call	_MFRC522_Rd2
  5638                           
  5639                           ;rc522.c: 158:     MFRC522_Set_Bit2(0x14, 0x03);
  5640  0030A8  0E03               	movlw	3
  5641  0030AA  6E0A               	movwf	MFRC522_Set_Bit2@mask^0,c
  5642  0030AC  0E14               	movlw	20
  5643  0030AE  EC2E  F018         	call	_MFRC522_Set_Bit2
  5644  0030B2  0012               	return		;funcret
  5645  0030B4                     __end_of_MFRC522_AntennaOn2:
  5646                           	callstack 0
  5647                           
  5648 ;; *************** function _MFRC522_AntennaOn *****************
  5649 ;; Defined at:
  5650 ;;		line 147 in file "rc522.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;		None
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;  stt             1    0        unsigned char 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      void 
  5657 ;; Registers used:
  5658 ;;		wreg, status,2, status,0, cstack
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5664 ;;      Params:         0       0       0       0       0       0       0       0       0
  5665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5667 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5668 ;;Total ram usage:        0 bytes
  5669 ;; Hardware stack levels used: 1
  5670 ;; Hardware stack levels required when called: 2
  5671 ;; This function calls:
  5672 ;;		_MFRC522_Rd
  5673 ;;		_MFRC522_Set_Bit
  5674 ;; This function is called by:
  5675 ;;		_MFRC522_Init
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text31
  5680  0030B4                     __ptext31:
  5681                           	callstack 0
  5682  0030B4                     _MFRC522_AntennaOn:
  5683                           	callstack 27
  5684  0030B4  0E14               	movlw	20
  5685  0030B6  EC2F  F011         	call	_MFRC522_Rd
  5686                           
  5687                           ;rc522.c: 151:     MFRC522_Set_Bit(0x14, 0x03);
  5688  0030BA  0E03               	movlw	3
  5689  0030BC  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  5690  0030BE  0E14               	movlw	20
  5691  0030C0  EC3A  F018         	call	_MFRC522_Set_Bit
  5692  0030C4  0012               	return		;funcret
  5693  0030C6                     __end_of_MFRC522_AntennaOn:
  5694                           	callstack 0
  5695                           
  5696 ;; *************** function _MFRC522_AntennaOff2 *****************
  5697 ;; Defined at:
  5698 ;;		line 166 in file "rc522.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;		None
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;		None
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  1    wreg      void 
  5705 ;; Registers used:
  5706 ;;		wreg, status,2, status,0, cstack
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5712 ;;      Params:         0       0       0       0       0       0       0       0       0
  5713 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5714 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5715 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5716 ;;Total ram usage:        0 bytes
  5717 ;; Hardware stack levels used: 1
  5718 ;; Hardware stack levels required when called: 2
  5719 ;; This function calls:
  5720 ;;		_MFRC522_Clear_Bit2
  5721 ;; This function is called by:
  5722 ;;		_MFRC522_Init
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           	psect	text32
  5727  0030E6                     __ptext32:
  5728                           	callstack 0
  5729  0030E6                     _MFRC522_AntennaOff2:
  5730                           	callstack 27
  5731  0030E6                     
  5732                           ;rc522.c: 168:     MFRC522_Clear_Bit2(0x14, 0x03);
  5733  0030E6  0E03               	movlw	3
  5734  0030E8  6E0A               	movwf	MFRC522_Clear_Bit2@mask^0,c
  5735  0030EA  0E14               	movlw	20
  5736  0030EC  EC14  F018         	call	_MFRC522_Clear_Bit2
  5737  0030F0  0012               	return		;funcret
  5738  0030F2                     __end_of_MFRC522_AntennaOff2:
  5739                           	callstack 0
  5740                           
  5741 ;; *************** function _MFRC522_AntennaOff *****************
  5742 ;; Defined at:
  5743 ;;		line 161 in file "rc522.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;		None
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;		None
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5757 ;;      Params:         0       0       0       0       0       0       0       0       0
  5758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5760 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5761 ;;Total ram usage:        0 bytes
  5762 ;; Hardware stack levels used: 1
  5763 ;; Hardware stack levels required when called: 2
  5764 ;; This function calls:
  5765 ;;		_MFRC522_Clear_Bit
  5766 ;; This function is called by:
  5767 ;;		_MFRC522_Init
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text33
  5772  0030F2                     __ptext33:
  5773                           	callstack 0
  5774  0030F2                     _MFRC522_AntennaOff:
  5775                           	callstack 27
  5776  0030F2                     
  5777                           ;rc522.c: 163:     MFRC522_Clear_Bit(0x14, 0x03);
  5778  0030F2  0E03               	movlw	3
  5779  0030F4  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  5780  0030F6  0E14               	movlw	20
  5781  0030F8  EC21  F018         	call	_MFRC522_Clear_Bit
  5782  0030FC  0012               	return		;funcret
  5783  0030FE                     __end_of_MFRC522_AntennaOff:
  5784                           	callstack 0
  5785                           
  5786 ;; *************** function _MFRC522_Halt *****************
  5787 ;; Defined at:
  5788 ;;		line 509 in file "rc522.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;		None
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  buff            4   31[COMRAM] unsigned char [4]
  5793 ;;  unLen           2   35[COMRAM] unsigned int 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5803 ;;      Params:         0       0       0       0       0       0       0       0       0
  5804 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5806 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5807 ;;Total ram usage:        6 bytes
  5808 ;; Hardware stack levels used: 1
  5809 ;; Hardware stack levels required when called: 3
  5810 ;; This function calls:
  5811 ;;		_MFRC522_CRC
  5812 ;;		_MFRC522_CRC2
  5813 ;;		_MFRC522_Clear_Bit
  5814 ;;		_MFRC522_Clear_Bit2
  5815 ;;		_MFRC522_ToCard
  5816 ;;		_MFRC522_ToCard2
  5817 ;; This function is called by:
  5818 ;;		_main
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text34
  5823  002534                     __ptext34:
  5824                           	callstack 0
  5825  002534                     _MFRC522_Halt:
  5826                           	callstack 27
  5827  002534                     
  5828                           ;rc522.c: 511:     unsigned unLen;;rc522.c: 512:     char buff[4];;rc522.c: 513:     buf
      +                          f[0] = 0x50;
  5829  002534  0E50               	movlw	80
  5830  002536  6E20               	movwf	MFRC522_Halt@buff^0,c
  5831                           
  5832                           ;rc522.c: 514:     buff[1] = 0;
  5833  002538  0E00               	movlw	0
  5834  00253A  6E21               	movwf	(MFRC522_Halt@buff+1)^0,c
  5835  00253C                     
  5836                           ;rc522.c: 515:     MFRC522_CRC(buff, 2, &buff[2]);
  5837  00253C  0E20               	movlw	low MFRC522_Halt@buff
  5838  00253E  6E0D               	movwf	MFRC522_CRC@dataIn^0,c
  5839  002540  0E00               	movlw	high MFRC522_Halt@buff
  5840  002542  6E0E               	movwf	(MFRC522_CRC@dataIn+1)^0,c
  5841  002544  0E02               	movlw	2
  5842  002546  6E0F               	movwf	MFRC522_CRC@length^0,c
  5843  002548  0E22               	movlw	low (MFRC522_Halt@buff+2)
  5844  00254A  6E10               	movwf	MFRC522_CRC@dataOut^0,c
  5845  00254C  0E00               	movlw	high (MFRC522_Halt@buff+2)
  5846  00254E  6E11               	movwf	(MFRC522_CRC@dataOut+1)^0,c
  5847  002550  ECE1  F013         	call	_MFRC522_CRC	;wreg free
  5848  002554                     
  5849                           ;rc522.c: 516:     MFRC522_CRC2(buff, 2, &buff[2]);
  5850  002554  0E20               	movlw	low MFRC522_Halt@buff
  5851  002556  6E0D               	movwf	MFRC522_CRC2@dataIn^0,c
  5852  002558  0E00               	movlw	high MFRC522_Halt@buff
  5853  00255A  6E0E               	movwf	(MFRC522_CRC2@dataIn+1)^0,c
  5854  00255C  0E02               	movlw	2
  5855  00255E  6E0F               	movwf	MFRC522_CRC2@length^0,c
  5856  002560  0E22               	movlw	low (MFRC522_Halt@buff+2)
  5857  002562  6E10               	movwf	MFRC522_CRC2@dataOut^0,c
  5858  002564  0E00               	movlw	high (MFRC522_Halt@buff+2)
  5859  002566  6E11               	movwf	(MFRC522_CRC2@dataOut+1)^0,c
  5860  002568  EC91  F013         	call	_MFRC522_CRC2	;wreg free
  5861  00256C                     
  5862                           ;rc522.c: 517:     MFRC522_Clear_Bit(0x08, 0x80);
  5863  00256C  0E80               	movlw	128
  5864  00256E  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  5865  002570  0E08               	movlw	8
  5866  002572  EC21  F018         	call	_MFRC522_Clear_Bit
  5867  002576                     
  5868                           ;rc522.c: 518:     MFRC522_Clear_Bit2(0x08, 0x80);
  5869  002576  0E80               	movlw	128
  5870  002578  6E0A               	movwf	MFRC522_Clear_Bit2@mask^0,c
  5871  00257A  0E08               	movlw	8
  5872  00257C  EC14  F018         	call	_MFRC522_Clear_Bit2
  5873  002580                     
  5874                           ;rc522.c: 519:     MFRC522_ToCard(0x0C, buff, 4, buff, &unLen);
  5875  002580  0E20               	movlw	low MFRC522_Halt@buff
  5876  002582  6E0D               	movwf	MFRC522_ToCard@sendData^0,c
  5877  002584  0E00               	movlw	high MFRC522_Halt@buff
  5878  002586  6E0E               	movwf	(MFRC522_ToCard@sendData+1)^0,c
  5879  002588  0E04               	movlw	4
  5880  00258A  6E0F               	movwf	MFRC522_ToCard@sendLen^0,c
  5881  00258C  0E20               	movlw	low MFRC522_Halt@buff
  5882  00258E  6E10               	movwf	MFRC522_ToCard@backData^0,c
  5883  002590  0E00               	movlw	high MFRC522_Halt@buff
  5884  002592  6E11               	movwf	(MFRC522_ToCard@backData+1)^0,c
  5885  002594  0E24               	movlw	low MFRC522_Halt@unLen
  5886  002596  6E12               	movwf	MFRC522_ToCard@backLen^0,c
  5887  002598  0E00               	movlw	high MFRC522_Halt@unLen
  5888  00259A  6E13               	movwf	(MFRC522_ToCard@backLen+1)^0,c
  5889  00259C  0E0C               	movlw	12
  5890  00259E  ECD7  F00A         	call	_MFRC522_ToCard
  5891  0025A2                     
  5892                           ;rc522.c: 520:     MFRC522_ToCard2(0x0C, buff, 4, buff, &unLen);
  5893  0025A2  0E20               	movlw	low MFRC522_Halt@buff
  5894  0025A4  6E0D               	movwf	MFRC522_ToCard2@sendData^0,c
  5895  0025A6  0E00               	movlw	high MFRC522_Halt@buff
  5896  0025A8  6E0E               	movwf	(MFRC522_ToCard2@sendData+1)^0,c
  5897  0025AA  0E04               	movlw	4
  5898  0025AC  6E0F               	movwf	MFRC522_ToCard2@sendLen^0,c
  5899  0025AE  0E20               	movlw	low MFRC522_Halt@buff
  5900  0025B0  6E10               	movwf	MFRC522_ToCard2@backData^0,c
  5901  0025B2  0E00               	movlw	high MFRC522_Halt@buff
  5902  0025B4  6E11               	movwf	(MFRC522_ToCard2@backData+1)^0,c
  5903  0025B6  0E24               	movlw	low MFRC522_Halt@unLen
  5904  0025B8  6E12               	movwf	MFRC522_ToCard2@backLen^0,c
  5905  0025BA  0E00               	movlw	high MFRC522_Halt@unLen
  5906  0025BC  6E13               	movwf	(MFRC522_ToCard2@backLen+1)^0,c
  5907  0025BE  0E0C               	movlw	12
  5908  0025C0  EC90  F009         	call	_MFRC522_ToCard2
  5909  0025C4                     
  5910                           ;rc522.c: 521:     MFRC522_Clear_Bit(0x08, 0x08);
  5911  0025C4  0E08               	movlw	8
  5912  0025C6  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  5913  0025C8  0E08               	movlw	8
  5914  0025CA  EC21  F018         	call	_MFRC522_Clear_Bit
  5915  0025CE                     
  5916                           ;rc522.c: 522:     MFRC522_Clear_Bit2(0x08, 0x08);
  5917  0025CE  0E08               	movlw	8
  5918  0025D0  6E0A               	movwf	MFRC522_Clear_Bit2@mask^0,c
  5919  0025D2  0E08               	movlw	8
  5920  0025D4  EC14  F018         	call	_MFRC522_Clear_Bit2
  5921  0025D8  0012               	return		;funcret
  5922  0025DA                     __end_of_MFRC522_Halt:
  5923                           	callstack 0
  5924                           
  5925 ;; *************** function _MFRC522_ToCard2 *****************
  5926 ;; Defined at:
  5927 ;;		line 295 in file "rc522.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  command         1    wreg     unsigned char 
  5930 ;;  sendData        2   12[COMRAM] PTR unsigned char 
  5931 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag2@buffer(9), UID_2(20), TagType2(1), 
  5932 ;;  sendLen         1   14[COMRAM] unsigned char 
  5933 ;;  backData        2   15[COMRAM] PTR unsigned char 
  5934 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag2@buffer(9), UID_2(20), TagType2(1), 
  5935 ;;  backLen         2   17[COMRAM] PTR unsigned int 
  5936 ;;		 -> MFRC522_AntiColl2@unLen(2), MFRC522_Halt@unLen(2), MFRC522_SelectTag2@recvBits(2), MFRC522_Request2@backBits(2),
      + 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  command         1   27[COMRAM] unsigned char 
  5939 ;;  i               2   28[COMRAM] unsigned int 
  5940 ;;  n               1   30[COMRAM] unsigned char 
  5941 ;;  irqEn           1   26[COMRAM] unsigned char 
  5942 ;;  lastBits        1   25[COMRAM] unsigned char 
  5943 ;;  _status         1   24[COMRAM] unsigned char 
  5944 ;;  waitIRq         1   23[COMRAM] unsigned char 
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  1    wreg      unsigned char 
  5947 ;; Registers used:
  5948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5954 ;;      Params:         7       0       0       0       0       0       0       0       0
  5955 ;;      Locals:         8       0       0       0       0       0       0       0       0
  5956 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5957 ;;      Totals:        19       0       0       0       0       0       0       0       0
  5958 ;;Total ram usage:       19 bytes
  5959 ;; Hardware stack levels used: 1
  5960 ;; Hardware stack levels required when called: 2
  5961 ;; This function calls:
  5962 ;;		_MFRC522_Clear_Bit2
  5963 ;;		_MFRC522_Rd2
  5964 ;;		_MFRC522_Set_Bit2
  5965 ;;		_MFRC522_Wr2
  5966 ;; This function is called by:
  5967 ;;		_MFRC522_Request2
  5968 ;;		_MFRC522_Halt
  5969 ;;		_MFRC522_AntiColl2
  5970 ;;		_MFRC522_SelectTag2
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text35
  5975  001320                     __ptext35:
  5976                           	callstack 0
  5977  001320                     _MFRC522_ToCard2:
  5978                           	callstack 26
  5979                           
  5980                           ;incstack = 0
  5981                           ;MFRC522_ToCard2@command stored from wreg
  5982  001320  6E1C               	movwf	MFRC522_ToCard2@command^0,c
  5983  001322                     
  5984                           ;rc522.c: 295: char MFRC522_ToCard2(char command, char *sendData, char sendLen, char *ba
      +                          ckData, unsigned *backLen);rc522.c: 296: {;rc522.c: 297:     char _status = 2;
  5985  001322  0E02               	movlw	2
  5986  001324  6E19               	movwf	MFRC522_ToCard2@_status^0,c
  5987                           
  5988                           ;rc522.c: 298:     char irqEn = 0x00;
  5989  001326  0E00               	movlw	0
  5990  001328  6E1B               	movwf	MFRC522_ToCard2@irqEn^0,c
  5991                           
  5992                           ;rc522.c: 299:     char waitIRq = 0x00;
  5993  00132A  0E00               	movlw	0
  5994  00132C  6E18               	movwf	MFRC522_ToCard2@waitIRq^0,c
  5995                           
  5996                           ;rc522.c: 300:     char lastBits;;rc522.c: 301:     char n;;rc522.c: 302:     unsigned i
      +                          ;;rc522.c: 304:     switch(command)
  5997  00132E  EFA5  F009         	goto	l3230
  5998  001332                     l3224:
  5999                           
  6000                           ;rc522.c: 307:             irqEn = 0x12;
  6001  001332  0E12               	movlw	18
  6002  001334  6E1B               	movwf	MFRC522_ToCard2@irqEn^0,c
  6003                           
  6004                           ;rc522.c: 308:             waitIRq = 0x10;
  6005  001336  0E10               	movlw	16
  6006  001338  6E18               	movwf	MFRC522_ToCard2@waitIRq^0,c
  6007                           
  6008                           ;rc522.c: 309:             break;
  6009  00133A  EFBA  F009         	goto	l3232
  6010  00133E                     l3226:
  6011                           
  6012                           ;rc522.c: 312:             irqEn = 0x77;
  6013  00133E  0E77               	movlw	119
  6014  001340  6E1B               	movwf	MFRC522_ToCard2@irqEn^0,c
  6015                           
  6016                           ;rc522.c: 313:             waitIRq = 0x30;
  6017  001342  0E30               	movlw	48
  6018  001344  6E18               	movwf	MFRC522_ToCard2@waitIRq^0,c
  6019                           
  6020                           ;rc522.c: 314:             break;
  6021  001346  EFBA  F009         	goto	l3232
  6022  00134A                     l3230:
  6023  00134A  501C               	movf	MFRC522_ToCard2@command^0,w,c
  6024  00134C  6E14               	movwf	??_MFRC522_ToCard2^0,c
  6025  00134E  6A15               	clrf	(??_MFRC522_ToCard2+1)^0,c
  6026                           
  6027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6028                           ; Switch size 1, requested type "simple"
  6029                           ; Number of cases is 1, Range of values is 0 to 0
  6030                           ; switch strategies available:
  6031                           ; Name         Instructions Cycles
  6032                           ; simple_byte            4     3 (average)
  6033                           ;	Chosen strategy is simple_byte
  6034  001350  5015               	movf	(??_MFRC522_ToCard2+1)^0,w,c
  6035  001352  0A00               	xorlw	0	; case 0
  6036  001354  B4D8               	btfsc	status,2,c
  6037  001356  EFAF  F009         	goto	l4330
  6038  00135A  EFBA  F009         	goto	l3232
  6039  00135E                     l4330:
  6040                           
  6041                           ; Switch size 1, requested type "simple"
  6042                           ; Number of cases is 2, Range of values is 12 to 14
  6043                           ; switch strategies available:
  6044                           ; Name         Instructions Cycles
  6045                           ; simple_byte            7     4 (average)
  6046                           ;	Chosen strategy is simple_byte
  6047  00135E  5014               	movf	??_MFRC522_ToCard2^0,w,c
  6048  001360  0A0C               	xorlw	12	; case 12
  6049  001362  B4D8               	btfsc	status,2,c
  6050  001364  EF9F  F009         	goto	l3226
  6051  001368  0A02               	xorlw	2	; case 14
  6052  00136A  B4D8               	btfsc	status,2,c
  6053  00136C  EF99  F009         	goto	l3224
  6054  001370  EFBA  F009         	goto	l3232
  6055  001374                     l3232:
  6056                           
  6057                           ;rc522.c: 319:     MFRC522_Wr2(0x02, irqEn | 0x80);
  6058  001374  501B               	movf	MFRC522_ToCard2@irqEn^0,w,c
  6059  001376  0980               	iorlw	128
  6060  001378  6E01               	movwf	MFRC522_Wr2@value^0,c
  6061  00137A  0E02               	movlw	2
  6062  00137C  EC7F  F014         	call	_MFRC522_Wr2
  6063                           
  6064                           ;rc522.c: 320:     MFRC522_Clear_Bit2(0x04, 0x80);
  6065  001380  0E80               	movlw	128
  6066  001382  6E0A               	movwf	MFRC522_Clear_Bit2@mask^0,c
  6067  001384  0E04               	movlw	4
  6068  001386  EC14  F018         	call	_MFRC522_Clear_Bit2
  6069                           
  6070                           ;rc522.c: 321:     MFRC522_Set_Bit2(0x0A, 0x80);
  6071  00138A  0E80               	movlw	128
  6072  00138C  6E0A               	movwf	MFRC522_Set_Bit2@mask^0,c
  6073  00138E  0E0A               	movlw	10
  6074  001390  EC2E  F018         	call	_MFRC522_Set_Bit2
  6075                           
  6076                           ;rc522.c: 322:     MFRC522_Wr2(0x01, 0x00);
  6077  001394  0E00               	movlw	0
  6078  001396  6E01               	movwf	MFRC522_Wr2@value^0,c
  6079  001398  0E01               	movlw	1
  6080  00139A  EC7F  F014         	call	_MFRC522_Wr2
  6081  00139E                     
  6082                           ;rc522.c: 324:     for(i=0; i<sendLen; i++)
  6083  00139E  0E00               	movlw	0
  6084  0013A0  6E1E               	movwf	(MFRC522_ToCard2@i+1)^0,c
  6085  0013A2  0E00               	movlw	0
  6086  0013A4  6E1D               	movwf	MFRC522_ToCard2@i^0,c
  6087  0013A6  EFE2  F009         	goto	l3240
  6088  0013AA                     l3236:
  6089                           
  6090                           ;rc522.c: 325:     {;rc522.c: 326:         MFRC522_Wr2(0x09, sendData[i]);
  6091  0013AA  501D               	movf	MFRC522_ToCard2@i^0,w,c
  6092  0013AC  240D               	addwf	MFRC522_ToCard2@sendData^0,w,c
  6093  0013AE  6ED9               	movwf	fsr2l,c
  6094  0013B0  501E               	movf	(MFRC522_ToCard2@i+1)^0,w,c
  6095  0013B2  200E               	addwfc	(MFRC522_ToCard2@sendData+1)^0,w,c
  6096  0013B4  6EDA               	movwf	fsr2h,c
  6097  0013B6  50DF               	movf	indf2,w,c
  6098  0013B8  6E01               	movwf	MFRC522_Wr2@value^0,c
  6099  0013BA  0E09               	movlw	9
  6100  0013BC  EC7F  F014         	call	_MFRC522_Wr2
  6101  0013C0                     
  6102                           ;rc522.c: 327:     }
  6103  0013C0  4A1D               	infsnz	MFRC522_ToCard2@i^0,f,c
  6104  0013C2  2A1E               	incf	(MFRC522_ToCard2@i+1)^0,f,c
  6105  0013C4                     l3240:
  6106  0013C4  500F               	movf	MFRC522_ToCard2@sendLen^0,w,c
  6107  0013C6  6E14               	movwf	??_MFRC522_ToCard2^0,c
  6108  0013C8  6A15               	clrf	(??_MFRC522_ToCard2+1)^0,c
  6109  0013CA  5014               	movf	??_MFRC522_ToCard2^0,w,c
  6110  0013CC  5C1D               	subwf	MFRC522_ToCard2@i^0,w,c
  6111  0013CE  5015               	movf	(??_MFRC522_ToCard2+1)^0,w,c
  6112  0013D0  581E               	subwfb	(MFRC522_ToCard2@i+1)^0,w,c
  6113  0013D2  A0D8               	btfss	status,0,c
  6114  0013D4  EFEE  F009         	goto	u2971
  6115  0013D8  EFF0  F009         	goto	u2970
  6116  0013DC                     u2971:
  6117  0013DC  EFD5  F009         	goto	l3236
  6118  0013E0                     u2970:
  6119  0013E0                     
  6120                           ;rc522.c: 328:     MFRC522_Wr2(0x01, command);
  6121  0013E0  C01C  F001         	movff	MFRC522_ToCard2@command,MFRC522_Wr2@value
  6122  0013E4  0E01               	movlw	1
  6123  0013E6  EC7F  F014         	call	_MFRC522_Wr2
  6124  0013EA                     
  6125                           ;rc522.c: 329:     if(command == 0x0C)
  6126  0013EA  0E0C               	movlw	12
  6127  0013EC  181C               	xorwf	MFRC522_ToCard2@command^0,w,c
  6128  0013EE  A4D8               	btfss	status,2,c
  6129  0013F0  EFFC  F009         	goto	u2981
  6130  0013F4  EFFE  F009         	goto	u2980
  6131  0013F8                     u2981:
  6132  0013F8  EF03  F00A         	goto	l3248
  6133  0013FC                     u2980:
  6134  0013FC                     
  6135                           ;rc522.c: 330:     {;rc522.c: 331:         MFRC522_Set_Bit2(0x0D, 0x80);
  6136  0013FC  0E80               	movlw	128
  6137  0013FE  6E0A               	movwf	MFRC522_Set_Bit2@mask^0,c
  6138  001400  0E0D               	movlw	13
  6139  001402  EC2E  F018         	call	_MFRC522_Set_Bit2
  6140  001406                     l3248:
  6141                           
  6142                           ;rc522.c: 333:     i = 0xFFFF;
  6143  001406  681D               	setf	MFRC522_ToCard2@i^0,c
  6144  001408  681E               	setf	(MFRC522_ToCard2@i+1)^0,c
  6145  00140A                     l344:
  6146                           
  6147                           ;rc522.c: 335:     {;rc522.c: 336:         n = MFRC522_Rd2(0x04);
  6148  00140A  0E04               	movlw	4
  6149  00140C  ECD3  F010         	call	_MFRC522_Rd2
  6150  001410  6E1F               	movwf	MFRC522_ToCard2@n^0,c
  6151  001412                     
  6152                           ;rc522.c: 337:         i--;
  6153  001412  061D               	decf	MFRC522_ToCard2@i^0,f,c
  6154  001414  A0D8               	btfss	status,0,c
  6155  001416  061E               	decf	(MFRC522_ToCard2@i+1)^0,f,c
  6156  001418                     
  6157                           ;rc522.c: 338:     }while(i && !(n & 0x01) && !(n & waitIRq));
  6158  001418  501D               	movf	MFRC522_ToCard2@i^0,w,c
  6159  00141A  101E               	iorwf	(MFRC522_ToCard2@i+1)^0,w,c
  6160  00141C  B4D8               	btfsc	status,2,c
  6161  00141E  EF13  F00A         	goto	u2991
  6162  001422  EF15  F00A         	goto	u2990
  6163  001426                     u2991:
  6164  001426  EF26  F00A         	goto	l3258
  6165  00142A                     u2990:
  6166  00142A  B01F               	btfsc	MFRC522_ToCard2@n^0,0,c
  6167  00142C  EF1A  F00A         	goto	u3001
  6168  001430  EF1C  F00A         	goto	u3000
  6169  001434                     u3001:
  6170  001434  EF26  F00A         	goto	l3258
  6171  001438                     u3000:
  6172  001438  501F               	movf	MFRC522_ToCard2@n^0,w,c
  6173  00143A  1418               	andwf	MFRC522_ToCard2@waitIRq^0,w,c
  6174  00143C  0900               	iorlw	0
  6175  00143E  B4D8               	btfsc	status,2,c
  6176  001440  EF24  F00A         	goto	u3011
  6177  001444  EF26  F00A         	goto	u3010
  6178  001448                     u3011:
  6179  001448  EF05  F00A         	goto	l344
  6180  00144C                     u3010:
  6181  00144C                     l3258:
  6182                           
  6183                           ;rc522.c: 340:     MFRC522_Clear_Bit2(0x0D, 0x80);
  6184  00144C  0E80               	movlw	128
  6185  00144E  6E0A               	movwf	MFRC522_Clear_Bit2@mask^0,c
  6186  001450  0E0D               	movlw	13
  6187  001452  EC14  F018         	call	_MFRC522_Clear_Bit2
  6188  001456                     
  6189                           ;rc522.c: 341:     if(i != 0)
  6190  001456  501D               	movf	MFRC522_ToCard2@i^0,w,c
  6191  001458  101E               	iorwf	(MFRC522_ToCard2@i+1)^0,w,c
  6192  00145A  B4D8               	btfsc	status,2,c
  6193  00145C  EF32  F00A         	goto	u3021
  6194  001460  EF34  F00A         	goto	u3020
  6195  001464                     u3021:
  6196  001464  EFD5  F00A         	goto	l348
  6197  001468                     u3020:
  6198  001468                     
  6199                           ;rc522.c: 342:     {;rc522.c: 343:         if(!(MFRC522_Rd2(0x06) & 0x1B))
  6200  001468  0E06               	movlw	6
  6201  00146A  ECD3  F010         	call	_MFRC522_Rd2
  6202  00146E  6E14               	movwf	??_MFRC522_ToCard2^0,c
  6203  001470  0E1B               	movlw	27
  6204  001472  1614               	andwf	??_MFRC522_ToCard2^0,f,c
  6205  001474  A4D8               	btfss	status,2,c
  6206  001476  EF3F  F00A         	goto	u3031
  6207  00147A  EF41  F00A         	goto	u3030
  6208  00147E                     u3031:
  6209  00147E  EFD3  F00A         	goto	l3296
  6210  001482                     u3030:
  6211  001482                     
  6212                           ;rc522.c: 344:         {;rc522.c: 345:             _status = 0;
  6213  001482  0E00               	movlw	0
  6214  001484  6E19               	movwf	MFRC522_ToCard2@_status^0,c
  6215  001486                     
  6216                           ;rc522.c: 346:             if(n & irqEn & 0x01)
  6217  001486  501F               	movf	MFRC522_ToCard2@n^0,w,c
  6218  001488  141B               	andwf	MFRC522_ToCard2@irqEn^0,w,c
  6219  00148A  6E14               	movwf	??_MFRC522_ToCard2^0,c
  6220  00148C  A014               	btfss	??_MFRC522_ToCard2^0,0,c
  6221  00148E  EF4B  F00A         	goto	u3041
  6222  001492  EF4D  F00A         	goto	u3040
  6223  001496                     u3041:
  6224  001496  EF4F  F00A         	goto	l3270
  6225  00149A                     u3040:
  6226  00149A                     
  6227                           ;rc522.c: 347:             {;rc522.c: 348:                 _status = 1;
  6228  00149A  0E01               	movlw	1
  6229  00149C  6E19               	movwf	MFRC522_ToCard2@_status^0,c
  6230  00149E                     l3270:
  6231                           
  6232                           ;rc522.c: 350:             if(command == 0x0C)
  6233  00149E  0E0C               	movlw	12
  6234  0014A0  181C               	xorwf	MFRC522_ToCard2@command^0,w,c
  6235  0014A2  A4D8               	btfss	status,2,c
  6236  0014A4  EF56  F00A         	goto	u3051
  6237  0014A8  EF58  F00A         	goto	u3050
  6238  0014AC                     u3051:
  6239  0014AC  EFD5  F00A         	goto	l348
  6240  0014B0                     u3050:
  6241  0014B0                     
  6242                           ;rc522.c: 351:             {;rc522.c: 352:                 n = MFRC522_Rd2(0x0A);
  6243  0014B0  0E0A               	movlw	10
  6244  0014B2  ECD3  F010         	call	_MFRC522_Rd2
  6245  0014B6  6E1F               	movwf	MFRC522_ToCard2@n^0,c
  6246                           
  6247                           ;rc522.c: 353:                 lastBits = MFRC522_Rd2(0x0C) & 0x07;
  6248  0014B8  0E0C               	movlw	12
  6249  0014BA  ECD3  F010         	call	_MFRC522_Rd2
  6250  0014BE  0B07               	andlw	7
  6251  0014C0  6E1A               	movwf	MFRC522_ToCard2@lastBits^0,c
  6252  0014C2                     
  6253                           ;rc522.c: 354:                 if(lastBits)
  6254  0014C2  501A               	movf	MFRC522_ToCard2@lastBits^0,w,c
  6255  0014C4  B4D8               	btfsc	status,2,c
  6256  0014C6  EF67  F00A         	goto	u3061
  6257  0014CA  EF69  F00A         	goto	u3060
  6258  0014CE                     u3061:
  6259  0014CE  EF8B  F00A         	goto	l3278
  6260  0014D2                     u3060:
  6261  0014D2                     
  6262                           ;rc522.c: 355:                 {;rc522.c: 356:                     *backLen = (n-1) * 8 
      +                          + lastBits;
  6263  0014D2  0EF8               	movlw	248
  6264  0014D4  6E14               	movwf	??_MFRC522_ToCard2^0,c
  6265  0014D6  0EFF               	movlw	255
  6266  0014D8  6E15               	movwf	(??_MFRC522_ToCard2+1)^0,c
  6267  0014DA  501A               	movf	MFRC522_ToCard2@lastBits^0,w,c
  6268  0014DC  C01F  F016         	movff	MFRC522_ToCard2@n,??_MFRC522_ToCard2+2
  6269  0014E0  6A17               	clrf	(??_MFRC522_ToCard2+3)^0,c
  6270  0014E2  90D8               	bcf	status,0,c
  6271  0014E4  3616               	rlcf	(??_MFRC522_ToCard2+2)^0,f,c
  6272  0014E6  3617               	rlcf	(??_MFRC522_ToCard2+3)^0,f,c
  6273  0014E8  90D8               	bcf	status,0,c
  6274  0014EA  3616               	rlcf	(??_MFRC522_ToCard2+2)^0,f,c
  6275  0014EC  3617               	rlcf	(??_MFRC522_ToCard2+3)^0,f,c
  6276  0014EE  90D8               	bcf	status,0,c
  6277  0014F0  3616               	rlcf	(??_MFRC522_ToCard2+2)^0,f,c
  6278  0014F2  3617               	rlcf	(??_MFRC522_ToCard2+3)^0,f,c
  6279  0014F4  2616               	addwf	(??_MFRC522_ToCard2+2)^0,f,c
  6280  0014F6  0E00               	movlw	0
  6281  0014F8  2217               	addwfc	(??_MFRC522_ToCard2+3)^0,f,c
  6282  0014FA  5014               	movf	??_MFRC522_ToCard2^0,w,c
  6283  0014FC  2616               	addwf	(??_MFRC522_ToCard2+2)^0,f,c
  6284  0014FE  5015               	movf	(??_MFRC522_ToCard2+1)^0,w,c
  6285  001500  2217               	addwfc	(??_MFRC522_ToCard2+3)^0,f,c
  6286  001502  C012  FFD9         	movff	MFRC522_ToCard2@backLen,fsr2l
  6287  001506  C013  FFDA         	movff	MFRC522_ToCard2@backLen+1,fsr2h
  6288  00150A  C016  FFDE         	movff	??_MFRC522_ToCard2+2,postinc2
  6289  00150E  C017  FFDD         	movff	??_MFRC522_ToCard2+3,postdec2
  6290                           
  6291                           ;rc522.c: 357:                 }
  6292  001512  EF95  F00A         	goto	l3280
  6293  001516                     l3278:
  6294                           
  6295                           ;rc522.c: 359:                 {;rc522.c: 360:                     *backLen = n * 8;
  6296  001516  501F               	movf	MFRC522_ToCard2@n^0,w,c
  6297  001518  0D08               	mullw	8
  6298  00151A  C012  FFD9         	movff	MFRC522_ToCard2@backLen,fsr2l
  6299  00151E  C013  FFDA         	movff	MFRC522_ToCard2@backLen+1,fsr2h
  6300  001522  CFF3 FFDE          	movff	prodl,postinc2
  6301  001526  CFF4 FFDD          	movff	prodh,postdec2
  6302  00152A                     l3280:
  6303                           
  6304                           ;rc522.c: 362:                 if(n == 0)
  6305  00152A  501F               	movf	MFRC522_ToCard2@n^0,w,c
  6306  00152C  A4D8               	btfss	status,2,c
  6307  00152E  EF9B  F00A         	goto	u3071
  6308  001532  EF9D  F00A         	goto	u3070
  6309  001536                     u3071:
  6310  001536  EF9F  F00A         	goto	l3284
  6311  00153A                     u3070:
  6312  00153A                     
  6313                           ;rc522.c: 363:                 {;rc522.c: 364:                     n = 1;
  6314  00153A  0E01               	movlw	1
  6315  00153C  6E1F               	movwf	MFRC522_ToCard2@n^0,c
  6316  00153E                     l3284:
  6317                           
  6318                           ;rc522.c: 366:                 if(n > 16)
  6319  00153E  0E10               	movlw	16
  6320  001540  641F               	cpfsgt	MFRC522_ToCard2@n^0,c
  6321  001542  EFA5  F00A         	goto	u3081
  6322  001546  EFA7  F00A         	goto	u3080
  6323  00154A                     u3081:
  6324  00154A  EFA9  F00A         	goto	l355
  6325  00154E                     u3080:
  6326  00154E                     
  6327                           ;rc522.c: 367:                 {;rc522.c: 368:                     n = 16;
  6328  00154E  0E10               	movlw	16
  6329  001550  6E1F               	movwf	MFRC522_ToCard2@n^0,c
  6330  001552                     l355:
  6331                           
  6332                           ;rc522.c: 370:                 for(i=0; i<n; i++)
  6333  001552  0E00               	movlw	0
  6334  001554  6E1E               	movwf	(MFRC522_ToCard2@i+1)^0,c
  6335  001556  0E00               	movlw	0
  6336  001558  6E1D               	movwf	MFRC522_ToCard2@i^0,c
  6337  00155A  EFBB  F00A         	goto	l3292
  6338  00155E                     l3288:
  6339                           
  6340                           ;rc522.c: 371:                 {;rc522.c: 372:                     backData[i] = MFRC522
      +                          _Rd2(0x09);
  6341  00155E  501D               	movf	MFRC522_ToCard2@i^0,w,c
  6342  001560  2410               	addwf	MFRC522_ToCard2@backData^0,w,c
  6343  001562  6ED9               	movwf	fsr2l,c
  6344  001564  501E               	movf	(MFRC522_ToCard2@i+1)^0,w,c
  6345  001566  2011               	addwfc	(MFRC522_ToCard2@backData+1)^0,w,c
  6346  001568  6EDA               	movwf	fsr2h,c
  6347  00156A  0E09               	movlw	9
  6348  00156C  ECD3  F010         	call	_MFRC522_Rd2
  6349  001570  6EDF               	movwf	indf2,c
  6350  001572                     
  6351                           ;rc522.c: 373:                 }
  6352  001572  4A1D               	infsnz	MFRC522_ToCard2@i^0,f,c
  6353  001574  2A1E               	incf	(MFRC522_ToCard2@i+1)^0,f,c
  6354  001576                     l3292:
  6355  001576  501F               	movf	MFRC522_ToCard2@n^0,w,c
  6356  001578  6E14               	movwf	??_MFRC522_ToCard2^0,c
  6357  00157A  6A15               	clrf	(??_MFRC522_ToCard2+1)^0,c
  6358  00157C  5014               	movf	??_MFRC522_ToCard2^0,w,c
  6359  00157E  5C1D               	subwf	MFRC522_ToCard2@i^0,w,c
  6360  001580  5015               	movf	(??_MFRC522_ToCard2+1)^0,w,c
  6361  001582  581E               	subwfb	(MFRC522_ToCard2@i+1)^0,w,c
  6362  001584  A0D8               	btfss	status,0,c
  6363  001586  EFC7  F00A         	goto	u3091
  6364  00158A  EFC9  F00A         	goto	u3090
  6365  00158E                     u3091:
  6366  00158E  EFAF  F00A         	goto	l3288
  6367  001592                     u3090:
  6368  001592                     
  6369                           ;rc522.c: 374:                 backData[i] = 0;
  6370  001592  501D               	movf	MFRC522_ToCard2@i^0,w,c
  6371  001594  2410               	addwf	MFRC522_ToCard2@backData^0,w,c
  6372  001596  6ED9               	movwf	fsr2l,c
  6373  001598  501E               	movf	(MFRC522_ToCard2@i+1)^0,w,c
  6374  00159A  2011               	addwfc	(MFRC522_ToCard2@backData+1)^0,w,c
  6375  00159C  6EDA               	movwf	fsr2h,c
  6376  00159E  0E00               	movlw	0
  6377  0015A0  6EDF               	movwf	indf2,c
  6378  0015A2  EFD5  F00A         	goto	l348
  6379  0015A6                     l3296:
  6380                           
  6381                           ;rc522.c: 378:         {;rc522.c: 379:             _status = 2;
  6382  0015A6  0E02               	movlw	2
  6383  0015A8  6E19               	movwf	MFRC522_ToCard2@_status^0,c
  6384  0015AA                     l348:
  6385                           
  6386                           ;rc522.c: 382:     return _status;
  6387  0015AA  5019               	movf	MFRC522_ToCard2@_status^0,w,c
  6388  0015AC  0012               	return		;funcret
  6389  0015AE                     __end_of_MFRC522_ToCard2:
  6390                           	callstack 0
  6391                           
  6392 ;; *************** function _MFRC522_ToCard *****************
  6393 ;; Defined at:
  6394 ;;		line 205 in file "rc522.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;  command         1    wreg     unsigned char 
  6397 ;;  sendData        2   12[COMRAM] PTR unsigned char 
  6398 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), UID_1(20), TagType1(1), 
  6399 ;;  sendLen         1   14[COMRAM] unsigned char 
  6400 ;;  backData        2   15[COMRAM] PTR unsigned char 
  6401 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), UID_1(20), TagType1(1), 
  6402 ;;  backLen         2   17[COMRAM] PTR unsigned int 
  6403 ;;		 -> MFRC522_AntiColl@unLen(2), MFRC522_Halt@unLen(2), MFRC522_SelectTag@recvBits(2), MFRC522_Request@backBits(2), 
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;  command         1   27[COMRAM] unsigned char 
  6406 ;;  i               2   28[COMRAM] unsigned int 
  6407 ;;  n               1   30[COMRAM] unsigned char 
  6408 ;;  irqEn           1   26[COMRAM] unsigned char 
  6409 ;;  lastBits        1   25[COMRAM] unsigned char 
  6410 ;;  _status         1   24[COMRAM] unsigned char 
  6411 ;;  waitIRq         1   23[COMRAM] unsigned char 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  1    wreg      unsigned char 
  6414 ;; Registers used:
  6415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6421 ;;      Params:         7       0       0       0       0       0       0       0       0
  6422 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6423 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6424 ;;      Totals:        19       0       0       0       0       0       0       0       0
  6425 ;;Total ram usage:       19 bytes
  6426 ;; Hardware stack levels used: 1
  6427 ;; Hardware stack levels required when called: 2
  6428 ;; This function calls:
  6429 ;;		_MFRC522_Clear_Bit
  6430 ;;		_MFRC522_Rd
  6431 ;;		_MFRC522_Set_Bit
  6432 ;;		_MFRC522_Wr
  6433 ;; This function is called by:
  6434 ;;		_MFRC522_Request
  6435 ;;		_MFRC522_Halt
  6436 ;;		_MFRC522_AntiColl
  6437 ;;		_MFRC522_SelectTag
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           	psect	text36
  6442  0015AE                     __ptext36:
  6443                           	callstack 0
  6444  0015AE                     _MFRC522_ToCard:
  6445                           	callstack 26
  6446                           
  6447                           ;incstack = 0
  6448                           ;MFRC522_ToCard@command stored from wreg
  6449  0015AE  6E1C               	movwf	MFRC522_ToCard@command^0,c
  6450  0015B0                     
  6451                           ;rc522.c: 205: char MFRC522_ToCard(char command, char *sendData, char sendLen, char *bac
      +                          kData, unsigned *backLen);rc522.c: 206: {;rc522.c: 207:     char _status = 2;
  6452  0015B0  0E02               	movlw	2
  6453  0015B2  6E19               	movwf	MFRC522_ToCard@_status^0,c
  6454                           
  6455                           ;rc522.c: 208:     char irqEn = 0x00;
  6456  0015B4  0E00               	movlw	0
  6457  0015B6  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
  6458                           
  6459                           ;rc522.c: 209:     char waitIRq = 0x00;
  6460  0015B8  0E00               	movlw	0
  6461  0015BA  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
  6462                           
  6463                           ;rc522.c: 210:     char lastBits;;rc522.c: 211:     char n;;rc522.c: 212:     unsigned i
      +                          ;;rc522.c: 214:     switch(command)
  6464  0015BC  EFEC  F00A         	goto	l3148
  6465  0015C0                     l3142:
  6466                           
  6467                           ;rc522.c: 217:             irqEn = 0x12;
  6468  0015C0  0E12               	movlw	18
  6469  0015C2  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
  6470                           
  6471                           ;rc522.c: 218:             waitIRq = 0x10;
  6472  0015C4  0E10               	movlw	16
  6473  0015C6  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
  6474                           
  6475                           ;rc522.c: 219:             break;
  6476  0015C8  EF01  F00B         	goto	l3150
  6477  0015CC                     l3144:
  6478                           
  6479                           ;rc522.c: 222:             irqEn = 0x77;
  6480  0015CC  0E77               	movlw	119
  6481  0015CE  6E1B               	movwf	MFRC522_ToCard@irqEn^0,c
  6482                           
  6483                           ;rc522.c: 223:             waitIRq = 0x30;
  6484  0015D0  0E30               	movlw	48
  6485  0015D2  6E18               	movwf	MFRC522_ToCard@waitIRq^0,c
  6486                           
  6487                           ;rc522.c: 224:             break;
  6488  0015D4  EF01  F00B         	goto	l3150
  6489  0015D8                     l3148:
  6490  0015D8  501C               	movf	MFRC522_ToCard@command^0,w,c
  6491  0015DA  6E14               	movwf	??_MFRC522_ToCard^0,c
  6492  0015DC  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
  6493                           
  6494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6495                           ; Switch size 1, requested type "simple"
  6496                           ; Number of cases is 1, Range of values is 0 to 0
  6497                           ; switch strategies available:
  6498                           ; Name         Instructions Cycles
  6499                           ; simple_byte            4     3 (average)
  6500                           ;	Chosen strategy is simple_byte
  6501  0015DE  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  6502  0015E0  0A00               	xorlw	0	; case 0
  6503  0015E2  B4D8               	btfsc	status,2,c
  6504  0015E4  EFF6  F00A         	goto	l4332
  6505  0015E8  EF01  F00B         	goto	l3150
  6506  0015EC                     l4332:
  6507                           
  6508                           ; Switch size 1, requested type "simple"
  6509                           ; Number of cases is 2, Range of values is 12 to 14
  6510                           ; switch strategies available:
  6511                           ; Name         Instructions Cycles
  6512                           ; simple_byte            7     4 (average)
  6513                           ;	Chosen strategy is simple_byte
  6514  0015EC  5014               	movf	??_MFRC522_ToCard^0,w,c
  6515  0015EE  0A0C               	xorlw	12	; case 12
  6516  0015F0  B4D8               	btfsc	status,2,c
  6517  0015F2  EFE6  F00A         	goto	l3144
  6518  0015F6  0A02               	xorlw	2	; case 14
  6519  0015F8  B4D8               	btfsc	status,2,c
  6520  0015FA  EFE0  F00A         	goto	l3142
  6521  0015FE  EF01  F00B         	goto	l3150
  6522  001602                     l3150:
  6523                           
  6524                           ;rc522.c: 229:     MFRC522_Wr(0x02, irqEn | 0x80);
  6525  001602  501B               	movf	MFRC522_ToCard@irqEn^0,w,c
  6526  001604  0980               	iorlw	128
  6527  001606  6E01               	movwf	MFRC522_Wr@value^0,c
  6528  001608  0E02               	movlw	2
  6529  00160A  ECC9  F014         	call	_MFRC522_Wr
  6530                           
  6531                           ;rc522.c: 230:     MFRC522_Clear_Bit(0x04, 0x80);
  6532  00160E  0E80               	movlw	128
  6533  001610  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  6534  001612  0E04               	movlw	4
  6535  001614  EC21  F018         	call	_MFRC522_Clear_Bit
  6536                           
  6537                           ;rc522.c: 231:     MFRC522_Set_Bit(0x0A, 0x80);
  6538  001618  0E80               	movlw	128
  6539  00161A  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  6540  00161C  0E0A               	movlw	10
  6541  00161E  EC3A  F018         	call	_MFRC522_Set_Bit
  6542                           
  6543                           ;rc522.c: 232:     MFRC522_Wr(0x01, 0x00);
  6544  001622  0E00               	movlw	0
  6545  001624  6E01               	movwf	MFRC522_Wr@value^0,c
  6546  001626  0E01               	movlw	1
  6547  001628  ECC9  F014         	call	_MFRC522_Wr
  6548  00162C                     
  6549                           ;rc522.c: 234:     for(i=0; i<sendLen; i++)
  6550  00162C  0E00               	movlw	0
  6551  00162E  6E1E               	movwf	(MFRC522_ToCard@i+1)^0,c
  6552  001630  0E00               	movlw	0
  6553  001632  6E1D               	movwf	MFRC522_ToCard@i^0,c
  6554  001634  EF29  F00B         	goto	l3158
  6555  001638                     l3154:
  6556                           
  6557                           ;rc522.c: 235:     {;rc522.c: 236:         MFRC522_Wr(0x09, sendData[i]);
  6558  001638  501D               	movf	MFRC522_ToCard@i^0,w,c
  6559  00163A  240D               	addwf	MFRC522_ToCard@sendData^0,w,c
  6560  00163C  6ED9               	movwf	fsr2l,c
  6561  00163E  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
  6562  001640  200E               	addwfc	(MFRC522_ToCard@sendData+1)^0,w,c
  6563  001642  6EDA               	movwf	fsr2h,c
  6564  001644  50DF               	movf	indf2,w,c
  6565  001646  6E01               	movwf	MFRC522_Wr@value^0,c
  6566  001648  0E09               	movlw	9
  6567  00164A  ECC9  F014         	call	_MFRC522_Wr
  6568  00164E                     
  6569                           ;rc522.c: 237:     }
  6570  00164E  4A1D               	infsnz	MFRC522_ToCard@i^0,f,c
  6571  001650  2A1E               	incf	(MFRC522_ToCard@i+1)^0,f,c
  6572  001652                     l3158:
  6573  001652  500F               	movf	MFRC522_ToCard@sendLen^0,w,c
  6574  001654  6E14               	movwf	??_MFRC522_ToCard^0,c
  6575  001656  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
  6576  001658  5014               	movf	??_MFRC522_ToCard^0,w,c
  6577  00165A  5C1D               	subwf	MFRC522_ToCard@i^0,w,c
  6578  00165C  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  6579  00165E  581E               	subwfb	(MFRC522_ToCard@i+1)^0,w,c
  6580  001660  A0D8               	btfss	status,0,c
  6581  001662  EF35  F00B         	goto	u2841
  6582  001666  EF37  F00B         	goto	u2840
  6583  00166A                     u2841:
  6584  00166A  EF1C  F00B         	goto	l3154
  6585  00166E                     u2840:
  6586  00166E                     
  6587                           ;rc522.c: 238:     MFRC522_Wr(0x01, command);
  6588  00166E  C01C  F001         	movff	MFRC522_ToCard@command,MFRC522_Wr@value
  6589  001672  0E01               	movlw	1
  6590  001674  ECC9  F014         	call	_MFRC522_Wr
  6591  001678                     
  6592                           ;rc522.c: 239:     if(command == 0x0C)
  6593  001678  0E0C               	movlw	12
  6594  00167A  181C               	xorwf	MFRC522_ToCard@command^0,w,c
  6595  00167C  A4D8               	btfss	status,2,c
  6596  00167E  EF43  F00B         	goto	u2851
  6597  001682  EF45  F00B         	goto	u2850
  6598  001686                     u2851:
  6599  001686  EF4A  F00B         	goto	l3166
  6600  00168A                     u2850:
  6601  00168A                     
  6602                           ;rc522.c: 240:     {;rc522.c: 241:         MFRC522_Set_Bit(0x0D, 0x80);
  6603  00168A  0E80               	movlw	128
  6604  00168C  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  6605  00168E  0E0D               	movlw	13
  6606  001690  EC3A  F018         	call	_MFRC522_Set_Bit
  6607  001694                     l3166:
  6608                           
  6609                           ;rc522.c: 243:     i = 0xFFFF;
  6610  001694  681D               	setf	MFRC522_ToCard@i^0,c
  6611  001696  681E               	setf	(MFRC522_ToCard@i+1)^0,c
  6612  001698                     l316:
  6613                           
  6614                           ;rc522.c: 245:     {;rc522.c: 246:         n = MFRC522_Rd(0x04);
  6615  001698  0E04               	movlw	4
  6616  00169A  EC2F  F011         	call	_MFRC522_Rd
  6617  00169E  6E1F               	movwf	MFRC522_ToCard@n^0,c
  6618  0016A0                     
  6619                           ;rc522.c: 247:         i--;
  6620  0016A0  061D               	decf	MFRC522_ToCard@i^0,f,c
  6621  0016A2  A0D8               	btfss	status,0,c
  6622  0016A4  061E               	decf	(MFRC522_ToCard@i+1)^0,f,c
  6623  0016A6                     
  6624                           ;rc522.c: 248:     }while(i && !(n & 0x01) && !(n & waitIRq));
  6625  0016A6  501D               	movf	MFRC522_ToCard@i^0,w,c
  6626  0016A8  101E               	iorwf	(MFRC522_ToCard@i+1)^0,w,c
  6627  0016AA  B4D8               	btfsc	status,2,c
  6628  0016AC  EF5A  F00B         	goto	u2861
  6629  0016B0  EF5C  F00B         	goto	u2860
  6630  0016B4                     u2861:
  6631  0016B4  EF6D  F00B         	goto	l3176
  6632  0016B8                     u2860:
  6633  0016B8  B01F               	btfsc	MFRC522_ToCard@n^0,0,c
  6634  0016BA  EF61  F00B         	goto	u2871
  6635  0016BE  EF63  F00B         	goto	u2870
  6636  0016C2                     u2871:
  6637  0016C2  EF6D  F00B         	goto	l3176
  6638  0016C6                     u2870:
  6639  0016C6  501F               	movf	MFRC522_ToCard@n^0,w,c
  6640  0016C8  1418               	andwf	MFRC522_ToCard@waitIRq^0,w,c
  6641  0016CA  0900               	iorlw	0
  6642  0016CC  B4D8               	btfsc	status,2,c
  6643  0016CE  EF6B  F00B         	goto	u2881
  6644  0016D2  EF6D  F00B         	goto	u2880
  6645  0016D6                     u2881:
  6646  0016D6  EF4C  F00B         	goto	l316
  6647  0016DA                     u2880:
  6648  0016DA                     l3176:
  6649                           
  6650                           ;rc522.c: 250:     MFRC522_Clear_Bit(0x0D, 0x80);
  6651  0016DA  0E80               	movlw	128
  6652  0016DC  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  6653  0016DE  0E0D               	movlw	13
  6654  0016E0  EC21  F018         	call	_MFRC522_Clear_Bit
  6655  0016E4                     
  6656                           ;rc522.c: 251:     if(i != 0)
  6657  0016E4  501D               	movf	MFRC522_ToCard@i^0,w,c
  6658  0016E6  101E               	iorwf	(MFRC522_ToCard@i+1)^0,w,c
  6659  0016E8  B4D8               	btfsc	status,2,c
  6660  0016EA  EF79  F00B         	goto	u2891
  6661  0016EE  EF7B  F00B         	goto	u2890
  6662  0016F2                     u2891:
  6663  0016F2  EF1C  F00C         	goto	l320
  6664  0016F6                     u2890:
  6665  0016F6                     
  6666                           ;rc522.c: 252:     {;rc522.c: 253:         if(!(MFRC522_Rd(0x06) & 0x1B))
  6667  0016F6  0E06               	movlw	6
  6668  0016F8  EC2F  F011         	call	_MFRC522_Rd
  6669  0016FC  6E14               	movwf	??_MFRC522_ToCard^0,c
  6670  0016FE  0E1B               	movlw	27
  6671  001700  1614               	andwf	??_MFRC522_ToCard^0,f,c
  6672  001702  A4D8               	btfss	status,2,c
  6673  001704  EF86  F00B         	goto	u2901
  6674  001708  EF88  F00B         	goto	u2900
  6675  00170C                     u2901:
  6676  00170C  EF1A  F00C         	goto	l3214
  6677  001710                     u2900:
  6678  001710                     
  6679                           ;rc522.c: 254:         {;rc522.c: 255:             _status = 0;
  6680  001710  0E00               	movlw	0
  6681  001712  6E19               	movwf	MFRC522_ToCard@_status^0,c
  6682  001714                     
  6683                           ;rc522.c: 256:             if(n & irqEn & 0x01)
  6684  001714  501F               	movf	MFRC522_ToCard@n^0,w,c
  6685  001716  141B               	andwf	MFRC522_ToCard@irqEn^0,w,c
  6686  001718  6E14               	movwf	??_MFRC522_ToCard^0,c
  6687  00171A  A014               	btfss	??_MFRC522_ToCard^0,0,c
  6688  00171C  EF92  F00B         	goto	u2911
  6689  001720  EF94  F00B         	goto	u2910
  6690  001724                     u2911:
  6691  001724  EF96  F00B         	goto	l3188
  6692  001728                     u2910:
  6693  001728                     
  6694                           ;rc522.c: 257:             {;rc522.c: 258:                 _status = 1;
  6695  001728  0E01               	movlw	1
  6696  00172A  6E19               	movwf	MFRC522_ToCard@_status^0,c
  6697  00172C                     l3188:
  6698                           
  6699                           ;rc522.c: 260:             if(command == 0x0C)
  6700  00172C  0E0C               	movlw	12
  6701  00172E  181C               	xorwf	MFRC522_ToCard@command^0,w,c
  6702  001730  A4D8               	btfss	status,2,c
  6703  001732  EF9D  F00B         	goto	u2921
  6704  001736  EF9F  F00B         	goto	u2920
  6705  00173A                     u2921:
  6706  00173A  EF1C  F00C         	goto	l320
  6707  00173E                     u2920:
  6708  00173E                     
  6709                           ;rc522.c: 261:             {;rc522.c: 262:                 n = MFRC522_Rd(0x0A);
  6710  00173E  0E0A               	movlw	10
  6711  001740  EC2F  F011         	call	_MFRC522_Rd
  6712  001744  6E1F               	movwf	MFRC522_ToCard@n^0,c
  6713                           
  6714                           ;rc522.c: 263:                 lastBits = MFRC522_Rd(0x0C) & 0x07;
  6715  001746  0E0C               	movlw	12
  6716  001748  EC2F  F011         	call	_MFRC522_Rd
  6717  00174C  0B07               	andlw	7
  6718  00174E  6E1A               	movwf	MFRC522_ToCard@lastBits^0,c
  6719  001750                     
  6720                           ;rc522.c: 264:                 if(lastBits)
  6721  001750  501A               	movf	MFRC522_ToCard@lastBits^0,w,c
  6722  001752  B4D8               	btfsc	status,2,c
  6723  001754  EFAE  F00B         	goto	u2931
  6724  001758  EFB0  F00B         	goto	u2930
  6725  00175C                     u2931:
  6726  00175C  EFD2  F00B         	goto	l3196
  6727  001760                     u2930:
  6728  001760                     
  6729                           ;rc522.c: 265:                 {;rc522.c: 266:                     *backLen = (n-1) * 8 
      +                          + lastBits;
  6730  001760  0EF8               	movlw	248
  6731  001762  6E14               	movwf	??_MFRC522_ToCard^0,c
  6732  001764  0EFF               	movlw	255
  6733  001766  6E15               	movwf	(??_MFRC522_ToCard+1)^0,c
  6734  001768  501A               	movf	MFRC522_ToCard@lastBits^0,w,c
  6735  00176A  C01F  F016         	movff	MFRC522_ToCard@n,??_MFRC522_ToCard+2
  6736  00176E  6A17               	clrf	(??_MFRC522_ToCard+3)^0,c
  6737  001770  90D8               	bcf	status,0,c
  6738  001772  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  6739  001774  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  6740  001776  90D8               	bcf	status,0,c
  6741  001778  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  6742  00177A  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  6743  00177C  90D8               	bcf	status,0,c
  6744  00177E  3616               	rlcf	(??_MFRC522_ToCard+2)^0,f,c
  6745  001780  3617               	rlcf	(??_MFRC522_ToCard+3)^0,f,c
  6746  001782  2616               	addwf	(??_MFRC522_ToCard+2)^0,f,c
  6747  001784  0E00               	movlw	0
  6748  001786  2217               	addwfc	(??_MFRC522_ToCard+3)^0,f,c
  6749  001788  5014               	movf	??_MFRC522_ToCard^0,w,c
  6750  00178A  2616               	addwf	(??_MFRC522_ToCard+2)^0,f,c
  6751  00178C  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  6752  00178E  2217               	addwfc	(??_MFRC522_ToCard+3)^0,f,c
  6753  001790  C012  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  6754  001794  C013  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  6755  001798  C016  FFDE         	movff	??_MFRC522_ToCard+2,postinc2
  6756  00179C  C017  FFDD         	movff	??_MFRC522_ToCard+3,postdec2
  6757                           
  6758                           ;rc522.c: 267:                 }
  6759  0017A0  EFDC  F00B         	goto	l3198
  6760  0017A4                     l3196:
  6761                           
  6762                           ;rc522.c: 269:                 {;rc522.c: 270:                     *backLen = n * 8;
  6763  0017A4  501F               	movf	MFRC522_ToCard@n^0,w,c
  6764  0017A6  0D08               	mullw	8
  6765  0017A8  C012  FFD9         	movff	MFRC522_ToCard@backLen,fsr2l
  6766  0017AC  C013  FFDA         	movff	MFRC522_ToCard@backLen+1,fsr2h
  6767  0017B0  CFF3 FFDE          	movff	prodl,postinc2
  6768  0017B4  CFF4 FFDD          	movff	prodh,postdec2
  6769  0017B8                     l3198:
  6770                           
  6771                           ;rc522.c: 272:                 if(n == 0)
  6772  0017B8  501F               	movf	MFRC522_ToCard@n^0,w,c
  6773  0017BA  A4D8               	btfss	status,2,c
  6774  0017BC  EFE2  F00B         	goto	u2941
  6775  0017C0  EFE4  F00B         	goto	u2940
  6776  0017C4                     u2941:
  6777  0017C4  EFE6  F00B         	goto	l3202
  6778  0017C8                     u2940:
  6779  0017C8                     
  6780                           ;rc522.c: 273:                 {;rc522.c: 274:                     n = 1;
  6781  0017C8  0E01               	movlw	1
  6782  0017CA  6E1F               	movwf	MFRC522_ToCard@n^0,c
  6783  0017CC                     l3202:
  6784                           
  6785                           ;rc522.c: 276:                 if(n > 16)
  6786  0017CC  0E10               	movlw	16
  6787  0017CE  641F               	cpfsgt	MFRC522_ToCard@n^0,c
  6788  0017D0  EFEC  F00B         	goto	u2951
  6789  0017D4  EFEE  F00B         	goto	u2950
  6790  0017D8                     u2951:
  6791  0017D8  EFF0  F00B         	goto	l327
  6792  0017DC                     u2950:
  6793  0017DC                     
  6794                           ;rc522.c: 277:                 {;rc522.c: 278:                     n = 16;
  6795  0017DC  0E10               	movlw	16
  6796  0017DE  6E1F               	movwf	MFRC522_ToCard@n^0,c
  6797  0017E0                     l327:
  6798                           
  6799                           ;rc522.c: 280:                 for(i=0; i<n; i++)
  6800  0017E0  0E00               	movlw	0
  6801  0017E2  6E1E               	movwf	(MFRC522_ToCard@i+1)^0,c
  6802  0017E4  0E00               	movlw	0
  6803  0017E6  6E1D               	movwf	MFRC522_ToCard@i^0,c
  6804  0017E8  EF02  F00C         	goto	l3210
  6805  0017EC                     l3206:
  6806                           
  6807                           ;rc522.c: 281:                 {;rc522.c: 282:                     backData[i] = MFRC522
      +                          _Rd(0x09);
  6808  0017EC  501D               	movf	MFRC522_ToCard@i^0,w,c
  6809  0017EE  2410               	addwf	MFRC522_ToCard@backData^0,w,c
  6810  0017F0  6ED9               	movwf	fsr2l,c
  6811  0017F2  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
  6812  0017F4  2011               	addwfc	(MFRC522_ToCard@backData+1)^0,w,c
  6813  0017F6  6EDA               	movwf	fsr2h,c
  6814  0017F8  0E09               	movlw	9
  6815  0017FA  EC2F  F011         	call	_MFRC522_Rd
  6816  0017FE  6EDF               	movwf	indf2,c
  6817  001800                     
  6818                           ;rc522.c: 283:                 }
  6819  001800  4A1D               	infsnz	MFRC522_ToCard@i^0,f,c
  6820  001802  2A1E               	incf	(MFRC522_ToCard@i+1)^0,f,c
  6821  001804                     l3210:
  6822  001804  501F               	movf	MFRC522_ToCard@n^0,w,c
  6823  001806  6E14               	movwf	??_MFRC522_ToCard^0,c
  6824  001808  6A15               	clrf	(??_MFRC522_ToCard+1)^0,c
  6825  00180A  5014               	movf	??_MFRC522_ToCard^0,w,c
  6826  00180C  5C1D               	subwf	MFRC522_ToCard@i^0,w,c
  6827  00180E  5015               	movf	(??_MFRC522_ToCard+1)^0,w,c
  6828  001810  581E               	subwfb	(MFRC522_ToCard@i+1)^0,w,c
  6829  001812  A0D8               	btfss	status,0,c
  6830  001814  EF0E  F00C         	goto	u2961
  6831  001818  EF10  F00C         	goto	u2960
  6832  00181C                     u2961:
  6833  00181C  EFF6  F00B         	goto	l3206
  6834  001820                     u2960:
  6835  001820                     
  6836                           ;rc522.c: 284:                 backData[i] = 0;
  6837  001820  501D               	movf	MFRC522_ToCard@i^0,w,c
  6838  001822  2410               	addwf	MFRC522_ToCard@backData^0,w,c
  6839  001824  6ED9               	movwf	fsr2l,c
  6840  001826  501E               	movf	(MFRC522_ToCard@i+1)^0,w,c
  6841  001828  2011               	addwfc	(MFRC522_ToCard@backData+1)^0,w,c
  6842  00182A  6EDA               	movwf	fsr2h,c
  6843  00182C  0E00               	movlw	0
  6844  00182E  6EDF               	movwf	indf2,c
  6845  001830  EF1C  F00C         	goto	l320
  6846  001834                     l3214:
  6847                           
  6848                           ;rc522.c: 288:         {;rc522.c: 289:             _status = 2;
  6849  001834  0E02               	movlw	2
  6850  001836  6E19               	movwf	MFRC522_ToCard@_status^0,c
  6851  001838                     l320:
  6852                           
  6853                           ;rc522.c: 292:     return _status;
  6854  001838  5019               	movf	MFRC522_ToCard@_status^0,w,c
  6855  00183A  0012               	return		;funcret
  6856  00183C                     __end_of_MFRC522_ToCard:
  6857                           	callstack 0
  6858                           
  6859 ;; *************** function _MFRC522_CRC2 *****************
  6860 ;; Defined at:
  6861 ;;		line 434 in file "rc522.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  dataIn          2   12[COMRAM] PTR unsigned char 
  6864 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag2@buffer(9), 
  6865 ;;  length          1   14[COMRAM] unsigned char 
  6866 ;;  dataOut         2   15[COMRAM] PTR unsigned char 
  6867 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag2@buffer(9), 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  i               1   18[COMRAM] unsigned char 
  6870 ;;  n               1   17[COMRAM] unsigned char 
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  1    wreg      void 
  6873 ;; Registers used:
  6874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6880 ;;      Params:         5       0       0       0       0       0       0       0       0
  6881 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6883 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6884 ;;Total ram usage:        7 bytes
  6885 ;; Hardware stack levels used: 1
  6886 ;; Hardware stack levels required when called: 2
  6887 ;; This function calls:
  6888 ;;		_MFRC522_Clear_Bit2
  6889 ;;		_MFRC522_Rd2
  6890 ;;		_MFRC522_Set_Bit2
  6891 ;;		_MFRC522_Wr2
  6892 ;; This function is called by:
  6893 ;;		_MFRC522_Halt
  6894 ;;		_MFRC522_SelectTag2
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           	psect	text37
  6899  002722                     __ptext37:
  6900                           	callstack 0
  6901  002722                     _MFRC522_CRC2:
  6902                           	callstack 27
  6903  002722                     
  6904                           ;rc522.c: 434: void MFRC522_CRC2(char *dataIn, char length, char *dataOut);rc522.c: 435:
      +                           {;rc522.c: 436:     char i, n;;rc522.c: 437:     MFRC522_Clear_Bit2(0x05, 0x04);
  6905  002722  0E04               	movlw	4
  6906  002724  6E0A               	movwf	MFRC522_Clear_Bit2@mask^0,c
  6907  002726  0E05               	movlw	5
  6908  002728  EC14  F018         	call	_MFRC522_Clear_Bit2
  6909                           
  6910                           ;rc522.c: 438:     MFRC522_Set_Bit2(0x0A, 0x80);
  6911  00272C  0E80               	movlw	128
  6912  00272E  6E0A               	movwf	MFRC522_Set_Bit2@mask^0,c
  6913  002730  0E0A               	movlw	10
  6914  002732  EC2E  F018         	call	_MFRC522_Set_Bit2
  6915  002736                     
  6916                           ;rc522.c: 439:     for(i=0; i<length; i++)
  6917  002736  0E00               	movlw	0
  6918  002738  6E13               	movwf	MFRC522_CRC2@i^0,c
  6919  00273A  EFAB  F013         	goto	l3500
  6920  00273E                     l3494:
  6921                           
  6922                           ;rc522.c: 440:     {;rc522.c: 441:         MFRC522_Wr2(0x09, *dataIn++);
  6923  00273E  C00D  FFD9         	movff	MFRC522_CRC2@dataIn,fsr2l
  6924  002742  C00E  FFDA         	movff	MFRC522_CRC2@dataIn+1,fsr2h
  6925  002746  50DF               	movf	indf2,w,c
  6926  002748  6E01               	movwf	MFRC522_Wr2@value^0,c
  6927  00274A  0E09               	movlw	9
  6928  00274C  EC7F  F014         	call	_MFRC522_Wr2
  6929  002750  4A0D               	infsnz	MFRC522_CRC2@dataIn^0,f,c
  6930  002752  2A0E               	incf	(MFRC522_CRC2@dataIn+1)^0,f,c
  6931  002754                     
  6932                           ;rc522.c: 442:     }
  6933  002754  2A13               	incf	MFRC522_CRC2@i^0,f,c
  6934  002756                     l3500:
  6935  002756  500F               	movf	MFRC522_CRC2@length^0,w,c
  6936  002758  5C13               	subwf	MFRC522_CRC2@i^0,w,c
  6937  00275A  A0D8               	btfss	status,0,c
  6938  00275C  EFB2  F013         	goto	u3291
  6939  002760  EFB4  F013         	goto	u3290
  6940  002764                     u3291:
  6941  002764  EF9F  F013         	goto	l3494
  6942  002768                     u3290:
  6943  002768                     
  6944                           ;rc522.c: 443:     MFRC522_Wr2(0x01, 0x03);
  6945  002768  0E03               	movlw	3
  6946  00276A  6E01               	movwf	MFRC522_Wr2@value^0,c
  6947  00276C  0E01               	movlw	1
  6948  00276E  EC7F  F014         	call	_MFRC522_Wr2
  6949  002772                     
  6950                           ;rc522.c: 444:     i = 0xFF;
  6951  002772  6813               	setf	MFRC522_CRC2@i^0,c
  6952  002774                     l388:
  6953                           
  6954                           ;rc522.c: 446:     {;rc522.c: 447:         n = MFRC522_Rd2( 0x05 );
  6955  002774  0E05               	movlw	5
  6956  002776  ECD3  F010         	call	_MFRC522_Rd2
  6957  00277A  6E12               	movwf	MFRC522_CRC2@n^0,c
  6958  00277C                     
  6959                           ;rc522.c: 448:         i--;
  6960  00277C  0613               	decf	MFRC522_CRC2@i^0,f,c
  6961  00277E                     
  6962                           ;rc522.c: 449:     }
  6963  00277E  5013               	movf	MFRC522_CRC2@i^0,w,c
  6964  002780  B4D8               	btfsc	status,2,c
  6965  002782  EFC5  F013         	goto	u3301
  6966  002786  EFC7  F013         	goto	u3300
  6967  00278A                     u3301:
  6968  00278A  EFCE  F013         	goto	l3512
  6969  00278E                     u3300:
  6970  00278E  A412               	btfss	MFRC522_CRC2@n^0,2,c
  6971  002790  EFCC  F013         	goto	u3311
  6972  002794  EFCE  F013         	goto	u3310
  6973  002798                     u3311:
  6974  002798  EFBA  F013         	goto	l388
  6975  00279C                     u3310:
  6976  00279C                     l3512:
  6977                           
  6978                           ;rc522.c: 451:     dataOut[0] = MFRC522_Rd2(0x22);
  6979  00279C  0E22               	movlw	34
  6980  00279E  ECD3  F010         	call	_MFRC522_Rd2
  6981  0027A2  C010  FFD9         	movff	MFRC522_CRC2@dataOut,fsr2l
  6982  0027A6  C011  FFDA         	movff	MFRC522_CRC2@dataOut+1,fsr2h
  6983  0027AA  6EDF               	movwf	indf2,c
  6984                           
  6985                           ;rc522.c: 452:     dataOut[1] = MFRC522_Rd2(0x21);
  6986  0027AC  EE20 F001          	lfsr	2,1
  6987  0027B0  5010               	movf	MFRC522_CRC2@dataOut^0,w,c
  6988  0027B2  26D9               	addwf	fsr2l,f,c
  6989  0027B4  5011               	movf	(MFRC522_CRC2@dataOut+1)^0,w,c
  6990  0027B6  22DA               	addwfc	fsr2h,f,c
  6991  0027B8  0E21               	movlw	33
  6992  0027BA  ECD3  F010         	call	_MFRC522_Rd2
  6993  0027BE  6EDF               	movwf	indf2,c
  6994  0027C0  0012               	return		;funcret
  6995  0027C2                     __end_of_MFRC522_CRC2:
  6996                           	callstack 0
  6997                           
  6998 ;; *************** function _MFRC522_Set_Bit2 *****************
  6999 ;; Defined at:
  7000 ;;		line 128 in file "rc522.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  addr            1    wreg     unsigned char 
  7003 ;;  mask            1    9[COMRAM] unsigned char 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  addr            1   11[COMRAM] unsigned char 
  7006 ;;  tmp             1   10[COMRAM] unsigned char 
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  1    wreg      void 
  7009 ;; Registers used:
  7010 ;;		wreg, status,2, status,0, cstack
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7016 ;;      Params:         1       0       0       0       0       0       0       0       0
  7017 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7019 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7020 ;;Total ram usage:        3 bytes
  7021 ;; Hardware stack levels used: 1
  7022 ;; Hardware stack levels required when called: 1
  7023 ;; This function calls:
  7024 ;;		_MFRC522_Rd2
  7025 ;;		_MFRC522_Wr2
  7026 ;; This function is called by:
  7027 ;;		_MFRC522_AntennaOn2
  7028 ;;		_MFRC522_ToCard2
  7029 ;;		_MFRC522_CRC2
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           	psect	text38
  7034  00305C                     __ptext38:
  7035                           	callstack 0
  7036  00305C                     _MFRC522_Set_Bit2:
  7037                           	callstack 26
  7038                           
  7039                           ;incstack = 0
  7040                           ;MFRC522_Set_Bit2@addr stored from wreg
  7041  00305C  6E0C               	movwf	MFRC522_Set_Bit2@addr^0,c
  7042  00305E                     
  7043                           ;rc522.c: 131:     tmp = MFRC522_Rd2(addr);
  7044  00305E  500C               	movf	MFRC522_Set_Bit2@addr^0,w,c
  7045  003060  ECD3  F010         	call	_MFRC522_Rd2
  7046  003064  6E0B               	movwf	MFRC522_Set_Bit2@tmp^0,c
  7047  003066                     
  7048                           ;rc522.c: 132:     MFRC522_Wr2(addr, tmp | mask);
  7049  003066  500B               	movf	MFRC522_Set_Bit2@tmp^0,w,c
  7050  003068  100A               	iorwf	MFRC522_Set_Bit2@mask^0,w,c
  7051  00306A  6E01               	movwf	MFRC522_Wr2@value^0,c
  7052  00306C  500C               	movf	MFRC522_Set_Bit2@addr^0,w,c
  7053  00306E  EC7F  F014         	call	_MFRC522_Wr2
  7054  003072  0012               	return		;funcret
  7055  003074                     __end_of_MFRC522_Set_Bit2:
  7056                           	callstack 0
  7057                           
  7058 ;; *************** function _MFRC522_Clear_Bit2 *****************
  7059 ;; Defined at:
  7060 ;;		line 113 in file "rc522.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;  addr            1    wreg     unsigned char 
  7063 ;;  mask            1    9[COMRAM] unsigned char 
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;  addr            1   11[COMRAM] unsigned char 
  7066 ;;  tmp             1   10[COMRAM] unsigned char 
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      void 
  7069 ;; Registers used:
  7070 ;;		wreg, status,2, status,0, cstack
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7076 ;;      Params:         1       0       0       0       0       0       0       0       0
  7077 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7079 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7080 ;;Total ram usage:        3 bytes
  7081 ;; Hardware stack levels used: 1
  7082 ;; Hardware stack levels required when called: 1
  7083 ;; This function calls:
  7084 ;;		_MFRC522_Rd2
  7085 ;;		_MFRC522_Wr2
  7086 ;; This function is called by:
  7087 ;;		_MFRC522_AntennaOff2
  7088 ;;		_MFRC522_ToCard2
  7089 ;;		_MFRC522_CRC2
  7090 ;;		_MFRC522_Halt
  7091 ;;		_MFRC522_AntiColl2
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           	psect	text39
  7096  003028                     __ptext39:
  7097                           	callstack 0
  7098  003028                     _MFRC522_Clear_Bit2:
  7099                           	callstack 26
  7100                           
  7101                           ;incstack = 0
  7102                           ;MFRC522_Clear_Bit2@addr stored from wreg
  7103  003028  6E0C               	movwf	MFRC522_Clear_Bit2@addr^0,c
  7104  00302A                     
  7105                           ;rc522.c: 116:     tmp = MFRC522_Rd2(addr) ;
  7106  00302A  500C               	movf	MFRC522_Clear_Bit2@addr^0,w,c
  7107  00302C  ECD3  F010         	call	_MFRC522_Rd2
  7108  003030  6E0B               	movwf	MFRC522_Clear_Bit2@tmp^0,c
  7109  003032                     
  7110                           ;rc522.c: 117:     MFRC522_Wr2(addr, tmp&~mask);
  7111  003032  500A               	movf	MFRC522_Clear_Bit2@mask^0,w,c
  7112  003034  0AFF               	xorlw	255
  7113  003036  140B               	andwf	MFRC522_Clear_Bit2@tmp^0,w,c
  7114  003038  6E01               	movwf	MFRC522_Wr2@value^0,c
  7115  00303A  500C               	movf	MFRC522_Clear_Bit2@addr^0,w,c
  7116  00303C  EC7F  F014         	call	_MFRC522_Wr2
  7117  003040  0012               	return		;funcret
  7118  003042                     __end_of_MFRC522_Clear_Bit2:
  7119                           	callstack 0
  7120                           
  7121 ;; *************** function _MFRC522_Wr2 *****************
  7122 ;; Defined at:
  7123 ;;		line 81 in file "rc522.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  address         1    wreg     unsigned char 
  7126 ;;  value           1    0[COMRAM] unsigned char 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  address         1    2[COMRAM] unsigned char 
  7129 ;;  i               1    4[COMRAM] unsigned char 
  7130 ;;  ucAddr          1    3[COMRAM] unsigned char 
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  1    wreg      void 
  7133 ;; Registers used:
  7134 ;;		wreg, status,2, status,0
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7140 ;;      Params:         1       0       0       0       0       0       0       0       0
  7141 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7142 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7143 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7144 ;;Total ram usage:        5 bytes
  7145 ;; Hardware stack levels used: 1
  7146 ;; This function calls:
  7147 ;;		Nothing
  7148 ;; This function is called by:
  7149 ;;		_MFRC522_Clear_Bit2
  7150 ;;		_MFRC522_Set_Bit2
  7151 ;;		_MFRC522_Init
  7152 ;;		_MFRC522_ToCard2
  7153 ;;		_MFRC522_Request2
  7154 ;;		_MFRC522_CRC2
  7155 ;;		_MFRC522_AntiColl2
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           	psect	text40
  7160  0028FE                     __ptext40:
  7161                           	callstack 0
  7162  0028FE                     _MFRC522_Wr2:
  7163                           	callstack 28
  7164                           
  7165                           ;incstack = 0
  7166                           ;MFRC522_Wr2@address stored from wreg
  7167  0028FE  6E03               	movwf	MFRC522_Wr2@address^0,c
  7168  002900                     
  7169                           ;rc522.c: 81: void MFRC522_Wr2(unsigned char address, unsigned char value);rc522.c: 82: 
      +                          {;rc522.c: 83:     unsigned char i, ucAddr;;rc522.c: 84:     LATDbits.LD1 = 0;
  7170  002900  928C               	bcf	140,1,c	;volatile
  7171                           
  7172                           ;rc522.c: 85:     LATAbits.LA1 = 0;
  7173  002902  9289               	bcf	137,1,c	;volatile
  7174  002904                     
  7175                           ;rc522.c: 86:     ucAddr = ((address << 1) & 0x7E);
  7176  002904  5003               	movf	MFRC522_Wr2@address^0,w,c
  7177  002906  2403               	addwf	MFRC522_Wr2@address^0,w,c
  7178  002908  0B7E               	andlw	126
  7179  00290A  6E04               	movwf	MFRC522_Wr2@ucAddr^0,c
  7180  00290C                     
  7181                           ;rc522.c: 88:     for(i=8; i>0; i--)
  7182  00290C  0E08               	movlw	8
  7183  00290E  6E05               	movwf	MFRC522_Wr2@i^0,c
  7184  002910                     l2970:
  7185                           
  7186                           ;rc522.c: 89:     {;rc522.c: 90:         LATDbits.LD2 = ((ucAddr&0x80) == 0x80);
  7187  002910  BE04               	btfsc	MFRC522_Wr2@ucAddr^0,7,c
  7188  002912  EF8D  F014         	goto	u2561
  7189  002916  EF91  F014         	goto	u2560
  7190  00291A                     u2561:
  7191  00291A  6A02               	clrf	??_MFRC522_Wr2^0,c
  7192  00291C  2A02               	incf	??_MFRC522_Wr2^0,f,c
  7193  00291E  EF92  F014         	goto	u2578
  7194  002922                     u2560:
  7195  002922  6A02               	clrf	??_MFRC522_Wr2^0,c
  7196  002924                     u2578:
  7197  002924  4602               	rlncf	??_MFRC522_Wr2^0,f,c
  7198  002926  4602               	rlncf	??_MFRC522_Wr2^0,f,c
  7199  002928  508C               	movf	140,w,c	;volatile
  7200  00292A  1802               	xorwf	??_MFRC522_Wr2^0,w,c
  7201  00292C  0BFB               	andlw	-5
  7202  00292E  1802               	xorwf	??_MFRC522_Wr2^0,w,c
  7203  002930  6E8C               	movwf	140,c	;volatile
  7204  002932                     
  7205                           ;rc522.c: 91:         LATDbits.LD1 = 1;
  7206  002932  828C               	bsf	140,1,c	;volatile
  7207                           
  7208                           ;rc522.c: 92:         ucAddr <<= 1;
  7209  002934  90D8               	bcf	status,0,c
  7210  002936  3604               	rlcf	MFRC522_Wr2@ucAddr^0,f,c
  7211  002938                     
  7212                           ;rc522.c: 93:         LATDbits.LD1 = 0;
  7213  002938  928C               	bcf	140,1,c	;volatile
  7214  00293A                     
  7215                           ;rc522.c: 94:     }
  7216  00293A  0605               	decf	MFRC522_Wr2@i^0,f,c
  7217  00293C  5005               	movf	MFRC522_Wr2@i^0,w,c
  7218  00293E  A4D8               	btfss	status,2,c
  7219  002940  EFA4  F014         	goto	u2581
  7220  002944  EFA6  F014         	goto	u2580
  7221  002948                     u2581:
  7222  002948  EF88  F014         	goto	l2970
  7223  00294C                     u2580:
  7224  00294C                     
  7225                           ;rc522.c: 95:     for(i=8; i>0; i--)
  7226  00294C  0E08               	movlw	8
  7227  00294E  6E05               	movwf	MFRC522_Wr2@i^0,c
  7228  002950                     l2984:
  7229                           
  7230                           ;rc522.c: 96:     {;rc522.c: 97:         LATDbits.LD2 = ((value&0x80) == 0x80);
  7231  002950  BE01               	btfsc	MFRC522_Wr2@value^0,7,c
  7232  002952  EFAD  F014         	goto	u2591
  7233  002956  EFB1  F014         	goto	u2590
  7234  00295A                     u2591:
  7235  00295A  6A02               	clrf	??_MFRC522_Wr2^0,c
  7236  00295C  2A02               	incf	??_MFRC522_Wr2^0,f,c
  7237  00295E  EFB2  F014         	goto	u2608
  7238  002962                     u2590:
  7239  002962  6A02               	clrf	??_MFRC522_Wr2^0,c
  7240  002964                     u2608:
  7241  002964  4602               	rlncf	??_MFRC522_Wr2^0,f,c
  7242  002966  4602               	rlncf	??_MFRC522_Wr2^0,f,c
  7243  002968  508C               	movf	140,w,c	;volatile
  7244  00296A  1802               	xorwf	??_MFRC522_Wr2^0,w,c
  7245  00296C  0BFB               	andlw	-5
  7246  00296E  1802               	xorwf	??_MFRC522_Wr2^0,w,c
  7247  002970  6E8C               	movwf	140,c	;volatile
  7248  002972                     
  7249                           ;rc522.c: 98:         LATDbits.LD1 = 1;
  7250  002972  828C               	bsf	140,1,c	;volatile
  7251                           
  7252                           ;rc522.c: 99:         value <<= 1;
  7253  002974  90D8               	bcf	status,0,c
  7254  002976  3601               	rlcf	MFRC522_Wr2@value^0,f,c
  7255  002978                     
  7256                           ;rc522.c: 100:         LATDbits.LD1 = 0;
  7257  002978  928C               	bcf	140,1,c	;volatile
  7258  00297A                     
  7259                           ;rc522.c: 101:     }
  7260  00297A  0605               	decf	MFRC522_Wr2@i^0,f,c
  7261  00297C  5005               	movf	MFRC522_Wr2@i^0,w,c
  7262  00297E  A4D8               	btfss	status,2,c
  7263  002980  EFC4  F014         	goto	u2611
  7264  002984  EFC6  F014         	goto	u2610
  7265  002988                     u2611:
  7266  002988  EFA8  F014         	goto	l2984
  7267  00298C                     u2610:
  7268  00298C                     
  7269                           ;rc522.c: 102:     LATAbits.LA1 = 1;
  7270  00298C  8289               	bsf	137,1,c	;volatile
  7271                           
  7272                           ;rc522.c: 103:     LATDbits.LD1 = 1;
  7273  00298E  828C               	bsf	140,1,c	;volatile
  7274  002990  0012               	return		;funcret
  7275  002992                     __end_of_MFRC522_Wr2:
  7276                           	callstack 0
  7277                           
  7278 ;; *************** function _MFRC522_Rd2 *****************
  7279 ;; Defined at:
  7280 ;;		line 29 in file "rc522.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;  address         1    wreg     unsigned char 
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;  address         1    2[COMRAM] unsigned char 
  7285 ;;  i               2    7[COMRAM] unsigned int 
  7286 ;;  ucResult        2    5[COMRAM] unsigned int 
  7287 ;;  ucAddr          2    3[COMRAM] unsigned int 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  1    wreg      unsigned char 
  7290 ;; Registers used:
  7291 ;;		wreg, status,2, status,0
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7297 ;;      Params:         0       0       0       0       0       0       0       0       0
  7298 ;;      Locals:         7       0       0       0       0       0       0       0       0
  7299 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7300 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7301 ;;Total ram usage:        9 bytes
  7302 ;; Hardware stack levels used: 1
  7303 ;; This function calls:
  7304 ;;		Nothing
  7305 ;; This function is called by:
  7306 ;;		_MFRC522_Clear_Bit2
  7307 ;;		_MFRC522_Set_Bit2
  7308 ;;		_MFRC522_AntennaOn2
  7309 ;;		_MFRC522_ToCard2
  7310 ;;		_MFRC522_CRC2
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text41
  7315  0021A6                     __ptext41:
  7316                           	callstack 0
  7317  0021A6                     _MFRC522_Rd2:
  7318                           	callstack 26
  7319                           
  7320                           ;incstack = 0
  7321                           ;MFRC522_Rd2@address stored from wreg
  7322  0021A6  6E03               	movwf	MFRC522_Rd2@address^0,c
  7323  0021A8                     
  7324                           ;rc522.c: 29: unsigned char MFRC522_Rd2(unsigned char address);rc522.c: 30: {;rc522.c: 3
      +                          1:     unsigned int i, ucAddr;;rc522.c: 32:     unsigned int ucResult = 0;
  7325  0021A8  0E00               	movlw	0
  7326  0021AA  6E07               	movwf	(MFRC522_Rd2@ucResult+1)^0,c
  7327  0021AC  0E00               	movlw	0
  7328  0021AE  6E06               	movwf	MFRC522_Rd2@ucResult^0,c
  7329  0021B0                     
  7330                           ;rc522.c: 33:     LATDbits.LD1 = 0;
  7331  0021B0  928C               	bcf	140,1,c	;volatile
  7332  0021B2                     
  7333                           ;rc522.c: 34:     LATAbits.LA1 = 0;
  7334  0021B2  9289               	bcf	137,1,c	;volatile
  7335  0021B4                     
  7336                           ;rc522.c: 35:     ucAddr = ((address << 1) & 0x7E) | 0x80;
  7337  0021B4  5003               	movf	MFRC522_Rd2@address^0,w,c
  7338  0021B6  2403               	addwf	MFRC522_Rd2@address^0,w,c
  7339  0021B8  0B7E               	andlw	126
  7340  0021BA  6E01               	movwf	??_MFRC522_Rd2^0,c
  7341  0021BC  6A02               	clrf	(??_MFRC522_Rd2+1)^0,c
  7342  0021BE  0E80               	movlw	128
  7343  0021C0  1001               	iorwf	??_MFRC522_Rd2^0,w,c
  7344  0021C2  6E04               	movwf	MFRC522_Rd2@ucAddr^0,c
  7345  0021C4  5002               	movf	(??_MFRC522_Rd2+1)^0,w,c
  7346  0021C6  6E05               	movwf	(MFRC522_Rd2@ucAddr+1)^0,c
  7347  0021C8                     
  7348                           ;rc522.c: 37:     for(i=8; i>0; i--)
  7349  0021C8  0E00               	movlw	0
  7350  0021CA  6E09               	movwf	(MFRC522_Rd2@i+1)^0,c
  7351  0021CC  0E08               	movlw	8
  7352  0021CE  6E08               	movwf	MFRC522_Rd2@i^0,c
  7353  0021D0                     l2898:
  7354                           
  7355                           ;rc522.c: 38:     {;rc522.c: 39:         LATDbits.LD2 = ((ucAddr & 0x80) == 0x80);
  7356  0021D0  BE04               	btfsc	MFRC522_Rd2@ucAddr^0,7,c
  7357  0021D2  EFED  F010         	goto	u2451
  7358  0021D6  EFF1  F010         	goto	u2450
  7359  0021DA                     u2451:
  7360  0021DA  6A01               	clrf	??_MFRC522_Rd2^0,c
  7361  0021DC  2A01               	incf	??_MFRC522_Rd2^0,f,c
  7362  0021DE  EFF2  F010         	goto	u2468
  7363  0021E2                     u2450:
  7364  0021E2  6A01               	clrf	??_MFRC522_Rd2^0,c
  7365  0021E4                     u2468:
  7366  0021E4  4601               	rlncf	??_MFRC522_Rd2^0,f,c
  7367  0021E6  4601               	rlncf	??_MFRC522_Rd2^0,f,c
  7368  0021E8  508C               	movf	140,w,c	;volatile
  7369  0021EA  1801               	xorwf	??_MFRC522_Rd2^0,w,c
  7370  0021EC  0BFB               	andlw	-5
  7371  0021EE  1801               	xorwf	??_MFRC522_Rd2^0,w,c
  7372  0021F0  6E8C               	movwf	140,c	;volatile
  7373  0021F2                     
  7374                           ;rc522.c: 40:         LATDbits.LD1 = 1;
  7375  0021F2  828C               	bsf	140,1,c	;volatile
  7376  0021F4                     
  7377                           ;rc522.c: 41:         ucAddr <<= 1;
  7378  0021F4  90D8               	bcf	status,0,c
  7379  0021F6  3604               	rlcf	MFRC522_Rd2@ucAddr^0,f,c
  7380  0021F8  3605               	rlcf	(MFRC522_Rd2@ucAddr+1)^0,f,c
  7381  0021FA                     
  7382                           ;rc522.c: 42:         LATDbits.LD1 = 0;
  7383  0021FA  928C               	bcf	140,1,c	;volatile
  7384  0021FC                     
  7385                           ;rc522.c: 43:     }
  7386  0021FC  0608               	decf	MFRC522_Rd2@i^0,f,c
  7387  0021FE  A0D8               	btfss	status,0,c
  7388  002200  0609               	decf	(MFRC522_Rd2@i+1)^0,f,c
  7389  002202  5008               	movf	MFRC522_Rd2@i^0,w,c
  7390  002204  1009               	iorwf	(MFRC522_Rd2@i+1)^0,w,c
  7391  002206  A4D8               	btfss	status,2,c
  7392  002208  EF08  F011         	goto	u2471
  7393  00220C  EF0A  F011         	goto	u2470
  7394  002210                     u2471:
  7395  002210  EFE8  F010         	goto	l2898
  7396  002214                     u2470:
  7397  002214                     
  7398                           ;rc522.c: 44:     for(i=8; i>0; i--)
  7399  002214  0E00               	movlw	0
  7400  002216  6E09               	movwf	(MFRC522_Rd2@i+1)^0,c
  7401  002218  0E08               	movlw	8
  7402  00221A  6E08               	movwf	MFRC522_Rd2@i^0,c
  7403  00221C                     l258:
  7404                           
  7405                           ;rc522.c: 45:     {;rc522.c: 46:         LATDbits.LD1 = 1;
  7406  00221C  828C               	bsf	140,1,c	;volatile
  7407  00221E                     
  7408                           ;rc522.c: 47:         ucResult <<= 1;
  7409  00221E  90D8               	bcf	status,0,c
  7410  002220  3606               	rlcf	MFRC522_Rd2@ucResult^0,f,c
  7411  002222  3607               	rlcf	(MFRC522_Rd2@ucResult+1)^0,f,c
  7412  002224                     
  7413                           ;rc522.c: 48:         ucResult |= (short)PORTDbits.RD3;
  7414  002224  B683               	btfsc	131,3,c	;volatile
  7415  002226  EF17  F011         	goto	u2481
  7416  00222A  EF1B  F011         	goto	u2480
  7417  00222E                     u2481:
  7418  00222E  6A01               	clrf	??_MFRC522_Rd2^0,c
  7419  002230  2A01               	incf	??_MFRC522_Rd2^0,f,c
  7420  002232  EF1C  F011         	goto	u2488
  7421  002236                     u2480:
  7422  002236  6A01               	clrf	??_MFRC522_Rd2^0,c
  7423  002238                     u2488:
  7424  002238  5001               	movf	??_MFRC522_Rd2^0,w,c
  7425  00223A  1206               	iorwf	MFRC522_Rd2@ucResult^0,f,c
  7426  00223C                     
  7427                           ;rc522.c: 49:         LATDbits.LD1 = 0;
  7428  00223C  928C               	bcf	140,1,c	;volatile
  7429  00223E                     
  7430                           ;rc522.c: 50:     }
  7431  00223E  0608               	decf	MFRC522_Rd2@i^0,f,c
  7432  002240  A0D8               	btfss	status,0,c
  7433  002242  0609               	decf	(MFRC522_Rd2@i+1)^0,f,c
  7434  002244  5008               	movf	MFRC522_Rd2@i^0,w,c
  7435  002246  1009               	iorwf	(MFRC522_Rd2@i+1)^0,w,c
  7436  002248  A4D8               	btfss	status,2,c
  7437  00224A  EF29  F011         	goto	u2491
  7438  00224E  EF2B  F011         	goto	u2490
  7439  002252                     u2491:
  7440  002252  EF0E  F011         	goto	l258
  7441  002256                     u2490:
  7442  002256                     
  7443                           ;rc522.c: 51:     LATAbits.LA1 = 1;
  7444  002256  8289               	bsf	137,1,c	;volatile
  7445                           
  7446                           ;rc522.c: 52:     LATDbits.LD1 = 1;
  7447  002258  828C               	bsf	140,1,c	;volatile
  7448  00225A                     
  7449                           ;rc522.c: 53:     return ucResult;
  7450  00225A  5006               	movf	MFRC522_Rd2@ucResult^0,w,c
  7451  00225C  0012               	return		;funcret
  7452  00225E                     __end_of_MFRC522_Rd2:
  7453                           	callstack 0
  7454                           
  7455 ;; *************** function _MFRC522_CRC *****************
  7456 ;; Defined at:
  7457 ;;		line 413 in file "rc522.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;  dataIn          2   12[COMRAM] PTR unsigned char 
  7460 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  7461 ;;  length          1   14[COMRAM] unsigned char 
  7462 ;;  dataOut         2   15[COMRAM] PTR unsigned char 
  7463 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;  i               1   18[COMRAM] unsigned char 
  7466 ;;  n               1   17[COMRAM] unsigned char 
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  1    wreg      void 
  7469 ;; Registers used:
  7470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7476 ;;      Params:         5       0       0       0       0       0       0       0       0
  7477 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7479 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7480 ;;Total ram usage:        7 bytes
  7481 ;; Hardware stack levels used: 1
  7482 ;; Hardware stack levels required when called: 2
  7483 ;; This function calls:
  7484 ;;		_MFRC522_Clear_Bit
  7485 ;;		_MFRC522_Rd
  7486 ;;		_MFRC522_Set_Bit
  7487 ;;		_MFRC522_Wr
  7488 ;; This function is called by:
  7489 ;;		_MFRC522_Halt
  7490 ;;		_MFRC522_SelectTag
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494                           	psect	text42
  7495  0027C2                     __ptext42:
  7496                           	callstack 0
  7497  0027C2                     _MFRC522_CRC:
  7498                           	callstack 27
  7499  0027C2                     
  7500                           ;rc522.c: 413: void MFRC522_CRC(char *dataIn, char length, char *dataOut);rc522.c: 414: 
      +                          {;rc522.c: 415:     char i, n;;rc522.c: 416:     MFRC522_Clear_Bit(0x05, 0x04);
  7501  0027C2  0E04               	movlw	4
  7502  0027C4  6E0A               	movwf	MFRC522_Clear_Bit@mask^0,c
  7503  0027C6  0E05               	movlw	5
  7504  0027C8  EC21  F018         	call	_MFRC522_Clear_Bit
  7505                           
  7506                           ;rc522.c: 417:     MFRC522_Set_Bit(0x0A, 0x80);
  7507  0027CC  0E80               	movlw	128
  7508  0027CE  6E0A               	movwf	MFRC522_Set_Bit@mask^0,c
  7509  0027D0  0E0A               	movlw	10
  7510  0027D2  EC3A  F018         	call	_MFRC522_Set_Bit
  7511  0027D6                     
  7512                           ;rc522.c: 418:     for(i=0; i<length; i++)
  7513  0027D6  0E00               	movlw	0
  7514  0027D8  6E13               	movwf	MFRC522_CRC@i^0,c
  7515  0027DA  EFFB  F013         	goto	l3476
  7516  0027DE                     l3470:
  7517                           
  7518                           ;rc522.c: 419:     {;rc522.c: 420:         MFRC522_Wr(0x09, *dataIn++);
  7519  0027DE  C00D  FFD9         	movff	MFRC522_CRC@dataIn,fsr2l
  7520  0027E2  C00E  FFDA         	movff	MFRC522_CRC@dataIn+1,fsr2h
  7521  0027E6  50DF               	movf	indf2,w,c
  7522  0027E8  6E01               	movwf	MFRC522_Wr@value^0,c
  7523  0027EA  0E09               	movlw	9
  7524  0027EC  ECC9  F014         	call	_MFRC522_Wr
  7525  0027F0  4A0D               	infsnz	MFRC522_CRC@dataIn^0,f,c
  7526  0027F2  2A0E               	incf	(MFRC522_CRC@dataIn+1)^0,f,c
  7527  0027F4                     
  7528                           ;rc522.c: 421:     }
  7529  0027F4  2A13               	incf	MFRC522_CRC@i^0,f,c
  7530  0027F6                     l3476:
  7531  0027F6  500F               	movf	MFRC522_CRC@length^0,w,c
  7532  0027F8  5C13               	subwf	MFRC522_CRC@i^0,w,c
  7533  0027FA  A0D8               	btfss	status,0,c
  7534  0027FC  EF02  F014         	goto	u3261
  7535  002800  EF04  F014         	goto	u3260
  7536  002804                     u3261:
  7537  002804  EFEF  F013         	goto	l3470
  7538  002808                     u3260:
  7539  002808                     
  7540                           ;rc522.c: 422:     MFRC522_Wr(0x01, 0x03);
  7541  002808  0E03               	movlw	3
  7542  00280A  6E01               	movwf	MFRC522_Wr@value^0,c
  7543  00280C  0E01               	movlw	1
  7544  00280E  ECC9  F014         	call	_MFRC522_Wr
  7545  002812                     
  7546                           ;rc522.c: 423:     i = 0xFF;
  7547  002812  6813               	setf	MFRC522_CRC@i^0,c
  7548  002814                     l378:
  7549                           
  7550                           ;rc522.c: 425:     {;rc522.c: 426:         n = MFRC522_Rd( 0x05 );
  7551  002814  0E05               	movlw	5
  7552  002816  EC2F  F011         	call	_MFRC522_Rd
  7553  00281A  6E12               	movwf	MFRC522_CRC@n^0,c
  7554  00281C                     
  7555                           ;rc522.c: 427:         i--;
  7556  00281C  0613               	decf	MFRC522_CRC@i^0,f,c
  7557  00281E                     
  7558                           ;rc522.c: 428:     }
  7559  00281E  5013               	movf	MFRC522_CRC@i^0,w,c
  7560  002820  B4D8               	btfsc	status,2,c
  7561  002822  EF15  F014         	goto	u3271
  7562  002826  EF17  F014         	goto	u3270
  7563  00282A                     u3271:
  7564  00282A  EF1E  F014         	goto	l3488
  7565  00282E                     u3270:
  7566  00282E  A412               	btfss	MFRC522_CRC@n^0,2,c
  7567  002830  EF1C  F014         	goto	u3281
  7568  002834  EF1E  F014         	goto	u3280
  7569  002838                     u3281:
  7570  002838  EF0A  F014         	goto	l378
  7571  00283C                     u3280:
  7572  00283C                     l3488:
  7573                           
  7574                           ;rc522.c: 430:     dataOut[0] = MFRC522_Rd(0x22);
  7575  00283C  0E22               	movlw	34
  7576  00283E  EC2F  F011         	call	_MFRC522_Rd
  7577  002842  C010  FFD9         	movff	MFRC522_CRC@dataOut,fsr2l
  7578  002846  C011  FFDA         	movff	MFRC522_CRC@dataOut+1,fsr2h
  7579  00284A  6EDF               	movwf	indf2,c
  7580                           
  7581                           ;rc522.c: 431:     dataOut[1] = MFRC522_Rd(0x21);
  7582  00284C  EE20 F001          	lfsr	2,1
  7583  002850  5010               	movf	MFRC522_CRC@dataOut^0,w,c
  7584  002852  26D9               	addwf	fsr2l,f,c
  7585  002854  5011               	movf	(MFRC522_CRC@dataOut+1)^0,w,c
  7586  002856  22DA               	addwfc	fsr2h,f,c
  7587  002858  0E21               	movlw	33
  7588  00285A  EC2F  F011         	call	_MFRC522_Rd
  7589  00285E  6EDF               	movwf	indf2,c
  7590  002860  0012               	return		;funcret
  7591  002862                     __end_of_MFRC522_CRC:
  7592                           	callstack 0
  7593                           
  7594 ;; *************** function _MFRC522_Set_Bit *****************
  7595 ;; Defined at:
  7596 ;;		line 121 in file "rc522.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;  addr            1    wreg     unsigned char 
  7599 ;;  mask            1    9[COMRAM] unsigned char 
  7600 ;; Auto vars:     Size  Location     Type
  7601 ;;  addr            1   11[COMRAM] unsigned char 
  7602 ;;  tmp             1   10[COMRAM] unsigned char 
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1    wreg      void 
  7605 ;; Registers used:
  7606 ;;		wreg, status,2, status,0, cstack
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7612 ;;      Params:         1       0       0       0       0       0       0       0       0
  7613 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7615 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7616 ;;Total ram usage:        3 bytes
  7617 ;; Hardware stack levels used: 1
  7618 ;; Hardware stack levels required when called: 1
  7619 ;; This function calls:
  7620 ;;		_MFRC522_Rd
  7621 ;;		_MFRC522_Wr
  7622 ;; This function is called by:
  7623 ;;		_MFRC522_AntennaOn
  7624 ;;		_MFRC522_ToCard
  7625 ;;		_MFRC522_CRC
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           	psect	text43
  7630  003074                     __ptext43:
  7631                           	callstack 0
  7632  003074                     _MFRC522_Set_Bit:
  7633                           	callstack 26
  7634                           
  7635                           ;incstack = 0
  7636                           ;MFRC522_Set_Bit@addr stored from wreg
  7637  003074  6E0C               	movwf	MFRC522_Set_Bit@addr^0,c
  7638  003076                     
  7639                           ;rc522.c: 124:     tmp = MFRC522_Rd(addr);
  7640  003076  500C               	movf	MFRC522_Set_Bit@addr^0,w,c
  7641  003078  EC2F  F011         	call	_MFRC522_Rd
  7642  00307C  6E0B               	movwf	MFRC522_Set_Bit@tmp^0,c
  7643  00307E                     
  7644                           ;rc522.c: 125:     MFRC522_Wr(addr, tmp | mask);
  7645  00307E  500B               	movf	MFRC522_Set_Bit@tmp^0,w,c
  7646  003080  100A               	iorwf	MFRC522_Set_Bit@mask^0,w,c
  7647  003082  6E01               	movwf	MFRC522_Wr@value^0,c
  7648  003084  500C               	movf	MFRC522_Set_Bit@addr^0,w,c
  7649  003086  ECC9  F014         	call	_MFRC522_Wr
  7650  00308A  0012               	return		;funcret
  7651  00308C                     __end_of_MFRC522_Set_Bit:
  7652                           	callstack 0
  7653                           
  7654 ;; *************** function _MFRC522_Clear_Bit *****************
  7655 ;; Defined at:
  7656 ;;		line 106 in file "rc522.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  addr            1    wreg     unsigned char 
  7659 ;;  mask            1    9[COMRAM] unsigned char 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  addr            1   11[COMRAM] unsigned char 
  7662 ;;  tmp             1   10[COMRAM] unsigned char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      void 
  7665 ;; Registers used:
  7666 ;;		wreg, status,2, status,0, cstack
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7672 ;;      Params:         1       0       0       0       0       0       0       0       0
  7673 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7674 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7675 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7676 ;;Total ram usage:        3 bytes
  7677 ;; Hardware stack levels used: 1
  7678 ;; Hardware stack levels required when called: 1
  7679 ;; This function calls:
  7680 ;;		_MFRC522_Rd
  7681 ;;		_MFRC522_Wr
  7682 ;; This function is called by:
  7683 ;;		_MFRC522_AntennaOff
  7684 ;;		_MFRC522_ToCard
  7685 ;;		_MFRC522_CRC
  7686 ;;		_MFRC522_Halt
  7687 ;;		_MFRC522_AntiColl
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           	psect	text44
  7692  003042                     __ptext44:
  7693                           	callstack 0
  7694  003042                     _MFRC522_Clear_Bit:
  7695                           	callstack 26
  7696                           
  7697                           ;incstack = 0
  7698                           ;MFRC522_Clear_Bit@addr stored from wreg
  7699  003042  6E0C               	movwf	MFRC522_Clear_Bit@addr^0,c
  7700  003044                     
  7701                           ;rc522.c: 109:     tmp = MFRC522_Rd(addr) ;
  7702  003044  500C               	movf	MFRC522_Clear_Bit@addr^0,w,c
  7703  003046  EC2F  F011         	call	_MFRC522_Rd
  7704  00304A  6E0B               	movwf	MFRC522_Clear_Bit@tmp^0,c
  7705  00304C                     
  7706                           ;rc522.c: 110:     MFRC522_Wr(addr, tmp&~mask);
  7707  00304C  500A               	movf	MFRC522_Clear_Bit@mask^0,w,c
  7708  00304E  0AFF               	xorlw	255
  7709  003050  140B               	andwf	MFRC522_Clear_Bit@tmp^0,w,c
  7710  003052  6E01               	movwf	MFRC522_Wr@value^0,c
  7711  003054  500C               	movf	MFRC522_Clear_Bit@addr^0,w,c
  7712  003056  ECC9  F014         	call	_MFRC522_Wr
  7713  00305A  0012               	return		;funcret
  7714  00305C                     __end_of_MFRC522_Clear_Bit:
  7715                           	callstack 0
  7716                           
  7717 ;; *************** function _MFRC522_Wr *****************
  7718 ;; Defined at:
  7719 ;;		line 56 in file "rc522.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  address         1    wreg     unsigned char 
  7722 ;;  value           1    0[COMRAM] unsigned char 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;  address         1    2[COMRAM] unsigned char 
  7725 ;;  i               1    4[COMRAM] unsigned char 
  7726 ;;  ucAddr          1    3[COMRAM] unsigned char 
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  1    wreg      void 
  7729 ;; Registers used:
  7730 ;;		wreg, status,2, status,0
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7736 ;;      Params:         1       0       0       0       0       0       0       0       0
  7737 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7738 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7739 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7740 ;;Total ram usage:        5 bytes
  7741 ;; Hardware stack levels used: 1
  7742 ;; This function calls:
  7743 ;;		Nothing
  7744 ;; This function is called by:
  7745 ;;		_MFRC522_Clear_Bit
  7746 ;;		_MFRC522_Set_Bit
  7747 ;;		_MFRC522_Reset
  7748 ;;		_MFRC522_Init
  7749 ;;		_MFRC522_ToCard
  7750 ;;		_MFRC522_Request
  7751 ;;		_MFRC522_CRC
  7752 ;;		_MFRC522_AntiColl
  7753 ;; This function uses a non-reentrant model
  7754 ;;
  7755                           
  7756                           	psect	text45
  7757  002992                     __ptext45:
  7758                           	callstack 0
  7759  002992                     _MFRC522_Wr:
  7760                           	callstack 28
  7761                           
  7762                           ;incstack = 0
  7763                           ;MFRC522_Wr@address stored from wreg
  7764  002992  6E03               	movwf	MFRC522_Wr@address^0,c
  7765  002994                     
  7766                           ;rc522.c: 56: void MFRC522_Wr(unsigned char address, unsigned char value);rc522.c: 57: {
      +                          ;rc522.c: 58:     unsigned char i, ucAddr;;rc522.c: 59:     LATDbits.LD1 = 0;
  7767  002994  928C               	bcf	140,1,c	;volatile
  7768                           
  7769                           ;rc522.c: 60:     LATAbits.LA0 = 0;
  7770  002996  9089               	bcf	137,0,c	;volatile
  7771  002998                     
  7772                           ;rc522.c: 61:     ucAddr = ((address << 1) & 0x7E);
  7773  002998  5003               	movf	MFRC522_Wr@address^0,w,c
  7774  00299A  2403               	addwf	MFRC522_Wr@address^0,w,c
  7775  00299C  0B7E               	andlw	126
  7776  00299E  6E04               	movwf	MFRC522_Wr@ucAddr^0,c
  7777  0029A0                     
  7778                           ;rc522.c: 63:     for(i=8; i>0; i--)
  7779  0029A0  0E08               	movlw	8
  7780  0029A2  6E05               	movwf	MFRC522_Wr@i^0,c
  7781  0029A4                     l2936:
  7782                           
  7783                           ;rc522.c: 64:     {;rc522.c: 65:         LATDbits.LD2 = ((ucAddr&0x80) == 0x80);
  7784  0029A4  BE04               	btfsc	MFRC522_Wr@ucAddr^0,7,c
  7785  0029A6  EFD7  F014         	goto	u2501
  7786  0029AA  EFDB  F014         	goto	u2500
  7787  0029AE                     u2501:
  7788  0029AE  6A02               	clrf	??_MFRC522_Wr^0,c
  7789  0029B0  2A02               	incf	??_MFRC522_Wr^0,f,c
  7790  0029B2  EFDC  F014         	goto	u2518
  7791  0029B6                     u2500:
  7792  0029B6  6A02               	clrf	??_MFRC522_Wr^0,c
  7793  0029B8                     u2518:
  7794  0029B8  4602               	rlncf	??_MFRC522_Wr^0,f,c
  7795  0029BA  4602               	rlncf	??_MFRC522_Wr^0,f,c
  7796  0029BC  508C               	movf	140,w,c	;volatile
  7797  0029BE  1802               	xorwf	??_MFRC522_Wr^0,w,c
  7798  0029C0  0BFB               	andlw	-5
  7799  0029C2  1802               	xorwf	??_MFRC522_Wr^0,w,c
  7800  0029C4  6E8C               	movwf	140,c	;volatile
  7801  0029C6                     
  7802                           ;rc522.c: 66:         LATDbits.LD1 = 1;
  7803  0029C6  828C               	bsf	140,1,c	;volatile
  7804                           
  7805                           ;rc522.c: 67:         ucAddr <<= 1;
  7806  0029C8  90D8               	bcf	status,0,c
  7807  0029CA  3604               	rlcf	MFRC522_Wr@ucAddr^0,f,c
  7808  0029CC                     
  7809                           ;rc522.c: 68:         LATDbits.LD1 = 0;
  7810  0029CC  928C               	bcf	140,1,c	;volatile
  7811  0029CE                     
  7812                           ;rc522.c: 69:     }
  7813  0029CE  0605               	decf	MFRC522_Wr@i^0,f,c
  7814  0029D0  5005               	movf	MFRC522_Wr@i^0,w,c
  7815  0029D2  A4D8               	btfss	status,2,c
  7816  0029D4  EFEE  F014         	goto	u2521
  7817  0029D8  EFF0  F014         	goto	u2520
  7818  0029DC                     u2521:
  7819  0029DC  EFD2  F014         	goto	l2936
  7820  0029E0                     u2520:
  7821  0029E0                     
  7822                           ;rc522.c: 70:     for(i=8; i>0; i--)
  7823  0029E0  0E08               	movlw	8
  7824  0029E2  6E05               	movwf	MFRC522_Wr@i^0,c
  7825  0029E4                     l2950:
  7826                           
  7827                           ;rc522.c: 71:     {;rc522.c: 72:         LATDbits.LD2 = ((value&0x80) == 0x80);
  7828  0029E4  BE01               	btfsc	MFRC522_Wr@value^0,7,c
  7829  0029E6  EFF7  F014         	goto	u2531
  7830  0029EA  EFFB  F014         	goto	u2530
  7831  0029EE                     u2531:
  7832  0029EE  6A02               	clrf	??_MFRC522_Wr^0,c
  7833  0029F0  2A02               	incf	??_MFRC522_Wr^0,f,c
  7834  0029F2  EFFC  F014         	goto	u2548
  7835  0029F6                     u2530:
  7836  0029F6  6A02               	clrf	??_MFRC522_Wr^0,c
  7837  0029F8                     u2548:
  7838  0029F8  4602               	rlncf	??_MFRC522_Wr^0,f,c
  7839  0029FA  4602               	rlncf	??_MFRC522_Wr^0,f,c
  7840  0029FC  508C               	movf	140,w,c	;volatile
  7841  0029FE  1802               	xorwf	??_MFRC522_Wr^0,w,c
  7842  002A00  0BFB               	andlw	-5
  7843  002A02  1802               	xorwf	??_MFRC522_Wr^0,w,c
  7844  002A04  6E8C               	movwf	140,c	;volatile
  7845  002A06                     
  7846                           ;rc522.c: 73:         LATDbits.LD1 = 1;
  7847  002A06  828C               	bsf	140,1,c	;volatile
  7848                           
  7849                           ;rc522.c: 74:         value <<= 1;
  7850  002A08  90D8               	bcf	status,0,c
  7851  002A0A  3601               	rlcf	MFRC522_Wr@value^0,f,c
  7852  002A0C                     
  7853                           ;rc522.c: 75:         LATDbits.LD1 = 0;
  7854  002A0C  928C               	bcf	140,1,c	;volatile
  7855  002A0E                     
  7856                           ;rc522.c: 76:     }
  7857  002A0E  0605               	decf	MFRC522_Wr@i^0,f,c
  7858  002A10  5005               	movf	MFRC522_Wr@i^0,w,c
  7859  002A12  A4D8               	btfss	status,2,c
  7860  002A14  EF0E  F015         	goto	u2551
  7861  002A18  EF10  F015         	goto	u2550
  7862  002A1C                     u2551:
  7863  002A1C  EFF2  F014         	goto	l2950
  7864  002A20                     u2550:
  7865  002A20                     
  7866                           ;rc522.c: 77:     LATAbits.LA0 = 1;
  7867  002A20  8089               	bsf	137,0,c	;volatile
  7868                           
  7869                           ;rc522.c: 78:     LATDbits.LD1 = 1;
  7870  002A22  828C               	bsf	140,1,c	;volatile
  7871  002A24  0012               	return		;funcret
  7872  002A26                     __end_of_MFRC522_Wr:
  7873                           	callstack 0
  7874                           
  7875 ;; *************** function _MFRC522_Rd *****************
  7876 ;; Defined at:
  7877 ;;		line 2 in file "rc522.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  address         1    wreg     unsigned char 
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;  address         1    2[COMRAM] unsigned char 
  7882 ;;  i               2    7[COMRAM] unsigned int 
  7883 ;;  ucResult        2    5[COMRAM] unsigned int 
  7884 ;;  ucAddr          2    3[COMRAM] unsigned int 
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  1    wreg      unsigned char 
  7887 ;; Registers used:
  7888 ;;		wreg, status,2, status,0
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7894 ;;      Params:         0       0       0       0       0       0       0       0       0
  7895 ;;      Locals:         7       0       0       0       0       0       0       0       0
  7896 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7897 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7898 ;;Total ram usage:        9 bytes
  7899 ;; Hardware stack levels used: 1
  7900 ;; This function calls:
  7901 ;;		Nothing
  7902 ;; This function is called by:
  7903 ;;		_MFRC522_Clear_Bit
  7904 ;;		_MFRC522_Set_Bit
  7905 ;;		_MFRC522_AntennaOn
  7906 ;;		_MFRC522_ToCard
  7907 ;;		_MFRC522_CRC
  7908 ;; This function uses a non-reentrant model
  7909 ;;
  7910                           
  7911                           	psect	text46
  7912  00225E                     __ptext46:
  7913                           	callstack 0
  7914  00225E                     _MFRC522_Rd:
  7915                           	callstack 26
  7916                           
  7917                           ;incstack = 0
  7918                           ;MFRC522_Rd@address stored from wreg
  7919  00225E  6E03               	movwf	MFRC522_Rd@address^0,c
  7920  002260                     
  7921                           ;rc522.c: 2: unsigned char MFRC522_Rd(unsigned char address);rc522.c: 3: {;rc522.c: 4:  
      +                             unsigned int i, ucAddr;;rc522.c: 5:     unsigned int ucResult = 0;
  7922  002260  0E00               	movlw	0
  7923  002262  6E07               	movwf	(MFRC522_Rd@ucResult+1)^0,c
  7924  002264  0E00               	movlw	0
  7925  002266  6E06               	movwf	MFRC522_Rd@ucResult^0,c
  7926  002268                     
  7927                           ;rc522.c: 6:     LATDbits.LD1 = 0;
  7928  002268  928C               	bcf	140,1,c	;volatile
  7929  00226A                     
  7930                           ;rc522.c: 7:     LATAbits.LA0 = 0;
  7931  00226A  9089               	bcf	137,0,c	;volatile
  7932  00226C                     
  7933                           ;rc522.c: 8:     ucAddr = ((address << 1) & 0x7E) | 0x80;
  7934  00226C  5003               	movf	MFRC522_Rd@address^0,w,c
  7935  00226E  2403               	addwf	MFRC522_Rd@address^0,w,c
  7936  002270  0B7E               	andlw	126
  7937  002272  6E01               	movwf	??_MFRC522_Rd^0,c
  7938  002274  6A02               	clrf	(??_MFRC522_Rd+1)^0,c
  7939  002276  0E80               	movlw	128
  7940  002278  1001               	iorwf	??_MFRC522_Rd^0,w,c
  7941  00227A  6E04               	movwf	MFRC522_Rd@ucAddr^0,c
  7942  00227C  5002               	movf	(??_MFRC522_Rd+1)^0,w,c
  7943  00227E  6E05               	movwf	(MFRC522_Rd@ucAddr+1)^0,c
  7944  002280                     
  7945                           ;rc522.c: 10:     for(i=8; i>0; i--)
  7946  002280  0E00               	movlw	0
  7947  002282  6E09               	movwf	(MFRC522_Rd@i+1)^0,c
  7948  002284  0E08               	movlw	8
  7949  002286  6E08               	movwf	MFRC522_Rd@i^0,c
  7950  002288                     l2856:
  7951                           
  7952                           ;rc522.c: 11:     {;rc522.c: 12:         LATDbits.LD2 = ((ucAddr & 0x80) == 0x80);
  7953  002288  BE04               	btfsc	MFRC522_Rd@ucAddr^0,7,c
  7954  00228A  EF49  F011         	goto	u2401
  7955  00228E  EF4D  F011         	goto	u2400
  7956  002292                     u2401:
  7957  002292  6A01               	clrf	??_MFRC522_Rd^0,c
  7958  002294  2A01               	incf	??_MFRC522_Rd^0,f,c
  7959  002296  EF4E  F011         	goto	u2418
  7960  00229A                     u2400:
  7961  00229A  6A01               	clrf	??_MFRC522_Rd^0,c
  7962  00229C                     u2418:
  7963  00229C  4601               	rlncf	??_MFRC522_Rd^0,f,c
  7964  00229E  4601               	rlncf	??_MFRC522_Rd^0,f,c
  7965  0022A0  508C               	movf	140,w,c	;volatile
  7966  0022A2  1801               	xorwf	??_MFRC522_Rd^0,w,c
  7967  0022A4  0BFB               	andlw	-5
  7968  0022A6  1801               	xorwf	??_MFRC522_Rd^0,w,c
  7969  0022A8  6E8C               	movwf	140,c	;volatile
  7970  0022AA                     
  7971                           ;rc522.c: 13:         LATDbits.LD1 = 1;
  7972  0022AA  828C               	bsf	140,1,c	;volatile
  7973  0022AC                     
  7974                           ;rc522.c: 14:         ucAddr <<= 1;
  7975  0022AC  90D8               	bcf	status,0,c
  7976  0022AE  3604               	rlcf	MFRC522_Rd@ucAddr^0,f,c
  7977  0022B0  3605               	rlcf	(MFRC522_Rd@ucAddr+1)^0,f,c
  7978  0022B2                     
  7979                           ;rc522.c: 15:         LATDbits.LD1 = 0;
  7980  0022B2  928C               	bcf	140,1,c	;volatile
  7981  0022B4                     
  7982                           ;rc522.c: 16:     }
  7983  0022B4  0608               	decf	MFRC522_Rd@i^0,f,c
  7984  0022B6  A0D8               	btfss	status,0,c
  7985  0022B8  0609               	decf	(MFRC522_Rd@i+1)^0,f,c
  7986  0022BA  5008               	movf	MFRC522_Rd@i^0,w,c
  7987  0022BC  1009               	iorwf	(MFRC522_Rd@i+1)^0,w,c
  7988  0022BE  A4D8               	btfss	status,2,c
  7989  0022C0  EF64  F011         	goto	u2421
  7990  0022C4  EF66  F011         	goto	u2420
  7991  0022C8                     u2421:
  7992  0022C8  EF44  F011         	goto	l2856
  7993  0022CC                     u2420:
  7994  0022CC                     
  7995                           ;rc522.c: 17:     for(i=8; i>0; i--)
  7996  0022CC  0E00               	movlw	0
  7997  0022CE  6E09               	movwf	(MFRC522_Rd@i+1)^0,c
  7998  0022D0  0E08               	movlw	8
  7999  0022D2  6E08               	movwf	MFRC522_Rd@i^0,c
  8000  0022D4                     l251:
  8001                           
  8002                           ;rc522.c: 18:     {;rc522.c: 19:         LATDbits.LD1 = 1;
  8003  0022D4  828C               	bsf	140,1,c	;volatile
  8004  0022D6                     
  8005                           ;rc522.c: 20:         ucResult <<= 1;
  8006  0022D6  90D8               	bcf	status,0,c
  8007  0022D8  3606               	rlcf	MFRC522_Rd@ucResult^0,f,c
  8008  0022DA  3607               	rlcf	(MFRC522_Rd@ucResult+1)^0,f,c
  8009  0022DC                     
  8010                           ;rc522.c: 21:         ucResult |= (short)PORTDbits.RD3;
  8011  0022DC  B683               	btfsc	131,3,c	;volatile
  8012  0022DE  EF73  F011         	goto	u2431
  8013  0022E2  EF77  F011         	goto	u2430
  8014  0022E6                     u2431:
  8015  0022E6  6A01               	clrf	??_MFRC522_Rd^0,c
  8016  0022E8  2A01               	incf	??_MFRC522_Rd^0,f,c
  8017  0022EA  EF78  F011         	goto	u2438
  8018  0022EE                     u2430:
  8019  0022EE  6A01               	clrf	??_MFRC522_Rd^0,c
  8020  0022F0                     u2438:
  8021  0022F0  5001               	movf	??_MFRC522_Rd^0,w,c
  8022  0022F2  1206               	iorwf	MFRC522_Rd@ucResult^0,f,c
  8023  0022F4                     
  8024                           ;rc522.c: 22:         LATDbits.LD1 = 0;
  8025  0022F4  928C               	bcf	140,1,c	;volatile
  8026  0022F6                     
  8027                           ;rc522.c: 23:     }
  8028  0022F6  0608               	decf	MFRC522_Rd@i^0,f,c
  8029  0022F8  A0D8               	btfss	status,0,c
  8030  0022FA  0609               	decf	(MFRC522_Rd@i+1)^0,f,c
  8031  0022FC  5008               	movf	MFRC522_Rd@i^0,w,c
  8032  0022FE  1009               	iorwf	(MFRC522_Rd@i+1)^0,w,c
  8033  002300  A4D8               	btfss	status,2,c
  8034  002302  EF85  F011         	goto	u2441
  8035  002306  EF87  F011         	goto	u2440
  8036  00230A                     u2441:
  8037  00230A  EF6A  F011         	goto	l251
  8038  00230E                     u2440:
  8039  00230E                     
  8040                           ;rc522.c: 24:     LATAbits.LA0 = 1;
  8041  00230E  8089               	bsf	137,0,c	;volatile
  8042                           
  8043                           ;rc522.c: 25:     LATDbits.LD1 = 1;
  8044  002310  828C               	bsf	140,1,c	;volatile
  8045  002312                     
  8046                           ;rc522.c: 26:     return ucResult;
  8047  002312  5006               	movf	MFRC522_Rd@ucResult^0,w,c
  8048  002314  0012               	return		;funcret
  8049  002316                     __end_of_MFRC522_Rd:
  8050                           	callstack 0
  8051                           
  8052 ;; *************** function _LCD_Print *****************
  8053 ;; Defined at:
  8054 ;;		line 109 in file "I2C.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  LCD_Str         2    4[COMRAM] PTR unsigned char 
  8057 ;;		 -> STR_6(11), STR_3(11), data_buffer(20), 
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;  i               1    9[COMRAM] unsigned char 
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  1    wreg      void 
  8062 ;; Registers used:
  8063 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8069 ;;      Params:         2       0       0       0       0       0       0       0       0
  8070 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8071 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8072 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8073 ;;Total ram usage:        6 bytes
  8074 ;; Hardware stack levels used: 1
  8075 ;; Hardware stack levels required when called: 3
  8076 ;; This function calls:
  8077 ;;		_LCD_Write_Nibble
  8078 ;; This function is called by:
  8079 ;;		_main
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           	psect	text47
  8084  002316                     __ptext47:
  8085                           	callstack 0
  8086  002316                     _LCD_Print:
  8087                           	callstack 27
  8088  002316                     
  8089                           ;I2C.c: 109: void LCD_Print(char* LCD_Str);I2C.c: 110: {;I2C.c: 111:   uint8_t i = 0;
  8090  002316  0E00               	movlw	0
  8091  002318  6E0A               	movwf	LCD_Print@i^0,c
  8092  00231A                     
  8093                           ;I2C.c: 112:   RS = 1;
  8094  00231A  0100               	movlb	0	; () banked
  8095  00231C  81F1               	bsf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  8096                           
  8097                           ;I2C.c: 113:   while(LCD_Str[i] != '\0')
  8098  00231E  EFC7  F011         	goto	l4104
  8099  002322                     l4100:
  8100                           
  8101                           ;I2C.c: 114:   {;I2C.c: 115:     LCD_Write_Nibble(LCD_Str[i] & 0xF0);
  8102  002322  500A               	movf	LCD_Print@i^0,w,c
  8103  002324  2405               	addwf	LCD_Print@LCD_Str^0,w,c
  8104  002326  6E07               	movwf	??_LCD_Print^0,c
  8105  002328  0E00               	movlw	0
  8106  00232A  2006               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  8107  00232C  6E08               	movwf	(??_LCD_Print+1)^0,c
  8108  00232E  C007  FFF6         	movff	??_LCD_Print,tblptrl
  8109  002332  C008  FFF7         	movff	??_LCD_Print+1,tblptrh
  8110  002336  6AF8               	clrf	tblptru,c
  8111  002338  0E07               	movlw	(high __ramtop+-1)
  8112  00233A  64F7               	cpfsgt	tblptrh,c
  8113  00233C  D003               	bra	u4197
  8114  00233E  0008               	tblrd		*
  8115  002340  50F5               	movf	tablat,w,c
  8116  002342  D005               	bra	u4190
  8117  002344                     u4197:
  8118  002344  CFF6 FFE1          	movff	tblptrl,fsr1l
  8119  002348  CFF7 FFE2          	movff	tblptrh,fsr1h
  8120  00234C  50E7               	movf	indf1,w,c
  8121  00234E                     u4190:
  8122  00234E  0BF0               	andlw	240
  8123  002350  EC78  F017         	call	_LCD_Write_Nibble
  8124                           
  8125                           ;I2C.c: 116:     LCD_Write_Nibble( (LCD_Str[i++] << 4) & 0xF0 );
  8126  002354  500A               	movf	LCD_Print@i^0,w,c
  8127  002356  2405               	addwf	LCD_Print@LCD_Str^0,w,c
  8128  002358  6E07               	movwf	??_LCD_Print^0,c
  8129  00235A  0E00               	movlw	0
  8130  00235C  2006               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  8131  00235E  6E08               	movwf	(??_LCD_Print+1)^0,c
  8132  002360  C007  FFF6         	movff	??_LCD_Print,tblptrl
  8133  002364  C008  FFF7         	movff	??_LCD_Print+1,tblptrh
  8134  002368  6AF8               	clrf	tblptru,c
  8135  00236A  0E07               	movlw	(high __ramtop+-1)
  8136  00236C  64F7               	cpfsgt	tblptrh,c
  8137  00236E  D003               	bra	u4207
  8138  002370  0008               	tblrd		*
  8139  002372  50F5               	movf	tablat,w,c
  8140  002374  D005               	bra	u4200
  8141  002376                     u4207:
  8142  002376  CFF6 FFE1          	movff	tblptrl,fsr1l
  8143  00237A  CFF7 FFE2          	movff	tblptrh,fsr1h
  8144  00237E  50E7               	movf	indf1,w,c
  8145  002380                     u4200:
  8146  002380  6E09               	movwf	(??_LCD_Print+2)^0,c
  8147  002382  3809               	swapf	(??_LCD_Print+2)^0,w,c
  8148  002384  0BF0               	andlw	240
  8149  002386  0BF0               	andlw	240
  8150  002388  EC78  F017         	call	_LCD_Write_Nibble
  8151  00238C  2A0A               	incf	LCD_Print@i^0,f,c
  8152  00238E                     l4104:
  8153                           
  8154                           ;I2C.c: 113:   while(LCD_Str[i] != '\0')
  8155  00238E  500A               	movf	LCD_Print@i^0,w,c
  8156  002390  2405               	addwf	LCD_Print@LCD_Str^0,w,c
  8157  002392  6E07               	movwf	??_LCD_Print^0,c
  8158  002394  0E00               	movlw	0
  8159  002396  2006               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  8160  002398  6E08               	movwf	(??_LCD_Print+1)^0,c
  8161  00239A  C007  FFF6         	movff	??_LCD_Print,tblptrl
  8162  00239E  C008  FFF7         	movff	??_LCD_Print+1,tblptrh
  8163  0023A2  6AF8               	clrf	tblptru,c
  8164  0023A4  0E07               	movlw	(high __ramtop+-1)
  8165  0023A6  64F7               	cpfsgt	tblptrh,c
  8166  0023A8  D003               	bra	u4217
  8167  0023AA  0008               	tblrd		*
  8168  0023AC  50F5               	movf	tablat,w,c
  8169  0023AE  D005               	bra	u4210
  8170  0023B0                     u4217:
  8171  0023B0  CFF6 FFE1          	movff	tblptrl,fsr1l
  8172  0023B4  CFF7 FFE2          	movff	tblptrh,fsr1h
  8173  0023B8  50E7               	movf	indf1,w,c
  8174  0023BA                     u4210:
  8175  0023BA  0900               	iorlw	0
  8176  0023BC  A4D8               	btfss	status,2,c
  8177  0023BE  EFE3  F011         	goto	u4221
  8178  0023C2  EFE5  F011         	goto	u4220
  8179  0023C6                     u4221:
  8180  0023C6  EF91  F011         	goto	l4100
  8181  0023CA                     u4220:
  8182  0023CA  0012               	return		;funcret
  8183  0023CC                     __end_of_LCD_Print:
  8184                           	callstack 0
  8185                           
  8186 ;; *************** function _LCD_Goto *****************
  8187 ;; Defined at:
  8188 ;;		line 83 in file "I2C.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;  col             1    wreg     unsigned char 
  8191 ;;  row             1    6[COMRAM] unsigned char 
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;  col             1    9[COMRAM] unsigned char 
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  1    wreg      void 
  8196 ;; Registers used:
  8197 ;;		wreg, status,2, status,0, cstack
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/0
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8203 ;;      Params:         1       0       0       0       0       0       0       0       0
  8204 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8205 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8206 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8207 ;;Total ram usage:        4 bytes
  8208 ;; Hardware stack levels used: 1
  8209 ;; Hardware stack levels required when called: 4
  8210 ;; This function calls:
  8211 ;;		_LCD_Cmd
  8212 ;; This function is called by:
  8213 ;;		_main
  8214 ;; This function uses a non-reentrant model
  8215 ;;
  8216                           
  8217                           	psect	text48
  8218  002A96                     __ptext48:
  8219                           	callstack 0
  8220  002A96                     _LCD_Goto:
  8221                           	callstack 26
  8222                           
  8223                           ;incstack = 0
  8224                           ;LCD_Goto@col stored from wreg
  8225  002A96  6E0A               	movwf	LCD_Goto@col^0,c
  8226  002A98                     
  8227                           ;I2C.c: 83: void LCD_Goto(uint8_t col, uint8_t row);I2C.c: 84: {;I2C.c: 85:   switch(row
      +                          )
  8228  002A98  EF66  F015         	goto	l4068
  8229  002A9C                     l4060:
  8230                           
  8231                           ;I2C.c: 88:       LCD_Cmd(0xC0 + col - 1);
  8232  002A9C  500A               	movf	LCD_Goto@col^0,w,c
  8233  002A9E  0FBF               	addlw	191
  8234  002AA0  EC95  F016         	call	_LCD_Cmd
  8235                           
  8236                           ;I2C.c: 89:       break;
  8237  002AA4  EF7F  F015         	goto	l216
  8238  002AA8                     l4062:
  8239                           
  8240                           ;I2C.c: 91:       LCD_Cmd(0x94 + col - 1);
  8241  002AA8  500A               	movf	LCD_Goto@col^0,w,c
  8242  002AAA  0F93               	addlw	147
  8243  002AAC  EC95  F016         	call	_LCD_Cmd
  8244                           
  8245                           ;I2C.c: 92:       break;
  8246  002AB0  EF7F  F015         	goto	l216
  8247  002AB4                     l4064:
  8248                           
  8249                           ;I2C.c: 94:       LCD_Cmd(0xD4 + col - 1);
  8250  002AB4  500A               	movf	LCD_Goto@col^0,w,c
  8251  002AB6  0FD3               	addlw	211
  8252  002AB8  EC95  F016         	call	_LCD_Cmd
  8253                           
  8254                           ;I2C.c: 95:     break;
  8255  002ABC  EF7F  F015         	goto	l216
  8256  002AC0                     l4066:
  8257                           
  8258                           ;I2C.c: 97:       LCD_Cmd(0x80 + col - 1);
  8259  002AC0  500A               	movf	LCD_Goto@col^0,w,c
  8260  002AC2  0F7F               	addlw	127
  8261  002AC4  EC95  F016         	call	_LCD_Cmd
  8262                           
  8263                           ;I2C.c: 98:   }
  8264  002AC8  EF7F  F015         	goto	l216
  8265  002ACC                     l4068:
  8266  002ACC  5007               	movf	LCD_Goto@row^0,w,c
  8267  002ACE  6E08               	movwf	??_LCD_Goto^0,c
  8268  002AD0  6A09               	clrf	(??_LCD_Goto+1)^0,c
  8269                           
  8270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8271                           ; Switch size 1, requested type "simple"
  8272                           ; Number of cases is 1, Range of values is 0 to 0
  8273                           ; switch strategies available:
  8274                           ; Name         Instructions Cycles
  8275                           ; simple_byte            4     3 (average)
  8276                           ;	Chosen strategy is simple_byte
  8277  002AD2  5009               	movf	(??_LCD_Goto+1)^0,w,c
  8278  002AD4  0A00               	xorlw	0	; case 0
  8279  002AD6  B4D8               	btfsc	status,2,c
  8280  002AD8  EF70  F015         	goto	l4334
  8281  002ADC  EF60  F015         	goto	l4066
  8282  002AE0                     l4334:
  8283                           
  8284                           ; Switch size 1, requested type "simple"
  8285                           ; Number of cases is 3, Range of values is 2 to 4
  8286                           ; switch strategies available:
  8287                           ; Name         Instructions Cycles
  8288                           ; simple_byte           10     6 (average)
  8289                           ;	Chosen strategy is simple_byte
  8290  002AE0  5008               	movf	??_LCD_Goto^0,w,c
  8291  002AE2  0A02               	xorlw	2	; case 2
  8292  002AE4  B4D8               	btfsc	status,2,c
  8293  002AE6  EF4E  F015         	goto	l4060
  8294  002AEA  0A01               	xorlw	1	; case 3
  8295  002AEC  B4D8               	btfsc	status,2,c
  8296  002AEE  EF54  F015         	goto	l4062
  8297  002AF2  0A07               	xorlw	7	; case 4
  8298  002AF4  B4D8               	btfsc	status,2,c
  8299  002AF6  EF5A  F015         	goto	l4064
  8300  002AFA  EF60  F015         	goto	l4066
  8301  002AFE                     l216:
  8302  002AFE  0012               	return		;funcret
  8303  002B00                     __end_of_LCD_Goto:
  8304                           	callstack 0
  8305                           
  8306 ;; *************** function _LCD_Begin *****************
  8307 ;; Defined at:
  8308 ;;		line 120 in file "I2C.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;  _i2c_addr       1    wreg     unsigned char 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  _i2c_addr       1    8[COMRAM] unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		wreg, status,2, status,0, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8322 ;;      Params:         0       0       0       0       0       0       0       0       0
  8323 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8324 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8325 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8326 ;;Total ram usage:        3 bytes
  8327 ;; Hardware stack levels used: 1
  8328 ;; Hardware stack levels required when called: 4
  8329 ;; This function calls:
  8330 ;;		_Expander_Write
  8331 ;;		_LCD_Cmd
  8332 ;; This function is called by:
  8333 ;;		_main
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           	psect	text49
  8338  001F28                     __ptext49:
  8339                           	callstack 0
  8340  001F28                     _LCD_Begin:
  8341                           	callstack 26
  8342                           
  8343                           ;incstack = 0
  8344                           ;LCD_Begin@_i2c_addr stored from wreg
  8345  001F28  6E09               	movwf	LCD_Begin@_i2c_addr^0,c
  8346  001F2A                     
  8347                           ;I2C.c: 120: void LCD_Begin(uint8_t _i2c_addr);I2C.c: 121: {;I2C.c: 122:   i2c_addr = _i
      +                          2c_addr;
  8348  001F2A  C009  F0F0         	movff	LCD_Begin@_i2c_addr,_i2c_addr
  8349  001F2E                     
  8350                           ;I2C.c: 123:   Expander_Write(0);
  8351  001F2E  0E00               	movlw	0
  8352  001F30  EC05  F018         	call	_Expander_Write
  8353  001F34                     
  8354                           ;I2C.c: 125:   _delay((unsigned long)((40)*(27000000/4000.0)));
  8355  001F34  0E02               	movlw	2
  8356  001F36  6E08               	movwf	(??_LCD_Begin+1)^0,c
  8357  001F38  0E5F               	movlw	95
  8358  001F3A  6E07               	movwf	??_LCD_Begin^0,c
  8359  001F3C  0EA3               	movlw	163
  8360  001F3E                     u4397:
  8361  001F3E  2EE8               	decfsz	wreg,f,c
  8362  001F40  D7FE               	bra	u4397
  8363  001F42  2E07               	decfsz	??_LCD_Begin^0,f,c
  8364  001F44  D7FC               	bra	u4397
  8365  001F46  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  8366  001F48  D7FA               	bra	u4397
  8367  001F4A  F000               	nop	
  8368                           
  8369                           ;I2C.c: 126:   LCD_Cmd(3);
  8370  001F4C  0E03               	movlw	3
  8371  001F4E  EC95  F016         	call	_LCD_Cmd
  8372  001F52                     
  8373                           ;I2C.c: 127:   _delay((unsigned long)((5)*(27000000/4000.0)));
  8374  001F52  0E2C               	movlw	44
  8375  001F54  6E07               	movwf	??_LCD_Begin^0,c
  8376  001F56  0ED4               	movlw	212
  8377  001F58                     u4407:
  8378  001F58  2EE8               	decfsz	wreg,f,c
  8379  001F5A  D7FE               	bra	u4407
  8380  001F5C  2E07               	decfsz	??_LCD_Begin^0,f,c
  8381  001F5E  D7FC               	bra	u4407
  8382  001F60                     
  8383                           ;I2C.c: 128:   LCD_Cmd(3);
  8384  001F60  0E03               	movlw	3
  8385  001F62  EC95  F016         	call	_LCD_Cmd
  8386                           
  8387                           ;I2C.c: 129:   _delay((unsigned long)((5)*(27000000/4000.0)));
  8388  001F66  0E2C               	movlw	44
  8389  001F68  6E07               	movwf	??_LCD_Begin^0,c
  8390  001F6A  0ED4               	movlw	212
  8391  001F6C                     u4417:
  8392  001F6C  2EE8               	decfsz	wreg,f,c
  8393  001F6E  D7FE               	bra	u4417
  8394  001F70  2E07               	decfsz	??_LCD_Begin^0,f,c
  8395  001F72  D7FC               	bra	u4417
  8396  001F74                     
  8397                           ;I2C.c: 130:   LCD_Cmd(3);
  8398  001F74  0E03               	movlw	3
  8399  001F76  EC95  F016         	call	_LCD_Cmd
  8400  001F7A                     
  8401                           ;I2C.c: 131:   _delay((unsigned long)((5)*(27000000/4000.0)));
  8402  001F7A  0E2C               	movlw	44
  8403  001F7C  6E07               	movwf	??_LCD_Begin^0,c
  8404  001F7E  0ED4               	movlw	212
  8405  001F80                     u4427:
  8406  001F80  2EE8               	decfsz	wreg,f,c
  8407  001F82  D7FE               	bra	u4427
  8408  001F84  2E07               	decfsz	??_LCD_Begin^0,f,c
  8409  001F86  D7FC               	bra	u4427
  8410                           
  8411                           ;I2C.c: 132:   LCD_Cmd(0x02);
  8412  001F88  0E02               	movlw	2
  8413  001F8A  EC95  F016         	call	_LCD_Cmd
  8414  001F8E                     
  8415                           ;I2C.c: 133:   _delay((unsigned long)((5)*(27000000/4000.0)));
  8416  001F8E  0E2C               	movlw	44
  8417  001F90  6E07               	movwf	??_LCD_Begin^0,c
  8418  001F92  0ED4               	movlw	212
  8419  001F94                     u4437:
  8420  001F94  2EE8               	decfsz	wreg,f,c
  8421  001F96  D7FE               	bra	u4437
  8422  001F98  2E07               	decfsz	??_LCD_Begin^0,f,c
  8423  001F9A  D7FC               	bra	u4437
  8424  001F9C                     
  8425                           ;I2C.c: 134:   LCD_Cmd(0x20 | (2 << 2));
  8426  001F9C  0E28               	movlw	40
  8427  001F9E  EC95  F016         	call	_LCD_Cmd
  8428                           
  8429                           ;I2C.c: 135:   _delay((unsigned long)((50)*(27000000/4000.0)));
  8430  001FA2  0E02               	movlw	2
  8431  001FA4  6E08               	movwf	(??_LCD_Begin+1)^0,c
  8432  001FA6  0EB7               	movlw	183
  8433  001FA8  6E07               	movwf	??_LCD_Begin^0,c
  8434  001FAA  0E4C               	movlw	76
  8435  001FAC                     u4447:
  8436  001FAC  2EE8               	decfsz	wreg,f,c
  8437  001FAE  D7FE               	bra	u4447
  8438  001FB0  2E07               	decfsz	??_LCD_Begin^0,f,c
  8439  001FB2  D7FC               	bra	u4447
  8440  001FB4  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  8441  001FB6  D7FA               	bra	u4447
  8442  001FB8  D000               	nop2	
  8443  001FBA                     
  8444                           ;I2C.c: 136:   LCD_Cmd(0x0C);
  8445  001FBA  0E0C               	movlw	12
  8446  001FBC  EC95  F016         	call	_LCD_Cmd
  8447  001FC0                     
  8448                           ;I2C.c: 137:   _delay((unsigned long)((50)*(27000000/4000.0)));
  8449  001FC0  0E02               	movlw	2
  8450  001FC2  6E08               	movwf	(??_LCD_Begin+1)^0,c
  8451  001FC4  0EB7               	movlw	183
  8452  001FC6  6E07               	movwf	??_LCD_Begin^0,c
  8453  001FC8  0E4C               	movlw	76
  8454  001FCA                     u4457:
  8455  001FCA  2EE8               	decfsz	wreg,f,c
  8456  001FCC  D7FE               	bra	u4457
  8457  001FCE  2E07               	decfsz	??_LCD_Begin^0,f,c
  8458  001FD0  D7FC               	bra	u4457
  8459  001FD2  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  8460  001FD4  D7FA               	bra	u4457
  8461  001FD6  D000               	nop2	
  8462                           
  8463                           ;I2C.c: 138:   LCD_Cmd(0x01);
  8464  001FD8  0E01               	movlw	1
  8465  001FDA  EC95  F016         	call	_LCD_Cmd
  8466  001FDE                     
  8467                           ;I2C.c: 139:   _delay((unsigned long)((50)*(27000000/4000.0)));
  8468  001FDE  0E02               	movlw	2
  8469  001FE0  6E08               	movwf	(??_LCD_Begin+1)^0,c
  8470  001FE2  0EB7               	movlw	183
  8471  001FE4  6E07               	movwf	??_LCD_Begin^0,c
  8472  001FE6  0E4C               	movlw	76
  8473  001FE8                     u4467:
  8474  001FE8  2EE8               	decfsz	wreg,f,c
  8475  001FEA  D7FE               	bra	u4467
  8476  001FEC  2E07               	decfsz	??_LCD_Begin^0,f,c
  8477  001FEE  D7FC               	bra	u4467
  8478  001FF0  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  8479  001FF2  D7FA               	bra	u4467
  8480  001FF4  D000               	nop2	
  8481  001FF6                     
  8482                           ;I2C.c: 140:   LCD_Cmd(0x04 | 0x02);
  8483  001FF6  0E06               	movlw	6
  8484  001FF8  EC95  F016         	call	_LCD_Cmd
  8485                           
  8486                           ;I2C.c: 141:   _delay((unsigned long)((50)*(27000000/4000.0)));
  8487  001FFC  0E02               	movlw	2
  8488  001FFE  6E08               	movwf	(??_LCD_Begin+1)^0,c
  8489  002000  0EB7               	movlw	183
  8490  002002  6E07               	movwf	??_LCD_Begin^0,c
  8491  002004  0E4C               	movlw	76
  8492  002006                     u4477:
  8493  002006  2EE8               	decfsz	wreg,f,c
  8494  002008  D7FE               	bra	u4477
  8495  00200A  2E07               	decfsz	??_LCD_Begin^0,f,c
  8496  00200C  D7FC               	bra	u4477
  8497  00200E  2E08               	decfsz	(??_LCD_Begin+1)^0,f,c
  8498  002010  D7FA               	bra	u4477
  8499  002012  D000               	nop2	
  8500  002014  0012               	return		;funcret
  8501  002016                     __end_of_LCD_Begin:
  8502                           	callstack 0
  8503                           
  8504 ;; *************** function _LCD_Cmd *****************
  8505 ;; Defined at:
  8506 ;;		line 74 in file "I2C.c"
  8507 ;; Parameters:    Size  Location     Type
  8508 ;;  Command         1    wreg     unsigned char 
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;  Command         1    5[COMRAM] unsigned char 
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  1    wreg      void 
  8513 ;; Registers used:
  8514 ;;		wreg, status,2, status,0, cstack
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8520 ;;      Params:         0       0       0       0       0       0       0       0       0
  8521 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8522 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8523 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8524 ;;Total ram usage:        2 bytes
  8525 ;; Hardware stack levels used: 1
  8526 ;; Hardware stack levels required when called: 3
  8527 ;; This function calls:
  8528 ;;		_LCD_Write_Nibble
  8529 ;; This function is called by:
  8530 ;;		_main
  8531 ;;		_LCD_Goto
  8532 ;;		_LCD_Begin
  8533 ;; This function uses a non-reentrant model
  8534 ;;
  8535                           
  8536                           	psect	text50
  8537  002D2A                     __ptext50:
  8538                           	callstack 0
  8539  002D2A                     _LCD_Cmd:
  8540                           	callstack 26
  8541                           
  8542                           ;incstack = 0
  8543                           ;LCD_Cmd@Command stored from wreg
  8544  002D2A  6E06               	movwf	LCD_Cmd@Command^0,c
  8545  002D2C                     
  8546                           ;I2C.c: 74: void LCD_Cmd(uint8_t Command);I2C.c: 75: {;I2C.c: 76:   RS = 0;
  8547  002D2C  0100               	movlb	0	; () banked
  8548  002D2E  91F1               	bcf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  8549  002D30                     
  8550                           ; BSR set to: 0
  8551                           ;I2C.c: 77:   LCD_Write_Nibble(Command & 0xF0);
  8552  002D30  5006               	movf	LCD_Cmd@Command^0,w,c
  8553  002D32  0BF0               	andlw	240
  8554  002D34  EC78  F017         	call	_LCD_Write_Nibble
  8555                           
  8556                           ;I2C.c: 78:   LCD_Write_Nibble((Command << 4) & 0xF0);
  8557  002D38  3806               	swapf	LCD_Cmd@Command^0,w,c
  8558  002D3A  0BF0               	andlw	240
  8559  002D3C  0BF0               	andlw	240
  8560  002D3E  EC78  F017         	call	_LCD_Write_Nibble
  8561  002D42                     
  8562                           ;I2C.c: 79:   if((Command == 0x01) || (Command == 0x02))
  8563  002D42  0406               	decf	LCD_Cmd@Command^0,w,c
  8564  002D44  B4D8               	btfsc	status,2,c
  8565  002D46  EFA7  F016         	goto	u3201
  8566  002D4A  EFA9  F016         	goto	u3200
  8567  002D4E                     u3201:
  8568  002D4E  EFB2  F016         	goto	l3422
  8569  002D52                     u3200:
  8570  002D52  0E02               	movlw	2
  8571  002D54  1806               	xorwf	LCD_Cmd@Command^0,w,c
  8572  002D56  A4D8               	btfss	status,2,c
  8573  002D58  EFB0  F016         	goto	u3211
  8574  002D5C  EFB2  F016         	goto	u3210
  8575  002D60                     u3211:
  8576  002D60  EFBA  F016         	goto	l207
  8577  002D64                     u3210:
  8578  002D64                     l3422:
  8579                           
  8580                           ;I2C.c: 80:     _delay((unsigned long)((2)*(27000000/4000.0)));
  8581  002D64  0E12               	movlw	18
  8582  002D66  6E05               	movwf	??_LCD_Cmd^0,c
  8583  002D68  0E87               	movlw	135
  8584  002D6A                     u4487:
  8585  002D6A  2EE8               	decfsz	wreg,f,c
  8586  002D6C  D7FE               	bra	u4487
  8587  002D6E  2E05               	decfsz	??_LCD_Cmd^0,f,c
  8588  002D70  D7FC               	bra	u4487
  8589  002D72  F000               	nop	
  8590  002D74                     l207:
  8591  002D74  0012               	return		;funcret
  8592  002D76                     __end_of_LCD_Cmd:
  8593                           	callstack 0
  8594                           
  8595 ;; *************** function _LCD_Write_Nibble *****************
  8596 ;; Defined at:
  8597 ;;		line 63 in file "I2C.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;  n               1    wreg     unsigned char 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;  n               1    3[COMRAM] unsigned char 
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  1    wreg      void 
  8604 ;; Registers used:
  8605 ;;		wreg, status,2, status,0, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8611 ;;      Params:         0       0       0       0       0       0       0       0       0
  8612 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8613 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8614 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8615 ;;Total ram usage:        1 bytes
  8616 ;; Hardware stack levels used: 1
  8617 ;; Hardware stack levels required when called: 2
  8618 ;; This function calls:
  8619 ;;		_Expander_Write
  8620 ;; This function is called by:
  8621 ;;		_LCD_Cmd
  8622 ;;		_LCD_Print
  8623 ;;		_LCD_PutC
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627                           	psect	text51
  8628  002EF0                     __ptext51:
  8629                           	callstack 0
  8630  002EF0                     _LCD_Write_Nibble:
  8631                           	callstack 27
  8632                           
  8633                           ;incstack = 0
  8634                           ;LCD_Write_Nibble@n stored from wreg
  8635  002EF0  6E04               	movwf	LCD_Write_Nibble@n^0,c
  8636  002EF2                     
  8637                           ;I2C.c: 63: void LCD_Write_Nibble(uint8_t n);I2C.c: 64: {;I2C.c: 65:   n |= RS;
  8638  002EF2  0E00               	movlw	0
  8639  002EF4  0100               	movlb	0	; () banked
  8640  002EF6  B1F1               	btfsc	(_RS/(0+8))& (0+255),_RS& (0+7),b
  8641  002EF8  0E01               	movlw	1
  8642  002EFA  1204               	iorwf	LCD_Write_Nibble@n^0,f,c
  8643  002EFC                     
  8644                           ; BSR set to: 0
  8645                           ;I2C.c: 66:   Expander_Write(n & 0xFB);
  8646  002EFC  5004               	movf	LCD_Write_Nibble@n^0,w,c
  8647  002EFE  0BFB               	andlw	251
  8648  002F00  EC05  F018         	call	_Expander_Write
  8649  002F04                     
  8650                           ;I2C.c: 67:   _delay((unsigned long)((1)*(27000000/4000000.0)));
  8651  002F04  D000               	nop2		;2 cycle nop
  8652  002F06  D000               	nop2		;2 cycle nop
  8653  002F08  D000               	nop2		;2 cycle nop
  8654  002F0A                     
  8655                           ;I2C.c: 68:   Expander_Write(n | 0x04);
  8656  002F0A  5004               	movf	LCD_Write_Nibble@n^0,w,c
  8657  002F0C  0904               	iorlw	4
  8658  002F0E  EC05  F018         	call	_Expander_Write
  8659  002F12                     
  8660                           ;I2C.c: 69:   _delay((unsigned long)((1)*(27000000/4000000.0)));
  8661  002F12  D000               	nop2		;2 cycle nop
  8662  002F14  D000               	nop2		;2 cycle nop
  8663  002F16  D000               	nop2		;2 cycle nop
  8664  002F18                     
  8665                           ;I2C.c: 70:   Expander_Write(n & 0xFB);
  8666  002F18  5004               	movf	LCD_Write_Nibble@n^0,w,c
  8667  002F1A  0BFB               	andlw	251
  8668  002F1C  EC05  F018         	call	_Expander_Write
  8669  002F20                     
  8670                           ;I2C.c: 71:   _delay((unsigned long)((100)*(27000000/4000000.0)));
  8671  002F20  0EE1               	movlw	225
  8672  002F22                     u4497:
  8673  002F22  2EE8               	decfsz	wreg,f,c
  8674  002F24  D7FE               	bra	u4497
  8675  002F26  0012               	return		;funcret
  8676  002F28                     __end_of_LCD_Write_Nibble:
  8677                           	callstack 0
  8678                           
  8679 ;; *************** function _Expander_Write *****************
  8680 ;; Defined at:
  8681 ;;		line 55 in file "I2C.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;  value           1    wreg     unsigned char 
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;  value           1    2[COMRAM] unsigned char 
  8686 ;; Return value:  Size  Location     Type
  8687 ;;                  1    wreg      void 
  8688 ;; Registers used:
  8689 ;;		wreg, status,2, status,0, cstack
  8690 ;; Tracked objects:
  8691 ;;		On entry : 0/0
  8692 ;;		On exit  : 0/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8695 ;;      Params:         0       0       0       0       0       0       0       0       0
  8696 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8697 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8698 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8699 ;;Total ram usage:        1 bytes
  8700 ;; Hardware stack levels used: 1
  8701 ;; Hardware stack levels required when called: 1
  8702 ;; This function calls:
  8703 ;;		_I2CLCD_Start
  8704 ;;		_I2CLCD_Stop
  8705 ;;		_I2CLCD_Write
  8706 ;; This function is called by:
  8707 ;;		_LCD_Write_Nibble
  8708 ;;		_LCD_Begin
  8709 ;;		_Backlight
  8710 ;;		_noBacklight
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text52
  8715  00300A                     __ptext52:
  8716                           	callstack 0
  8717  00300A                     _Expander_Write:
  8718                           	callstack 27
  8719                           
  8720                           ;incstack = 0
  8721                           ;Expander_Write@value stored from wreg
  8722  00300A  6E03               	movwf	Expander_Write@value^0,c
  8723  00300C                     
  8724                           ;I2C.c: 55: void Expander_Write(uint8_t value);I2C.c: 56: {;I2C.c: 57:   I2CLCD_Start();
  8725  00300C  ECD3  F017         	call	_I2CLCD_Start	;wreg free
  8726                           
  8727                           ;I2C.c: 58:   I2CLCD_Write(i2c_addr);
  8728  003010  0100               	movlb	0	; () banked
  8729  003012  51F0               	movf	_i2c_addr& (0+255),w,b
  8730  003014  EC94  F017         	call	_I2CLCD_Write
  8731                           
  8732                           ;I2C.c: 59:   I2CLCD_Write(value | backlight_val);
  8733  003018  5003               	movf	Expander_Write@value^0,w,c
  8734  00301A  0100               	movlb	0	; () banked
  8735  00301C  11DE               	iorwf	_backlight_val& (0+255),w,b
  8736  00301E  EC94  F017         	call	_I2CLCD_Write
  8737                           
  8738                           ;I2C.c: 60:   I2CLCD_Stop();
  8739  003022  ECBF  F017         	call	_I2CLCD_Stop	;wreg free
  8740  003026  0012               	return		;funcret
  8741  003028                     __end_of_Expander_Write:
  8742                           	callstack 0
  8743                           
  8744 ;; *************** function _I2CLCD_Write *****************
  8745 ;; Defined at:
  8746 ;;		line 27 in file "I2C.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;  i2c_data        1    wreg     unsigned char 
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;  i2c_data        1    1[COMRAM] unsigned char 
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  1    wreg      void 
  8753 ;; Registers used:
  8754 ;;		wreg, status,2, status,0
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8760 ;;      Params:         0       0       0       0       0       0       0       0       0
  8761 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8762 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8763 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8764 ;;Total ram usage:        2 bytes
  8765 ;; Hardware stack levels used: 1
  8766 ;; This function calls:
  8767 ;;		Nothing
  8768 ;; This function is called by:
  8769 ;;		_Expander_Write
  8770 ;; This function uses a non-reentrant model
  8771 ;;
  8772                           
  8773                           	psect	text53
  8774  002F28                     __ptext53:
  8775                           	callstack 0
  8776  002F28                     _I2CLCD_Write:
  8777                           	callstack 27
  8778                           
  8779                           ;incstack = 0
  8780                           ;I2CLCD_Write@i2c_data stored from wreg
  8781  002F28  6E02               	movwf	I2CLCD_Write@i2c_data^0,c
  8782  002F2A                     l174:
  8783  002F2A  B4C7               	btfsc	199,2,c	;volatile
  8784  002F2C  EF9A  F017         	goto	u2381
  8785  002F30  EF9C  F017         	goto	u2380
  8786  002F34                     u2381:
  8787  002F34  EF95  F017         	goto	l174
  8788  002F38                     u2380:
  8789  002F38  CFC5 F001          	movff	4037,??_I2CLCD_Write	;volatile
  8790  002F3C  0E1F               	movlw	31
  8791  002F3E  1601               	andwf	??_I2CLCD_Write^0,f,c
  8792  002F40  A4D8               	btfss	status,2,c
  8793  002F42  EFA5  F017         	goto	u2391
  8794  002F46  EFA7  F017         	goto	u2390
  8795  002F4A                     u2391:
  8796  002F4A  EF95  F017         	goto	l174
  8797  002F4E                     u2390:
  8798  002F4E                     
  8799                           ;I2C.c: 30:   SSPBUF = i2c_data;
  8800  002F4E  C002  FFC9         	movff	I2CLCD_Write@i2c_data,4041	;volatile
  8801  002F52  0012               	return		;funcret
  8802  002F54                     __end_of_I2CLCD_Write:
  8803                           	callstack 0
  8804                           
  8805 ;; *************** function _I2CLCD_Stop *****************
  8806 ;; Defined at:
  8807 ;;		line 21 in file "I2C.c"
  8808 ;; Parameters:    Size  Location     Type
  8809 ;;		None
  8810 ;; Auto vars:     Size  Location     Type
  8811 ;;		None
  8812 ;; Return value:  Size  Location     Type
  8813 ;;                  1    wreg      void 
  8814 ;; Registers used:
  8815 ;;		wreg, status,2, status,0
  8816 ;; Tracked objects:
  8817 ;;		On entry : 0/0
  8818 ;;		On exit  : 0/0
  8819 ;;		Unchanged: 0/0
  8820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8821 ;;      Params:         0       0       0       0       0       0       0       0       0
  8822 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8823 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8824 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8825 ;;Total ram usage:        1 bytes
  8826 ;; Hardware stack levels used: 1
  8827 ;; This function calls:
  8828 ;;		Nothing
  8829 ;; This function is called by:
  8830 ;;		_Expander_Write
  8831 ;; This function uses a non-reentrant model
  8832 ;;
  8833                           
  8834                           	psect	text54
  8835  002F7E                     __ptext54:
  8836                           	callstack 0
  8837  002F7E                     _I2CLCD_Stop:
  8838                           	callstack 27
  8839  002F7E                     l168:
  8840  002F7E  B4C7               	btfsc	199,2,c	;volatile
  8841  002F80  EFC4  F017         	goto	u2361
  8842  002F84  EFC6  F017         	goto	u2360
  8843  002F88                     u2361:
  8844  002F88  EFBF  F017         	goto	l168
  8845  002F8C                     u2360:
  8846  002F8C  CFC5 F001          	movff	4037,??_I2CLCD_Stop	;volatile
  8847  002F90  0E1F               	movlw	31
  8848  002F92  1601               	andwf	??_I2CLCD_Stop^0,f,c
  8849  002F94  A4D8               	btfss	status,2,c
  8850  002F96  EFCF  F017         	goto	u2371
  8851  002F9A  EFD1  F017         	goto	u2370
  8852  002F9E                     u2371:
  8853  002F9E  EFBF  F017         	goto	l168
  8854  002FA2                     u2370:
  8855  002FA2                     
  8856                           ;I2C.c: 24:   PEN = 1;
  8857  002FA2  84C5               	bsf	4037,2,c	;volatile
  8858  002FA4  0012               	return		;funcret
  8859  002FA6                     __end_of_I2CLCD_Stop:
  8860                           	callstack 0
  8861                           
  8862 ;; *************** function _I2CLCD_Start *****************
  8863 ;; Defined at:
  8864 ;;		line 15 in file "I2C.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;		None
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;		None
  8869 ;; Return value:  Size  Location     Type
  8870 ;;                  1    wreg      void 
  8871 ;; Registers used:
  8872 ;;		wreg, status,2, status,0
  8873 ;; Tracked objects:
  8874 ;;		On entry : 0/0
  8875 ;;		On exit  : 0/0
  8876 ;;		Unchanged: 0/0
  8877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8878 ;;      Params:         0       0       0       0       0       0       0       0       0
  8879 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8880 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8881 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8882 ;;Total ram usage:        1 bytes
  8883 ;; Hardware stack levels used: 1
  8884 ;; This function calls:
  8885 ;;		Nothing
  8886 ;; This function is called by:
  8887 ;;		_Expander_Write
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           	psect	text55
  8892  002FA6                     __ptext55:
  8893                           	callstack 0
  8894  002FA6                     _I2CLCD_Start:
  8895                           	callstack 27
  8896  002FA6                     l162:
  8897  002FA6  B4C7               	btfsc	199,2,c	;volatile
  8898  002FA8  EFD8  F017         	goto	u2341
  8899  002FAC  EFDA  F017         	goto	u2340
  8900  002FB0                     u2341:
  8901  002FB0  EFD3  F017         	goto	l162
  8902  002FB4                     u2340:
  8903  002FB4  CFC5 F001          	movff	4037,??_I2CLCD_Start	;volatile
  8904  002FB8  0E1F               	movlw	31
  8905  002FBA  1601               	andwf	??_I2CLCD_Start^0,f,c
  8906  002FBC  A4D8               	btfss	status,2,c
  8907  002FBE  EFE3  F017         	goto	u2351
  8908  002FC2  EFE5  F017         	goto	u2350
  8909  002FC6                     u2351:
  8910  002FC6  EFD3  F017         	goto	l162
  8911  002FCA                     u2350:
  8912  002FCA                     
  8913                           ;I2C.c: 18:   SEN = 1;
  8914  002FCA  80C5               	bsf	4037,0,c	;volatile
  8915  002FCC  0012               	return		;funcret
  8916  002FCE                     __end_of_I2CLCD_Start:
  8917                           	callstack 0
  8918                           
  8919 ;; *************** function _I2CLCD_Init *****************
  8920 ;; Defined at:
  8921 ;;		line 7 in file "I2C.c"
  8922 ;; Parameters:    Size  Location     Type
  8923 ;;  i2c_clk_freq    4   13[COMRAM] unsigned long 
  8924 ;; Auto vars:     Size  Location     Type
  8925 ;;		None
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  1    wreg      void 
  8928 ;; Registers used:
  8929 ;;		wreg, status,2, status,0, cstack
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8935 ;;      Params:         4       0       0       0       0       0       0       0       0
  8936 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8937 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8938 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8939 ;;Total ram usage:        8 bytes
  8940 ;; Hardware stack levels used: 1
  8941 ;; Hardware stack levels required when called: 1
  8942 ;; This function calls:
  8943 ;;		___lldiv
  8944 ;; This function is called by:
  8945 ;;		_main
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949                           	psect	text56
  8950  002C32                     __ptext56:
  8951                           	callstack 0
  8952  002C32                     _I2CLCD_Init:
  8953                           	callstack 29
  8954  002C32                     
  8955                           ;I2C.c: 7: void I2CLCD_Init(uint32_t i2c_clk_freq);I2C.c: 8: {;I2C.c: 9:   SSPCON1 = 0x2
      +                          8;
  8956  002C32  0E28               	movlw	40
  8957  002C34  6EC6               	movwf	198,c	;volatile
  8958                           
  8959                           ;I2C.c: 10:   SSPCON2 = 0x00;
  8960  002C36  0E00               	movlw	0
  8961  002C38  6EC5               	movwf	197,c	;volatile
  8962  002C3A                     
  8963                           ;I2C.c: 11:   SSPADD = (27000000/(4 * i2c_clk_freq)) - 1;
  8964  002C3A  0EC0               	movlw	192
  8965  002C3C  6E01               	movwf	___lldiv@dividend^0,c
  8966  002C3E  0EFC               	movlw	252
  8967  002C40  6E02               	movwf	(___lldiv@dividend+1)^0,c
  8968  002C42  0E9B               	movlw	155
  8969  002C44  6E03               	movwf	(___lldiv@dividend+2)^0,c
  8970  002C46  0E01               	movlw	1
  8971  002C48  6E04               	movwf	(___lldiv@dividend+3)^0,c
  8972  002C4A  C00E  F012         	movff	I2CLCD_Init@i2c_clk_freq,??_I2CLCD_Init
  8973  002C4E  C00F  F013         	movff	I2CLCD_Init@i2c_clk_freq+1,??_I2CLCD_Init+1
  8974  002C52  C010  F014         	movff	I2CLCD_Init@i2c_clk_freq+2,??_I2CLCD_Init+2
  8975  002C56  C011  F015         	movff	I2CLCD_Init@i2c_clk_freq+3,??_I2CLCD_Init+3
  8976  002C5A  0E02               	movlw	2
  8977  002C5C                     u4155:
  8978  002C5C  90D8               	bcf	status,0,c
  8979  002C5E  3612               	rlcf	??_I2CLCD_Init^0,f,c
  8980  002C60  3613               	rlcf	(??_I2CLCD_Init+1)^0,f,c
  8981  002C62  3614               	rlcf	(??_I2CLCD_Init+2)^0,f,c
  8982  002C64  3615               	rlcf	(??_I2CLCD_Init+3)^0,f,c
  8983  002C66  2EE8               	decfsz	wreg,f,c
  8984  002C68  EF2E  F016         	goto	u4155
  8985  002C6C  C012  F005         	movff	??_I2CLCD_Init,___lldiv@divisor
  8986  002C70  C013  F006         	movff	??_I2CLCD_Init+1,___lldiv@divisor+1
  8987  002C74  C014  F007         	movff	??_I2CLCD_Init+2,___lldiv@divisor+2
  8988  002C78  C015  F008         	movff	??_I2CLCD_Init+3,___lldiv@divisor+3
  8989  002C7C  EC3F  F013         	call	___lldiv	;wreg free
  8990  002C80  0401               	decf	?___lldiv^0,w,c
  8991  002C82  6EC8               	movwf	200,c	;volatile
  8992  002C84                     
  8993                           ;I2C.c: 12:   SSPSTAT = 0;
  8994  002C84  0E00               	movlw	0
  8995  002C86  6EC7               	movwf	199,c	;volatile
  8996  002C88  0012               	return		;funcret
  8997  002C8A                     __end_of_I2CLCD_Init:
  8998                           	callstack 0
  8999                           
  9000 ;; *************** function ___lldiv *****************
  9001 ;; Defined at:
  9002 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;  dividend        4    0[COMRAM] unsigned long 
  9005 ;;  divisor         4    4[COMRAM] unsigned long 
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;  quotient        4    8[COMRAM] unsigned long 
  9008 ;;  counter         1   12[COMRAM] unsigned char 
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  4    0[COMRAM] unsigned long 
  9011 ;; Registers used:
  9012 ;;		wreg, status,2, status,0
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9018 ;;      Params:         8       0       0       0       0       0       0       0       0
  9019 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9021 ;;      Totals:        13       0       0       0       0       0       0       0       0
  9022 ;;Total ram usage:       13 bytes
  9023 ;; Hardware stack levels used: 1
  9024 ;; This function calls:
  9025 ;;		Nothing
  9026 ;; This function is called by:
  9027 ;;		_I2CLCD_Init
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           	psect	text57
  9032  00267E                     __ptext57:
  9033                           	callstack 0
  9034  00267E                     ___lldiv:
  9035                           	callstack 29
  9036  00267E  0E00               	movlw	0
  9037  002680  6E09               	movwf	___lldiv@quotient^0,c
  9038  002682  0E00               	movlw	0
  9039  002684  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  9040  002686  0E00               	movlw	0
  9041  002688  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  9042  00268A  0E00               	movlw	0
  9043  00268C  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  9044  00268E  5005               	movf	___lldiv@divisor^0,w,c
  9045  002690  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  9046  002692  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  9047  002694  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  9048  002696  B4D8               	btfsc	status,2,c
  9049  002698  EF50  F013         	goto	u3321
  9050  00269C  EF52  F013         	goto	u3320
  9051  0026A0                     u3321:
  9052  0026A0  EF88  F013         	goto	l479
  9053  0026A4                     u3320:
  9054  0026A4  0E01               	movlw	1
  9055  0026A6  6E0D               	movwf	___lldiv@counter^0,c
  9056  0026A8  EF5C  F013         	goto	l3522
  9057  0026AC                     l3520:
  9058  0026AC  90D8               	bcf	status,0,c
  9059  0026AE  3605               	rlcf	___lldiv@divisor^0,f,c
  9060  0026B0  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  9061  0026B2  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  9062  0026B4  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  9063  0026B6  2A0D               	incf	___lldiv@counter^0,f,c
  9064  0026B8                     l3522:
  9065  0026B8  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  9066  0026BA  EF61  F013         	goto	u3331
  9067  0026BE  EF63  F013         	goto	u3330
  9068  0026C2                     u3331:
  9069  0026C2  EF56  F013         	goto	l3520
  9070  0026C6                     u3330:
  9071  0026C6                     l3524:
  9072  0026C6  90D8               	bcf	status,0,c
  9073  0026C8  3609               	rlcf	___lldiv@quotient^0,f,c
  9074  0026CA  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  9075  0026CC  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  9076  0026CE  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  9077  0026D0  5005               	movf	___lldiv@divisor^0,w,c
  9078  0026D2  5C01               	subwf	___lldiv@dividend^0,w,c
  9079  0026D4  5006               	movf	(___lldiv@divisor+1)^0,w,c
  9080  0026D6  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  9081  0026D8  5007               	movf	(___lldiv@divisor+2)^0,w,c
  9082  0026DA  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  9083  0026DC  5008               	movf	(___lldiv@divisor+3)^0,w,c
  9084  0026DE  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  9085  0026E0  A0D8               	btfss	status,0,c
  9086  0026E2  EF75  F013         	goto	u3341
  9087  0026E6  EF77  F013         	goto	u3340
  9088  0026EA                     u3341:
  9089  0026EA  EF80  F013         	goto	l3532
  9090  0026EE                     u3340:
  9091  0026EE  5005               	movf	___lldiv@divisor^0,w,c
  9092  0026F0  5E01               	subwf	___lldiv@dividend^0,f,c
  9093  0026F2  5006               	movf	(___lldiv@divisor+1)^0,w,c
  9094  0026F4  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  9095  0026F6  5007               	movf	(___lldiv@divisor+2)^0,w,c
  9096  0026F8  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  9097  0026FA  5008               	movf	(___lldiv@divisor+3)^0,w,c
  9098  0026FC  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  9099  0026FE  8009               	bsf	___lldiv@quotient^0,0,c
  9100  002700                     l3532:
  9101  002700  90D8               	bcf	status,0,c
  9102  002702  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  9103  002704  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  9104  002706  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  9105  002708  3205               	rrcf	___lldiv@divisor^0,f,c
  9106  00270A  2E0D               	decfsz	___lldiv@counter^0,f,c
  9107  00270C  EF63  F013         	goto	l3524
  9108  002710                     l479:
  9109  002710  C009  F001         	movff	___lldiv@quotient,?___lldiv
  9110  002714  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  9111  002718  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  9112  00271C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  9113  002720  0012               	return		;funcret
  9114  002722                     __end_of___lldiv:
  9115                           	callstack 0
  9116                           
  9117                           	psect	rparam
  9118  0000                     
  9119                           	psect	idloc
  9120                           
  9121                           ;Config register IDLOC0 @ 0x200000
  9122                           ;	unspecified, using default values
  9123  200000                     	org	2097152
  9124  200000  FF                 	db	255
  9125                           
  9126                           ;Config register IDLOC1 @ 0x200001
  9127                           ;	unspecified, using default values
  9128  200001                     	org	2097153
  9129  200001  FF                 	db	255
  9130                           
  9131                           ;Config register IDLOC2 @ 0x200002
  9132                           ;	unspecified, using default values
  9133  200002                     	org	2097154
  9134  200002  FF                 	db	255
  9135                           
  9136                           ;Config register IDLOC3 @ 0x200003
  9137                           ;	unspecified, using default values
  9138  200003                     	org	2097155
  9139  200003  FF                 	db	255
  9140                           
  9141                           ;Config register IDLOC4 @ 0x200004
  9142                           ;	unspecified, using default values
  9143  200004                     	org	2097156
  9144  200004  FF                 	db	255
  9145                           
  9146                           ;Config register IDLOC5 @ 0x200005
  9147                           ;	unspecified, using default values
  9148  200005                     	org	2097157
  9149  200005  FF                 	db	255
  9150                           
  9151                           ;Config register IDLOC6 @ 0x200006
  9152                           ;	unspecified, using default values
  9153  200006                     	org	2097158
  9154  200006  FF                 	db	255
  9155                           
  9156                           ;Config register IDLOC7 @ 0x200007
  9157                           ;	unspecified, using default values
  9158  200007                     	org	2097159
  9159  200007  FF                 	db	255
  9160                           
  9161                           	psect	config
  9162                           
  9163                           ;Config register CONFIG1L @ 0x300000
  9164                           ;	PLL Prescaler Selection bits
  9165                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9166                           ;	System Clock Postscaler Selection bits
  9167                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9168                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9169                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9170  300000                     	org	3145728
  9171  300000  00                 	db	0
  9172                           
  9173                           ;Config register CONFIG1H @ 0x300001
  9174                           ;	Oscillator Selection bits
  9175                           ;	FOSC = HS, HS oscillator (HS)
  9176                           ;	Fail-Safe Clock Monitor Enable bit
  9177                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9178                           ;	Internal/External Oscillator Switchover bit
  9179                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9180  300001                     	org	3145729
  9181  300001  0C                 	db	12
  9182                           
  9183                           ;Config register CONFIG2L @ 0x300002
  9184                           ;	Power-up Timer Enable bit
  9185                           ;	PWRT = ON, PWRT enabled
  9186                           ;	Brown-out Reset Enable bits
  9187                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  9188                           ;	Brown-out Reset Voltage bits
  9189                           ;	BORV = 3, Minimum setting 2.05V
  9190                           ;	USB Voltage Regulator Enable bit
  9191                           ;	VREGEN = OFF, USB voltage regulator disabled
  9192  300002                     	org	3145730
  9193  300002  1E                 	db	30
  9194                           
  9195                           ;Config register CONFIG2H @ 0x300003
  9196                           ;	Watchdog Timer Enable bit
  9197                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9198                           ;	Watchdog Timer Postscale Select bits
  9199                           ;	WDTPS = 32768, 1:32768
  9200  300003                     	org	3145731
  9201  300003  1E                 	db	30
  9202                           
  9203                           ; Padding undefined space
  9204  300004                     	org	3145732
  9205  300004  FF                 	db	255
  9206                           
  9207                           ;Config register CONFIG3H @ 0x300005
  9208                           ;	CCP2 MUX bit
  9209                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9210                           ;	PORTB A/D Enable bit
  9211                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9212                           ;	Low-Power Timer 1 Oscillator Enable bit
  9213                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9214                           ;	MCLR Pin Enable bit
  9215                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9216  300005                     	org	3145733
  9217  300005  81                 	db	129
  9218                           
  9219                           ;Config register CONFIG4L @ 0x300006
  9220                           ;	Stack Full/Underflow Reset Enable bit
  9221                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9222                           ;	Single-Supply ICSP Enable bit
  9223                           ;	LVP = OFF, Single-Supply ICSP disabled
  9224                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9225                           ;	ICPRT = OFF, ICPORT disabled
  9226                           ;	Extended Instruction Set Enable bit
  9227                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9228                           ;	Background Debugger Enable bit
  9229                           ;	DEBUG = 0x1, unprogrammed default
  9230  300006                     	org	3145734
  9231  300006  81                 	db	129
  9232                           
  9233                           ; Padding undefined space
  9234  300007                     	org	3145735
  9235  300007  FF                 	db	255
  9236                           
  9237                           ;Config register CONFIG5L @ 0x300008
  9238                           ;	Code Protection bit
  9239                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9240                           ;	Code Protection bit
  9241                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9242                           ;	Code Protection bit
  9243                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9244                           ;	Code Protection bit
  9245                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9246  300008                     	org	3145736
  9247  300008  0F                 	db	15
  9248                           
  9249                           ;Config register CONFIG5H @ 0x300009
  9250                           ;	Boot Block Code Protection bit
  9251                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9252                           ;	Data EEPROM Code Protection bit
  9253                           ;	CPD = OFF, Data EEPROM is not code-protected
  9254  300009                     	org	3145737
  9255  300009  C0                 	db	192
  9256                           
  9257                           ;Config register CONFIG6L @ 0x30000A
  9258                           ;	Write Protection bit
  9259                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9260                           ;	Write Protection bit
  9261                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9262                           ;	Write Protection bit
  9263                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9264                           ;	Write Protection bit
  9265                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9266  30000A                     	org	3145738
  9267  30000A  0F                 	db	15
  9268                           
  9269                           ;Config register CONFIG6H @ 0x30000B
  9270                           ;	Configuration Register Write Protection bit
  9271                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9272                           ;	Boot Block Write Protection bit
  9273                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9274                           ;	Data EEPROM Write Protection bit
  9275                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9276  30000B                     	org	3145739
  9277  30000B  E0                 	db	224
  9278                           
  9279                           ;Config register CONFIG7L @ 0x30000C
  9280                           ;	Table Read Protection bit
  9281                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9282                           ;	Table Read Protection bit
  9283                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9284                           ;	Table Read Protection bit
  9285                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9286                           ;	Table Read Protection bit
  9287                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9288  30000C                     	org	3145740
  9289  30000C  0F                 	db	15
  9290                           
  9291                           ;Config register CONFIG7H @ 0x30000D
  9292                           ;	Boot Block Table Read Protection bit
  9293                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9294  30000D                     	org	3145741
  9295  30000D  40                 	db	64
  9296                           tosu	equ	0xFFF
  9297                           tosh	equ	0xFFE
  9298                           tosl	equ	0xFFD
  9299                           stkptr	equ	0xFFC
  9300                           pclatu	equ	0xFFB
  9301                           pclath	equ	0xFFA
  9302                           pcl	equ	0xFF9
  9303                           tblptru	equ	0xFF8
  9304                           tblptrh	equ	0xFF7
  9305                           tblptrl	equ	0xFF6
  9306                           tablat	equ	0xFF5
  9307                           prodh	equ	0xFF4
  9308                           prodl	equ	0xFF3
  9309                           indf0	equ	0xFEF
  9310                           postinc0	equ	0xFEE
  9311                           postdec0	equ	0xFED
  9312                           preinc0	equ	0xFEC
  9313                           plusw0	equ	0xFEB
  9314                           fsr0h	equ	0xFEA
  9315                           fsr0l	equ	0xFE9
  9316                           wreg	equ	0xFE8
  9317                           indf1	equ	0xFE7
  9318                           postinc1	equ	0xFE6
  9319                           postdec1	equ	0xFE5
  9320                           preinc1	equ	0xFE4
  9321                           plusw1	equ	0xFE3
  9322                           fsr1h	equ	0xFE2
  9323                           fsr1l	equ	0xFE1
  9324                           bsr	equ	0xFE0
  9325                           indf2	equ	0xFDF
  9326                           postinc2	equ	0xFDE
  9327                           postdec2	equ	0xFDD
  9328                           preinc2	equ	0xFDC
  9329                           plusw2	equ	0xFDB
  9330                           fsr2h	equ	0xFDA
  9331                           fsr2l	equ	0xFD9
  9332                           status	equ	0xFD8

Data Sizes:
    Strings     31
    Constant    0
    Data        21
    BSS         126
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     17     146
    BANK1           256      0      20
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), STR_4(CODE[3]), data_buffer(BANK0[20]), STR_1(CODE[3]), 
		 -> UID_2(BANK0[20]), UID_1(BANK0[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), STR_4(CODE[3]), data_buffer(BANK0[20]), STR_1(CODE[3]), 
		 -> UID_2(BANK0[20]), UID_1(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> data_buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1200$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1200$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    MFRC522_ReadCardSerial2@str	PTR unsigned char  size(2) Largest target is 20
		 -> UID_2(BANK0[20]), 

    MFRC522_ReadCardSerial@str	PTR unsigned char  size(2) Largest target is 20
		 -> UID_1(BANK0[20]), 

    MFRC522_IsCard2@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType2(BANK0[1]), 

    MFRC522_IsCard@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType1(BANK0[1]), 

    MFRC522_AntiColl2@serNum	PTR unsigned char  size(2) Largest target is 20
		 -> UID_2(BANK0[20]), 

    MFRC522_AntiColl@serNum	PTR unsigned char  size(2) Largest target is 20
		 -> UID_1(BANK0[20]), 

    MFRC522_CRC2@dataOut	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag2@buffer(COMRAM[9]), 

    MFRC522_CRC2@dataIn	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag2@buffer(COMRAM[9]), 

    MFRC522_CRC@dataOut	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_CRC@dataIn	PTR unsigned char  size(2) Largest target is 9
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), 

    MFRC522_Request2@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType2(BANK0[1]), 

    MFRC522_Request@TagType	PTR unsigned char  size(2) Largest target is 1
		 -> TagType1(BANK0[1]), 

    MFRC522_ToCard2@backData	PTR unsigned char  size(2) Largest target is 20
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag2@buffer(COMRAM[9]), UID_2(BANK0[20]), TagType2(BANK0[1]), 

    MFRC522_ToCard2@backLen	PTR unsigned int  size(2) Largest target is 2
		 -> MFRC522_AntiColl2@unLen(COMRAM[2]), MFRC522_Halt@unLen(COMRAM[2]), MFRC522_SelectTag2@recvBits(COMRAM[2]), MFRC522_Request2@backBits(COMRAM[2]), 

    MFRC522_ToCard2@sendData	PTR unsigned char  size(2) Largest target is 20
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag2@buffer(COMRAM[9]), UID_2(BANK0[20]), TagType2(BANK0[1]), 

    MFRC522_ToCard@backData	PTR unsigned char  size(2) Largest target is 20
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), UID_1(BANK0[20]), TagType1(BANK0[1]), 

    MFRC522_ToCard@backLen	PTR unsigned int  size(2) Largest target is 2
		 -> MFRC522_AntiColl@unLen(COMRAM[2]), MFRC522_Halt@unLen(COMRAM[2]), MFRC522_SelectTag@recvBits(COMRAM[2]), MFRC522_Request@backBits(COMRAM[2]), 

    MFRC522_ToCard@sendData	PTR unsigned char  size(2) Largest target is 20
		 -> MFRC522_Halt@buff(COMRAM[4]), MFRC522_SelectTag@buffer(COMRAM[9]), UID_1(BANK0[20]), TagType1(BANK0[1]), 

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 20
		 -> STR_6(CODE[11]), STR_3(CODE[11]), data_buffer(BANK0[20]), 

    USART_TxChar@out	PTR unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[3]), data_buffer(BANK0[20]), STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _USART_TxChar->_strlen
    _USART_Init->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _MFRC522_ReadCardSerial2->_MFRC522_AntiColl2
    _MFRC522_AntiColl2->_MFRC522_ToCard2
    _MFRC522_ReadCardSerial->_MFRC522_AntiColl
    _MFRC522_AntiColl->_MFRC522_ToCard
    _MFRC522_IsCard2->_MFRC522_Request2
    _MFRC522_Request2->_MFRC522_ToCard2
    _MFRC522_IsCard->_MFRC522_Request
    _MFRC522_Request->_MFRC522_ToCard
    _MFRC522_Reset->_MFRC522_Wr
    _MFRC522_AntennaOn2->_MFRC522_Set_Bit2
    _MFRC522_AntennaOn->_MFRC522_Set_Bit
    _MFRC522_AntennaOff2->_MFRC522_Clear_Bit2
    _MFRC522_AntennaOff->_MFRC522_Clear_Bit
    _MFRC522_Halt->_MFRC522_ToCard
    _MFRC522_Halt->_MFRC522_ToCard2
    _MFRC522_ToCard2->_MFRC522_Clear_Bit2
    _MFRC522_ToCard2->_MFRC522_Set_Bit2
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_ToCard->_MFRC522_Set_Bit
    _MFRC522_CRC2->_MFRC522_Clear_Bit2
    _MFRC522_CRC2->_MFRC522_Set_Bit2
    _MFRC522_Set_Bit2->_MFRC522_Rd2
    _MFRC522_Clear_Bit2->_MFRC522_Rd2
    _MFRC522_CRC->_MFRC522_Clear_Bit
    _MFRC522_CRC->_MFRC522_Set_Bit
    _MFRC522_Set_Bit->_MFRC522_Rd
    _MFRC522_Clear_Bit->_MFRC522_Rd
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble
    _LCD_Write_Nibble->_Expander_Write
    _Expander_Write->_I2CLCD_Write
    _I2CLCD_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  126398
                                             13 BANK0      4     4      0
                        _I2CLCD_Init
                          _LCD_Begin
                            _LCD_Cmd
                           _LCD_Goto
                          _LCD_Print
                   _MFRC522_AntiColl
                  _MFRC522_AntiColl2
                       _MFRC522_Halt
                       _MFRC522_Init
                     _MFRC522_IsCard
                    _MFRC522_IsCard2
             _MFRC522_ReadCardSerial
            _MFRC522_ReadCardSerial2
                         _USART_Init
                       _USART_TxChar
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    6715
                                             89 COMRAM     6     0      6
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6212
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6    5857
                                             62 COMRAM    19    13      6
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    24     11    4419
                                             27 COMRAM    35    24     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              6     4      2     388
                                              6 COMRAM     6     4      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2937
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _USART_TxChar                                         5     3      2     788
                                              4 COMRAM     5     3      2
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     394
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4    4611
                                             55 COMRAM     8     4      4
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2388
                                             39 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _MFRC522_ReadCardSerial2                              3     1      2   11685
                                             39 COMRAM     2     0      2
                  _MFRC522_AntiColl2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntiColl2                                    8     6      2   11542
                                             31 COMRAM     8     6      2
                 _MFRC522_Clear_Bit2
                    _MFRC522_ToCard2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (1) _MFRC522_ReadCardSerial                               3     1      2   12065
                                             39 COMRAM     2     0      2
                   _MFRC522_AntiColl
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntiColl                                     8     6      2   11922
                                             31 COMRAM     8     6      2
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_IsCard2                                      2     0      2    9288
                                             37 COMRAM     2     0      2
                   _MFRC522_Request2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Request2                                     6     4      2    9190
                                             31 COMRAM     6     4      2
                    _MFRC522_ToCard2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (1) _MFRC522_IsCard                                       2     0      2    9592
                                             37 COMRAM     2     0      2
                    _MFRC522_Request
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Request                                      6     4      2    9494
                                             31 COMRAM     6     4      2
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Init                                         0     0      0   12955
                 _MFRC522_AntennaOff
                _MFRC522_AntennaOff2
                  _MFRC522_AntennaOn
                 _MFRC522_AntennaOn2
                      _MFRC522_Reset
                         _MFRC522_Wr
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Reset                                        0     0      0    1453
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOn2                                   1     1      0    2098
                        _MFRC522_Rd2
                   _MFRC522_Set_Bit2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOn                                    1     1      0    2174
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOff2                                  0     0      0    2162
                 _MFRC522_Clear_Bit2
 ---------------------------------------------------------------------------------
 (2) _MFRC522_AntennaOff                                   0     0      0    2238
                  _MFRC522_Clear_Bit
 ---------------------------------------------------------------------------------
 (1) _MFRC522_Halt                                         6     6      0   32743
                                             31 COMRAM     6     6      0
                        _MFRC522_CRC
                       _MFRC522_CRC2
                  _MFRC522_Clear_Bit
                 _MFRC522_Clear_Bit2
                     _MFRC522_ToCard
                    _MFRC522_ToCard2
 ---------------------------------------------------------------------------------
 (3) _MFRC522_ToCard2                                     19    12      7    7555
                                             12 COMRAM    19    12      7
                 _MFRC522_Clear_Bit2
                        _MFRC522_Rd2
                   _MFRC522_Set_Bit2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (3) _MFRC522_ToCard                                      19    12      7    7783
                                             12 COMRAM    19    12      7
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_CRC2                                         7     2      5    6252
                                             12 COMRAM     7     2      5
                 _MFRC522_Clear_Bit2
                        _MFRC522_Rd2
                   _MFRC522_Set_Bit2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit2                                     3     2      1    1934
                                              9 COMRAM     3     2      1
                        _MFRC522_Rd2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit2                                   3     2      1    2162
                                              9 COMRAM     3     2      1
                        _MFRC522_Rd2
                        _MFRC522_Wr2
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr2                                          5     4      1    1377
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd2                                          9     9      0     163
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (2) _MFRC522_CRC                                          7     2      5    6480
                                             12 COMRAM     7     2      5
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Set_Bit                                      3     2      1    2010
                                              9 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Clear_Bit                                    3     2      1    2238
                                              9 COMRAM     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Wr                                           5     4      1    1453
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Rd                                           9     9      0     163
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            6     4      2     549
                                              4 COMRAM     6     4      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_Goto                                             4     3      1     537
                                              6 COMRAM     4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            3     3      0     265
                                              6 COMRAM     3     3      0
                     _Expander_Write
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              2     2      0     199
                                              4 COMRAM     2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Nibble                                     1     1      0     111
                                              3 COMRAM     1     1      0
                     _Expander_Write
 ---------------------------------------------------------------------------------
 (3) _Expander_Write                                       1     1      0      44
                                              2 COMRAM     1     1      0
                       _I2CLCD_Start
                        _I2CLCD_Stop
                       _I2CLCD_Write
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Write                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Stop                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _I2CLCD_Start                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2CLCD_Init                                          8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2CLCD_Init
     ___lldiv
   _LCD_Begin
     _Expander_Write
       _I2CLCD_Start
       _I2CLCD_Stop
       _I2CLCD_Write
     _LCD_Cmd
       _LCD_Write_Nibble
         _Expander_Write
   _LCD_Cmd
   _LCD_Goto
     _LCD_Cmd
   _LCD_Print
     _LCD_Write_Nibble
   _MFRC522_AntiColl
     _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Wr
     _MFRC522_ToCard
       _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Set_Bit
         _MFRC522_Rd
         _MFRC522_Wr
       _MFRC522_Wr
     _MFRC522_Wr
   _MFRC522_AntiColl2
     _MFRC522_Clear_Bit2
       _MFRC522_Rd2
       _MFRC522_Wr2
     _MFRC522_ToCard2
       _MFRC522_Clear_Bit2
       _MFRC522_Rd2
       _MFRC522_Set_Bit2
         _MFRC522_Rd2
         _MFRC522_Wr2
       _MFRC522_Wr2
     _MFRC522_Wr2
   _MFRC522_Halt
     _MFRC522_CRC
       _MFRC522_Clear_Bit
       _MFRC522_Rd
       _MFRC522_Set_Bit
       _MFRC522_Wr
     _MFRC522_CRC2
       _MFRC522_Clear_Bit2
       _MFRC522_Rd2
       _MFRC522_Set_Bit2
       _MFRC522_Wr2
     _MFRC522_Clear_Bit
     _MFRC522_Clear_Bit2
     _MFRC522_ToCard
     _MFRC522_ToCard2
   _MFRC522_Init
     _MFRC522_AntennaOff
       _MFRC522_Clear_Bit
     _MFRC522_AntennaOff2
       _MFRC522_Clear_Bit2
     _MFRC522_AntennaOn
       _MFRC522_Rd
       _MFRC522_Set_Bit
     _MFRC522_AntennaOn2
       _MFRC522_Rd2
       _MFRC522_Set_Bit2
     _MFRC522_Reset
       _MFRC522_Wr
     _MFRC522_Wr
     _MFRC522_Wr2
   _MFRC522_IsCard
     _MFRC522_Request
       _MFRC522_ToCard
       _MFRC522_Wr
   _MFRC522_IsCard2
     _MFRC522_Request2
       _MFRC522_ToCard2
       _MFRC522_Wr2
   _MFRC522_ReadCardSerial
     _MFRC522_AntiColl
   _MFRC522_ReadCardSerial2
     _MFRC522_AntiColl2
   _USART_Init
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___fltol
     ___xxtofl
   _USART_TxChar
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
           _toupper
             _islower
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      14       7        7.8%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     11      92       5       91.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhlhh      28      0       0      21        0.0%
BITBIGSFRllll       23      0       0      29        0.0%
BITBIGSFRhhll       15      0       0      22        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhllh        C      0       0      23        0.0%
BITBIGSFRhlll        7      0       0      24        0.0%
BITBIGSFRlllh        5      0       0      28        0.0%
BITBIGSFRlhl         5      0       0      26        0.0%
BITBIGSFRllh         2      0       0      27        0.0%
BITBIGSFRlhh         1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     105      30        0.0%
DATA                 0      0     105       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Mar 28 02:05:12 2022

                   ___fldiv@aexp 0027                     ___fldiv@bexp 0026  
                   ___fldiv@sign 001F                      MFRC522_Rd@i 0008  
                   MFRC522_CRC@i 0013                     MFRC522_CRC@n 0012  
                    MFRC522_Wr@i 0005                               l96 191A  
                             _RS 0788                     MFRC522_Rd2@i 0008  
                  MFRC522_CRC2@i 0013                    MFRC522_CRC2@n 0012  
                   MFRC522_Wr2@i 0005                              l110 28FC  
                            l201 2F26                              l113 2A26  
                            l301 30F0                              l207 2D74  
                            l119 2A94                              l216 2AFE  
                            l320 1838                              l304 267C  
                            l225 23CA                              l162 2FA6  
                            l170 2FA2                              l171 2FA4  
                            l251 22D4                              l164 2FCA  
                            l228 2014                              l252 230E  
                            l260 225C                              l332 183A  
                            l316 1698                              l412 2530  
                            l165 2FCC                              l253 2314  
                            l174 2F2A                              l159 2C88  
                            l327 17E0                              l423 247E  
                            l168 2F7E                              l176 2F4E  
                            l280 3040                              l360 15AC  
                            l344 140A                              l432 30D4  
                            l416 2532                              l177 2F52  
                            l273 298C                              l409 25D8  
                            l266 2A20                              l258 221C  
                            l274 2990                              l442 2FEA  
                            l267 2A24                              l283 308A  
                            l259 2256                              l355 1552  
                            l363 2BCC                              l427 30E4  
                            l419 247C                              l348 15AA  
                            l292 30C4                              l372 2B66  
                            l277 305A                              l437 3008  
                            l198 3026                              l382 2860  
                            l286 3072                              l366 2BCE  
                            l295 30B2                              l392 27C0  
                            l289 2F7C                              l369 2B64  
                            l378 2814                              l298 30FC  
                            l388 2774                              l486 2720  
                            l479 2710                              l749 1F26  
                            l980 0A10                              l981 09FE  
                            l982 09C4                              l997 0B2A  
                            l989 0CE0              MFRC522_Rd2@ucResult 0006  
                            _PEN 007E2A                              _SEN 007E28  
                            _led 0068                              _pad 20E0  
                            wreg 000FE8                   ??_MFRC522_CRC2 0012  
                 ??_MFRC522_Halt 0020                   ??_MFRC522_Init 000D  
                __end_of_LCD_Cmd 2D76                     ___fltol@exp1 000A  
                           l1006 0BFA                             l1110 1E20  
                           l1007 0BE8                             l1121 1DB8  
                           l1034 107A                             l1114 1D5C  
                           l1130 2CDA                             l1107 1CC4  
                           l1036 0EDA                             l1045 0F20  
                           l1205 2C28                             l1230 20DE  
                           l1206 2C30                             l1047 0F98  
                           l1039 0E9E                             l1215 2EEE  
                           l1048 0F86                             l3000 2112  
                           l1209 2E7E                             l1241 30FE  
                           l1161 2126                             l3010 2178  
                           l3002 211E                             l1171 10B4  
                           l3020 2E44                             l3012 218C  
                           l1164 2168                             l3004 2132  
                           l1252 2DF6                             l3100 11D2  
                           l1261 2EB6                             l1173 10BC  
                           l1238 2E42                             l1166 21A4  
                           l3006 2146                             l3030 2DEA  
                           l3110 1276                             l1190 12BA  
                           l3102 11D8                             l1247 2D28  
                           l1255 2DFE                             l4000 1FC0  
                           l3040 304C                             l3200 17C8  
                           l3016 2EB8                             l3008 214A  
                           l3024 2DBC                             l1192 131E  
                           l3120 12E0                             l3112 1290  
                           l3104 11DE                             l3034 300C  
                           l3130 2F04                             l4002 1FDE  
                           l3050 3076                             l3042 302A  
                           l3210 1804                             l3202 17CC  
                           l4010 2862                             l3122 12F6  
                           l3114 12AA                             l3106 123C  
                           l3132 2F0A                             l4004 1FF6  
                           l4100 2322                             l3036 3044  
                           l3052 307E                             l3044 302A  
                           l3212 1820                             l3204 17DC  
                           l3140 15B0                             l4020 28F6  
                           l4012 2866                             l3028 2DBC  
                           l3116 12CA                             l3108 1258  
                           l3060 107C                             l3134 2F12  
                           l3126 2EF2                             l4102 238C  
                           l3038 3044                             l3046 3032  
                           l3054 305E                             l3206 17EC  
                           l3214 1834                             l3150 1602  
                           l3142 15C0                             l3230 134A  
                           l3222 1322                             l4110 2554  
                           l4006 25DA                             l4022 28F8  
                           l4014 28EC                             l3118 12D0  
                           l3070 10DA                             l3062 108C  
                           l3310 1AE2                             l1199 1C6C  
                           l3136 2F18                             l3128 2EFC  
                           l4104 238E                             l3048 3076  
                           l3056 305E                             l3208 1800  
                           l3160 166E                             l3152 162C  
                           l3144 15CC                             l3240 13C4  
                           l3232 1374                             l3224 1332  
                           l4120 25C4                             l4112 256C  
                           l4008 25F0                             l4032 2FEC  
                           l4024 28FA                             l4016 28F0  
                           l3080 1118                             l3072 10FA  
                           l3064 108E                             l3320 1B52  
                           l3312 1AE6                             l3304 1A9E  
                           l4200 1A92                             l3138 2F20  
                           l3058 3066                             l3170 16A6  
                           l3162 1678                             l3154 1638  
                           l3250 1412                             l3242 13E0  
                           l3234 139E                             l3226 133E  
                           l4122 25CE                             l4114 2576  
                           l4106 2534                             l4026 30D6  
                           l4042 30C6                             l4034 2FF8  
                           l3410 2478                             l3402 2438  
                           l4050 2FDA                             l4018 28F4  
                           l3082 1134                             l3074 1102  
                           l3066 10A8                             l3330 1BFC  
                           l3322 1B8E                             l3314 1B0A  
                           l3306 1AC2                             l4130 1894  
                           l3420 2D52                             l4060 2A9C  
                           l3500 2756                             l3180 16F6  
                           l3172 16B8                             l3164 168A  
                           l3156 164E                             l3148 15D8  
                           l3260 1456                             l3252 1418  
                           l3244 13EA                             l3236 13AA  
                           l4116 2580                             l4108 253C  
                           l3404 2448                             l3084 1144  
                           l3076 110A                             l3068 10D2  
                           l3332 1C10                             l3316 1B2E  
                           l3308 1AD0                             l4140 18D8  
                           l4132 18A0                             l4124 183C  
                           l3422 2D64                             l3414 2D2C  
                           l4062 2AA8                             l3510 278E  
                           l3502 2768                             l3190 173E  
                           l3182 1710                             l3174 16C6  
                           l3166 1694                             l3158 1652  
                           l3270 149E                             l3262 1468  
                           l3254 142A                             l3246 13FC  
                           l3238 13C0                             l4118 25A2  
                           l3430 30B4                             l3350 2480  
                           l3406 244A                             l3094 117C  
                           l3078 1110                             l3318 1B44  
                           l3326 1BCA                             l3342 1C36  
                           l4150 1942                             l4142 18F6  
                           l4134 18B0                             l4126 186E  
                           l3520 26AC                             l3416 2D30  
                           l4064 2AB4                             l3512 279C  
                           l3504 2772                             l3192 1750  
                           l3184 1714                             l3176 16DA  
                           l3168 16A0                             l3280 152A  
                           l3272 14B0                             l3264 1482  
                           l3256 1438                             l3248 1406  
                           l3432 30A2                             l3424 2F54  
                           l3440 2B74                             l3360 24B4  
                           l3352 2484                             l3408 245A  
                           l4048 2FCE                             l3600 0946  
                           l4080 2A6A                             l2800 2044  
                           l3096 11AE                             l3088 1150  
                           l3344 1C5A                             l3328 1BEE  
                           l3336 1C1C                             l4160 197E  
                           l4144 1914                             l4136 18BC  
                           l4128 1888                             l3530 26FE  
                           l3522 26B8                             l3514 267E  
                           l3418 2D42                             l4066 2AC0  
                           l4058 2A98                             l3506 277C  
                           l3194 1760                             l3186 1728  
                           l3178 16E4                             l3290 1572  
                           l3282 153A                             l3274 14C2  
                           l3266 1486                             l3258 144C  
                           l4330 135E                             l3434 30F2  
                           l3426 2F6C                             l3442 2B80  
                           l3370 24EC                             l3362 24D8  
                           l3354 248E                             l3610 095A  
                           l3602 094A                             l2810 2CE8  
                           l4082 2A6C                             l4074 2A26  
                           l2802 2062                             l3098 11C2  
                           l3338 1C2A                             l4090 2CAC  
                           l4170 19B4                             l4162 198A  
                           l4146 1924                             l4138 18C8  
                           l3532 2700                             l3524 26C6  
                           l3516 268E                             l4068 2ACC  
                           l2900 21F2                             l3508 277E  
                           l3196 17A4                             l3188 172C  
                           l4332 15EC                             l3292 1576  
                           l3284 153E                             l3276 14D2  
                           l3268 149A                             l3436 30E6  
                           l3428 2F76                             l3444 2BA4  
                           l3460 2B4C                             l3452 2B02  
                           l3372 24FC                             l3364 24E8  
                           l3356 249A                             l3700 0BCA  
                           l3620 09AC                             l3612 095E  
                           l3604 094E                             l3540 083C  
                           l2812 2CEC                             l4076 2A34  
                           l2804 2098                             l2820 2E0C  
                           l4092 2CC8                             l4084 2C8A  
                           l4164 198E                             l4156 1948  
                           l4148 1936                             l4172 19CE  
                           l3534 270A                             l3526 26D0  
                           l3518 26A4                             l2830 2FA6  
                           l4334 2AE0                             l3470 27DE  
                           l2902 21F4                             l3198 17B8  
                           l3294 1592                             l3286 154E  
                           l3278 1516                             l3446 2BB4  
                           l3438 2B6A                             l3462 2B60  
                           l3454 2B0C                             l3374 24FE  
                           l3358 24AA                             l3390 23F6  
                           l3382 23CC                             l3710 0C24  
                           l3702 0BE0                             l3630 09F0  
                           l3622 09BC                             l3606 0952  
                           l3614 0962                             l3550 0870  
                           l3542 083E                             l2814 2D1C  
                           l4078 2A3C                             l2822 2E1E  
                           l4086 2C9C                             l4190 1A38  
                           l4182 19F2                             l4174 19E0  
                           l4166 199E                             l4158 1972  
                           l3528 26EE                             l2832 2FB4  
                           l2840 2F38                             l4096 2316  
                           l3480 2812                             l3472 27F0  
                           l2920 223E                             l2904 21FA  
                           l3288 155E                             l3296 15A6  
                           l3448 2BC8                             l3456 2B18  
                           l3376 250E                             l3392 2400  
                           l3384 23D0                             l3720 0CA0  
                           l3712 0C5E                             l3632 09F2  
                           l3624 09D2                             l3616 0966  
                           l3608 0956                             l3560 08A2  
                           l3544 084E                             l3552 0878  
                           l3536 0822                             l3800 0E42  
                           l2808 2CDC                             l2824 2E22  
                           l4088 2CA4                             l4192 1A48  
                           l4184 1A1C                             l4176 19EC  
                           l4168 19A8                             l2834 2F7E  
                           l4098 231A                             l2850 2280  
                           l2842 2260                             l2930 29A0  
                           l3482 281C                             l3474 27F4  
                           l3466 27C2                             l2922 225A  
                           l2914 221E                             l2906 21FC  
                           l3490 2722                             l3458 2B3C  
                           l3378 252C                             l3394 2424  
                           l3386 23DA                             l3730 0CC0  
                           l3722 0CA4                             l3706 0C0A  
                           l3714 0C60                             l3650 0A7A  
                           l3642 0A42                             l3634 09FC  
                           l3626 09DE                             l3618 0990  
                           l3570 08D8                             l3562 08A8  
                           l3554 0888                             l3546 085E  
                           l3538 082E                             l3810 0E8E  
                           l3802 0E52                             l2818 2E00  
                           l2826 2E80                             l4194 1A52  
                           l4186 1A28                             l2836 2F8C  
                           l2860 22AC                             l2844 2268  
                           l2940 29CC                             l3484 281E  
                           l3476 27F6                             l3468 27D6  
                           l2916 2224                             l2908 2214  
                           l3492 2736                             l3396 2434  
                           l3388 23E6                             l3732 0CCE  
                           l3724 0CB2                             l3716 0C70  
                           l3708 0C16                             l3652 0A7E  
                           l3644 0A52                             l3636 0A1E  
                           l3660 0A9E                             l3628 09E2  
                           l3580 0914                             l3572 08E8  
                           l3564 08B6                             l3556 088E  
                           l3548 086E                             l3820 0ED8  
                           l3812 0E9C                             l3804 0E62  
                           l3740 0CEE                             l3900 1EBC  
                           l4196 1A5E                             l4188 1A34  
                           l2838 2F2A                             l2862 22B2  
                           l2846 226A                             l2950 29E4  
                           l2942 29CE                             l2926 2994  
                           l3486 282E                             l3478 2808  
                           l2918 223C                             l3494 273E  
                           l3734 0CD0                             l3726 0CB8  
                           l3718 0C80                             l3662 0AC4  
                           l3670 0B1A                             l3654 0A8C  
                           l3646 0A60                             l3638 0A2E  
                           l3590 0932                             l3582 0922  
                           l3574 08EA                             l3566 08B8  
                           l3558 08A0                             l3830 0F1E  
                           l3822 0EEA                             l3814 0EA8  
                           l3806 0E6A                             l3750 0D2E  
                           l3742 0CFC                             l3910 1EE6  
                           l3902 1EC6                             l4198 1A78  
                           ?_pad 0011                             l2880 2312  
                           l2872 22D6                             l2864 22B4  
                           l2856 2288                             l2848 226C  
                           l2952 2A06                             l2944 29D0  
                           l2936 29A4                             l2928 2998  
                           l3488 283C                             l2960 2900  
                           l3496 2750                             l3728 0CBA  
                           l3680 0B6E                             l3672 0B40  
                           l3664 0AF8                             l3656 0A8E  
                           l3648 0A6E                             l3592 0936  
                           l3584 0926                             l3568 08C8  
                           l3576 08F2                             l3840 0F7E  
                           l3824 0F00                             l3832 0F30  
                           l3816 0EC6                             l3808 0E7A  
                           l3760 0D54                             l3752 0D30  
                           l3744 0CFE                             l3912 1EF6  
                           l3920 1C70                             l2874 22DC  
                           l2866 22CC                             l2858 22AA  
                           l2954 2A0C                             l2946 29E0  
                           l2938 29C6                             l2890 21B4  
                           l2970 2910                             l2962 2904  
                           l3498 2754                             l3690 0B98  
                           l3682 0B7C                             l3674 0B50  
                           l3666 0AFA                             l3658 0A98  
                           l3594 093A                             l3586 092A  
                           l3578 0902                             l3850 0FEC  
                           l3834 0F3E                             l3826 0F06  
                           l3818 0EC8                             l3770 0D94  
                           l3762 0D62                             l3746 0D0E  
                           l3754 0D38                             l3738 0CE2  
                           l3914 1F06                             l3922 1C80  
                           l2794 2016                             l2876 22F4  
                           l2956 2A0E                             l2892 21C8  
                           l2884 21A8                             l2980 294C  
                           l2972 2932                             l2964 290C  
                           l3692 0BA8                             l3684 0B7E  
                           l3668 0B0A                             l3596 093E  
                           l3588 092E                             l3860 1056  
                           l3844 0FA8                             l3852 0FF0  
                           l3836 0F42                             l3828 0F10  
                           l3780 0DD4                             l3772 0D96  
                           l3764 0D64                             l3756 0D48  
                           l3748 0D1E                             l3916 1F16  
                           l3908 1EDA                             l3940 1D46  
                           l3932 1CFE                             l3924 1C8E  
                           l2796 2028                             l2878 22F6  
                           l2958 2A10                             l2886 21B0  
                           l2990 297A                             l2974 2938  
                           l3686 0B8C                             l3678 0B64  
                           l3694 0BAA                             l3598 0942  
                           l3862 105A                             l3854 100A  
                           l3846 0FB4                             l3838 0F50  
                           l3790 0E04                             l3782 0DDC  
                           l3766 0D74                             l3774 0D9E  
                           l3758 0D4E                             l3950 1DC6  
                           l3942 1D52                             l3934 1D06  
                           l3926 1CD4                             l2798 203A  
                           l2888 21B2                             l2992 297C  
                           l2984 2950                             l2976 293A  
                           l3688 0B94                             l3696 0BB8  
                           l3864 1068                             l3856 1020  
                           l3848 0FC2                             l3792 0E04  
                           l3784 0DE0                             l3776 0DAE  
                           l3768 0D84                             l3960 1E0E  
                           l3952 1DC8                             l3944 1D8E  
                           l3936 1D12                             l3928 1CEA  
              ?_LCD_Write_Nibble 0001                             l2898 21D0  
                           l2986 2972                             l2978 293C  
                           l3698 0BBC                             l3866 106E  
                           l3858 103A                             l3778 0DC4  
                           l3890 1E8C                             l3882 1E4C  
                           l3962 1E10                             l3954 1DCC  
                           l3946 1D9A                             l3938 1D44  
                           l2994 20E0                             l3970 2BE6  
                           l3980 1F2A                             l2988 2978  
                           l3868 1070                             l3796 0E18  
                           l3788 0DF4                             l3892 1E9A  
                           l3884 1E76                             l3876 1E22  
                           l3956 1DF0                             l3948 1DA8  
                           l2996 20F0                             l3972 2C0C  
                           l3974 2C32                             l3990 1F74  
                           l3982 1F2E                             l3798 0E32  
                           l3886 1E78                             l3878 1E38  
                           l3958 1E00                             l2998 2104  
                           l3966 2BD0                             l3976 2C3A  
                           l3992 1F7A                             l3984 1F34  
                           l3888 1E88                             l3968 2BD8  
                           l3978 2C84                             l3994 1F8E  
                           l3986 1F52                             l3898 1EB2  
                           l3996 1F9C                             l3988 1F60  
                           l3998 1FBA                             STR_1 0817  
                           STR_2 081D                             STR_3 0801  
                           STR_4 081A                             STR_5 081D  
                           STR_6 080C                             _CREN 007D5C  
                           u3000 1438                             u3001 1434  
                           u3010 144C                             u3011 1448  
                           u3020 1468                             u2300 2D1C  
                           u3100 1AC2                             u3021 1464  
                           u2301 2D18                             u3101 1ABE  
                           u3030 1482                             u2310 2E42  
                           u3110 1B0A                             u3031 147E  
                           u2311 2E3E                             u3111 1B06  
                           u3200 2D52                             u2400 229A  
                           u3040 149A                             u4000 1EAE  
                           u2320 2EB0                             u3120 1B2E  
                           u3201 2D4E                             u2401 2292  
                           u3041 1496                             u4001 1EAA  
                           u2321 2EAA                             u3121 1B2A  
                           u3210 2D64                             u3050 14B0  
                           u4010 1ED6                             u2250 2028  
                           u2330 2EB2                             u3130 1BEE  
                           u3211 2D60                             u3051 14AC  
                           u4011 1ED2                             u2251 2024  
                           u3131 1BEA                             u2340 2FB4  
                           u2420 22CC                             u2500 29B6  
                           u3300 278E                             u3060 14D2  
                           u3220 2BB4                             u3140 24E8  
                           u4020 1EF6                             u4100 1DB8  
                           u2260 203A                             u2341 2FB0  
                           u2421 22C8                             u2501 29AE  
                           u3301 278A                             u3061 14CE  
                           u3221 2BB0                             u3141 24E4  
                           u4021 1EF2                             u4101 1DB4  
                           u2261 2036                             u2350 2FCA  
                           u2430 22EE                             u3310 279C  
                           u3070 153A                             u3230 2BC8  
                           u3150 250E                             u4030 1F06  
                           u4110 1DC6                             u2270 2062  
                           u2351 2FC6                             u2431 22E6  
                           u3311 2798                             u3071 1536  
                           u3231 2BC4                             u3151 250A  
                           u4031 1F02                             u4111 1DC2  
                           u2271 205E                             u3320 26A4  
                           u2360 2F8C                             u4200 2380  
                           u2440 230E                             u2520 29E0  
                           u3080 154E                             u3240 2B4C  
                           u3160 252C                             u3400 08C8  
                           u4120 1E00                             u4040 1C80  
                           u2280 2098                             u3321 26A0  
                           u2361 2F88                             u2441 230A  
                           u2521 29DC                             u3081 154A  
                           u3241 2B48                             u3161 2528  
                           u3401 08C4                             u4121 1DFC  
                           u4041 1C7C                             u2281 2094  
                           u3330 26C6                             u2370 2FA2  
                           u4210 23BA                             u2418 229C  
                           u2530 29F6                             u2450 21E2  
                           u2610 298C                             u3090 1592  
                           u3250 2B60                             u3170 2434  
                           u3410 08D8                             u4130 1E0E  
                           u4050 1C8E                             u2290 2D0C  
                           u3331 26C2                             u2371 2F9E  
                           u2531 29EE                             u2451 21DA  
                           u2611 2988                             u3091 158E  
                           u3251 2B5C                             u3171 2430  
                           u3411 08D4                             u4131 1E0A  
                           u4051 1C8A                             u3340 26EE  
                           u2380 2F38                             u4220 23CA  
                           u3260 2808                             u3180 245A  
                           u3500 0A1E                             u3420 0914  
                           u4060 1CEA                             u2620 20F0  
                           u2700 2DEA                             u4140 2C28  
                           u3341 26EA                             u2381 2F34  
                           u4221 23C6                             u3261 2804  
                           u3181 2456                             u3501 0A1A  
                           u3421 0910                             u4061 1CE6  
                           u2621 20EC                             u2701 2DE6  
                           u4141 2C24                             u2390 2F4E  
                           u2438 22F0                             u2550 2A20  
                           u2518 29B8                             u3270 282E  
                           u2470 2214                             u3190 2478  
                           u3510 0A2E                             u3430 0922  
                           u3350 083C                             u4070 1D40  
                           u2630 2112                             u2710 108C  
                           u4230 18F6                             u2391 2F4A  
                           u4207 2376                             u2551 2A1C  
                           u3271 282A                             u2471 2210  
                           u3191 2474                             u3511 0A2A  
                           u3431 091E                             u3351 0838  
                           u4071 1D3C                             u2631 210E  
                           u2711 1088                             u4231 18F2  
                           u3280 283C                             u2480 2236  
                           u2608 2964                             u2560 2922  
                           u3600 0B8C                             u3520 0A60  
                           u3440 0990                             u3360 084E  
                           u4080 1D8A                             u4160 2A34  
                           u2640 2168                             u2800 1290  
                           u2720 10A8                             u4240 1914  
                           u4217 23B0                             u3281 2838  
                           u2481 222E                             u2561 291A  
                           u3601 0B88                             u3521 0A5C  
                           u3441 098C                             u3361 084A  
                           u4081 1D86                             u2297 2D02  
                           u4161 2A30                             u2641 2164  
                           u2801 128C                             u2721 10A4  
                           u4241 1910                             u2490 2256  
                           u3290 2768                             u3610 0BA8  
                           u3530 0A6E                             u3450 09A8  
                           u3370 085E                             u4090 1DA8  
                           u4170 2A68                             u2650 2178  
                           u2810 12AA                             u2730 10D2  
                           u4250 1936                             u4155 2C5C  
                           u2491 2252                             u3291 2764  
                           u3611 0BA4                             u3531 0A6A  
                           u3451 09A2                             u3371 085A  
                           u4091 1DA4                             u2651 2174  
                           u2811 12A6                             u2731 10CE  
                           u4251 1932                             u2548 29F8  
                           u2468 21E4                             u2580 294C  
                           u2900 1710                             u3700 0C80  
                           u3620 0BB8                             u3540 0A8C  
                           u3460 09AA                             u3380 08A0  
                           u4180 2A94                             u2660 2EE8  
                           u2820 12BA                             u2740 1134  
                           u4260 199E                             u2581 2948  
                           u2901 170C                             u3701 0C7C  
                           u3621 0BB4                             u3541 0A88  
                           u3381 089C                             u4181 2A90  
                           u2661 2EE2                             u2821 12B6  
                           u2741 1130                             u4261 199A  
                           u4190 234E                             u2590 2962  
                           u2910 1728                             u3710 0CA0  
                           u3630 0BCA                             u3550 0AC4  
                           u3470 09D2                             u3390 08B6  
                           u2670 2EEA                             u2830 12CA  
                           u2750 117C                             u4270 19E0  
                           u4407 1F58                             u2591 295A  
                           u2911 1724                             u3711 0C9C  
                           u3631 0BC6                             u3551 0AC0  
                           u3471 09CE                             u3391 08B2  
                           u2831 12C6                             u2751 1178  
                           u4271 19DC                             u2488 2238  
                           u2920 173E                             u2840 166E  
                           u3720 0CB2                             u3640 0BE0  
                           u3560 0B0A                             u3480 09F0  
                           u3800 0DC4                             u2680 2E78  
                           u2760 11AE                             u4280 1A48  
                           u4417 1F6C                             u2921 173A  
                           u2841 166A                             u3721 0CAE  
                           u3641 0BDC                             u3561 0B06  
                           u3481 09EC                             u3801 0DC0  
                           u4177 2A5E                             u2681 2E72  
                           u2761 11AA                             u4281 1A44  
                           u2578 2924                             u2930 1760  
                           u2850 168A                             u3730 0CCE  
                           u3650 0BF6                             u3570 0B40  
                           u3490 0A10                             u3810 0E04  
                           u2690 2E7A                             u2770 1216  
                           u4427 1F80                             u2931 175C  
                           u2851 1686                             u3731 0CCA  
                           u3651 0BF2                             u3571 0B3C  
                           u3491 0A0C                             u3811 0E00  
                           u2940 17C8                             u2860 16B8  
                           u3660 0C0A                             u3580 0B50  
                           u3900 0F7E                             u3820 0E7A  
                           u3740 0CFC                             u2780 1258  
                           u4437 1F94                             u4197 2344  
                           u2941 17C4                             u2861 16B4  
                           u3661 0C06                             u3581 0B4C  
                           u3901 0F7A                             u3821 0E76  
                           u3741 0CF8                             u2781 1254  
                           u4357 187A                             u2950 17DC  
                           u2870 16C6                             u3670 0C24  
                           u3590 0B7C                             u3910 0F94  
                           u3830 0E9C                             u3750 0D0E  
                           u2790 1276                             u4447 1FAC  
                           u2951 17D8                             u2871 16C2  
                           u3671 0C20                             u3591 0B78  
                           u3911 0F90                             u3831 0E98  
                           u3751 0D0A                             u2791 1272  
                           u2775 1204                             u4367 19C0  
                           u2960 1820                             u2880 16DA  
                           u3680 0C5E                             u3920 0FA8  
                           u3840 0EC6                             u3760 0D1E  
                           u4457 1FCA                             u2961 181C  
                           u2881 16D6                             u3681 0C5A  
                           u3921 0FA4                             u3841 0EC2  
                           u3761 0D1A                             u4377 1A6A  
                           u2890 16F6                             u2970 13E0  
                           u3690 0C70                             u3930 0FC2  
                           u3850 0EEA                             u3770 0D62  
                           u4467 1FE8                             u2891 16F2  
                           u2971 13DC                             u3691 0C6C  
                           u3931 0FBE                             u3851 0EE6  
                           u3771 0D5E                             u4387 1A84  
                           u2980 13FC                             u3940 100A  
                           u3860 0F00                             u3780 0D74  
                           _RCIF 007CF5                             _RCEN 007E2B  
                           u4477 2006                             u4397 1F3E  
                           u2981 13F8                             u3941 1006  
                           u3861 0EFC                             u3781 0D70  
                           u2990 142A                             u3950 103A  
                           u3870 0F1E                             u3790 0D84  
                           u4487 2D6A                             u2991 1426  
                           u3951 1036                             u3871 0F1A  
                           u3791 0D80                             u3960 1068  
                           u3880 0F3E                             u4497 2F22  
                           u3961 1064                             u3881 0F3A  
                           u3890 0F50                             u3970 1E38  
                           u3891 0F4C                             u3971 1E34  
                           u3980 1E6C                             u3990 1E9A  
                           u3991 1E96                             u3985 1E62  
                           _RSEN 007E29                             _TXIF 007CF4  
             ??_LCD_Write_Nibble 0004             MFRC522_ToCard2@irqEn 001B  
                           _data 00CA                             _dbuf 006C  
                           _main 183C                             _prec 0064  
                           _temp 0100            MFRC522_AntiColl@unLen 0024  
                           _nout 0060                             pad@i 0018  
                           pad@p 0015                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 001A                             fsr2l 000FD9  
                           _xtoa 107C                             prodh 000FF4  
                           prodl 000FF3                             start 0000  
               _MFRC522_AntiColl 2480                  ___fldiv@new_exp 0020  
                    LCD_Goto@col 000A                      LCD_Goto@row 0007  
                   ___param_bank 000000           MFRC522_AntiColl2@unLen 0024  
                ??_MFRC522_Reset 0006                            ??_pad 0017  
               __end_of_LCD_Goto 2B00                    ___fltol@sign1 0009  
               _MFRC522_Set_Bit2 305C                  __end_of___fladd 0CE2  
                          ?_main 0001                            _ACKEN 007E2C  
                          _ACKDT 007E2D                  __end_of___fldiv 107C  
        ?_MFRC522_ReadCardSerial 0028                  __end_of___fltol 1F28  
                __end_of___lldiv 2722                            ?_xtoa 001C  
                          _RCREG 000FAE                            _RCSTA 000FAB  
                   vfpfcnvrt@fmt 0041                            _UID_1 00A0  
                          _UID_2 008C                     vfpfcnvrt@llu 0049  
                          _SPBRG 000FAF                 _MFRC522_Request2 2B00  
                          _TXREG 000FAD                            _TXSTA 000FAC  
                          _flags 0066                            _fputc 2016  
                __end_of_isalpha 2E80                            _fputs 2E00  
         MFRC522_AntiColl@serNum 0020                            pad@fp 0011  
                          _width 0062                            _putch 30FE  
                          main@i 00EE                  __end_of_islower 2EB8  
                __end_of_isupper 2EF0                            tablat 000FF5  
              _MFRC522_Clear_Bit 3042                            status 000FD8  
                __end_of_sprintf 2CDC                            xtoa@c 003D  
                          xtoa@d 001E                            xtoa@i 003B  
                          xtoa@n 0033                            xtoa@p 002F  
                          xtoa@w 0031                            xtoa@x 0026  
              _MFRC522_AntiColl2 23CC               ?_MFRC522_Clear_Bit 000A  
                __end_of_toupper 2E00               MFRC522_AntiColl2@i 0027  
                    ?_USART_Init 0038               ?_MFRC522_AntiColl2 0020  
              _MFRC522_AntennaOn 30B4                  __initialization 2D76  
                   __end_of_main 1A9E               ?_MFRC522_AntennaOn 0001  
            ??_MFRC522_Clear_Bit 000B                     __end_of_xtoa 1320  
        MFRC522_AntiColl2@serNum 0020                 ??_MFRC522_IsCard 0028  
      MFRC522_ReadCardSerial@str 0028              ??_MFRC522_AntiColl2 0022  
 __end_of_MFRC522_ReadCardSerial 300A                 ??_MFRC522_ToCard 0014  
                         ??_main 00EC              ??_MFRC522_AntennaOn 000D  
              __end_of_LCD_Begin 2016                           ??_xtoa 0027  
                  __activetblptr 000002                        ??_LCD_Cmd 0005  
                MFRC522_ToCard@i 001D                  MFRC522_ToCard@n 001F  
          MFRC522_ToCard@backLen 0012                __end_of_LCD_Print 23CC  
             MFRC522_Rd@ucResult 0006                  MFRC522_Wr@value 0001  
      __end_of_MFRC522_Clear_Bit 305C            MFRC522_ToCard@_status 0019  
       ?_MFRC522_ReadCardSerial2 0028            MFRC522_ToCard@command 001C  
                         ?_fputc 0001                           ?_fputs 000A  
                         ?_putch 0001        __end_of_MFRC522_AntiColl2 2480  
          MFRC522_ToCard@sendLen 000F            MFRC522_ToCard@waitIRq 0018  
                         _SSPADD 000FC8                           _TRISC6 007CA6  
                         _TRISC7 007CA7                           _SSPBUF 000FC9  
               __end_of___xxtofl 1E22        __end_of_MFRC522_AntennaOn 30C6  
         MFRC522_ToCard2@backLen 0012              MFRC522_CRC2@dataOut 0010  
             MFRC522_Wr2@address 0003                     vfprintf@cfmt 0058  
           __end_of_MFRC522_CRC2 27C2           MFRC522_ToCard2@_status 0019  
         MFRC522_ToCard2@command 001C                        ??___fladd 0030  
           __end_of_MFRC522_Halt 25DA                        ??___fldiv 0017  
           __end_of_MFRC522_Init 267E                        ??___fltol 0005  
        MFRC522_AntiColl@_status 0026                        ??___lldiv 0009  
         MFRC522_ToCard2@sendLen 000F           MFRC522_ToCard2@waitIRq 0018  
                         clear_0 2D9C                           clear_1 2DAC  
                         isa$std 000001                           pad@buf 0013  
                         _strlen 2CDC                           fputc@c 0001  
                  USART_TxChar@i 0009                           fputs@c 000E  
                         fputs@i 000F                           fputs@s 000A  
                      ??_isalpha 0003               _MFRC522_Clear_Bit2 3028  
                      ??_islower 0003                     __mediumconst 0000  
                         tblptrh 000FF7                        ??_isupper 0003  
                         tblptrl 000FF6                           tblptru 000FF8  
                         putch@c 0001                 __end_of_vfprintf 2C32  
                      ??_sprintf 0060                           xtoa@fp 001C  
                      ??_toupper 0009              ?_MFRC522_Clear_Bit2 000A  
                   ___xxtofl@arg 000B                     ___xxtofl@exp 000A  
                   ___xxtofl@val 0001                       __accesstop 0060  
        __end_of__initialization 2DB2                        ?_LCD_Goto 0007  
                  ___rparam_used 000001           MFRC522_Request@TagType 0020  
                   ??_MFRC522_Rd 0001                       ___fltol@f1 0001  
                   ??_MFRC522_Wr 0002               _MFRC522_AntennaOn2 30A2  
             _MFRC522_AntennaOff 30F2          I2CLCD_Init@i2c_clk_freq 000E  
                  _backlight_val 00DE                   __pcstackCOMRAM 0001  
                   __pidataBANK0 308C         MFRC522_AntiColl2@_status 0026  
                  ??_I2CLCD_Init 0012                    ??_I2CLCD_Stop 0001  
            ?_MFRC522_AntennaOn2 0001             ??_MFRC522_Clear_Bit2 000B  
            ?_MFRC522_AntennaOff 0001                    __end_of_fputc 20E0  
                  __end_of_fputs 2E44       MFRC522_ReadCardSerial2@str 0028  
                 LCD_Cmd@Command 0006                    __end_of_putch 3100  
               MFRC522_Halt@buff 0020           MFRC522_Request@_status 0023  
              ??_MFRC522_IsCard2 0028                 MFRC522_Rd@ucAddr 0004  
         MFRC522_Request@reqMode 0022  __end_of_MFRC522_ReadCardSerial2 2FEC  
              ??_MFRC522_ToCard2 0014         __end_of_MFRC522_AntiColl 2534  
              ??_MFRC522_Set_Bit 000B               __end_of_MFRC522_Rd 2316  
             __end_of_MFRC522_Wr 2A26                ??_MFRC522_Request 0022  
               MFRC522_Wr2@value 0001                          ??_fputc 0005  
                        ??_fputs 000E             ??_MFRC522_AntennaOn2 000D  
           ??_MFRC522_AntennaOff 000D                          ??_putch 0001  
                     __pbssBANK0 0060                       __pbssBANK1 0100  
           MFRC522_Set_Bit2@addr 000C                 MFRC522_ToCard2@i 001D  
               MFRC522_ToCard2@n 001F             MFRC522_Set_Bit2@mask 000A  
                     ??_LCD_Goto 0008           MFRC522_ToCard@backData 0010  
       __end_of_MFRC522_Set_Bit2 3074         __end_of_MFRC522_Request2 2B68  
              MFRC522_CRC@dataIn 000D               MFRC522_Set_Bit@tmp 000B  
              MFRC522_CRC@length 000F                 MFRC522_Wr@ucAddr 0004  
         MFRC522_ToCard@lastBits 001A                          ?_strlen 0001  
            __end_of_I2CLCD_Init 2C8A                          _LCD_Cmd 2D2A  
            __end_of_I2CLCD_Stop 2FA6                        ?___xxtofl 0001  
         MFRC522_ToCard@sendData 000D                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
        MFRC522_ToCard2@backData 0010                     ??_USART_Init 003C  
                        __Hparam 0000                          __Lparam 0000  
        MFRC522_Request2@TagType 0020             MFRC522_Clear_Bit@tmp 000B  
            Expander_Write@value 0003             I2CLCD_Write@i2c_data 0002  
                        ___fladd 0822                          ___fldiv 0CE2  
                        ___fltol 1E22                          ___lldiv 267E  
                      ?_vfprintf 0052                     __psmallconst 0800  
        MFRC522_ToCard2@lastBits 001A                          __pcinit 2D76  
          __end_of_MFRC522_Reset 2F7E                          __ramtop 0800  
                        __ptext0 183C                          __ptext1 2C8A  
                        __ptext2 2BD0                          __ptext3 1A9E  
                        __ptext4 107C                          __ptext5 2DBC  
                        __ptext6 2E80                          __ptext7 20E0  
                        __ptext8 2E00                          __ptext9 2016  
        MFRC522_ToCard2@sendData 000D                   _Expander_Write 300A  
                 USART_Init@temp 003C          MFRC522_Request2@_status 0023  
                        _isalpha 2E44                       ??___xxtofl 0005  
                        _islower 2E80                          _isupper 2EB8  
                      _LCD_Begin 1F28          MFRC522_Request2@reqMode 0022  
                   _MFRC522_CRC2 2722               __end_of_USART_Init 28FE  
                      _LCD_Print 2316                          _sprintf 2C8A  
                   _MFRC522_Halt 2534                     _MFRC522_Init 25DA  
                        _toupper 2DBC             end_of_initialization 2DB2  
                        fputc@fp 0003                    __Lmediumconst 0000  
                        fputs@fp 000C                  ___lldiv@divisor 0005  
                ___lldiv@counter 000D                __end_of_vfpfcnvrt 1C6E  
                      _RCSTAbits 000FAB                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                    _I2CLCD_Init 2C32                       ??_vfprintf 0058  
                    _I2CLCD_Stop 2F7E                LCD_Write_Nibble@n 0004  
                        strlen@a 0003                          strlen@s 0001  
         __end_of_Expander_Write 3028                    ?_I2CLCD_Start 0001  
                      _PORTDbits 000F83                    ?_I2CLCD_Write 0001  
                    ___fladd@grs 0037                    ___xxtofl@sign 0009  
                      _TRISAbits 000F92                        _TRISDbits 000F95  
                     ?_LCD_Begin 0001                MFRC522_Rd2@ucAddr 0004  
                    ___fldiv@grs 0022                      ___fldiv@rem 001B  
                     ?_LCD_Print 0005              USART_Init@baud_rate 0038  
                  ??_MFRC522_CRC 0012                    ??_MFRC522_Rd2 0001  
                  ??_MFRC522_Wr2 0002              _MFRC522_AntennaOff2 30E6  
                  ?_USART_TxChar 0005                  _MFRC522_IsCard2 30C6  
                _MFRC522_ToCard2 1320                 _LCD_Write_Nibble 2EF0  
                     LCD_Print@i 000A                  _MFRC522_Set_Bit 3074  
        MFRC522_Request@backBits 0024              MFRC522_ToCard@irqEn 001B  
                    vfpfcnvrt@ap 0043                      vfpfcnvrt@fp 003F  
                _MFRC522_Request 2B68                   ??_I2CLCD_Start 0001  
                 ??_I2CLCD_Write 0001                  ?_Expander_Write 0001  
           ?_MFRC522_AntennaOff2 0001                    __pbitbssBANK0 0788  
                 __end_of_strlen 2D2A              start_initialization 2D76  
              MFRC522_Halt@unLen 0024                ?_MFRC522_AntiColl 0020  
              MFRC522_Rd@address 0003                MFRC522_AntiColl@i 0027  
                    __end_of_pad 21A6               ??_MFRC522_AntiColl 0022  
         MFRC522_Clear_Bit2@addr 000C           MFRC522_Clear_Bit2@mask 000A  
                 ??_USART_TxChar 0007                ?_MFRC522_Set_Bit2 000A  
             MFRC522_CRC2@dataIn 000D                ?_MFRC522_Request2 0020  
             ??_MFRC522_Set_Bit2 000B         ??_MFRC522_ReadCardSerial 002A  
                    vfprintf@fmt 0054               MFRC522_CRC2@length 000F  
            __end_of_MFRC522_CRC 2862              __end_of_MFRC522_Rd2 225E  
            __end_of_MFRC522_Wr2 2992                MFRC522_Wr2@ucAddr 0004  
             ??_MFRC522_Request2 0022                      __pdataBANK0 00CA  
          ??_MFRC522_AntennaOff2 000D                         ??_strlen 0003  
                      ___fladd@a 002C                        ___fladd@b 0028  
                       ?_LCD_Cmd 0001                        ___fldiv@a 0013  
                      ___fldiv@b 000F                    __pcstackBANK0 00DF  
                    ??_LCD_Begin 0007                      _data_buffer 00B4  
                    ??_LCD_Print 0007          __end_of_MFRC522_IsCard2 30D6  
        __end_of_MFRC522_ToCard2 15AE                        __pnvBANK0 00F0  
            MFRC522_Set_Bit2@tmp 000B          __end_of_MFRC522_Set_Bit 308C  
        _MFRC522_ReadCardSerial2 2FCE               MFRC522_CRC@dataOut 0010  
        __end_of_MFRC522_Request 2BD0              MFRC522_Set_Bit@addr 000C  
              MFRC522_Wr@address 0003              MFRC522_Set_Bit@mask 000A  
                       ?___fladd 0028                         ?___fldiv 000F  
                       ?___fltol 0001                         ?___lldiv 0001  
               LCD_Print@LCD_Str 0005                      __smallconst 0800  
                       ?_isalpha 0001                         ?_islower 0001  
                       ?_isupper 0001                         ?_sprintf 005A  
                       ?_toupper 0007             __end_of_I2CLCD_Start 2FCE  
                       _LCD_Goto 2A96                      _MFRC522_CRC 27C2  
           __end_of_I2CLCD_Write 2F54                      _MFRC522_Rd2 21A6  
                       _LATAbits 000F89                      _MFRC522_Wr2 28FE  
                       _LATDbits 000F8C                         _PIE1bits 000F9D  
         MFRC522_IsCard2@TagType 0026                     ?_I2CLCD_Init 000E  
                   ?_I2CLCD_Stop 0001                        _vfpfcnvrt 1A9E  
                      main@i_289 00EF             __end_of_USART_TxChar 2A96  
                 _MFRC522_IsCard 30D6                   _MFRC522_ToCard 15AE  
                     vfpfcnvrt@c 0051         __end_of_LCD_Write_Nibble 2F28  
                      copy_data0 2D8A                         _i2c_addr 00F0  
               ?_MFRC522_IsCard2 0026        ??_MFRC522_ReadCardSerial2 002A  
                       _TagType1 00C9                         _TagType2 00C8  
               ?_MFRC522_ToCard2 000D            MFRC522_Clear_Bit2@tmp 000B  
               ?_MFRC522_Set_Bit 000A                         __Hrparam 0000  
          MFRC522_Clear_Bit@addr 000C                 ?_MFRC522_Request 0020  
          MFRC522_Clear_Bit@mask 000A                       vfprintf@ap 0056  
                       __Lrparam 0000                       vfprintf@fp 0052  
               ??_Expander_Write 0003                       ?_vfpfcnvrt 003F  
   MFRC522_AntiColl2@serNumCheck 0023           __end_of_MFRC522_IsCard 30E6  
                     sprintf@fmt 005C         MFRC522_Request2@backBits 0024  
                       ___xxtofl 1C6E           __end_of_MFRC522_ToCard 183C  
         _MFRC522_ReadCardSerial 2FEC                         __ptext10 30FE  
                       __ptext11 2EB8                         __ptext20 2FCE  
                       __ptext12 2E44                         __ptext21 23CC  
                       __ptext13 2A26                         __ptext30 30A2  
                       __ptext22 2FEC                         __ptext14 2CDC  
                       __ptext31 30B4                         __ptext23 2480  
                       __ptext15 2862                         __ptext40 28FE  
                       __ptext32 30E6                         __ptext24 30C6  
                       __ptext16 1C6E                         __ptext41 21A6  
                       __ptext33 30F2                         __ptext25 2B00  
                       __ptext17 1E22                         __ptext50 2D2A  
                       __ptext42 27C2                         __ptext34 2534  
                       __ptext26 30D6                         __ptext18 0CE2  
                       __ptext51 2EF0                         __ptext43 3074  
                       __ptext35 1320                         __ptext27 2B68  
                       __ptext19 0822                         __ptext52 300A  
                       __ptext44 3042                         __ptext36 15AE  
                       __ptext28 25DA                         __ptext53 2F28  
                       __ptext45 2992                         __ptext37 2722  
                       __ptext29 2F54                         __ptext54 2F7E  
                       __ptext46 225E                         __ptext38 305C  
                       __ptext55 2FA6                         __ptext47 2316  
                       __ptext39 3028                         __ptext56 2C32  
                       __ptext48 2A96                         __ptext57 267E  
                       __ptext49 1F28      MFRC522_AntiColl@serNumCheck 0023  
                     _MFRC522_Rd 225E                       _MFRC522_Wr 2992  
                       isa$xinst 000000                         _vfprintf 2BD0  
                       _status_1 006B                         _status_2 006A  
                  _MFRC522_Reset 2F54                  ?_MFRC522_IsCard 0026  
                     _INTCONbits 000FF2                  ?_MFRC522_ToCard 000D  
                       isalpha@c 0001                  USART_TxChar@out 0005  
             LCD_Begin@_i2c_addr 0009                        sprintf@ap 00DF  
                       islower@c 0001                 ___lldiv@dividend 0001  
                       isupper@c 0001            MFRC522_IsCard@TagType 0026  
    __end_of_MFRC522_AntennaOff2 30F2       __end_of_MFRC522_Clear_Bit2 3042  
                    ??_vfpfcnvrt 0045                   ?_MFRC522_Reset 0001  
                   _I2CLCD_Start 2FA6                     _I2CLCD_Write 2F28  
                       sprintf@f 00E1                         sprintf@s 005A  
               ___lldiv@quotient 0009                         toupper@c 0007  
     __end_of_MFRC522_AntennaOn2 30B4       __end_of_MFRC522_AntennaOff 30FE  
                  ?_MFRC522_CRC2 000D                    ?_MFRC522_Halt 0001  
                  ?_MFRC522_Init 0001                    ___fladd@signs 0034  
                   ?_MFRC522_CRC 000D                     ___fladd@aexp 0035  
                   ___fladd@bexp 0036                     ?_MFRC522_Rd2 0001  
                   ?_MFRC522_Wr2 0001                     _USART_TxChar 2A26  
                    ?_MFRC522_Rd 0001                      ?_MFRC522_Wr 0001  
             MFRC522_Rd2@address 0003                       _USART_Init 2862  
